// Code generated by goyacc -o sql.go -v y.output sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const JSON_TABLE = 57810
const PATH = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const ACCESSIBLE = 57819
const ASENSITIVE = 57820
const CUBE = 57821
const DAY_HOUR = 57822
const DAY_MICROSECOND = 57823
const DAY_MINUTE = 57824
const DAY_SECOND = 57825
const DELAYED = 57826
const DISTINCTROW = 57827
const DUAL = 57828
const EMPTY = 57829
const FETCH = 57830
const FLOAT4 = 57831
const FLOAT8 = 57832
const GET = 57833
const HIGH_PRIORITY = 57834
const HOUR_MICROSECOND = 57835
const HOUR_MINUTE = 57836
const HOUR_SECOND = 57837
const INSENSITIVE = 57838
const INT1 = 57839
const INT2 = 57840
const INT3 = 57841
const INT4 = 57842
const INT8 = 57843
const IO_AFTER_GTIDS = 57844
const IO_BEFORE_GTIDS = 57845
const ITERATE = 57846
const LEAVE = 57847
const LINEAR = 57848
const LOOP = 57849
const MASTER_BIND = 57850
const MASTER_SSL_VERIFY_SERVER_CERT = 57851
const MIDDLEINT = 57852
const MINUTE_MICROSECOND = 57853
const MINUTE_SECOND = 57854
const PURGE = 57855
const READ_WRITE = 57856
const REPEAT = 57857
const RETURN = 57858
const RLIKE = 57859
const SECOND_MICROSECOND = 57860
const SENSITIVE = 57861
const SPECIFIC = 57862
const SQL_BIG_RESULT = 57863
const SQL_SMALL_RESULT = 57864
const VARCHARACTER = 57865
const WHILE = 57866
const YEAR_MONTH = 57867
const UNUSED = 57868
const DESCRIPTION = 57869
const LATERAL = 57870
const MEMBER = 57871
const RECURSIVE = 57872
const BUCKETS = 57873
const CLONE = 57874
const COMPONENT = 57875
const DEFINITION = 57876
const ENFORCED = 57877
const EXCLUDE = 57878
const GEOMCOLLECTION = 57879
const GET_MASTER_PUBLIC_KEY = 57880
const HISTOGRAM = 57881
const HISTORY = 57882
const INACTIVE = 57883
const INVISIBLE = 57884
const LOCKED = 57885
const MASTER_COMPRESSION_ALGORITHMS = 57886
const MASTER_PUBLIC_KEY_PATH = 57887
const MASTER_TLS_CIPHERSUITES = 57888
const MASTER_ZSTD_COMPRESSION_LEVEL = 57889
const NESTED = 57890
const NETWORK_NAMESPACE = 57891
const NOWAIT = 57892
const NULLS = 57893
const OJ = 57894
const OLD = 57895
const ORDINALITY = 57896
const ORGANIZATION = 57897
const OTHERS = 57898
const PERSIST = 57899
const PERSIST_ONLY = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_LOAD = 57911
const SECONDARY_UNLOAD = 57912
const SKIP = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const VCPU = 57916
const VISIBLE = 57917
const SYSTEM = 57918
const INFILE = 57919
const ACTIVE = 57920
const AGGREGATE = 57921
const ANY = 57922
const ARRAY = 57923
const ASCII = 57924
const AT = 57925
const AUTOEXTEND_SIZE = 57926
const ENDS = 57927
const EVENTS = 57928
const GENERATED = 57929
const ALWAYS = 57930
const STORED = 57931
const VIRTUAL = 57932
const NVAR = 57933
const PASSWORD_LOCK = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	611, 35,
	-2, 55,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 60,
	-2, 1198,
	-1, 41,
	189, 1268,
	190, 1287,
	-2, 248,
	-1, 47,
	228, 750,
	229, 750,
	-2, 739,
	-1, 477,
	177, 1664,
	-2, 938,
	-1, 478,
	177, 1297,
	-2, 1291,
	-1, 479,
	177, 1298,
	-2, 1292,
	-1, 509,
	177, 1774,
	-2, 1186,
	-1, 510,
	177, 1856,
	-2, 940,
	-1, 511,
	177, 1684,
	-2, 941,
	-1, 515,
	177, 1621,
	-2, 2115,
	-1, 516,
	177, 1645,
	-2, 2116,
	-1, 517,
	177, 1758,
	-2, 2117,
	-1, 518,
	177, 1765,
	-2, 2118,
	-1, 519,
	177, 1845,
	-2, 2119,
	-1, 578,
	177, 1634,
	-2, 1159,
	-1, 581,
	177, 1652,
	-2, 1088,
	-1, 582,
	177, 1868,
	-2, 1088,
	-1, 583,
	177, 1867,
	-2, 1088,
	-1, 584,
	177, 1866,
	-2, 1088,
	-1, 585,
	177, 1752,
	-2, 1088,
	-1, 586,
	177, 1753,
	-2, 1088,
	-1, 587,
	177, 1650,
	-2, 1088,
	-1, 588,
	177, 1651,
	-2, 1088,
	-1, 589,
	177, 1653,
	-2, 1088,
	-1, 837,
	100, 1956,
	177, 1956,
	-2, 1252,
	-1, 838,
	100, 2051,
	177, 2051,
	-2, 1253,
	-1, 843,
	100, 1976,
	177, 1976,
	-2, 1254,
	-1, 844,
	100, 2014,
	177, 2014,
	-2, 1255,
	-1, 845,
	100, 2015,
	177, 2015,
	-2, 1256,
	-1, 846,
	100, 1904,
	177, 1904,
	-2, 1260,
	-1, 848,
	100, 1995,
	177, 1995,
	-2, 1262,
	-1, 1369,
	1, 519,
	611, 519,
	-2, 517,
	-1, 1371,
	1, 519,
	611, 519,
	-2, 517,
	-1, 1787,
	177, 1295,
	-2, 1224,
	-1, 1794,
	177, 1341,
	-2, 2115,
	-1, 1795,
	177, 1365,
	-2, 2116,
	-1, 1796,
	177, 1481,
	-2, 2117,
	-1, 1797,
	177, 1488,
	-2, 2118,
	-1, 1798,
	177, 1571,
	-2, 2119,
	-1, 1833,
	177, 1300,
	-2, 1296,
	-1, 1952,
	1, 851,
	5, 851,
	12, 851,
	13, 851,
	14, 851,
	15, 851,
	17, 851,
	19, 851,
	29, 851,
	30, 851,
	56, 851,
	57, 851,
	58, 851,
	59, 851,
	60, 851,
	62, 851,
	63, 851,
	66, 851,
	67, 851,
	69, 851,
	70, 851,
	87, 851,
	455, 851,
	611, 851,
	-2, 884,
	-1, 1960,
	67, 77,
	69, 77,
	-2, 81,
	-1, 1977,
	177, 1778,
	-2, 1257,
	-1, 2060,
	1, 520,
	611, 520,
	-2, 517,
	-1, 2147,
	44, 632,
	196, 634,
	198, 632,
	199, 632,
	-2, 675,
	-1, 2200,
	5, 61,
	-2, 970,
	-1, 2553,
	177, 1621,
	-2, 2115,
	-1, 2554,
	177, 1645,
	-2, 2116,
	-1, 2555,
	177, 1758,
	-2, 2117,
	-1, 2556,
	177, 1765,
	-2, 2118,
	-1, 2557,
	177, 1845,
	-2, 2119,
	-1, 2699,
	196, 635,
	-2, 633,
	-1, 2773,
	177, 1545,
	-2, 782,
	-1, 2798,
	1, 924,
	5, 924,
	12, 924,
	13, 924,
	14, 924,
	15, 924,
	17, 924,
	19, 924,
	29, 924,
	30, 924,
	56, 924,
	57, 924,
	58, 924,
	59, 924,
	60, 924,
	62, 924,
	63, 924,
	66, 924,
	67, 924,
	69, 924,
	70, 924,
	87, 924,
	455, 924,
	611, 924,
	-2, 884,
	-1, 2940,
	5, 61,
	-2, 1218,
	-1, 3027,
	41, 1307,
	-2, 1305,
	-1, 3227,
	5, 61,
	-2, 1221,
	-1, 3242,
	278, 314,
	-2, 1363,
	-1, 3243,
	278, 315,
	-2, 1404,
	-1, 3244,
	278, 316,
	-2, 1583,
	-1, 3410,
	95, 300,
	97, 300,
	99, 300,
	-2, 55,
	-1, 3441,
	97, 307,
	98, 307,
	99, 307,
	-2, 55,
}

const yyPrivate = 57344

const yyLast = 42740

var yyAct = [...]int{
	521, 76, 3391, 3362, 3402, 456, 3343, 3246, 3344, 3219,
	958, 2519, 410, 3306, 3247, 3268, 3364, 3286, 3156, 7,
	3155, 6, 3263, 2965, 3153, 3, 3148, 3229, 2375, 3126,
	3157, 8, 2641, 3210, 3217, 481, 3154, 5, 3085, 2545,
	1299, 1203, 2813, 3128, 3027, 2792, 1204, 520, 2284, 2766,
	2282, 463, 2409, 1404, 2055, 2473, 3029, 2767, 2595, 485,
	479, 470, 2459, 79, 2915, 2871, 2079, 2314, 2278, 2896,
	2683, 2849, 393, 396, 2008, 435, 435, 76, 441, 2865,
	2658, 1227, 1806, 3149, 91, 2546, 2596, 2763, 1999, 2472,
	992, 2693, 2391, 2318, 2784, 498, 1986, 2775, 68, 1985,
	975, 461, 1226, 1786, 104, 928, 130, 2041, 2146, 130,
	2176, 1949, 1799, 1859, 2489, 130, 1987, 1995, 460, 1917,
	2268, 2125, 2108, 1956, 1865, 438, 438, 1016, 921, 1814,
	1948, 1735, 2261, 1380, 1706, 2366, 130, 2063, 2062, 2061,
	2319, 1406, 1122, 1277, 2037, 1908, 839, 1793, 488, 842,
	1836, 1125, 1129, 130, 930, 1281, 1952, 1024, 1045, 2059,
	1740, 920, 466, 1280, 971, 2438, 1962, 957, 455, 124,
	413, 1143, 1023, 130, 438, 462, 930, 2549, 392, 490,
	412, 2025, 100, 941, 130, 835, 1372, 946, 96, 836,
	1133, 1375, 81, 450, 3441, 3436, 3428, 3410, 3408, 3386,
	3357, 3294, 78, 3087, 3086, 2610, 1733, 3006, 2836, 2639,
	3438, 3434, 3432, 3374, 36, 2850, 918, 405, 428, 36,
	422, 433, 416, 3004, 3215, 2852, 3337, 36, 36, 3134,
	83, 2093, 89, 39, 3019, 2403, 955, 2540, 3007, 2093,
	3309, 3202, 423, 2655, 3214, 3133, 2511, 969, 2332, 3342,
	3105, 3223, 3316, 2335, 3264, 2541, 2238, 1403, 2757, 940,
	3065, 453, 2124, 67, 87, 85, 86, 2590, 2280, 2340,
	2339, 925, 2591, 2592, 1115, 3223, 77, 830, 831, 832,
	1736, 77, 1975, 943, 1971, 948, 949, 3220, 951, 77,
	77, 2336, 2818, 3218, 2824, 2826, 2825, 2822, 2823, 2821,
	2820, 2819, 1056, 1282, 2302, 1283, 2342, 2301, 2325, 3078,
	2303, 3220, 1757, 2827, 2828, 2527, 2326, 3056, 1739, 995,
	979, 980, 476, 1074, 983, 1160, 1159, 1169, 1170, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1161, 404, 2382, 1171,
	2855, 403, 1737, 1738, 1972, 1973, 1082, 1782, 1783, 1918,
	996, 997, 3224, 2344, 445, 916, 981, 982, 2010, 2011,
	2123, 1042, 2921, 2013, 2031, 2026, 2026, 2013, 2699, 1719,
	2313, 2743, 2038, 2741, 2012, 407, 3224, 387, 1002, 1006,
	2853, 2854, 2856, 2857, 2858, 402, 2017, 2019, 452, 2018,
	76, 76, 415, 414, 417, 2435, 1778, 1777, 3400, 1360,
	1776, 1775, 421, 1774, 2490, 1773, 1078, 1079, 1011, 2427,
	1013, 1058, 2398, 446, 1010, 461, 1049, 2866, 3331, 425,
	130, 2338, 3249, 429, 2341, 2869, 1012, 3190, 3192, 3248,
	1003, 1004, 1014, 2872, 2873, 2874, 2875, 432, 2665, 2867,
	2868, 1089, 3033, 2682, 1090, 2432, 2154, 2148, 2149, 1111,
	2147, 2150, 2151, 3399, 118, 114, 115, 1119, 116, 2137,
	2656, 3109, 3107, 2892, 130, 3023, 2659, 2660, 2661, 2662,
	2663, 2883, 2138, 3099, 1768, 2402, 2668, 3256, 1180, 1058,
	3005, 1182, 2400, 972, 1184, 2492, 2157, 3291, 2080, 462,
	120, 119, 2659, 2660, 2661, 2662, 2663, 937, 3001, 937,
	2156, 2155, 3395, 993, 394, 994, 996, 997, 397, 2881,
	3289, 3290, 2999, 1195, 1378, 130, 1198, 1199, 1200, 1201,
	1202, 3359, 1207, 1325, 1361, 1058, 1361, 1046, 937, 112,
	2998, 388, 2997, 1146, 418, 419, 420, 426, 1747, 430,
	431, 434, 1387, 1388, 1386, 3352, 461, 106, 121, 3274,
	122, 398, 2996, 2995, 2994, 1361, 2993, 106, 111, 947,
	3095, 3096, 1081, 3293, 978, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 2380,
	1224, 1225, 1228, 1228, 1228, 1234, 1228, 1228, 1234, 1228,
	1234, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	462, 3101, 113, 2070, 2381, 2851, 2337, 1312, 3151, 1181,
	2955, 2334, 2494, 3221, 2575, 406, 2383, 2498, 3091, 2493,
	1108, 2491, 991, 1720, 3234, 3235, 2496, 2074, 2075, 1065,
	1150, 988, 2069, 1007, 2684, 987, 1739, 3221, 1050, 2495,
	3333, 1057, 2131, 2026, 1230, 1232, 2153, 1236, 1238, 2040,
	1241, 2638, 3132, 2351, 2497, 2499, 3304, 2016, 2401, 3106,
	1737, 1738, 3022, 1091, 3083, 1229, 1231, 1233, 1235, 1237,
	1239, 1240, 1242, 2667, 1867, 1068, 75, 88, 117, 3057,
	75, 3423, 3401, 395, 3191, 75, 937, 3002, 1326, 1063,
	3020, 2404, 1110, 75, 75, 3315, 1117, 395, 1059, 1066,
	1067, 1069, 1070, 1071, 1072, 1073, 1096, 1075, 1076, 1077,
	390, 1080, 36, 1083, 1084, 1085, 1086, 1087, 3406, 1064,
	2444, 1060, 945, 944, 2417, 2418, 57, 3100, 989, 990,
	395, 2698, 74, 1741, 131, 39, 131, 3442, 132, 2966,
	132, 133, 134, 133, 134, 391, 3439, 135, 947, 135,
	2897, 2898, 3429, 2968, 2599, 1061, 1062, 1690, 472, 937,
	108, 3411, 937, 2005, 3368, 131, 2005, 3363, 1743, 132,
	424, 1742, 133, 134, 77, 942, 108, 937, 135, 960,
	927, 3111, 2907, 3366, 2456, 451, 2287, 2289, 1054, 2908,
	2680, 2426, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 2422,
	3183, 1106, 2406, 3389, 3392, 3388, 2007, 2405, 2132, 1392,
	2333, 1390, 1008, 2058, 939, 2582, 2581, 2580, 938, 2420,
	97, 1114, 950, 1339, 1342, 1343, 1344, 1345, 1346, 1347,
	359, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 2213,
	1327, 1328, 1329, 1330, 1306, 1310, 1340, 1307, 1313, 1309,
	1311, 1308, 2007, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 2967, 130, 2911, 842, 1186, 1187, 77, 2322,
	842, 1102, 930, 2007, 1185, 1183, 41, 70, 44, 43,
	46, 2090, 3404, 2210, 2729, 3405, 2089, 3403, 2722, 1171,
	2589, 3184, 2424, 1101, 1097, 1098, 1099, 1100, 1103, 1104,
	1105, 1107, 1053, 2423, 110, 109, 2288, 47, 73, 72,
	99, 2306, 2192, 2181, 45, 2162, 2073, 2071, 1967, 1809,
	110, 109, 1293, 1197, 1196, 1151, 972, 970, 3104, 1005,
	435, 1976, 1382, 2298, 1356, 1357, 1358, 1359, 2677, 2987,
	1161, 2006, 2906, 1171, 2455, 1976, 2981, 2843, 2452, 435,
	1294, 1405, 1285, 395, 1341, 2841, 2007, 1286, 1976, 2979,
	2627, 1716, 3365, 3367, 106, 55, 56, 1275, 3185, 930,
	130, 3127, 1381, 2935, 107, 111, 1385, 1185, 2464, 438,
	438, 2262, 64, 438, 65, 1976, 2830, 2006, 1976, 2630,
	130, 1802, 2007, 130, 1272, 1273, 1186, 1187, 438, 438,
	2988, 130, 1142, 1363, 101, 3251, 102, 977, 2844, 66,
	2460, 130, 130, 130, 130, 130, 2842, 2912, 2006, 1298,
	2782, 2628, 1976, 2626, 998, 1714, 1164, 1165, 1166, 1167,
	1168, 1161, 438, 1366, 1171, 435, 130, 3186, 71, 2781,
	51, 52, 59, 1707, 60, 1691, 1976, 2622, 1976, 2620,
	1186, 1187, 2780, 972, 1976, 2364, 1398, 1731, 1702, 1703,
	1704, 1705, 1976, 2362, 1976, 2360, 1976, 2358, 2100, 1766,
	1976, 2355, 3275, 3276, 1697, 1698, 1699, 1700, 1701, 1750,
	1295, 3252, 76, 2779, 438, 438, 438, 1728, 1408, 930,
	3272, 3273, 985, 1368, 1394, 3137, 3136, 1291, 1710, 1367,
	1711, 2006, 3009, 976, 1383, 1015, 461, 2451, 2444, 1384,
	1139, 953, 2448, 1141, 1139, 2447, 2450, 952, 1772, 438,
	1000, 2513, 1401, 1780, 438, 438, 1693, 1142, 1402, 1909,
	1130, 1142, 1695, 1696, 3427, 1807, 1808, 2006, 3010, 959,
	1152, 1843, 1708, 3354, 2444, 130, 1370, 130, 937, 3310,
	930, 2445, 2005, 76, 98, 2882, 1841, 1842, 1840, 2608,
	94, 1723, 1724, 2876, 1909, 1726, 2226, 2101, 130, 3414,
	3392, 3413, 1837, 2913, 2119, 1146, 2725, 461, 1207, 1800,
	462, 1729, 1745, 3287, 3424, 3320, 1205, 3319, 75, 1136,
	77, 986, 1870, 1872, 1800, 1749, 3195, 3377, 1140, 1141,
	1139, 1839, 461, 1746, 1126, 93, 1788, 1127, 1781, 3187,
	3145, 2526, 2206, 2205, 930, 2204, 930, 1142, 3188, 1885,
	1767, 3102, 3017, 1770, 3016, 930, 3015, 930, 930, 3014,
	3008, 1816, 2835, 2834, 1140, 1141, 1139, 130, 1829, 3425,
	3341, 1779, 2611, 1223, 1953, 92, 1894, 1897, 2178, 2179,
	2180, 462, 2371, 1142, 1910, 1784, 962, 963, 964, 965,
	966, 967, 968, 1828, 1860, 3189, 1861, 1791, 3103, 1833,
	1863, 2369, 1869, 1838, 930, 930, 462, 1140, 1141, 1139,
	2345, 1748, 1048, 1875, 1876, 1912, 1825, 1140, 1141, 1139,
	1047, 3296, 1150, 1713, 1021, 3431, 1142, 3295, 3253, 1140,
	1141, 1139, 1811, 130, 130, 130, 1142, 3356, 2304, 842,
	2305, 3250, 1947, 1140, 1141, 1139, 1982, 1020, 1142, 3201,
	3287, 1771, 3098, 1140, 1141, 1139, 1812, 930, 930, 1813,
	1751, 3288, 1142, 1754, 1755, 1756, 3097, 1758, 1759, 3082,
	3024, 1760, 1142, 2992, 2962, 2931, 1923, 1761, 1925, 2879,
	2878, 1762, 1763, 2877, 1764, 1765, 1874, 2372, 2845, 1877,
	1878, 1879, 1880, 1881, 2832, 2689, 1946, 2617, 1960, 2469,
	2468, 1821, 1823, 1824, 2087, 1140, 1141, 1139, 2367, 1822,
	1980, 2120, 1906, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1161, 2095, 1957, 1171, 1142, 1725, 1996, 3284, 1140, 1141,
	1139, 2047, 2048, 2049, 2050, 1981, 2515, 3283, 2004, 1961,
	3108, 1833, 3080, 1965, 130, 2085, 2086, 1142, 1974, 3042,
	130, 130, 438, 438, 438, 2322, 3036, 130, 1983, 1993,
	2043, 2044, 2045, 2046, 2904, 1969, 2051, 2052, 2053, 1968,
	2762, 2718, 2714, 1121, 2700, 925, 1835, 2669, 2412, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 2411, 2039, 2113, 2027, 2028, 2029,
	2030, 2208, 2097, 2190, 1121, 2096, 1393, 2081, 1862, 1721,
	1718, 1400, 1399, 2083, 2084, 1371, 1140, 1141, 1139, 1369,
	2091, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1161, 2067, 1043, 1171, 1864, 1142, 973, 401, 399, 2975,
	3317, 1900, 2808, 3302, 3279, 1121, 3035, 94, 1088, 80,
	2217, 1913, 503, 502, 505, 506, 507, 508, 1886, 1887,
	1888, 504, 1871, 2983, 1892, 1893, 1896, 1899, 2982, 1904,
	1905, 2808, 3260, 3208, 1121, 1911, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 2287, 2289,
	2808, 3204, 2975, 3142, 1054, 1916, 2648, 1919, 1920, 2808,
	3089, 2618, 1924, 2190, 1926, 1927, 2975, 1121, 77, 1121,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 2975, 3071, 382, 1160, 1159, 1169, 1170, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1161, 2975, 2974, 1171,
	2944, 1121, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1161, 2161, 1121, 1171, 1160, 1159, 1169,
	1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161, 2808,
	2807, 1171, 1694, 2636, 2635, 2632, 2633, 2632, 2631, 2265,
	1121, 2014, 2015, 1963, 2020, 2021, 2022, 2023, 2024, 2190,
	1121, 2134, 2133, 1712, 1883, 2117, 1883, 1121, 1297, 1296,
	3433, 3334, 2034, 2035, 2036, 2764, 2264, 2078, 2778, 1963,
	2293, 1092, 1690, 2916, 1052, 1093, 1234, 2410, 2288, 3308,
	2410, 2778, 2109, 2938, 1804, 360, 2270, 2273, 2274, 2275,
	2271, 1051, 2272, 2276, 1052, 1205, 2785, 2786, 1883, 1964,
	2265, 1966, 2122, 2093, 2794, 2649, 2265, 2634, 2077, 2467,
	2437, 130, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1161, 2116, 1964, 1171, 1690, 130, 130,
	130, 2725, 363, 1054, 2265, 1803, 1120, 2778, 2308, 1970,
	2190, 372, 380, 381, 2232, 2231, 2159, 1727, 2092, 1805,
	917, 1121, 1116, 1769, 1734, 130, 1690, 130, 1391, 1389,
	1279, 930, 3231, 3205, 2793, 3123, 930, 2102, 3039, 2952,
	2837, 2013, 2107, 2042, 2094, 2607, 369, 2056, 2111, 370,
	2785, 2786, 378, 379, 2038, 2098, 2312, 1058, 930, 2072,
	2182, 930, 2033, 2105, 1817, 1818, 1819, 2032, 2106, 1160,
	1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1161, 1364, 77, 1171, 1040, 2110, 3422, 2791, 1046, 3420,
	2804, 930, 3381, 3379, 3345, 2788, 2764, 2129, 1159, 1169,
	1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161, 375,
	2647, 1171, 2373, 1744, 1396, 2115, 1094, 1055, 1837, 2136,
	2177, 2567, 2139, 2121, 2565, 409, 2568, 2790, 2564, 2566,
	376, 2569, 1205, 2274, 2275, 2128, 2563, 1890, 1891, 1160,
	1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1161, 467, 468, 1171, 3270, 3213, 1829, 2470, 2167, 2270,
	2273, 2274, 2275, 2271, 1957, 2272, 2276, 1815, 3262, 1134,
	1135, 2941, 2158, 2175, 2174, 3062, 2903, 2811, 2713, 2712,
	2616, 1981, 2615, 2614, 2281, 2168, 2169, 1833, 2170, 2290,
	2291, 440, 2286, 1953, 2324, 361, 1953, 2187, 1132, 2316,
	2143, 2601, 3113, 3116, 3200, 3199, 3028, 3026, 461, 3094,
	3093, 400, 1722, 3011, 3012, 1123, 1979, 2463, 2462, 1838,
	2643, 2183, 2356, 1292, 2193, 3327, 1124, 1038, 1022, 374,
	364, 365, 1019, 385, 1018, 974, 130, 366, 368, 3046,
	362, 384, 383, 3045, 130, 2065, 2936, 130, 1807, 1808,
	2066, 1395, 3335, 130, 3193, 2884, 130, 130, 130, 842,
	3030, 2294, 2885, 2816, 2295, 1017, 2642, 2277, 1134, 1135,
	3326, 94, 2057, 1785, 3325, 2114, 930, 1112, 1113, 2173,
	3324, 2989, 462, 2225, 377, 2142, 1001, 2172, 464, 2054,
	2135, 3255, 3254, 3212, 3197, 3117, 3061, 465, 80, 2263,
	3211, 2321, 2323, 3129, 2410, 2385, 2386, 2387, 3383, 3382,
	3383, 2916, 2309, 2687, 2433, 2431, 2430, 2214, 2211, 2140,
	1709, 1137, 3382, 2292, 3139, 2613, 1801, 447, 917, 449,
	3167, 50, 1957, 3398, 1363, 3169, 19, 3168, 18, 82,
	2296, 1957, 3170, 20, 1957, 1408, 1285, 930, 53, 130,
	1, 435, 2311, 2416, 2130, 2307, 2299, 3171, 21, 3166,
	15, 1381, 930, 930, 930, 3165, 14, 1752, 438, 3159,
	10, 2864, 2317, 2863, 2320, 3182, 34, 2408, 3180, 33,
	3179, 32, 2870, 130, 438, 3178, 28, 3177, 27, 2654,
	76, 3176, 26, 2657, 2184, 2185, 2186, 3174, 23, 2368,
	2397, 438, 3173, 22, 3175, 24, 3164, 13, 3161, 12,
	3160, 11, 2376, 2880, 461, 2370, 3158, 9, 1379, 930,
	3000, 956, 2076, 438, 1044, 930, 2346, 2347, 2379, 2377,
	2378, 438, 3198, 2353, 3112, 3114, 3025, 2414, 2887, 2848,
	2847, 2399, 2390, 2365, 2389, 1039, 2407, 1732, 2440, 2443,
	2088, 2152, 930, 930, 2218, 2219, 2220, 2194, 2195, 2196,
	2197, 2198, 130, 3125, 2141, 1095, 1997, 2237, 2239, 2520,
	2413, 1984, 930, 3228, 2245, 2246, 2247, 2248, 919, 90,
	2425, 2419, 2099, 984, 2421, 367, 2223, 1994, 462, 2330,
	3115, 1041, 2542, 2544, 2329, 2441, 1953, 1953, 1953, 1953,
	1953, 2343, 2009, 2436, 2060, 2064, 2442, 2328, 2465, 2466,
	2327, 3110, 2281, 2571, 2576, 2331, 461, 2512, 2439, 2449,
	2454, 2578, 1303, 1301, 1953, 2471, 1302, 1300, 2475, 930,
	1305, 1304, 2476, 2543, 3376, 3314, 461, 2477, 2354, 1829,
	2357, 2359, 2361, 2363, 2446, 2480, 2457, 2458, 371, 2500,
	2461, 2501, 2502, 1885, 2547, 1287, 130, 130, 130, 130,
	130, 3241, 2761, 2609, 2482, 2579, 1138, 514, 130, 105,
	1833, 54, 130, 2905, 2453, 2585, 130, 2587, 2588, 443,
	444, 95, 103, 373, 130, 1179, 2171, 2300, 840, 841,
	462, 833, 2586, 2163, 1118, 3135, 3305, 930, 3233, 930,
	1128, 930, 3265, 930, 2224, 1222, 1907, 487, 2559, 2560,
	462, 2562, 2574, 2934, 2603, 2604, 2605, 3267, 2606, 1820,
	2428, 2348, 2349, 2350, 2352, 501, 2558, 2570, 2434, 2561,
	500, 499, 2600, 496, 2602, 497, 3222, 2594, 2593, 1810,
	2583, 435, 2539, 2664, 1957, 1957, 1957, 1957, 1957, 2051,
	1153, 2053, 2637, 2475, 484, 474, 1951, 1944, 2118, 2269,
	1957, 2267, 2415, 2650, 130, 2266, 1397, 1276, 2787, 2783,
	2279, 1955, 1957, 1950, 2644, 2645, 2646, 1954, 38, 999,
	389, 2756, 3055, 84, 930, 930, 930, 448, 469, 25,
	2671, 438, 17, 1009, 16, 2145, 130, 438, 954, 2666,
	40, 42, 2384, 2068, 3240, 3361, 1025, 3390, 3285, 31,
	30, 130, 29, 438, 3172, 930, 3181, 438, 3163, 3162,
	3347, 438, 438, 3346, 438, 4, 1109, 2640, 69, 2695,
	1130, 35, 915, 2, 0, 0, 0, 2696, 2703, 2708,
	930, 2479, 2755, 0, 130, 930, 0, 0, 2695, 1882,
	1884, 0, 930, 0, 0, 930, 0, 1889, 930, 2670,
	2623, 0, 0, 2503, 2504, 2726, 2505, 2506, 0, 0,
	2507, 2673, 2769, 76, 2675, 2697, 2691, 2690, 0, 2717,
	0, 1363, 0, 0, 2516, 2517, 2521, 2522, 2523, 2524,
	2525, 0, 0, 0, 0, 1921, 1922, 461, 0, 0,
	0, 0, 1928, 1929, 1930, 1931, 2796, 2715, 2199, 0,
	2765, 2800, 2801, 2802, 2770, 2724, 0, 0, 0, 2768,
	0, 0, 0, 0, 0, 0, 0, 0, 2777, 0,
	2547, 2674, 2739, 930, 2227, 930, 0, 0, 0, 0,
	0, 0, 0, 0, 2584, 0, 0, 0, 0, 0,
	0, 1131, 0, 2795, 0, 2705, 2710, 2799, 0, 2619,
	2621, 0, 0, 0, 0, 0, 2625, 930, 0, 2806,
	0, 462, 76, 0, 0, 0, 2772, 0, 2629, 2805,
	0, 0, 0, 0, 930, 0, 2789, 0, 2612, 1788,
	0, 0, 0, 0, 0, 0, 461, 125, 930, 0,
	386, 2839, 0, 0, 2797, 0, 125, 0, 0, 0,
	2676, 0, 0, 2838, 2681, 0, 0, 0, 2685, 2686,
	2309, 2688, 2860, 2861, 2862, 2812, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 473, 2840, 0, 130, 2817,
	930, 850, 0, 0, 125, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 2624, 0, 0, 0,
	0, 0, 0, 0, 125, 2899, 2900, 0, 0, 0,
	462, 438, 2859, 0, 0, 125, 0, 2889, 438, 0,
	0, 2901, 2891, 2695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2888, 0, 0, 0, 0,
	0, 2846, 0, 0, 2886, 0, 0, 0, 0, 2695,
	2894, 2917, 2918, 930, 2895, 0, 0, 2909, 2600, 0,
	930, 2902, 0, 0, 0, 0, 0, 0, 0, 0,
	512, 2728, 0, 0, 0, 2051, 0, 0, 0, 0,
	2910, 0, 0, 2831, 0, 2833, 0, 2977, 0, 1228,
	1228, 1228, 1234, 1228, 1228, 1234, 1228, 1234, 1243, 1244,
	0, 2752, 2753, 2754, 0, 130, 2954, 0, 2547, 2914,
	0, 2945, 0, 2959, 2960, 2961, 2475, 2957, 0, 0,
	0, 0, 0, 2937, 930, 0, 0, 2963, 0, 0,
	0, 930, 930, 930, 2946, 2736, 2737, 2985, 2738, 930,
	0, 2740, 2986, 2742, 0, 0, 0, 0, 0, 2972,
	2973, 0, 0, 2958, 0, 0, 0, 0, 0, 0,
	849, 2964, 2970, 2971, 922, 2969, 2984, 0, 930, 0,
	2798, 1230, 1232, 2990, 1236, 1238, 2829, 1241, 0, 0,
	0, 0, 0, 0, 3047, 0, 961, 1953, 0, 2920,
	2991, 2514, 1229, 1231, 1233, 1235, 1237, 1239, 1240, 1242,
	0, 0, 2815, 0, 0, 0, 3013, 0, 2890, 2769,
	0, 0, 2769, 3067, 3003, 2893, 0, 0, 3032, 3021,
	0, 0, 0, 0, 0, 0, 2796, 3018, 0, 3034,
	0, 3031, 2286, 0, 3074, 0, 0, 461, 3048, 930,
	3040, 3041, 2809, 2810, 3037, 3038, 0, 130, 0, 3050,
	3044, 125, 0, 0, 3066, 3049, 2768, 76, 3079, 2768,
	0, 3064, 0, 2760, 0, 3070, 3063, 3069, 3060, 0,
	0, 0, 0, 3072, 0, 930, 0, 3073, 0, 0,
	0, 461, 0, 930, 0, 0, 0, 130, 0, 130,
	0, 0, 0, 3092, 0, 125, 0, 0, 3090, 0,
	3081, 0, 2112, 0, 0, 0, 930, 0, 0, 0,
	0, 462, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1161, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 2769, 0, 76, 0,
	2922, 2923, 2924, 2925, 0, 2759, 457, 0, 2929, 3144,
	0, 0, 2932, 2933, 3118, 462, 0, 3120, 3119, 0,
	0, 438, 461, 76, 0, 3122, 2144, 0, 3121, 0,
	930, 0, 2160, 0, 0, 2672, 3130, 3152, 3138, 3141,
	0, 0, 0, 2768, 2978, 3140, 2980, 0, 0, 3150,
	0, 0, 0, 3143, 1160, 1159, 1169, 1170, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1161, 0, 0, 1171, 0,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2719, 0, 3194, 3196, 0, 0,
	0, 0, 0, 0, 3203, 0, 462, 0, 472, 0,
	0, 0, 3225, 3079, 0, 0, 0, 0, 2189, 3226,
	2191, 3236, 3206, 0, 930, 0, 3232, 76, 930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2547,
	0, 2200, 2201, 2202, 2203, 930, 0, 3146, 2207, 2209,
	2758, 0, 2212, 0, 0, 2215, 2216, 0, 0, 0,
	2221, 2222, 0, 0, 0, 0, 2228, 2229, 3271, 2230,
	0, 3258, 2233, 2234, 0, 2235, 2236, 3257, 3261, 2240,
	2241, 2242, 2243, 2244, 0, 0, 930, 0, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	3277, 3230, 3282, 0, 3259, 0, 930, 435, 0, 3300,
	0, 3280, 0, 0, 3281, 0, 0, 0, 0, 0,
	3301, 0, 3292, 0, 0, 0, 0, 3303, 0, 76,
	0, 0, 930, 0, 0, 76, 3323, 0, 0, 0,
	3088, 0, 3245, 3321, 0, 0, 0, 3313, 0, 3330,
	0, 0, 0, 0, 0, 3318, 0, 438, 3340, 0,
	3338, 76, 0, 1325, 3336, 930, 76, 0, 3355, 3332,
	0, 0, 0, 0, 3371, 0, 2520, 3351, 930, 3350,
	930, 3358, 435, 0, 3370, 3375, 0, 3373, 3372, 3348,
	461, 3380, 3378, 76, 930, 3349, 0, 76, 76, 0,
	3385, 0, 76, 0, 3387, 0, 0, 3360, 3124, 0,
	0, 0, 3330, 130, 0, 3384, 3393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 76, 3407, 0,
	76, 0, 438, 3415, 0, 930, 3230, 3412, 3417, 0,
	130, 3330, 0, 0, 0, 0, 0, 0, 0, 76,
	3328, 76, 0, 0, 0, 76, 0, 3353, 0, 0,
	0, 0, 3430, 3330, 462, 3330, 0, 1312, 0, 76,
	0, 0, 76, 0, 0, 0, 0, 76, 0, 3437,
	0, 0, 76, 3330, 0, 0, 0, 0, 0, 0,
	0, 3330, 0, 0, 1278, 1692, 3330, 850, 0, 0,
	0, 0, 850, 0, 1205, 0, 0, 0, 0, 2750,
	0, 0, 0, 0, 2947, 2948, 2949, 2950, 0, 0,
	2951, 0, 0, 2953, 0, 0, 0, 0, 0, 0,
	0, 1205, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 0, 0, 0, 0, 2510, 1326, 2483,
	2484, 2485, 2486, 2487, 2488, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 1374, 1377, 1160, 1159,
	1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161,
	0, 125, 1171, 0, 125, 0, 0, 1374, 1377, 0,
	0, 0, 1407, 0, 2572, 2573, 2749, 0, 0, 0,
	0, 0, 125, 125, 125, 125, 125, 0, 0, 0,
	0, 2748, 472, 0, 1160, 1159, 1169, 1170, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1161, 0, 1717, 1171, 0,
	0, 0, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 849, 1288, 1339, 1342, 1343, 1344, 1345, 1346, 1347,
	3369, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 0,
	1327, 1328, 1329, 1330, 1306, 1310, 1340, 1307, 1313, 1309,
	1311, 1308, 0, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 0, 0, 3396, 1160, 1159, 1169, 1170, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1161, 0, 0, 1171,
	1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1161, 0, 3421, 1171, 0, 2730, 2731, 2732, 2733,
	2734, 0, 0, 0, 0, 0, 125, 0, 457, 1365,
	0, 0, 0, 0, 0, 1373, 1376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 0, 0, 125,
	0, 0, 0, 0, 0, 2478, 1373, 1376, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 2727, 1160, 1159, 1169, 1170, 1162, 1163, 1164,
	1165, 1166, 1167, 1168, 1161, 2735, 1868, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 2744, 2745, 2746, 0,
	0, 0, 0, 2751, 0, 0, 0, 0, 457, 0,
	1868, 1868, 1868, 0, 0, 0, 1868, 1868, 1868, 1868,
	0, 1868, 1868, 0, 0, 0, 850, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2771, 1753,
	0, 0, 0, 486, 2747, 0, 0, 1868, 1868, 1868,
	1868, 0, 0, 1868, 1868, 1868, 1868, 1868, 3237, 3238,
	0, 0, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
	1868, 1868, 1868, 1868, 125, 125, 125, 0, 0, 2803,
	0, 850, 0, 0, 0, 0, 3266, 3269, 0, 126,
	0, 0, 0, 0, 0, 1407, 0, 0, 126, 0,
	1787, 2509, 0, 0, 0, 0, 0, 0, 0, 0,
	36, 37, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	74, 0, 1834, 39, 61, 62, 126, 923, 0, 0,
	0, 58, 0, 1160, 1159, 1169, 1170, 1162, 1163, 1164,
	1165, 1166, 1167, 1168, 1161, 0, 126, 1171, 0, 0,
	0, 0, 3322, 0, 1834, 0, 1834, 126, 48, 0,
	0, 0, 77, 0, 0, 1873, 0, 1834, 1834, 0,
	0, 0, 0, 3269, 0, 125, 0, 0, 0, 0,
	0, 125, 125, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 849, 0, 0, 1160, 1159,
	1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161,
	36, 0, 1171, 0, 1914, 1915, 0, 0, 0, 0,
	0, 2508, 0, 0, 57, 0, 0, 0, 0, 0,
	74, 0, 0, 39, 0, 0, 0, 0, 2926, 2927,
	2928, 0, 2930, 0, 0, 0, 0, 513, 0, 0,
	849, 0, 0, 0, 0, 2939, 2940, 3416, 2942, 0,
	0, 2943, 0, 0, 1834, 0, 0, 1834, 922, 0,
	0, 0, 77, 0, 41, 70, 44, 43, 46, 0,
	0, 0, 0, 2956, 0, 0, 0, 0, 0, 0,
	36, 0, 0, 127, 0, 0, 0, 0, 3183, 0,
	0, 2976, 127, 3440, 57, 47, 73, 72, 0, 0,
	74, 0, 45, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 63, 0, 1160, 1159,
	1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161,
	127, 924, 1171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 55, 56, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 3183, 0,
	64, 0, 65, 3435, 41, 70, 44, 43, 46, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 3184,
	0, 0, 0, 0, 0, 0, 0, 66, 3051, 3052,
	3053, 3054, 0, 0, 0, 47, 73, 72, 3058, 3059,
	2188, 0, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 71, 126, 51, 52,
	59, 0, 60, 0, 0, 3075, 3076, 3077, 1160, 1159,
	1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1161,
	0, 0, 1171, 0, 41, 70, 44, 43, 46, 0,
	0, 0, 0, 55, 56, 0, 3185, 0, 0, 3184,
	0, 0, 125, 0, 0, 0, 0, 0, 458, 0,
	64, 0, 65, 0, 0, 47, 73, 72, 0, 2103,
	2104, 125, 45, 0, 0, 0, 1147, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 457, 1160,
	1159, 1169, 1170, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1161, 3131, 0, 1171, 0, 3186, 71, 0, 51, 52,
	59, 0, 60, 55, 56, 0, 3185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	64, 0, 65, 0, 3147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75, 0, 0, 0,
	0, 0, 36, 0, 0, 0, 0, 66, 0, 0,
	0, 1407, 0, 0, 0, 0, 57, 127, 0, 0,
	0, 3207, 74, 0, 0, 39, 0, 0, 0, 0,
	0, 3216, 0, 0, 0, 3186, 71, 3227, 51, 52,
	59, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 77, 57, 0, 0, 0, 0,
	0, 74, 0, 0, 39, 0, 1868, 0, 0, 1868,
	1868, 1868, 1868, 1868, 0, 0, 0, 0, 0, 0,
	3183, 0, 0, 0, 0, 3426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75, 0, 1868, 0,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 2127, 0, 0, 3278, 0, 2127, 0, 0, 0,
	1149, 0, 0, 0, 0, 0, 0, 0, 0, 3183,
	0, 0, 0, 0, 3409, 0, 0, 125, 2127, 0,
	0, 2127, 0, 0, 0, 125, 0, 0, 457, 0,
	0, 0, 0, 0, 125, 0, 0, 125, 2297, 1407,
	0, 850, 0, 0, 3312, 0, 41, 70, 44, 43,
	46, 2166, 0, 0, 0, 0, 75, 0, 0, 0,
	1834, 3184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 47, 73, 72,
	0, 0, 0, 0, 45, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 41, 70, 44, 43, 46,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 47, 73, 72, 0,
	125, 0, 0, 45, 0, 55, 56, 0, 3185, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 64, 0, 65, 0, 0, 0, 0, 0,
	0, 0, 3418, 3419, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 0, 0, 0, 55, 56, 0, 3185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 64, 0, 65, 0, 0, 0, 3186, 71, 0,
	51, 52, 59, 0, 60, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 1362, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 1868, 0, 3186, 71, 0, 51,
	52, 59, 1868, 60, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 126, 126, 126, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 2374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2388, 2392, 2396, 0, 0, 0, 36, 0,
	0, 0, 0, 0, 0, 0, 850, 125, 125, 125,
	125, 125, 57, 0, 0, 0, 0, 0, 74, 457,
	0, 39, 0, 125, 0, 0, 0, 457, 75, 0,
	127, 0, 1868, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2127,
	0, 0, 0, 0, 0, 2429, 0, 0, 0, 0,
	77, 3394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 1834, 1834, 0, 0, 3183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 126, 0,
	458, 0, 1834, 1789, 0, 0, 0, 0, 0, 0,
	57, 0, 0, 1834, 0, 125, 74, 0, 0, 39,
	0, 126, 0, 0, 0, 0, 0, 0, 1147, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 77, 2518,
	127, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 41, 70, 44, 43, 46, 0, 127, 127,
	127, 127, 127, 0, 3183, 849, 0, 3184, 0, 3329,
	458, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 47, 73, 72, 0, 1155, 0, 1158,
	45, 0, 0, 0, 0, 473, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 0, 1156, 1157, 1154, 1834, 0, 1834,
	0, 1834, 0, 2597, 1160, 1159, 1169, 1170, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1161, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 126, 126, 126, 0,
	0, 55, 56, 0, 3185, 0, 0, 0, 0, 36,
	41, 70, 44, 43, 46, 0, 0, 0, 64, 0,
	65, 923, 850, 57, 0, 3184, 0, 0, 0, 74,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 47, 73, 72, 0, 66, 0, 0, 45, 0,
	0, 0, 127, 0, 2651, 2652, 2653, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 3186, 71, 127, 51, 52, 59, 0,
	60, 0, 1149, 0, 0, 2679, 0, 0, 0, 1830,
	0, 0, 0, 0, 0, 0, 0, 3183, 0, 55,
	56, 0, 3185, 0, 0, 0, 0, 126, 0, 0,
	2711, 0, 0, 126, 126, 2716, 64, 0, 65, 0,
	126, 0, 2720, 0, 0, 2721, 0, 0, 2723, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3186, 71, 0, 51, 52, 59, 0, 60, 0,
	0, 0, 0, 41, 70, 44, 43, 46, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3184, 0,
	0, 849, 0, 1787, 0, 2776, 0, 0, 0, 0,
	127, 127, 127, 0, 47, 73, 72, 0, 0, 0,
	0, 45, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 924, 0, 2776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 457, 0, 0, 0,
	850, 0, 0, 0, 0, 0, 0, 0, 2814, 0,
	0, 0, 55, 56, 0, 3185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 64,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2392, 0, 0, 0, 0, 0, 66, 0, 0, 0,
	0, 127, 75, 0, 0, 0, 0, 127, 127, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3186, 71, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 125, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 457, 849,
	457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2814, 0, 0, 0, 126, 0,
	458, 2814, 2814, 2814, 0, 0, 0, 0, 0, 2597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 2597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 3043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3068, 0, 0, 0, 0,
	0, 0, 0, 2814, 0, 0, 0, 0, 0, 0,
	0, 850, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 3084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 127, 0, 0, 0, 0, 126, 0, 0,
	458, 0, 0, 0, 0, 0, 126, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 2597, 0, 0, 0, 3209, 0,
	0, 0, 0, 0, 457, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 457, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 127, 2814, 0, 0, 126, 0, 0, 0, 0,
	127, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3311, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2548, 126,
	126, 126, 126, 126, 0, 3307, 127, 0, 0, 0,
	0, 458, 0, 0, 0, 126, 0, 0, 0, 458,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 2598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	1830, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2315,
	0, 2702, 2707, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 127, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2548, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2704, 2709, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 458, 0,
	0, 0, 2548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2598, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 2548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 458, 624, 480, 625, 657, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 0, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 475, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 471, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 199, 477, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 1121, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 0, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 480, 625, 657,
	199, 477, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 0, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 475, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 1866, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 480, 625, 657, 199, 477, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 1977, 816, 77, 0, 0,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 1978, 706, 749, 827, 623,
	475, 494, 628, 578, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 491, 492, 0, 0, 0, 0, 594, 0, 493,
	0, 638, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 567, 799, 694,
	231, 153, 805, 692, 592, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 576, 157,
	784, 658, 671, 191, 0, 298, 745, 344, 483, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 570,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 716, 806, 631, 577,
	782, 590, 591, 754, 824, 566, 188, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 870,
	625, 657, 199, 868, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 1121, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 623, 889, 494, 628, 578,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 491, 492, 0,
	0, 0, 0, 594, 0, 493, 0, 638, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 567, 799, 694, 231, 153, 805, 692,
	592, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 576, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 570, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 188, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 480, 625, 657, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 0, 0, 478, 503, 1898, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 475, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 1866, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 480, 625, 657, 199, 477, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 1895, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 475, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 1866, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 36,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 480, 625, 657,
	199, 477, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 0, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 475, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	716, 806, 631, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 1206, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 809, 0, 328, 571, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 480, 625, 657, 199, 477, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 579, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 696,
	752, 644, 739, 815, 677, 744, 816, 77, 0, 1730,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 623,
	475, 494, 628, 578, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 491, 492, 0, 0, 0, 0, 594, 0, 493,
	0, 638, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 567, 799, 694,
	231, 153, 805, 692, 592, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 576, 157,
	784, 658, 671, 191, 0, 298, 745, 344, 483, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 570,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	581, 593, 587, 589, 588, 585, 586, 584, 583, 582,
	595, 568, 569, 572, 573, 574, 716, 806, 631, 577,
	782, 590, 591, 754, 824, 566, 188, 515, 607, 608,
	609, 516, 610, 611, 517, 518, 612, 613, 614, 615,
	519, 616, 617, 618, 596, 597, 598, 599, 600, 601,
	602, 603, 606, 604, 605, 712, 281, 575, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 580, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 571, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 870,
	625, 657, 199, 868, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 579, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 696, 752, 644, 739, 815,
	677, 744, 816, 77, 0, 0, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 623, 889, 494, 628, 578,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 491, 492, 0,
	0, 0, 0, 594, 0, 493, 0, 638, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 567, 799, 694, 231, 153, 805, 692,
	592, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 576, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 570, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 581, 593, 587, 589,
	588, 585, 586, 584, 583, 582, 595, 568, 569, 572,
	573, 574, 716, 806, 631, 577, 782, 590, 591, 754,
	824, 566, 188, 515, 607, 608, 609, 516, 610, 611,
	517, 518, 612, 613, 614, 615, 519, 616, 617, 618,
	596, 597, 598, 599, 600, 601, 602, 603, 606, 604,
	605, 712, 281, 575, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 580, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 571,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 480, 625, 657, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 579, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 696, 752, 644, 739, 815, 677, 744, 816, 77,
	0, 0, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 623, 475, 494, 628, 578, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 491, 492, 0, 0, 0, 0, 594,
	0, 493, 0, 638, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 567,
	799, 694, 231, 153, 805, 692, 592, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	576, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 570, 818, 167, 636, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 581, 593, 587, 589, 588, 585, 586, 584,
	583, 582, 595, 568, 569, 572, 573, 574, 716, 806,
	631, 577, 782, 590, 591, 754, 824, 566, 188, 515,
	607, 608, 609, 516, 610, 611, 517, 518, 612, 613,
	614, 615, 519, 616, 617, 618, 596, 597, 598, 599,
	600, 601, 602, 603, 606, 604, 605, 712, 281, 575,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 580, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 571, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 870, 625, 657, 199, 868, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 579, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 696, 752, 644,
	739, 815, 677, 744, 816, 77, 0, 0, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 623, 889, 494,
	628, 578, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 491,
	492, 0, 0, 0, 0, 594, 0, 493, 0, 638,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 567, 799, 694, 231, 153,
	805, 692, 592, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 576, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 483, 3397, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 570, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 581, 593,
	587, 589, 588, 585, 586, 584, 583, 582, 595, 568,
	569, 572, 573, 574, 716, 806, 631, 577, 782, 590,
	591, 754, 824, 566, 188, 515, 607, 608, 609, 516,
	610, 611, 517, 518, 612, 613, 614, 615, 519, 616,
	617, 618, 596, 597, 598, 599, 600, 601, 602, 603,
	606, 604, 605, 712, 281, 575, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	580, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 0,
	328, 571, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 870, 625, 657,
	199, 868, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	579, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 696, 752, 644, 739, 815, 677, 744,
	816, 77, 0, 0, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 623, 889, 494, 628, 578, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 594, 0, 493, 0, 638, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 567, 799, 694, 231, 153, 805, 692, 592, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 576, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 570, 818, 167, 636, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 581, 593, 587, 589, 588, 585,
	586, 584, 583, 582, 595, 568, 569, 572, 573, 574,
	1901, 1902, 1903, 577, 782, 590, 591, 754, 824, 566,
	188, 515, 607, 608, 609, 516, 610, 611, 517, 518,
	612, 613, 614, 615, 519, 616, 617, 618, 596, 597,
	598, 599, 600, 601, 602, 603, 606, 604, 605, 712,
	281, 575, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 580, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 1661, 2773, 328, 1513, 1665, 1463,
	1492, 1682, 1498, 1501, 1584, 1428, 1551, 273, 1489, 1429,
	1411, 1468, 1415, 1480, 1416, 1465, 199, 1461, 1625, 1554,
	1663, 1533, 1577, 1587, 198, 190, 1543, 1542, 1651, 1478,
	1477, 1582, 1639, 1662, 1532, 0, 1672, 240, 1636, 933,
	350, 320, 257, 936, 935, 1528, 1645, 1549, 1614, 1511,
	1586, 1445, 1569, 1667, 1490, 1578, 1668, 77, 0, 1121,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 1574, 1659, 1483, 934, 1523, 1583, 1687, 1414,
	1570, 0, 1420, 1431, 1681, 1652, 1474, 1475, 202, 0,
	0, 0, 0, 0, 0, 0, 1526, 1550, 1604, 1508,
	345, 1589, 1599, 1617, 1500, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1470, 0, 1567, 0, 0,
	0, 1436, 1422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 1444,
	1412, 1472, 1606, 1413, 1410, 258, 1432, 1619, 1650, 1509,
	231, 153, 1656, 1507, 1506, 1593, 1437, 1629, 1493, 238,
	1435, 154, 1430, 1438, 1491, 269, 1603, 1611, 142, 157,
	1626, 1466, 1482, 191, 1792, 298, 1579, 344, 932, 1559,
	297, 241, 337, 1594, 1658, 343, 1494, 327, 351, 355,
	208, 1534, 182, 317, 200, 197, 1473, 1616, 1419, 216,
	287, 194, 234, 1512, 1585, 1467, 187, 1597, 1568, 1631,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1627, 1610,
	1633, 1460, 1439, 1451, 1440, 1481, 1660, 226, 217, 1634,
	1632, 348, 143, 307, 306, 1497, 225, 1613, 144, 136,
	294, 145, 232, 162, 1638, 357, 173, 236, 330, 931,
	211, 268, 193, 1581, 277, 1479, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 1609, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 1666, 246,
	204, 207, 219, 229, 1580, 296, 324, 349, 1571, 171,
	164, 326, 342, 180, 308, 310, 356, 1605, 166, 1654,
	1628, 1561, 1515, 1521, 1421, 0, 165, 1601, 1471, 1486,
	1459, 1575, 1458, 213, 1592, 340, 341, 192, 358, 1433,
	1674, 167, 1434, 1673, 265, 272, 264, 1677, 336, 1655,
	1562, 1546, 1544, 1426, 1653, 1560, 1545, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1548, 0,
	163, 0, 321, 1664, 1689, 325, 177, 1453, 1620, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1596, 1686, 276, 299, 181, 346, 318, 201,
	1449, 1452, 1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671,
	1608, 1441, 0, 1646, 1647, 0, 1539, 1657, 1427, 0,
	1624, 151, 152, 1588, 1684, 1499, 188, 1794, 1423, 1424,
	1425, 1795, 1529, 1530, 1796, 1797, 1642, 1641, 1640, 1643,
	1798, 1678, 1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538,
	1572, 1573, 1618, 1591, 1600, 1531, 281, 1557, 158, 168,
	239, 2774, 293, 210, 1409, 1417, 1446, 1454, 1455, 1456,
	1457, 1462, 1469, 0, 1476, 1484, 1487, 1488, 1496, 1502,
	1503, 1504, 1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524,
	1525, 1527, 1540, 1541, 1547, 1555, 1556, 1564, 1566, 0,
	1595, 1598, 1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637,
	1675, 1683, 1688, 347, 196, 1537, 1563, 1602, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1649, 1510, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1495, 160, 1644, 1680, 1576, 1590,
	1661, 1622, 328, 1513, 1665, 1463, 1492, 1682, 1498, 1501,
	1584, 1428, 1551, 273, 1489, 1429, 1411, 1468, 1415, 1480,
	1416, 1465, 199, 1461, 1625, 1554, 1663, 1533, 1577, 1587,
	198, 190, 1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662,
	1532, 0, 1672, 240, 1636, 933, 350, 320, 257, 936,
	935, 1528, 1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667,
	1490, 1578, 1668, 0, 0, 0, 0, 929, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 1574, 1659,
	1483, 934, 1523, 1583, 1687, 1414, 1570, 0, 1420, 1431,
	1681, 1652, 1474, 1475, 202, 0, 0, 0, 0, 0,
	0, 0, 1526, 1550, 1604, 1508, 345, 1589, 1599, 1617,
	1500, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 0, 1567, 0, 0, 0, 1436, 1422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 1444, 1412, 1472, 1606, 1413,
	1410, 258, 1432, 1619, 1650, 1509, 231, 153, 1656, 1507,
	1506, 1593, 1437, 1629, 1493, 238, 1435, 154, 1430, 1438,
	1491, 269, 1603, 1611, 142, 157, 1626, 1466, 1482, 191,
	1792, 298, 1579, 344, 932, 1559, 297, 241, 337, 1594,
	1658, 343, 1494, 327, 351, 355, 208, 1534, 182, 317,
	200, 197, 1473, 1616, 1419, 216, 287, 194, 234, 1512,
	1585, 1467, 187, 1597, 1568, 1631, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1627, 1610, 1633, 1460, 1439, 1451,
	1440, 1481, 1660, 226, 217, 1634, 1632, 348, 143, 307,
	306, 1497, 225, 1613, 144, 136, 294, 145, 232, 162,
	1638, 357, 173, 236, 330, 931, 211, 268, 193, 1581,
	277, 1479, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 1609, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 1666, 246, 204, 207, 219, 229,
	1580, 296, 324, 349, 1571, 171, 164, 326, 342, 180,
	308, 310, 356, 1605, 166, 1654, 1628, 1561, 1515, 1521,
	1421, 0, 165, 1601, 1471, 1486, 1459, 1575, 1458, 213,
	1592, 340, 341, 192, 358, 1433, 1674, 167, 1434, 1673,
	265, 272, 264, 1677, 336, 1655, 1562, 1546, 1544, 1426,
	1653, 1560, 1545, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1548, 0, 163, 0, 321, 1664,
	1689, 325, 177, 1453, 1620, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1596, 1686,
	276, 299, 181, 346, 318, 201, 1449, 1452, 1447, 1450,
	1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441, 0, 1646,
	1647, 0, 1539, 1657, 1427, 0, 1624, 151, 152, 1588,
	1684, 1499, 188, 1794, 1423, 1424, 1425, 1795, 1529, 1530,
	1796, 1797, 1642, 1641, 1640, 1643, 1798, 1678, 1676, 1679,
	1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573, 1618, 1591,
	1600, 1531, 281, 1557, 158, 168, 239, 1685, 293, 210,
	1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462, 1469, 0,
	1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504, 1505, 1514,
	1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527, 1540, 1541,
	1547, 1555, 1556, 1564, 1566, 0, 1595, 1598, 1607, 1612,
	1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683, 1688, 347,
	196, 1537, 1563, 1602, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1649,
	1510, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1495, 160, 1644, 1680, 1576, 1590, 1661, 1622, 328, 1513,
	1665, 1463, 1492, 1682, 1498, 1501, 1584, 1428, 1551, 273,
	1489, 1429, 1411, 1468, 1415, 1480, 1416, 1465, 199, 1461,
	1625, 1554, 1663, 1533, 1577, 1587, 198, 190, 1543, 1542,
	1651, 1478, 1477, 1582, 1639, 1662, 1532, 0, 1672, 240,
	1636, 0, 350, 320, 257, 0, 0, 1528, 1645, 1549,
	1614, 1511, 1586, 1445, 1569, 1667, 1490, 1578, 1668, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 1574, 1659, 1483, 0, 1523, 1583,
	1687, 1414, 1570, 0, 1420, 1431, 1681, 1652, 1474, 1475,
	202, 0, 0, 0, 0, 0, 0, 0, 1526, 1550,
	1604, 1508, 345, 1589, 1599, 1617, 1500, 288, 215, 0,
	0, 0, 0, 0, 0, 2481, 0, 1470, 0, 1567,
	0, 0, 0, 1436, 1422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 1444, 1412, 1472, 1606, 1413, 1410, 258, 1432, 1619,
	1650, 1509, 231, 153, 1656, 1507, 1506, 1593, 1437, 1629,
	1493, 238, 1435, 154, 1430, 1438, 1491, 269, 1603, 1611,
	142, 157, 1626, 1466, 1482, 191, 0, 298, 1579, 344,
	1832, 1559, 297, 241, 337, 1594, 1658, 343, 1494, 327,
	351, 355, 208, 1534, 182, 317, 200, 197, 1473, 1616,
	1419, 216, 287, 194, 234, 1512, 1585, 1467, 187, 1597,
	1568, 1631, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1627, 1610, 1633, 1460, 1439, 1451, 1440, 1481, 1660, 226,
	217, 1634, 1632, 348, 143, 307, 306, 1497, 225, 1613,
	144, 136, 294, 145, 232, 162, 1638, 357, 173, 236,
	330, 1831, 211, 268, 193, 1581, 277, 1479, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 1609, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	1666, 246, 204, 207, 219, 229, 1580, 296, 324, 349,
	1571, 171, 164, 326, 342, 180, 308, 310, 356, 1605,
	166, 1654, 1628, 1561, 1515, 1521, 1421, 0, 165, 1601,
	1471, 1486, 1459, 1575, 1458, 213, 1592, 340, 341, 192,
	358, 1433, 1674, 167, 1434, 1673, 265, 272, 264, 1677,
	336, 1655, 1562, 1546, 1544, 1426, 1653, 1560, 1545, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1548, 0, 163, 0, 321, 1664, 1689, 325, 177, 1453,
	1620, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1596, 1686, 276, 299, 181, 346,
	318, 201, 1449, 1452, 1447, 1450, 1448, 1552, 1553, 1669,
	1670, 1671, 1608, 1441, 0, 1646, 1647, 0, 1539, 1657,
	1427, 0, 1624, 151, 152, 1588, 1684, 1499, 188, 1418,
	1423, 1424, 1425, 1442, 1529, 1530, 1558, 1565, 1642, 1641,
	1640, 1643, 1648, 1678, 1676, 1679, 1443, 1464, 1485, 1535,
	1536, 1538, 1572, 1573, 1618, 1591, 1600, 1531, 281, 1557,
	158, 168, 239, 1685, 293, 210, 1409, 1417, 1446, 1454,
	1455, 1456, 1457, 1462, 1469, 0, 1476, 1484, 1487, 1488,
	1496, 1502, 1503, 1504, 1505, 1514, 1516, 1517, 1518, 1519,
	1520, 1524, 1525, 1527, 1540, 1541, 1547, 1555, 1556, 1564,
	1566, 0, 1595, 1598, 1607, 1612, 1615, 1621, 1623, 1630,
	1635, 1637, 1675, 1683, 1688, 347, 196, 1537, 1563, 1602,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1649, 1510, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1495, 160, 1644, 1680,
	1576, 1590, 1661, 1622, 328, 1513, 1665, 1463, 1492, 1682,
	1498, 1501, 1584, 1428, 1551, 273, 1489, 1429, 1411, 1468,
	1415, 1480, 1416, 1465, 199, 1461, 1625, 1554, 1663, 1533,
	1577, 1587, 198, 190, 1543, 1542, 1651, 1478, 1477, 1582,
	1639, 1662, 1532, 0, 1672, 240, 1636, 0, 350, 320,
	257, 0, 0, 1528, 1645, 1549, 1614, 1511, 1586, 1445,
	1569, 1667, 1490, 1578, 1668, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1574, 1659, 1483, 0, 1523, 1583, 1687, 1414, 1570, 0,
	1420, 1431, 1681, 1652, 1474, 1475, 202, 0, 0, 0,
	0, 0, 0, 0, 1526, 1550, 1604, 1508, 345, 1589,
	1599, 1617, 1500, 288, 215, 0, 0, 0, 0, 0,
	0, 1827, 0, 1470, 0, 1567, 0, 0, 0, 1436,
	1422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 1444, 1412, 1472,
	1606, 1413, 1410, 258, 1432, 1619, 1650, 1509, 231, 153,
	1656, 1507, 1506, 1593, 1437, 1629, 1493, 238, 1435, 154,
	1430, 1438, 1491, 269, 1603, 1611, 142, 157, 1626, 1466,
	1482, 191, 0, 298, 1579, 344, 1832, 1559, 297, 241,
	337, 1594, 1658, 343, 1494, 327, 351, 355, 208, 1534,
	182, 317, 200, 197, 1473, 1616, 1419, 216, 287, 194,
	234, 1512, 1585, 1467, 187, 1597, 1568, 1631, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1627, 1610, 1633, 1460,
	1439, 1451, 1440, 1481, 1660, 226, 217, 1634, 1632, 348,
	143, 307, 306, 1497, 225, 1613, 144, 136, 294, 145,
	232, 162, 1638, 357, 173, 236, 330, 1831, 211, 268,
	193, 1581, 277, 1479, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 1609, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 1666, 246, 204, 207,
	219, 229, 1580, 296, 324, 349, 1571, 171, 164, 326,
	342, 180, 308, 310, 356, 1605, 166, 1654, 1628, 1561,
	1515, 1521, 1421, 0, 165, 1601, 1471, 1486, 1459, 1575,
	1458, 213, 1592, 340, 341, 192, 358, 1433, 1674, 167,
	1434, 1673, 265, 272, 264, 1677, 336, 1655, 1562, 1546,
	1544, 1426, 1653, 1560, 1545, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1548, 0, 163, 0,
	321, 1664, 1689, 325, 177, 1453, 1620, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1596, 1686, 276, 299, 181, 346, 318, 201, 1449, 1452,
	1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441,
	0, 1646, 1647, 0, 1539, 1657, 1427, 0, 1624, 151,
	152, 1588, 1684, 1499, 188, 1418, 1423, 1424, 1425, 1442,
	1529, 1530, 1558, 1565, 1642, 1641, 1640, 1643, 1648, 1678,
	1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573,
	1618, 1591, 1600, 1531, 281, 1557, 158, 168, 239, 1685,
	293, 210, 1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462,
	1469, 0, 1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504,
	1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527,
	1540, 1541, 1547, 1555, 1556, 1564, 1566, 0, 1595, 1598,
	1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683,
	1688, 347, 196, 1537, 1563, 1602, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1649, 1510, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1495, 160, 1644, 1680, 1576, 1590, 1661, 1622,
	328, 1513, 1665, 1463, 1492, 1682, 1498, 1501, 1584, 1428,
	1551, 273, 1489, 1429, 1411, 1468, 1415, 1480, 1416, 1465,
	199, 1461, 1625, 1554, 1663, 1533, 1577, 1587, 198, 190,
	1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662, 1532, 0,
	1672, 240, 1636, 0, 350, 320, 257, 0, 0, 1528,
	1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667, 1490, 1578,
	1668, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 1574, 1659, 1483, 0,
	1523, 1583, 1687, 1414, 1570, 0, 1420, 1431, 1681, 1652,
	1474, 1475, 202, 0, 0, 0, 0, 0, 0, 0,
	1526, 1550, 1604, 1508, 345, 1589, 1599, 1617, 1500, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 1470,
	0, 1567, 0, 0, 0, 1436, 1422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 1444, 1412, 1472, 1606, 1413, 1410, 258,
	1432, 1619, 1650, 1509, 231, 153, 1656, 1507, 1506, 1593,
	1437, 1629, 1493, 238, 1435, 154, 1430, 1438, 1491, 269,
	1603, 1611, 142, 157, 1626, 1466, 1482, 191, 0, 298,
	1579, 344, 1832, 1559, 297, 241, 337, 1594, 1658, 343,
	1494, 327, 351, 355, 208, 1534, 182, 317, 200, 197,
	1473, 1616, 1419, 216, 287, 194, 234, 1512, 1585, 1467,
	187, 1597, 1568, 1631, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1627, 1610, 1633, 1460, 1439, 1451, 1440, 1481,
	1660, 226, 217, 1634, 1632, 348, 143, 307, 306, 1497,
	225, 1613, 144, 136, 294, 145, 232, 162, 1638, 357,
	173, 236, 330, 1831, 211, 268, 193, 1581, 277, 1479,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 1609,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 1666, 246, 204, 207, 219, 229, 1580, 296,
	324, 349, 1571, 171, 164, 326, 342, 180, 308, 310,
	356, 1605, 166, 1654, 1628, 1561, 1515, 1521, 1421, 0,
	165, 1601, 1471, 1486, 1459, 1575, 1458, 213, 1592, 340,
	341, 192, 358, 1433, 1674, 167, 1434, 1673, 265, 272,
	264, 1677, 336, 1655, 1562, 1546, 1544, 1426, 1653, 1560,
	1545, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1548, 0, 163, 0, 321, 1664, 1689, 325,
	177, 1453, 1620, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1596, 1686, 276, 299,
	181, 346, 318, 201, 1449, 1452, 1447, 1450, 1448, 1552,
	1553, 1669, 1670, 1671, 1608, 1441, 0, 1646, 1647, 0,
	1539, 1657, 1427, 0, 1624, 151, 152, 1588, 1684, 1499,
	188, 1418, 1423, 1424, 1425, 1442, 1529, 1530, 1558, 1565,
	1642, 1641, 1640, 1643, 1648, 1678, 1676, 1679, 1443, 1464,
	1485, 1535, 1536, 1538, 1572, 1573, 1618, 1591, 1600, 1531,
	281, 1557, 158, 168, 239, 1685, 293, 210, 1409, 1417,
	1446, 1454, 1455, 1456, 1457, 1462, 1469, 0, 1476, 1484,
	1487, 1488, 1496, 1502, 1503, 1504, 1505, 1514, 1516, 1517,
	1518, 1519, 1520, 1524, 1525, 1527, 1540, 1541, 1547, 1555,
	1556, 1564, 1566, 0, 1595, 1598, 1607, 1612, 1615, 1621,
	1623, 1630, 1635, 1637, 1675, 1683, 1688, 347, 196, 1537,
	1563, 1602, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1649, 1510, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1495, 160,
	1644, 1680, 1576, 1590, 809, 0, 328, 875, 813, 656,
	679, 822, 685, 687, 750, 632, 727, 273, 676, 633,
	0, 0, 624, 870, 625, 657, 199, 868, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 668,
	667, 748, 796, 810, 0, 0, 911, 240, 0, 933,
	350, 320, 257, 936, 935, 711, 0, 882, 897, 696,
	752, 644, 739, 815, 677, 744, 816, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 892, 907, 871, 934, 706, 749, 827, 623,
	889, 0, 628, 858, 0, 801, 664, 665, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 693,
	345, 755, 764, 778, 686, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 888, 0, 0,
	0, 638, 854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 876, 0, 0, 0, 643,
	621, 662, 770, 622, 620, 258, 635, 899, 799, 694,
	231, 153, 805, 692, 874, 758, 639, 787, 680, 238,
	637, 154, 634, 640, 678, 269, 767, 773, 142, 157,
	784, 658, 671, 191, 2550, 298, 745, 344, 2552, 731,
	297, 241, 337, 759, 807, 343, 681, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 663, 777, 627, 216,
	287, 194, 234, 697, 751, 659, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 654, 641, 646, 642, 670, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 684, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 2551,
	211, 268, 193, 747, 277, 669, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 629, 0, 165, 765, 661, 673,
	653, 741, 652, 213, 757, 340, 341, 192, 358, 859,
	818, 167, 636, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 630, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 647, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	865, 867, 863, 866, 864, 883, 884, 908, 909, 910,
	896, 860, 0, 904, 905, 0, 716, 806, 631, 0,
	782, 151, 152, 754, 824, 873, 188, 2553, 855, 856,
	857, 2554, 877, 878, 2555, 2556, 902, 901, 900, 903,
	2557, 913, 912, 914, 862, 869, 872, 879, 880, 881,
	890, 891, 898, 893, 894, 712, 281, 885, 158, 168,
	239, 825, 293, 210, 619, 626, 645, 648, 649, 650,
	651, 655, 660, 0, 666, 672, 674, 675, 683, 688,
	689, 690, 691, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 895, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 715, 735, 766, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 695, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 682, 160, 797, 821, 742, 756,
	809, 0, 328, 875, 813, 656, 679, 822, 685, 687,
	750, 632, 727, 273, 676, 633, 0, 0, 624, 870,
	625, 657, 199, 868, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 668, 667, 748, 796, 810,
	0, 0, 911, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 882, 897, 696, 752, 644, 739, 815,
	677, 744, 816, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 892, 907,
	871, 0, 706, 749, 827, 623, 889, 0, 628, 858,
	0, 801, 664, 665, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 693, 345, 755, 764, 778,
	686, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 888, 0, 0, 0, 638, 854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 876, 0, 0, 0, 643, 621, 662, 770, 622,
	620, 258, 635, 899, 799, 694, 231, 153, 805, 692,
	874, 758, 639, 787, 680, 238, 637, 154, 634, 640,
	678, 269, 767, 773, 142, 157, 784, 658, 671, 191,
	0, 298, 745, 344, 852, 731, 297, 241, 337, 759,
	807, 343, 681, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 663, 777, 627, 216, 287, 194, 234, 697,
	751, 659, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 654, 641, 646,
	642, 670, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 684, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 851, 211, 268, 193, 747,
	277, 669, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	629, 0, 165, 765, 661, 673, 653, 741, 652, 213,
	757, 340, 341, 192, 358, 859, 818, 167, 636, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 630,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 647, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 865, 867, 863, 866,
	864, 883, 884, 908, 909, 910, 896, 860, 0, 904,
	905, 0, 716, 806, 631, 0, 782, 151, 152, 754,
	824, 873, 188, 853, 855, 856, 857, 861, 877, 878,
	886, 887, 902, 901, 900, 903, 906, 913, 912, 914,
	862, 869, 872, 879, 880, 881, 890, 891, 898, 893,
	894, 712, 281, 885, 158, 168, 239, 825, 293, 210,
	619, 626, 645, 648, 649, 650, 651, 655, 660, 0,
	666, 672, 674, 675, 683, 688, 689, 690, 691, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 895, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 715, 735, 766, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	695, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	682, 160, 797, 821, 742, 756, 809, 0, 328, 875,
	813, 656, 679, 822, 685, 687, 750, 632, 727, 273,
	676, 633, 0, 0, 624, 870, 625, 657, 199, 868,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 668, 667, 748, 796, 810, 0, 0, 911, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 882,
	897, 696, 752, 644, 739, 815, 677, 744, 816, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 892, 907, 871, 0, 706, 749,
	827, 623, 889, 0, 628, 858, 0, 801, 664, 665,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 693, 345, 755, 764, 778, 686, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 888,
	0, 0, 0, 638, 854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 643, 621, 662, 770, 622, 620, 258, 635, 899,
	799, 694, 231, 153, 805, 692, 874, 758, 639, 787,
	680, 238, 637, 154, 634, 640, 678, 269, 767, 773,
	142, 157, 784, 658, 671, 191, 0, 298, 745, 344,
	852, 731, 297, 241, 337, 759, 807, 343, 681, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 663, 777,
	627, 216, 287, 194, 234, 697, 751, 659, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 654, 641, 646, 642, 670, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 684, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 851, 211, 268, 193, 747, 277, 669, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 629, 0, 165, 765,
	661, 673, 653, 741, 652, 213, 757, 340, 341, 192,
	358, 859, 818, 167, 847, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 630, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 843,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 647,
	779, 331, 218, 291, 178, 212, 205, 284, 848, 846,
	837, 838, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 865, 867, 863, 866, 864, 883, 884, 908,
	909, 910, 896, 860, 0, 904, 905, 0, 716, 806,
	631, 0, 782, 151, 152, 754, 824, 873, 188, 853,
	855, 856, 857, 861, 877, 878, 886, 887, 902, 901,
	900, 903, 906, 913, 912, 914, 862, 869, 872, 879,
	880, 881, 890, 891, 898, 893, 894, 712, 281, 885,
	158, 168, 239, 825, 293, 210, 619, 626, 645, 648,
	649, 650, 651, 655, 660, 0, 666, 672, 674, 675,
	683, 688, 689, 690, 691, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 895, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 715, 735, 766,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 844, 845, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 695, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 682, 160, 797, 821,
	742, 756, 809, 0, 328, 875, 813, 656, 679, 822,
	685, 687, 750, 632, 727, 273, 676, 633, 0, 0,
	624, 870, 625, 657, 199, 868, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 668, 667, 748,
	796, 810, 0, 0, 911, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 882, 897, 696, 752, 644,
	739, 815, 677, 744, 816, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	892, 907, 871, 0, 706, 749, 827, 623, 889, 0,
	628, 858, 0, 801, 664, 665, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 693, 345, 755,
	764, 778, 686, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 888, 0, 0, 0, 638,
	854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 876, 0, 0, 0, 643, 621, 662,
	770, 622, 620, 258, 635, 899, 799, 694, 231, 153,
	805, 692, 874, 758, 639, 787, 680, 238, 637, 154,
	634, 640, 678, 269, 767, 773, 142, 157, 784, 658,
	671, 191, 0, 298, 745, 344, 852, 731, 297, 241,
	337, 759, 807, 343, 681, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 663, 777, 627, 216, 287, 194,
	234, 697, 751, 659, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 654,
	641, 646, 642, 670, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 684, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 851, 211, 268,
	193, 747, 277, 669, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	1284, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 629, 0, 165, 765, 661, 673, 653, 741,
	652, 213, 757, 340, 341, 192, 358, 859, 818, 167,
	636, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 630, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 647, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 865, 867,
	863, 866, 864, 883, 884, 908, 909, 910, 896, 860,
	0, 904, 905, 0, 716, 806, 631, 0, 782, 151,
	152, 754, 824, 873, 188, 853, 855, 856, 857, 861,
	877, 878, 886, 887, 902, 901, 900, 903, 906, 913,
	912, 914, 862, 869, 872, 879, 880, 881, 890, 891,
	898, 893, 894, 712, 281, 885, 158, 168, 239, 825,
	293, 210, 619, 626, 645, 648, 649, 650, 651, 655,
	660, 0, 666, 672, 674, 675, 683, 688, 689, 690,
	691, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	895, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 715, 735, 766, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 695, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 682, 160, 797, 821, 742, 756, 809, 0,
	328, 875, 813, 656, 679, 822, 685, 687, 750, 632,
	727, 273, 676, 633, 0, 0, 624, 870, 625, 657,
	199, 868, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 668, 667, 748, 796, 810, 0, 0,
	911, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 882, 897, 696, 752, 644, 739, 815, 677, 744,
	816, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 892, 907, 871, 0,
	706, 749, 827, 623, 889, 0, 628, 858, 0, 801,
	664, 665, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 693, 345, 755, 764, 778, 686, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 638, 854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 0, 643, 621, 662, 770, 622, 620, 258,
	635, 899, 799, 694, 231, 153, 805, 692, 874, 758,
	639, 787, 680, 238, 637, 154, 634, 640, 678, 269,
	767, 773, 142, 157, 784, 658, 671, 191, 0, 298,
	745, 344, 852, 731, 297, 241, 337, 759, 807, 343,
	681, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	663, 777, 627, 216, 287, 194, 234, 697, 751, 659,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 654, 641, 646, 642, 670,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 684,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 851, 211, 268, 193, 747, 277, 669,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 834, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 629, 0,
	165, 765, 661, 673, 653, 741, 652, 213, 757, 340,
	341, 192, 358, 859, 818, 167, 847, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 630, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 843, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 647, 779, 331, 218, 291, 178, 212, 205, 284,
	848, 846, 837, 838, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 865, 867, 863, 866, 864, 883,
	884, 908, 909, 910, 896, 860, 0, 904, 905, 0,
	716, 806, 631, 0, 782, 151, 152, 754, 824, 873,
	188, 853, 855, 856, 857, 861, 877, 878, 886, 887,
	902, 901, 900, 903, 906, 913, 912, 914, 862, 869,
	872, 879, 880, 881, 890, 891, 898, 893, 894, 712,
	281, 885, 158, 168, 239, 825, 293, 210, 619, 626,
	645, 648, 649, 650, 651, 655, 660, 0, 666, 672,
	674, 675, 683, 688, 689, 690, 691, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 895, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 715,
	735, 766, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 844, 845,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 695, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 682, 160,
	797, 821, 742, 756, 1661, 1622, 328, 1513, 1665, 1463,
	1492, 1682, 1498, 1501, 1584, 1428, 1551, 273, 1489, 1429,
	1411, 1468, 1415, 1480, 1416, 1465, 199, 1461, 1625, 1554,
	1663, 1533, 1577, 1587, 198, 190, 1543, 1542, 1651, 1478,
	1477, 1582, 1639, 1662, 1532, 0, 1672, 240, 1636, 0,
	350, 320, 257, 0, 0, 1528, 1645, 1549, 1614, 1511,
	1586, 1445, 1569, 1667, 1490, 1578, 1668, 0, 0, 0,
	0, 929, 0, 1988, 1989, 0, 0, 0, 0, 0,
	1990, 0, 1574, 1659, 1483, 0, 1523, 1583, 1687, 1414,
	1570, 0, 1420, 1431, 1681, 1652, 1474, 1475, 202, 2310,
	0, 0, 0, 0, 0, 0, 1526, 1550, 1604, 1508,
	345, 1589, 1599, 1617, 1500, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1470, 0, 1567, 0, 0,
	0, 1436, 1422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 1444,
	1412, 1472, 1606, 1413, 1410, 258, 1432, 1619, 1650, 1509,
	231, 0, 1656, 1507, 1506, 1593, 1437, 1629, 1493, 238,
	1435, 154, 1430, 1438, 1491, 269, 1603, 1611, 0, 157,
	1626, 1466, 1482, 191, 0, 298, 1579, 344, 0, 1559,
	297, 241, 337, 1594, 1658, 343, 1494, 327, 351, 355,
	208, 1534, 182, 317, 200, 197, 1473, 1616, 1419, 216,
	287, 194, 234, 1512, 1585, 1467, 187, 1597, 1568, 1631,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1627, 1610,
	1633, 1460, 1439, 1451, 1440, 1481, 1660, 226, 217, 1634,
	1632, 348, 0, 307, 306, 1497, 225, 1613, 0, 0,
	294, 1992, 232, 162, 1638, 357, 173, 236, 330, 0,
	211, 268, 193, 1581, 277, 1479, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 1609, 292, 309, 332, 175,
	323, 1991, 0, 0, 0, 300, 0, 0, 1666, 246,
	204, 207, 219, 229, 1580, 296, 324, 349, 1571, 171,
	164, 326, 342, 180, 308, 310, 356, 1605, 166, 1654,
	1628, 1561, 1515, 1521, 1421, 0, 165, 1601, 1471, 1486,
	1459, 1575, 1458, 213, 1592, 340, 341, 192, 358, 1433,
	1674, 167, 1434, 1673, 265, 272, 264, 1677, 336, 1655,
	1562, 1546, 1544, 1426, 1653, 1560, 1545, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1548, 0,
	163, 0, 321, 1664, 1689, 325, 177, 1453, 1620, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1596, 1686, 276, 299, 181, 346, 318, 201,
	1449, 1452, 1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671,
	1608, 1441, 0, 1646, 1647, 0, 1539, 1657, 1427, 0,
	1624, 0, 0, 1588, 1684, 1499, 188, 1418, 1423, 1424,
	1425, 1442, 1529, 1530, 1558, 1565, 1642, 1641, 1640, 1643,
	1648, 1678, 1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538,
	1572, 1573, 1618, 1591, 1600, 1531, 281, 1557, 158, 168,
	239, 1685, 293, 210, 1409, 1417, 1446, 1454, 1455, 1456,
	1457, 1462, 1469, 0, 1476, 1484, 1487, 1488, 1496, 1502,
	1503, 1504, 1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524,
	1525, 1527, 1540, 1541, 1547, 1555, 1556, 1564, 1566, 0,
	1595, 1598, 1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637,
	1675, 1683, 1688, 347, 196, 1537, 1563, 1602, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1649, 1510, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1495, 160, 1644, 1680, 1576, 1590,
	1661, 1622, 328, 1513, 1665, 1463, 1492, 1682, 1498, 1501,
	1584, 1428, 1551, 273, 1489, 1429, 1411, 1468, 1415, 1480,
	1416, 1465, 199, 1461, 1625, 1554, 1663, 1533, 1577, 1587,
	198, 190, 1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662,
	1532, 0, 1672, 240, 1636, 0, 350, 320, 257, 0,
	0, 1528, 1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667,
	1490, 1578, 1668, 0, 0, 0, 0, 929, 0, 1988,
	1989, 0, 0, 0, 0, 0, 1990, 0, 1574, 1659,
	1483, 0, 1523, 1583, 1687, 1414, 1570, 0, 1420, 1431,
	1681, 1652, 1474, 1475, 202, 0, 0, 0, 0, 0,
	0, 0, 1526, 1550, 1604, 1508, 345, 1589, 1599, 1617,
	1500, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 0, 1567, 0, 0, 0, 1436, 1422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 1444, 1412, 1472, 1606, 1413,
	1410, 258, 1432, 1619, 1650, 1509, 231, 0, 1656, 1507,
	1506, 1593, 1437, 1629, 1493, 238, 1435, 154, 1430, 1438,
	1491, 269, 1603, 1611, 0, 157, 1626, 1466, 1482, 191,
	0, 298, 1579, 344, 0, 1559, 297, 241, 337, 1594,
	1658, 343, 1494, 327, 351, 355, 208, 1534, 182, 317,
	200, 197, 1473, 1616, 1419, 216, 287, 194, 234, 1512,
	1585, 1467, 187, 1597, 1568, 1631, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1627, 1610, 1633, 1460, 1439, 1451,
	1440, 1481, 1660, 226, 217, 1634, 1632, 348, 0, 307,
	306, 1497, 225, 1613, 0, 0, 294, 1992, 232, 162,
	1638, 357, 173, 236, 330, 0, 211, 268, 193, 1581,
	277, 1479, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 1609, 292, 309, 332, 175, 323, 1991, 0, 0,
	0, 300, 0, 0, 1666, 246, 204, 207, 219, 229,
	1580, 296, 324, 349, 1571, 171, 164, 326, 342, 180,
	308, 310, 356, 1605, 166, 1654, 1628, 1561, 1515, 1521,
	1421, 0, 165, 1601, 1471, 1486, 1459, 1575, 1458, 213,
	1592, 340, 341, 192, 358, 1433, 1674, 167, 1434, 1673,
	265, 272, 264, 1677, 336, 1655, 1562, 1546, 1544, 1426,
	1653, 1560, 1545, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1548, 0, 163, 0, 321, 1664,
	1689, 325, 177, 1453, 1620, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1596, 1686,
	276, 299, 181, 346, 318, 201, 1449, 1452, 1447, 1450,
	1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441, 0, 1646,
	1647, 0, 1539, 1657, 1427, 0, 1624, 0, 0, 1588,
	1684, 1499, 188, 1418, 1423, 1424, 1425, 1442, 1529, 1530,
	1558, 1565, 1642, 1641, 1640, 1643, 1648, 1678, 1676, 1679,
	1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573, 1618, 1591,
	1600, 1531, 281, 1557, 158, 168, 239, 1685, 293, 210,
	1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462, 1469, 0,
	1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504, 1505, 1514,
	1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527, 1540, 1541,
	1547, 1555, 1556, 1564, 1566, 0, 1595, 1598, 1607, 1612,
	1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683, 1688, 347,
	196, 1537, 1563, 1602, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1649,
	1510, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1495, 160, 1644, 1680, 1576, 1590, 1661, 1622, 328, 1513,
	1665, 1463, 1492, 1682, 1498, 1501, 1584, 1428, 1551, 273,
	1489, 1429, 1411, 1468, 1415, 1480, 1416, 1465, 199, 1461,
	1625, 1554, 1663, 1533, 1577, 1587, 198, 190, 1543, 1542,
	1651, 1478, 1477, 1582, 1639, 1662, 1532, 0, 1672, 240,
	1636, 0, 350, 320, 257, 0, 0, 1528, 1645, 1549,
	1614, 1511, 1586, 1445, 1569, 1667, 1490, 1578, 1668, 0,
	0, 0, 0, 929, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 1659, 1483, 0, 1523, 1583,
	1687, 1414, 1570, 0, 1420, 1431, 1681, 1652, 1474, 1475,
	202, 0, 0, 0, 0, 0, 0, 0, 1526, 1550,
	1604, 1508, 345, 1589, 1599, 1617, 1500, 288, 215, 0,
	0, 0, 0, 0, 0, 2919, 0, 1470, 0, 1567,
	0, 0, 0, 1436, 1422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 1444, 1412, 1472, 1606, 1413, 1410, 258, 1432, 1619,
	1650, 1509, 231, 0, 1656, 1507, 1506, 1593, 1437, 1629,
	1493, 238, 1435, 154, 1430, 1438, 1491, 269, 1603, 1611,
	0, 157, 1626, 1466, 1482, 191, 0, 298, 1579, 344,
	0, 1559, 297, 241, 337, 1594, 1658, 343, 1494, 327,
	351, 355, 208, 1534, 182, 317, 200, 197, 1473, 1616,
	1419, 216, 287, 194, 234, 1512, 1585, 1467, 187, 1597,
	1568, 1631, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1627, 1610, 1633, 1460, 1439, 1451, 1440, 1481, 1660, 226,
	217, 1634, 1632, 348, 0, 307, 306, 1497, 225, 1613,
	0, 0, 294, 0, 232, 162, 1638, 357, 173, 236,
	330, 0, 211, 268, 193, 1581, 277, 1479, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 1609, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	1666, 246, 204, 207, 219, 229, 1580, 296, 324, 349,
	1571, 171, 164, 326, 342, 180, 308, 310, 356, 1605,
	166, 1654, 1628, 1561, 1515, 1521, 1421, 0, 165, 1601,
	1471, 1486, 1459, 1575, 1458, 213, 1592, 340, 341, 192,
	358, 1433, 1674, 167, 1434, 1673, 265, 272, 264, 1677,
	336, 1655, 1562, 1546, 1544, 1426, 1653, 1560, 1545, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1548, 0, 163, 0, 321, 1664, 1689, 325, 177, 1453,
	1620, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1596, 1686, 276, 299, 181, 346,
	318, 201, 1449, 1452, 1447, 1450, 1448, 1552, 1553, 1669,
	1670, 1671, 1608, 1441, 0, 1646, 1647, 0, 1539, 1657,
	1427, 0, 1624, 0, 0, 1588, 1684, 1499, 188, 1418,
	1423, 1424, 1425, 1442, 1529, 1530, 1558, 1565, 1642, 1641,
	1640, 1643, 1648, 1678, 1676, 1679, 1443, 1464, 1485, 1535,
	1536, 1538, 1572, 1573, 1618, 1591, 1600, 1531, 281, 1557,
	158, 168, 239, 1685, 293, 210, 1409, 1417, 1446, 1454,
	1455, 1456, 1457, 1462, 1469, 0, 1476, 1484, 1487, 1488,
	1496, 1502, 1503, 1504, 1505, 1514, 1516, 1517, 1518, 1519,
	1520, 1524, 1525, 1527, 1540, 1541, 1547, 1555, 1556, 1564,
	1566, 0, 1595, 1598, 1607, 1612, 1615, 1621, 1623, 1630,
	1635, 1637, 1675, 1683, 1688, 347, 196, 1537, 1563, 1602,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1649, 1510, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1495, 160, 1644, 1680,
	1576, 1590, 1661, 1622, 328, 1513, 1665, 1463, 1492, 1682,
	1498, 1501, 1584, 1428, 1551, 273, 1489, 1429, 1411, 1468,
	1415, 1480, 1416, 1465, 199, 1461, 1625, 1554, 1663, 1533,
	1577, 1587, 198, 190, 1543, 1542, 1651, 1478, 1477, 1582,
	1639, 1662, 1532, 0, 1672, 240, 1636, 0, 350, 320,
	257, 0, 0, 1528, 1645, 1549, 1614, 1511, 1586, 1445,
	1569, 1667, 1490, 1578, 1668, 0, 0, 0, 0, 929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 1659, 1483, 0, 1523, 1583, 1687, 1414, 1570, 0,
	1420, 1431, 1681, 1652, 1474, 1475, 202, 0, 0, 0,
	0, 0, 0, 0, 1526, 1550, 1604, 1508, 345, 1589,
	1599, 1617, 1500, 288, 215, 0, 0, 0, 0, 0,
	0, 2474, 0, 1470, 0, 1567, 0, 0, 0, 1436,
	1422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 1444, 1412, 1472,
	1606, 1413, 1410, 258, 1432, 1619, 1650, 1509, 231, 0,
	1656, 1507, 1506, 1593, 1437, 1629, 1493, 238, 1435, 154,
	1430, 1438, 1491, 269, 1603, 1611, 0, 157, 1626, 1466,
	1482, 191, 0, 298, 1579, 344, 0, 1559, 297, 241,
	337, 1594, 1658, 343, 1494, 327, 351, 355, 208, 1534,
	182, 317, 200, 197, 1473, 1616, 1419, 216, 287, 194,
	234, 1512, 1585, 1467, 187, 1597, 1568, 1631, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1627, 1610, 1633, 1460,
	1439, 1451, 1440, 1481, 1660, 226, 217, 1634, 1632, 348,
	0, 307, 306, 1497, 225, 1613, 0, 0, 294, 0,
	232, 162, 1638, 357, 173, 236, 330, 0, 211, 268,
	193, 1581, 277, 1479, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 1609, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 1666, 246, 204, 207,
	219, 229, 1580, 296, 324, 349, 1571, 171, 164, 326,
	342, 180, 308, 310, 356, 1605, 166, 1654, 1628, 1561,
	1515, 1521, 1421, 0, 165, 1601, 1471, 1486, 1459, 1575,
	1458, 213, 1592, 340, 341, 192, 358, 1433, 1674, 167,
	1434, 1673, 265, 272, 264, 1677, 336, 1655, 1562, 1546,
	1544, 1426, 1653, 1560, 1545, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1548, 0, 163, 0,
	321, 1664, 1689, 325, 177, 1453, 1620, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1596, 1686, 276, 299, 181, 346, 318, 201, 1449, 1452,
	1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441,
	0, 1646, 1647, 0, 1539, 1657, 1427, 0, 1624, 0,
	0, 1588, 1684, 1499, 188, 1418, 1423, 1424, 1425, 1442,
	1529, 1530, 1558, 1565, 1642, 1641, 1640, 1643, 1648, 1678,
	1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573,
	1618, 1591, 1600, 1531, 281, 1557, 158, 168, 239, 1685,
	293, 210, 1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462,
	1469, 0, 1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504,
	1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527,
	1540, 1541, 1547, 1555, 1556, 1564, 1566, 0, 1595, 1598,
	1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683,
	1688, 347, 196, 1537, 1563, 1602, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1649, 1510, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1495, 160, 1644, 1680, 1576, 1590, 1661, 1622,
	328, 1513, 1665, 1463, 1492, 1682, 1498, 1501, 1584, 1428,
	1551, 273, 1489, 1429, 1411, 1468, 1415, 1480, 1416, 1465,
	199, 1461, 1625, 1554, 1663, 1533, 1577, 1587, 198, 190,
	1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662, 1532, 0,
	1672, 240, 1636, 0, 350, 320, 257, 0, 0, 1528,
	1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667, 1490, 1578,
	1668, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 1659, 1483, 0,
	1523, 1583, 1687, 1414, 1570, 0, 1420, 1431, 1681, 1652,
	1474, 1475, 202, 0, 0, 0, 0, 0, 0, 0,
	1526, 1550, 1604, 1508, 345, 1589, 1599, 1617, 1500, 288,
	215, 0, 0, 0, 0, 0, 0, 2298, 0, 1470,
	0, 1567, 0, 0, 0, 1436, 1422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1522,
	0, 0, 0, 1444, 1412, 1472, 1606, 1413, 1410, 258,
	1432, 1619, 1650, 1509, 231, 0, 1656, 1507, 1506, 1593,
	1437, 1629, 1493, 238, 1435, 154, 1430, 1438, 1491, 269,
	1603, 1611, 0, 157, 1626, 1466, 1482, 191, 0, 298,
	1579, 344, 0, 1559, 297, 241, 337, 1594, 1658, 343,
	1494, 327, 351, 355, 208, 1534, 182, 317, 200, 197,
	1473, 1616, 1419, 216, 287, 194, 234, 1512, 1585, 1467,
	187, 1597, 1568, 1631, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1627, 1610, 1633, 1460, 1439, 1451, 1440, 1481,
	1660, 226, 217, 1634, 1632, 348, 0, 307, 306, 1497,
	225, 1613, 0, 0, 294, 0, 232, 162, 1638, 357,
	173, 236, 330, 0, 211, 268, 193, 1581, 277, 1479,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 1609,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 1666, 246, 204, 207, 219, 229, 1580, 296,
	324, 349, 1571, 171, 164, 326, 342, 180, 308, 310,
	356, 1605, 166, 1654, 1628, 1561, 1515, 1521, 1421, 0,
	165, 1601, 1471, 1486, 1459, 1575, 1458, 213, 1592, 340,
	341, 192, 358, 1433, 1674, 167, 1434, 1673, 265, 272,
	264, 1677, 336, 1655, 1562, 1546, 1544, 1426, 1653, 1560,
	1545, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1548, 0, 163, 0, 321, 1664, 1689, 325,
	177, 1453, 1620, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1596, 1686, 276, 299,
	181, 346, 318, 201, 1449, 1452, 1447, 1450, 1448, 1552,
	1553, 1669, 1670, 1671, 1608, 1441, 0, 1646, 1647, 0,
	1539, 1657, 1427, 0, 1624, 0, 0, 1588, 1684, 1499,
	188, 1418, 1423, 1424, 1425, 1442, 1529, 1530, 1558, 1565,
	1642, 1641, 1640, 1643, 1648, 1678, 1676, 1679, 1443, 1464,
	1485, 1535, 1536, 1538, 1572, 1573, 1618, 1591, 1600, 1531,
	281, 1557, 158, 168, 239, 1685, 293, 210, 1409, 1417,
	1446, 1454, 1455, 1456, 1457, 1462, 1469, 0, 1476, 1484,
	1487, 1488, 1496, 1502, 1503, 1504, 1505, 1514, 1516, 1517,
	1518, 1519, 1520, 1524, 1525, 1527, 1540, 1541, 1547, 1555,
	1556, 1564, 1566, 0, 1595, 1598, 1607, 1612, 1615, 1621,
	1623, 1630, 1635, 1637, 1675, 1683, 1688, 347, 196, 1537,
	1563, 1602, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1649, 1510, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1495, 160,
	1644, 1680, 1576, 1590, 1661, 1622, 328, 1513, 1665, 1463,
	1492, 1682, 1498, 1501, 1584, 1428, 1551, 273, 1489, 1429,
	1411, 1468, 1415, 1480, 1416, 1465, 199, 1461, 1625, 1554,
	1663, 1533, 1577, 1587, 198, 190, 1543, 1542, 1651, 1478,
	1477, 1582, 1639, 1662, 1532, 0, 1672, 240, 1636, 0,
	350, 320, 257, 0, 0, 1528, 1645, 1549, 1614, 1511,
	1586, 1445, 1569, 1667, 1490, 1578, 1668, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 1659, 1483, 0, 1523, 1583, 1687, 1414,
	1570, 0, 1420, 1431, 1681, 1652, 1474, 1475, 202, 0,
	0, 0, 0, 0, 0, 0, 1526, 1550, 1604, 1508,
	345, 1589, 1599, 1617, 1500, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1470, 0, 1567, 0, 0,
	0, 1436, 1422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 0, 1444,
	1412, 1472, 1606, 1413, 1410, 258, 1432, 1619, 1650, 1509,
	231, 0, 1656, 1507, 1506, 1593, 1437, 1629, 1493, 238,
	1435, 154, 1430, 1438, 1491, 269, 1603, 1611, 0, 157,
	1626, 1466, 1482, 191, 0, 298, 1579, 344, 0, 1559,
	297, 241, 337, 1594, 1658, 343, 1494, 327, 351, 355,
	208, 1534, 182, 317, 200, 197, 1473, 1616, 1419, 216,
	287, 194, 234, 1512, 1585, 1467, 187, 1597, 1568, 1631,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1627, 1610,
	1633, 1460, 1439, 1451, 1440, 1481, 1660, 226, 217, 1634,
	1632, 348, 0, 307, 306, 1497, 225, 1613, 0, 0,
	294, 0, 232, 162, 1638, 357, 173, 236, 330, 0,
	211, 268, 193, 1581, 277, 1479, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 1609, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 1666, 246,
	204, 207, 219, 229, 1580, 296, 324, 349, 1571, 171,
	164, 326, 342, 180, 308, 310, 356, 1605, 166, 1654,
	1628, 1561, 1515, 1521, 1421, 0, 165, 1601, 1471, 1486,
	1459, 1575, 1458, 213, 1592, 340, 341, 192, 358, 1433,
	1674, 167, 1434, 1673, 265, 272, 264, 1677, 336, 1655,
	1562, 1546, 1544, 1426, 1653, 1560, 1545, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1548, 0,
	163, 0, 321, 1664, 1689, 325, 177, 1453, 1620, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1596, 1686, 276, 299, 181, 346, 318, 201,
	1449, 1452, 1447, 1450, 1448, 1552, 1553, 1669, 1670, 1671,
	1608, 1441, 0, 1646, 1647, 0, 1539, 1657, 1427, 0,
	1624, 0, 0, 1588, 1684, 1499, 188, 1418, 1423, 1424,
	1425, 1442, 1529, 1530, 1558, 1565, 1642, 1641, 1640, 1643,
	1648, 1678, 1676, 1679, 1443, 1464, 1485, 1535, 1536, 1538,
	1572, 1573, 1618, 1591, 1600, 1531, 281, 1557, 158, 168,
	239, 1685, 293, 210, 1409, 1417, 1446, 1454, 1455, 1456,
	1457, 1462, 1469, 0, 1476, 1484, 1487, 1488, 1496, 1502,
	1503, 1504, 1505, 1514, 1516, 1517, 1518, 1519, 1520, 1524,
	1525, 1527, 1540, 1541, 1547, 1555, 1556, 1564, 1566, 0,
	1595, 1598, 1607, 1612, 1615, 1621, 1623, 1630, 1635, 1637,
	1675, 1683, 1688, 347, 196, 1537, 1563, 1602, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1649, 1510, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1495, 160, 1644, 1680, 1576, 1590,
	1661, 1622, 328, 1513, 1665, 1463, 1492, 1682, 1498, 1501,
	1584, 1428, 1551, 273, 1489, 1429, 1411, 1468, 1415, 1480,
	1416, 1465, 199, 1461, 1625, 1554, 1663, 1533, 1577, 1587,
	198, 190, 1543, 1542, 1651, 1478, 1477, 1582, 1639, 1662,
	1532, 0, 1672, 240, 1636, 0, 350, 320, 257, 0,
	0, 1528, 1645, 1549, 1614, 1511, 1586, 1445, 1569, 1667,
	1490, 1578, 1668, 0, 0, 0, 0, 3239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 1659,
	1483, 0, 1523, 1583, 1687, 1414, 1570, 0, 1420, 1431,
	1681, 1652, 1474, 1475, 202, 0, 0, 0, 0, 0,
	0, 0, 1526, 1550, 1604, 1508, 345, 1589, 1599, 1617,
	1500, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 1470, 0, 1567, 0, 0, 0, 1436, 1422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 0, 1444, 1412, 1472, 1606, 1413,
	1410, 258, 1432, 1619, 1650, 1509, 231, 0, 1656, 1507,
	1506, 1593, 1437, 1629, 1493, 238, 1435, 154, 1430, 1438,
	1491, 269, 1603, 1611, 0, 157, 1626, 1466, 1482, 191,
	0, 298, 1579, 344, 0, 1559, 297, 241, 337, 1594,
	1658, 343, 1494, 327, 351, 355, 208, 1534, 182, 317,
	200, 197, 1473, 1616, 1419, 216, 287, 194, 234, 1512,
	1585, 1467, 187, 1597, 1568, 1631, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1627, 1610, 1633, 1460, 1439, 1451,
	3242, 3243, 3244, 226, 217, 1634, 1632, 348, 0, 307,
	306, 1497, 225, 1613, 0, 0, 294, 0, 232, 162,
	1638, 357, 173, 236, 330, 0, 211, 268, 193, 1581,
	277, 1479, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 1609, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 1666, 246, 204, 207, 219, 229,
	1580, 296, 324, 349, 1571, 171, 164, 326, 342, 180,
	308, 310, 356, 1605, 166, 1654, 1628, 1561, 1515, 1521,
	1421, 0, 165, 1601, 1471, 1486, 1459, 1575, 1458, 213,
	1592, 340, 341, 192, 358, 1433, 1674, 167, 1434, 1673,
	265, 272, 264, 1677, 336, 1655, 1562, 1546, 1544, 1426,
	1653, 1560, 1545, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1548, 0, 163, 0, 321, 1664,
	1689, 325, 177, 1453, 1620, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1596, 1686,
	276, 299, 181, 346, 318, 201, 1449, 1452, 1447, 1450,
	1448, 1552, 1553, 1669, 1670, 1671, 1608, 1441, 0, 1646,
	1647, 0, 1539, 1657, 1427, 0, 1624, 0, 0, 1588,
	1684, 1499, 188, 1418, 1423, 1424, 1425, 1442, 1529, 1530,
	1558, 1565, 1642, 1641, 1640, 1643, 1648, 1678, 1676, 1679,
	1443, 1464, 1485, 1535, 1536, 1538, 1572, 1573, 1618, 1591,
	1600, 1531, 281, 1557, 158, 168, 239, 1685, 293, 210,
	1409, 1417, 1446, 1454, 1455, 1456, 1457, 1462, 1469, 0,
	1476, 1484, 1487, 1488, 1496, 1502, 1503, 1504, 1505, 1514,
	1516, 1517, 1518, 1519, 1520, 1524, 1525, 1527, 1540, 1541,
	1547, 1555, 1556, 1564, 1566, 0, 1595, 1598, 1607, 1612,
	1615, 1621, 1623, 1630, 1635, 1637, 1675, 1683, 1688, 347,
	196, 1537, 1563, 1602, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1649,
	1510, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1495, 160, 1644, 1680, 1576, 1590, 1661, 1622, 328, 1513,
	1665, 1463, 1492, 1682, 1498, 1501, 1584, 1428, 1551, 273,
	1489, 1429, 1411, 1468, 1415, 1480, 1416, 1465, 199, 1461,
	1625, 1554, 1663, 1533, 1577, 1587, 198, 190, 1543, 1542,
	1651, 1478, 1477, 1582, 1639, 1662, 1532, 0, 1672, 240,
	1636, 0, 350, 320, 257, 0, 0, 1528, 1645, 1549,
	1614, 1511, 1586, 1445, 1569, 1667, 1490, 1578, 1668, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 1659, 1483, 0, 1523, 1583,
	1687, 1414, 1570, 0, 1420, 1431, 1681, 1652, 1474, 1475,
	202, 0, 0, 0, 0, 0, 0, 0, 1526, 1550,
	1604, 1508, 345, 1589, 1599, 1617, 1500, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 1470, 0, 1567,
	0, 0, 0, 1436, 1422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 1444, 1412, 1472, 1606, 1413, 1410, 258, 1432, 1619,
	1650, 1509, 231, 0, 1656, 1507, 1506, 1593, 1437, 1629,
	1493, 238, 1435, 154, 1430, 1438, 1491, 269, 1603, 1611,
	0, 157, 1626, 1466, 1482, 191, 0, 298, 1579, 344,
	0, 1559, 297, 241, 337, 1594, 1658, 343, 1494, 327,
	351, 355, 208, 1534, 182, 317, 200, 197, 1473, 1616,
	1419, 216, 287, 194, 234, 1512, 1585, 1467, 187, 1597,
	1568, 1631, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1627, 1610, 1633, 1460, 1439, 1451, 1440, 1481, 1660, 226,
	217, 1634, 1632, 348, 0, 307, 306, 1497, 225, 1613,
	0, 0, 294, 0, 232, 162, 1638, 357, 173, 236,
	330, 0, 211, 268, 193, 1581, 277, 1479, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 1609, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	1666, 246, 204, 207, 219, 229, 1580, 296, 324, 349,
	1571, 171, 164, 326, 342, 180, 308, 310, 356, 1605,
	166, 1654, 1628, 1561, 1515, 1521, 1421, 0, 165, 1601,
	1471, 1486, 1459, 1575, 1458, 213, 1592, 340, 341, 192,
	358, 1433, 1674, 167, 1434, 1673, 265, 272, 264, 1677,
	336, 1655, 1562, 1546, 1544, 1426, 1653, 1560, 1545, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1548, 0, 163, 0, 321, 1664, 1689, 325, 177, 1453,
	1620, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1596, 1686, 276, 299, 181, 346,
	318, 201, 1449, 1452, 1447, 1450, 1448, 1552, 1553, 1669,
	1670, 1671, 1608, 1441, 0, 1646, 1647, 0, 1539, 1657,
	1427, 0, 1624, 0, 0, 1588, 1684, 1499, 188, 1418,
	1423, 1424, 1425, 1442, 1529, 1530, 1558, 1565, 1642, 1641,
	1640, 1643, 1648, 1678, 1676, 1679, 1443, 1464, 1485, 1535,
	1536, 1538, 1572, 1573, 1618, 1591, 1600, 1531, 281, 1557,
	158, 168, 239, 1685, 293, 210, 1409, 1417, 1446, 1454,
	1455, 1456, 1457, 1462, 1469, 0, 1476, 1484, 1487, 1488,
	1496, 1502, 1503, 1504, 1505, 1514, 1516, 1517, 1518, 1519,
	1520, 1524, 1525, 1527, 1540, 1541, 1547, 1555, 1556, 1564,
	1566, 0, 1595, 1598, 1607, 1612, 1615, 1621, 1623, 1630,
	1635, 1637, 1675, 1683, 1688, 347, 196, 1537, 1563, 1602,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1649, 1510, 155, 0, 0,
	161, 328, 0, 0, 0, 0, 1495, 160, 1644, 1680,
	1576, 1590, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 2003, 2007,
	0, 0, 240, 0, 933, 350, 320, 257, 936, 935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 929, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 2006, 231, 153, 0, 0, 0,
	2000, 0, 2001, 2002, 238, 937, 154, 0, 1998, 2005,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 926,
	298, 0, 344, 932, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 931, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 1144, 0, 0, 0, 199, 151, 152, 0, 0,
	0, 188, 131, 198, 190, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 933, 350,
	320, 257, 936, 935, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	1145, 0, 1148, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 934, 0, 1140, 1141, 1139, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 1142, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 258, 0, 0, 0, 0, 231,
	153, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 142, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 932, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 143, 307, 306, 0, 225, 0, 144, 136, 294,
	145, 232, 162, 0, 357, 173, 236, 330, 931, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 0, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	151, 152, 0, 0, 0, 188, 131, 198, 190, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	240, 0, 933, 350, 320, 257, 936, 935, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 158, 168, 239,
	0, 293, 210, 0, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 934, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 937, 154, 0, 927, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 926, 298, 0,
	344, 932, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 931, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 151, 152, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 933, 350, 320, 257,
	936, 935, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 1145, 0,
	1148, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 153, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 142, 157, 0, 0, 0,
	191, 1826, 298, 0, 344, 932, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 143,
	307, 306, 0, 225, 0, 144, 136, 294, 145, 232,
	162, 0, 357, 173, 236, 330, 931, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 0, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 151, 152,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	933, 350, 320, 257, 936, 935, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 2706, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 932,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	931, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 933, 350, 320, 257, 936, 935,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 2701, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	934, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 153, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 932, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 931, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 152, 0, 0,
	0, 188, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 36, 328, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2280, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 153, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 142, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 143, 307,
	306, 0, 225, 0, 144, 136, 294, 145, 232, 162,
	0, 357, 173, 236, 330, 128, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 0, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 152, 0,
	0, 0, 188, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 281, 0, 158, 168, 239, 75, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 328,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	273, 160, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 128, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 151, 152, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 153, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 142, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 2082, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 143,
	307, 306, 0, 225, 0, 144, 136, 294, 145, 232,
	162, 0, 357, 173, 236, 330, 128, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 0, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 151, 152,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 347, 196, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 153, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 128, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 151, 152, 0, 0,
	0, 188, 131, 198, 190, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 0, 0, 347, 196,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 258, 0, 0, 123, 0, 231,
	153, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 142, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 143, 307, 306, 0, 225, 0, 144, 136, 294,
	145, 232, 162, 0, 357, 173, 236, 330, 128, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 0, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	151, 152, 0, 0, 0, 188, 131, 198, 190, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 158, 168, 239,
	0, 293, 210, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 347, 196, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 128, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 152, 0, 0, 0, 188,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 428, 328, 422, 433, 416, 0, 160, 0,
	0, 0, 0, 0, 273, 0, 0, 439, 0, 0,
	0, 0, 0, 199, 0, 0, 423, 0, 0, 0,
	0, 198, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 414, 417, 0,
	0, 0, 258, 0, 0, 0, 421, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 425, 0, 0, 157, 429, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 432, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 442, 309, 332, 175, 323, 418, 419,
	420, 426, 427, 430, 431, 434, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 0, 0, 0,
	0, 0, 0, 428, 328, 422, 433, 416, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 408, 0,
	0, 0, 0, 188, 199, 0, 0, 423, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 437,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	347, 196, 0, 288, 215, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 424, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 415, 414, 417,
	0, 0, 0, 258, 0, 0, 0, 421, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 425, 0, 0, 157, 429, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 432, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 411, 309, 332, 175, 323, 418,
	419, 420, 426, 427, 430, 431, 434, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 424, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 328, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 273, 160, 0, 0, 0, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 1160, 1159, 1169, 1170, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1161, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 0, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 292, 309, 332, 175, 323, 0, 0, 0, 0,
	300, 0, 0, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 2285, 0,
	0, 188, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 281, 0, 158, 168, 239, 0, 293, 210, 2287,
	2289, 0, 0, 0, 0, 0, 0, 129, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 2283, 347, 196,
	0, 288, 215, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 282,
	283, 289, 0, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 2288,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 328,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	273, 160, 0, 0, 0, 2285, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2287, 2289, 0, 0,
	0, 0, 0, 0, 129, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 0, 0, 2288, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 3339,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 158, 168, 239, 0, 293, 210, 0, 129, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 0, 0, 347, 196, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 0, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 0,
	307, 306, 0, 225, 0, 0, 0, 294, 0, 232,
	162, 0, 357, 173, 236, 330, 0, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	0, 0, 0, 292, 309, 332, 175, 323, 0, 0,
	0, 0, 300, 0, 0, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 158, 168, 239, 0, 293,
	210, 0, 129, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	347, 196, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 282, 283, 289, 0, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 0,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 162, 0, 357, 173, 236, 330,
	0, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 0, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 454, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 328, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 273, 160, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	2577, 0, 198, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 188, 131, 198, 190, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 129, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 131,
	0, 0, 0, 132, 0, 240, 133, 134, 350, 320,
	257, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 929,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 3299, 0, 0, 0, 0, 0, 199, 3297,
	0, 0, 0, 0, 188, 131, 198, 190, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 437, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	3298, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 929,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2393, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 2394, 2395, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 188, 0, 198, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 158, 168, 239, 0,
	293, 210, 0, 437, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 1290, 0, 0, 0, 0, 188, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	158, 168, 239, 0, 293, 210, 0, 929, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 188, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 158, 168, 239, 0, 293, 210,
	0, 437, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 328, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2692, 0, 0, 281, 2694, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 258, 0, 0, 0, 160, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 328, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 929, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 2678, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 258, 0, 0,
	0, 160, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 281, 929,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	328, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 198, 190,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 929, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 0, 0, 0, 0, 0, 0, 2126, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 258,
	0, 0, 0, 160, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 328, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 2164, 2165, 190, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 929, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 258, 0, 0, 0, 160,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 328, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 188, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 929, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 196, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 258, 0, 0, 0, 160, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 328, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 198, 190, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 2694, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	196, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 258, 0, 0,
	0, 160, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 328, 0, 276, 299, 181, 346,
	318, 201, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 198, 190, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 129,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 258, 0, 0, 0, 160, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	328, 0, 276, 299, 181, 346, 318, 201, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 198, 190,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 478, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 196, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 258,
	0, 0, 0, 160, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 196, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 160,
}

var yyPact = [...]int{
	3924, -1000, -409, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2053, -1000, -1000, 256, -1000,
	1167, 752, -1000, 340, 266, 30948, 661, 1592, 41717, -1000,
	-1000, -1000, 184, 546, 31372, 432, 479, 1466, 1945, 1465,
	39, -69, -73, 142, 32397, 31966, 15, -1000, 2091, 2094,
	611, 45, -1000, -1000, -1000, 34850, 222, -1000, -1000, 2041,
	2051, 1867, -1000, 7181, -1000, -1000, -1000, -1000, -1000, 20513,
	-1000, 2092, 31372, 26802, -1000, 648, 642, -182, 600, 600,
	518, 600, 600, 653, -1000, 315, 1047, -1000, -1000, -1000,
	-1000, 1041, 31372, 38389, 604, 40885, 604, 604, 604, 604,
	604, 604, 604, 31372, -1000, 780, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31372,
	1464, 1976, 1025, 132, -1000, -1000, -1000, 1111, -1000, 427,
	423, 520, 414, 93, 1042, 2037, -1000, 1540, 2041, 2041,
	-1000, -1000, -1000, -1000, -1000, -1000, 834, 307, 639, 222,
	222, 1035, 2012, 1975, 1973, 1273, 1969, 1319, 1968, 1786,
	-37, -1000, 1460, 31372, -1000, -1000, 1245, 1237, 350, 1665,
	739, 1821, -1000, -1000, 343, 457, 1759, 411, 1759, 1759,
	1759, 1759, 1759, -87, 1759, 1759, 1759, 86, 1759, 154,
	1759, 1759, 1759, 1759, 1759, 1477, -1000, -1000, -1000, 375,
	1645, 1704, 1820, 593, -1000, -1000, -1000, -1000, 1784, 2026,
	652, -1000, -149, 1723, 35861, -1000, 1540, -1000, -1000, -1000,
	1403, -1000, 2091, 1966, 1159, 13241, 1918, -1000, -1000, 1139,
	2080, -1000, 26378, 778, -1000, 13241, 4996, 1540, -1000, -1000,
	1540, -1000, 728, 830, -1000, 718, -1000, -1000, -1000, 12635,
	12635, 12635, 12635, 12635, 12635, 12635, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1540, 777, 776, 1540, 1540, 1540, 1540, 1540,
	-1000, 11423, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1540, 1540, 1540, 1540, 1540, 1540,
	1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 13241, 1540,
	1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
	1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
	1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540,
	1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	611, 611, 30524, 1731, -118, 19907, -1000, -1000, -1000, -1000,
	18695, 37965, 1027, -1000, -1000, -1000, -1000, 1964, -1000, -1000,
	775, 728, 727, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2053, -1000, -1000, 1629,
	596, -1000, 3294, 3294, 3294, 3294, 3294, 327, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1783, 40885, 31372,
	305, 1447, 1085, 1443, 42133, 42133, -1000, 263, 38389, 38389,
	600, 309, 38389, 288, 1730, 638, 1729, 636, 1435, 31372,
	1997, 1818, 31372, 1440, 1439, 42133, 42133, 38389, 38389, -1000,
	25361, 1727, -1000, -1000, 1025, -1000, 3381, 13241, 600, 600,
	31372, 31372, 31372, 31372, 31372, -1000, -1000, 1025, 1025, 1025,
	1025, 1062, 2079, 1062, -1000, 1062, -1000, -1000, 13241, -1000,
	12635, 37541, 867, -1000, -1000, 41717, -1000, 1438, 297, -1000,
	-1000, -1000, -1000, -1000, -1000, 1437, -1000, 1949, 1319, 1319,
	-1000, 1351, 1319, 1718, -1000, 1017, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1319, -1000,
	12029, -389, -1000, -1000, 1725, -1000, 257, -1000, -1000, 564,
	1817, 564, 212, 38389, 38389, 38389, -1000, 1759, 40885, -1000,
	1759, 1759, 1759, -98, 1759, 1759, -1000, -1000, 1759, -1000,
	-1000, -1000, -1000, -1000, 1759, -1000, -1000, -1000, 1759, 1759,
	-1000, 1759, 1759, -1000, -1000, -1000, -1000, -1000, 38389, 564,
	188, 1724, 564, 38389, 38389, -1000, 75, 73, 71, 70,
	-1000, -1000, -1000, -1000, 67, 66, -1000, -1000, 1867, -1000,
	-1000, 222, -1000, -1000, 31372, -77, 35861, 1723, 2020, 15665,
	-1000, -1000, 1122, 2087, 911, 1706, -1000, -1000, 1720, -1000,
	1140, 772, 1281, 1888, -1000, -1000, -1000, 31372, -1000, 13241,
	13241, 13241, 1318, -1000, 27226, -1000, -1000, -1000, -1000, -1000,
	-1000, 16877, 925, 12635, 1152, 1078, 12635, 12635, 12635, 12635,
	12635, 12635, 12635, 12635, 12635, 12635, 12635, 12635, 12635, 12635,
	12635, 1222, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1436, -1000, 222, 24149, 8393, 24149, 1479, 1479, 787, 787,
	787, 787, 787, 787, 32984, 2017, 24149, 24149, 2017, 2017,
	2017, 2017, 2017, 1403, 1627, 1428, 34850, 11423, 8393, 8393,
	8393, 1403, 13241, 13241, 8393, 8393, 10817, 10211, 14453, 8393,
	8393, 2017, 1064, 1428, 18695, 8393, -1000, -1000, 9605, -1000,
	-1000, -1000, -1000, -1000, 1403, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 40885, 40885, 8393, 8393, 8393, 8393, 1403,
	1403, 8393, 8393, 8393, 8393, 8393, 1403, 1403, 1403, 1403,
	8393, 8393, 8393, 8393, 8393, 8393, 8393, 8393, 8393, 8393,
	8393, 8393, 30100, 29252, 31372, 1698, 1672, -1000, 771, 19301,
	1710, -1000, -138, -80, -118, -1000, -1000, 829, -1000, -1000,
	-1000, 8999, -1000, 17483, 2041, 1867, 21725, 25954, -1000, -1000,
	-45, -1000, -1000, -1000, 1743, -1000, 1743, 299, 16, 1743,
	1743, 1743, 1743, 1743, -8, -8, -8, -8, -7, -1000,
	-1000, -1000, -1000, -1000, 1769, 1764, -1000, 1743, 1743, 1743,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1756,
	304, 1745, 1745, 1745, 1745, 1745, -1000, -1000, -1000, -1000,
	505, 505, 505, -1000, 13241, 1750, 2019, 641, 309, 1987,
	1996, 1987, 413, -1000, 770, 1761, -1000, 769, 405, 1679,
	-1000, 205, 1525, 29676, -1000, -1000, -1000, -1000, -1000, 31372,
	31372, 38389, 38389, 38389, 708, -1000, 31372, 1719, -1000, -1000,
	-1000, -1000, -1000, 1674, -1000, 1525, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	31372, -1000, -1000, 1347, 1428, 1433, 1430, 2012, -1000, -1000,
	-1000, 1087, -1000, -1000, -1000, -1000, 1025, 41717, 41717, 31372,
	2012, 1025, 1428, 1507, 1788, 1540, 1403, -1000, -1000, -1000,
	1424, -1000, 12635, 1718, 1718, -1000, 1718, 1319, 1479, 1718,
	-1000, 1625, 1117, 1337, 31372, -1000, 35861, -38, -1000, -162,
	40053, -1000, -1000, -1000, 564, 40053, -1000, 86, 170, -1000,
	635, -1000, 1622, -1000, -1000, -1000, -1000, 1759, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 40053, 155, 186,
	40053, 1674, 2078, -1000, -1000, -1000, -1000, 2036, -1000, 2017,
	1403, 265, -1000, -1000, -1000, 1540, 1585, -1000, 768, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	40469, -1000, 1876, 1159, 1159, 13241, -1000, -1000, -1000, 17483,
	2038, -1000, 1897, 1896, 1833, -1000, -1000, 925, 1054, 1050,
	-1000, -1000, 1195, -1000, -1000, -1000, -1000, -1000, 766, 1540,
	-1000, -1000, -1000, -1000, -1000, 4241, -1000, -1000, -1000, -1000,
	1152, 12635, 12635, 12635, 1507, 4241, 4160, 1401, 1749, 787,
	932, 932, 841, 841, 841, 841, 841, 1291, 1291, -1000,
	-1000, -1000, 1403, -1000, 1620, -1000, -1000, 1428, 765, -1000,
	-1000, -1000, -1000, -1000, 8393, -1000, -1000, 8393, 8393, 8393,
	8393, 8393, -1000, 13241, -1000, 1403, 1620, 1620, 1620, -1000,
	1176, 1219, 1434, 1620, 902, 2077, 1620, 848, 2076, 1620,
	1539, 12635, 12635, 12635, 1620, 1620, 8393, 1099, -1000, 13241,
	1403, 1620, -1000, 1721, 1716, 1715, 1620, 1403, 1711, 1620,
	1620, -198, -198, 1403, 1620, 1403, 1620, 1620, -198, -198,
	-198, -198, 1620, 1620, 1620, 1620, 1620, 1620, 1620, 1620,
	1620, 1620, 1620, 1620, 899, 31372, -1000, 1677, 1873, -1000,
	-1000, -1000, 2018, 28665, -1000, -1000, 33415, -1000, 1540, 1540,
	899, 1643, 29252, -1000, -1000, 29252, 41717, 23543, -1000, 18695,
	-118, -119, -1000, -1000, 1710, -1000, 1266, -1000, -1000, 1428,
	-1000, 764, 1966, 2017, 1709, 21119, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 596, -1000, -1000, -1000, 1758, 298, -1000,
	1924, 858, 858, 827, 1383, 1919, -1000, -1000, 225, -52,
	-1000, -1000, -1000, 1235, -8, -8, 1743, 1743, 295, 1743,
	-1000, -8, -1000, -1000, -1000, 968, 1963, 964, 962, 960,
	952, -8, 1334, 1334, -1000, -1000, -1000, -1000, 1226, -1000,
	1756, -1000, 1207, -1000, -1000, -1000, -1000, 225, 225, 225,
	225, -1000, -1000, -1000, 1317, 1816, 40885, -1000, 31372, -1000,
	1987, -1000, -1000, -1000, 206, -1000, -1000, -1000, 2067, -1000,
	-1000, 40885, 37117, 40885, -1000, -1000, 96, 38389, 198, 385,
	219, -1000, -1000, 634, -1000, 629, -1000, -1000, -1000, -1000,
	-1000, -1000, 31372, 38389, -1000, -1000, -1000, -1000, -1000, 2062,
	1422, 1406, -1000, -1000, -1000, 1062, 1025, -1000, -1000, 12635,
	38389, -1000, 514, -1000, 4241, -1000, -1000, -1000, 899, 650,
	-1000, -1000, -81, -1000, -1000, 626, 756, 745, 40053, 618,
	-1000, 102, 38389, -1000, 40885, -1000, 2075, 2074, 141, 2073,
	38389, -1000, 55, 1888, -1000, 1681, -1000, 977, 941, 781,
	543, 543, -1000, 940, 543, 1956, 1955, 896, -1000, 221,
	-1000, 24149, 24149, 1680, 1326, 1325, -1000, 1874, -1000, -1000,
	-1000, 31372, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22937, 8393, -1000, 1507, 4241, 3675, -1000, 12635, -1000,
	8393, -1000, 16271, 1403, 1620, 1620, 1620, 1620, 1620, 1428,
	-1000, -1000, -1000, -1000, 271, 1222, 271, -1000, 1222, -1000,
	12635, 12635, -1000, 12635, 12635, -1000, -1000, 12635, 4040, 3910,
	3496, -243, -1000, 1534, 1052, -1000, 13241, 1340, -1000, -1000,
	-1000, 12635, 12635, -1000, -1000, -1000, -1000, -1000, 39637, -1000,
	-198, -198, -198, -198, -198, -1000, -1000, -1000, -1000, -198,
	-198, -198, -198, -198, -198, -198, -198, -198, -198, -198,
	-198, 208, 1540, -1000, 18089, 29252, 29252, 29252, 29252, 29252,
	-1000, 1850, 1842, -1000, 1838, 1835, 1845, 35861, 1610, 1403,
	396, 28665, -1000, 1540, -1000, 35437, 742, 647, 646, 645,
	8393, 12635, 2062, 29252, 1705, 1705, -1000, 743, -1000, -1000,
	-1000, -156, -155, -1000, -1000, -1000, 24149, -1000, 21725, -1000,
	21725, -1000, 36277, 578, 1927, 581, 1383, 1383, 1383, -1000,
	1383, -1000, -1000, -1000, 1747, -1000, 1106, -1000, -1000, -1000,
	-1000, -1000, 1540, -401, 1197, 12635, 2086, -1000, 1908, -1000,
	1907, 1905, 1323, -1000, -1000, 1531, 946, 944, -8, -1000,
	-1000, 1743, -1000, 920, -1000, -1000, 918, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 886, 1608, -1000, 1606, 1678,
	-1000, 1604, 118, 31372, -1000, -1000, 2013, -1000, -1000, -1000,
	1961, 940, 940, 940, 1814, -1000, -1000, -1000, -1000, 1526,
	1676, -1000, 3294, 40885, 40885, 40885, -1000, -249, 171, -1000,
	38389, 144, 205, 402, 1405, 31372, 38389, -1000, -1000, -1000,
	13241, -1000, -1000, 2012, -1000, 4241, 1525, -1000, -1000, -8,
	31372, -1000, 38389, 844, 39221, 617, 38389, 139, 162, -1000,
	38389, 38389, 2072, 38389, 1674, 1321, 1833, 265, 38805, 1383,
	736, -1000, -1000, 555, -1000, 296, 1402, 28074, 27650, 40885,
	1904, 1903, 1400, 31372, 40885, -1000, -1000, 41301, 1399, 13241,
	-1000, 40885, -1000, -1000, 40885, 741, -1000, 40885, -1000, -1000,
	-1000, -1000, 1137, 7181, -1000, -1000, 1403, -1000, 12635, 4241,
	-1000, -1000, 737, -1000, -198, -198, -198, -198, -198, 1403,
	1743, 1743, -1000, 1743, 1745, -1000, 1743, 19, 1743, 17,
	1403, 1403, 1403, 3845, 3592, 3577, 3450, 1721, 12635, 12635,
	12635, 1540, -193, -1000, 1428, 13241, 3006, 2924, -1000, -1000,
	1398, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1800,
	18089, 1540, 15059, -1000, 40885, 1708, -1000, 1013, 982, 969,
	950, 728, 727, -1000, -1000, -1000, -1000, -1000, 1873, 1754,
	1799, 1670, -1000, -1000, -1000, -1000, 1841, -1000, 1801, -1000,
	-1000, 1736, -1000, -1000, 1675, 1540, 40885, 12635, 742, -1000,
	1540, 1540, 1540, 1403, 1791, 2053, 1705, -1000, -1000, 839,
	-1000, -1000, -1000, 21119, -1000, 1600, -1000, 1743, 1743, 1902,
	-1000, 858, -1000, -1000, -1000, -1000, -1000, 40885, -1000, 12635,
	2010, -1000, 4241, -139, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 883, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -8, 1320, -8, 1188, -1000, 1187, -1000, -1000, -345,
	1742, 222, -1000, 940, 913, 905, 1314, 31372, 134, 37117,
	-1000, 3294, 3294, 3294, 125, 124, -1000, 1103, -1000, -1000,
	-1000, 1309, 1306, 1305, 1525, 226, 1095, 179, -1000, 2009,
	-1000, -1000, 1428, 1025, -63, -1000, 162, -1000, -1000, -1000,
	38389, 162, -1000, -1000, 177, 1674, 1674, 38389, 1674, -1000,
	-1000, -1000, 41301, 561, 3294, 3294, 1750, 858, 1901, 581,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1392, -1000, 779, -1000, 616, 561, 41301, 1428,
	865, 1116, 24149, -1000, 2070, -1000, -1000, -1000, 4241, 22331,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 290, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12635, 12635, 12635,
	12635, -1000, 1721, 1721, 1721, 12635, 1403, 1301, 1428, 12635,
	12635, 891, -1000, -1000, 1989, 1639, 1654, -1000, -1000, 7787,
	1403, 1894, 1585, -1000, 34850, 1571, -1000, 2053, 18089, 13241,
	13241, 13241, 13241, -1000, -1000, 13241, 1741, -1000, 13241, -1000,
	-1000, -1000, -1000, 40885, 392, -1000, 13241, 1571, 1524, -1000,
	40885, 40885, 40885, -1000, 1300, 2041, -1000, 692, 36277, 1993,
	1993, 1383, 1383, 1568, -1000, 1721, 1540, -1000, 1540, 1540,
	1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, 1540, -1000,
	-1000, 856, -1000, 843, 1498, 1493, -1000, 36277, -1000, -1000,
	897, -1000, -1000, -1000, -1000, -1000, 2032, -1000, 134, -1000,
	1299, 306, 308, -1000, 303, 302, 282, 280, 261, -1000,
	-1000, -1000, -1000, 417, 125, -1000, -78, 1185, 1057, 1953,
	124, -1000, 1184, 1181, 1179, 1177, 197, -1000, -1000, -1000,
	-1000, 218, 205, -1000, 391, 1296, -1000, 1939, 1937, 2007,
	162, 2007, 138, 1674, 1702, 1476, -1000, -1000, 1384, -1000,
	-1000, 1740, 1383, 1383, -1000, 1377, -1000, -1000, 40885, -1000,
	561, 1985, 1981, 1540, -1000, 2062, 29252, 7181, -1000, -1000,
	-1000, -1000, 1721, 1721, 1721, 1721, -1000, -1000, -1000, 207,
	-1000, -1000, 1721, 1721, 2053, 2050, 1900, -1000, 1540, -1000,
	-1000, 1540, 213, -1000, 40885, 2041, -1000, 1428, 1428, 1428,
	1428, 1428, 40885, 1428, 1553, 1540, 34002, -1000, 35861, 1537,
	1537, 1537, -104, -1000, 692, -1000, 1370, 940, 1295, -1000,
	-1000, -1000, -1000, -1000, 477, 40885, -404, 12635, -1000, -1000,
	-1000, -1000, -1000, -1000, 1530, -1000, 222, -1000, -1000, 401,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1944, 1943, 318,
	-1000, 1292, 1278, -1000, 445, 1223, 782, -207, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 388,
	1368, -1000, 169, -1000, -1000, 607, 1929, 1931, 2049, -1000,
	38389, 2007, -1000, -1000, 2062, -1000, -1000, 225, 225, 36277,
	1750, 1737, -1000, -1000, -1000, 12635, -1000, 889, 2060, 1671,
	-1000, -1000, -1000, -1000, -1000, 1403, 182, -264, -1000, -1000,
	1012, 13241, 2085, -1000, 1654, 1540, -1000, 222, -1000, -1000,
	1523, -1000, -1000, -1000, 742, -1000, -1000, -1000, 1540, -1000,
	-1000, 1165, -1000, 31372, -1000, -1000, -1000, -1000, 1721, 692,
	-1000, 390, 5143, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1164, -1000, -1000, 1220, 399, 136, -1000, 2001, -1000,
	1736, 1151, 1937, 2048, 1935, 1933, -1000, 1275, -251, -1000,
	2060, 1521, 1735, 36277, 4241, 1504, -1000, 40885, 2056, 2047,
	-1000, -1000, 1872, -247, -270, 1403, 200, 200, 1669, 18089,
	1654, 1403, -1000, -1000, 24149, -1000, 1734, -404, -1000, 692,
	-1000, 404, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13241, 13241, 24755, 5143, 126, -1000, 119,
	-1000, -1000, -1000, 1267, -1000, 997, -1000, 1254, -1000, 2046,
	2045, -1000, 193, 2056, 692, 36277, 1502, -1000, 889, 1891,
	-201, 13241, 13241, -1000, 1871, -1000, -1000, -1000, 176, -1000,
	1004, 311, 986, -1000, 1479, -1000, 1652, -1000, 1475, -1000,
	3294, 40885, -1000, -1000, 1365, 1355, -1000, 1255, 1265, 237,
	209, 494, -1000, -1000, -1000, -1000, -410, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1253, 1247, 36701, -201, -1000, 1473,
	692, -1000, 454, -1000, 40885, -1000, 1428, 1650, -1000, 1428,
	-252, 1089, -1000, -1000, -1000, -1000, -1000, 40885, 1403, 24149,
	228, 1470, -1000, -1000, -1000, 1118, -1000, 13241, 5143, 2031,
	2025, 2021, 1967, 24149, 4970, -1000, -1000, -1000, -1000, 112,
	1525, -1000, 692, -1000, 437, 1632, -1000, 1999, 13241, -267,
	176, -1000, 34426, -1000, -1000, 1196, -238, 1798, 204, 1079,
	5143, -1000, 1241, -411, 446, 222, 712, 12635, -1000, -1000,
	-1000, 38389, -1000, 1540, 40885, 1540, -1000, -281, -1000, 35861,
	-1000, -1000, 1153, 1797, 1796, 2069, -1000, -1000, -1000, -1000,
	-1000, -1000, 5143, -1000, -1000, -412, 5143, 726, -1000, -1000,
	-1000, 4872, -1000, -1000, -1000, -1000, 223, -1000, -1000, 4241,
	1525, 13847, -1000, -1000, -1000, -1000, 370, -1000, -1000, 2071,
	-1000, 2082, 709, 709, -1000, -413, 4465, -414, 586, 5143,
	1102, -1000, 13241, -1000, 712, -1000, 1721, 1403, -1000, 1793,
	12635, 1790, -1000, -1000, -1000, 499, 1186, -1000, 4416, 1070,
	5143, -1000, -415, 577, 5143, -1000, 1229, -1000, -1000, -1000,
	-293, 1634, -294, -1000, -1000, -1000, -1000, -1000, 4114, -1000,
	-416, 5143, -1000, -295, -1000, 571, 4034, -417, -1000, -1000,
	562, 5143, -1000,
}

var yyPgo = [...]int{
	0, 2503, 2502, 24, 2501, 263, 2498, 2496, 41, 2495,
	36, 20, 18, 30, 2493, 2186, 2180, 2178, 2176, 2174,
	2490, 14, 2489, 2488, 2172, 2486, 2484, 2167, 2161, 2157,
	2155, 2482, 2480, 2479, 2150, 2148, 2145, 7, 2478, 17,
	2477, 2, 157, 172, 2476, 3, 2475, 2474, 16, 2473,
	2472, 2139, 2471, 2470, 2468, 108, 2465, 2135, 2129, 2464,
	2127, 2112, 2463, 2462, 2107, 2105, 2100, 2459, 192, 2458,
	2457, 2453, 190, 110, 162, 2452, 2451, 2450, 122, 89,
	349, 119, 61, 124, 694, 2449, 15, 68, 261, 64,
	98, 2448, 130, 2447, 111, 2443, 2441, 168, 2440, 156,
	148, 94, 2439, 2438, 164, 2437, 2436, 2435, 120, 2431,
	2429, 186, 123, 2428, 2427, 143, 2426, 50, 191, 48,
	52, 2425, 2424, 2422, 2420, 2412, 35, 322, 2409, 127,
	151, 2406, 2405, 95, 2403, 2401, 81, 2400, 2395, 2389,
	150, 46, 2387, 2383, 49, 2382, 47, 57, 2377, 59,
	2376, 145, 2375, 2374, 43, 33, 2372, 63, 2370, 69,
	2368, 152, 315, 1241, 2366, 22, 13, 11, 2365, 34,
	9, 28, 55, 32, 82, 51, 142, 103, 2364, 42,
	45, 132, 97, 2363, 112, 87, 39, 2361, 163, 2359,
	85, 189, 146, 155, 185, 2358, 2357, 2356, 193, 2355,
	134, 90, 2353, 100, 1169, 183, 129, 2352, 104, 2351,
	2350, 2349, 2344, 2343, 84, 165, 2341, 2339, 182, 187,
	188, 147, 2337, 60, 3863, 4077, 177, 2800, 116, 171,
	2336, 54, 2332, 2331, 2325, 2621, 141, 5, 113, 179,
	2318, 114, 40, 74, 2305, 2304, 2301, 2300, 2297, 2296,
	2293, 2292, 374, 2285, 2281, 2280, 2277, 181, 282, 2275,
	139, 138, 137, 2274, 159, 38, 2272, 2271, 144, 107,
	2264, 2261, 2260, 2259, 135, 91, 161, 27, 2257, 117,
	128, 140, 2255, 93, 2253, 2252, 67, 62, 2249, 2248,
	2243, 2241, 99, 96, 2236, 86, 58, 23, 83, 26,
	2235, 2234, 88, 105, 2233, 29, 2221, 4, 6, 8,
	2220, 2219, 2218, 2217, 2215, 2214, 2212, 92, 2210, 2209,
	71, 2208, 2206, 2205, 44, 2204, 2202, 2194, 158, 131,
	53, 170, 257, 12, 2192, 2191, 10, 2190, 133, 2188,
	66, 2183, 80, 2170, 2163, 65, 2159, 2152, 79, 2143,
	2141, 180, 1895, 302, 2137, 160, 121, 56, 70, 2124,
	2120, 0, 1315, 166, 102, 2118, 2109, 2103,
}

var yyR1 = [...]int{
	0, 360, 360, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 184, 184, 184,
	184, 183, 183, 90, 90, 91, 91, 88, 88, 97,
	6, 6, 7, 7, 10, 10, 71, 71, 11, 12,
	12, 12, 12, 363, 363, 106, 106, 104, 104, 105,
	105, 181, 181, 13, 13, 13, 188, 188, 193, 193,
	193, 196, 196, 196, 196, 171, 172, 173, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	334, 334, 343, 343, 343, 344, 344, 342, 342, 342,
	342, 342, 346, 346, 347, 347, 345, 345, 345, 345,
	349, 349, 350, 350, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 337, 337,
	337, 34, 34, 34, 34, 34, 35, 35, 35, 35,
	35, 35, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 352, 352, 353, 353, 354, 354, 355,
	355, 355, 355, 356, 356, 356, 356, 356, 357, 357,
	357, 357, 357, 357, 357, 358, 358, 359, 359, 2,
	315, 315, 316, 316, 317, 317, 317, 317, 318, 318,
	319, 319, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 25, 220, 220, 217, 217, 217, 218, 218,
	219, 219, 219, 336, 336, 336, 330, 330, 330, 332,
	332, 331, 331, 331, 333, 333, 338, 338, 338, 338,
	338, 340, 340, 340, 340, 340, 340, 341, 341, 341,
	339, 339, 49, 49, 50, 50, 50, 160, 160, 160,
	14, 14, 14, 14, 14, 20, 22, 22, 38, 38,
	39, 23, 23, 23, 23, 40, 40, 41, 26, 26,
	26, 26, 26, 26, 47, 47, 47, 46, 46, 45,
	45, 45, 45, 45, 45, 24, 24, 24, 24, 48,
	48, 43, 43, 42, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 27, 27, 27, 27,
	27, 27, 19, 314, 314, 314, 37, 37, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 53, 53,
	288, 289, 289, 289, 289, 289, 289, 289, 289, 275,
	275, 276, 276, 276, 276, 276, 265, 265, 265, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	242, 242, 242, 242, 248, 248, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 247, 247, 247, 247,
	247, 247, 247, 247, 249, 249, 249, 249, 249, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 251, 251, 251, 251,
	251, 251, 251, 251, 274, 274, 252, 252, 268, 268,
	269, 269, 269, 266, 266, 266, 267, 267, 255, 256,
	270, 257, 257, 257, 258, 258, 258, 259, 259, 264,
	264, 263, 263, 263, 263, 263, 263, 260, 260, 260,
	260, 261, 261, 262, 273, 273, 273, 273, 273, 253,
	36, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 301, 301, 210, 210, 211, 211, 278,
	278, 299, 299, 298, 298, 297, 297, 297, 287, 287,
	294, 294, 294, 294, 294, 294, 294, 294, 282, 282,
	282, 281, 281, 283, 283, 286, 286, 296, 296, 295,
	295, 279, 279, 279, 302, 302, 302, 302, 302, 280,
	280, 280, 280, 280, 303, 284, 284, 285, 285, 285,
	308, 309, 307, 307, 307, 307, 307, 123, 123, 123,
	291, 291, 291, 292, 292, 292, 293, 293, 293, 293,
	293, 293, 312, 312, 311, 311, 51, 52, 56, 56,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 159, 159, 159, 215, 215, 306, 304, 304,
	305, 305, 16, 16, 54, 54, 335, 335, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 310, 310, 310,
	18, 18, 57, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 85, 202,
	202, 201, 201, 200, 200, 200, 203, 203, 203, 203,
	240, 240, 240, 59, 59, 59, 63, 63, 66, 66,
	66, 64, 65, 28, 29, 29, 29, 29, 30, 216,
	216, 61, 61, 62, 62, 62, 62, 77, 77, 365,
	365, 60, 366, 68, 69, 69, 70, 70, 70, 206,
	206, 74, 74, 74, 72, 72, 72, 73, 73, 79,
	79, 83, 83, 83, 83, 82, 82, 82, 82, 162,
	162, 167, 232, 232, 143, 143, 163, 163, 168, 168,
	168, 169, 169, 170, 170, 170, 170, 170, 165, 165,
	164, 164, 166, 131, 131, 230, 230, 230, 230, 229,
	229, 229, 229, 229, 229, 87, 87, 92, 92, 94,
	94, 94, 94, 94, 94, 98, 145, 145, 116, 116,
	117, 117, 117, 117, 117, 129, 129, 180, 180, 179,
	179, 182, 182, 93, 95, 95, 95, 95, 101, 101,
	102, 102, 103, 103, 214, 214, 237, 237, 237, 107,
	107, 107, 109, 108, 108, 108, 108, 110, 110, 96,
	96, 290, 290, 277, 244, 244, 245, 367, 367, 367,
	367, 111, 111, 113, 114, 114, 112, 112, 112, 112,
	112, 118, 118, 115, 119, 119, 119, 119, 120, 120,
	84, 84, 84, 84, 84, 84, 84, 84, 199, 199,
	122, 122, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 139, 139, 139, 139, 139, 139, 124, 124,
	124, 124, 124, 124, 124, 78, 78, 140, 140, 140,
	100, 99, 99, 81, 81, 80, 80, 141, 141, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 134, 134, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 364, 364,
	136, 135, 135, 135, 135, 135, 135, 75, 75, 75,
	75, 75, 238, 238, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 152,
	152, 76, 76, 150, 150, 151, 153, 153, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 126,
	126, 126, 126, 126, 126, 126, 126, 128, 128, 128,
	154, 154, 142, 142, 86, 155, 155, 156, 157, 157,
	158, 158, 161, 174, 174, 174, 175, 175, 175, 175,
	130, 130, 176, 176, 176, 125, 125, 125, 125, 125,
	125, 125, 178, 178, 177, 177, 177, 177, 177, 177,
	177, 177, 185, 185, 144, 144, 147, 147, 146, 148,
	186, 186, 190, 190, 190, 190, 187, 187, 191, 191,
	191, 191, 194, 194, 195, 195, 195, 192, 192, 192,
	189, 189, 189, 234, 234, 234, 197, 197, 207, 207,
	204, 204, 205, 205, 198, 198, 254, 254, 254, 213,
	213, 212, 212, 212, 208, 208, 208, 209, 209, 231,
	231, 227, 227, 233, 233, 228, 228, 235, 235, 236,
	236, 313, 313, 271, 271, 323, 323, 272, 272, 324,
	324, 326, 326, 321, 321, 322, 322, 325, 325, 31,
	327, 327, 328, 328, 329, 329, 329, 329, 32, 33,
	33, 33, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 226,
	226, 226, 226, 226, 226, 224, 224, 224, 224, 224,
	361, 362,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 13, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 0, 1, 1, 3, 4,
	1, 3, 1, 3, 8, 9, 1, 1, 10, 9,
	8, 7, 7, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 10, 9, 5, 7, 7, 7, 7, 8,
	4, 6, 2, 3, 2, 3, 3, 3, 4, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	2, 2, 2, 3, 3, 2, 3, 3, 2, 2,
	2, 2, 2, 1, 3, 0, 3, 1, 3, 0,
	1, 1, 1, 1, 3, 1, 3, 3, 0, 2,
	5, 5, 5, 7, 5, 0, 3, 0, 3, 4,
	0, 1, 1, 3, 2, 3, 3, 3, 0, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 3, 3,
	3, 3, 4, 2, 3, 3, 3, 3, 0, 3,
	0, 3, 3, 1, 1, 1, 3, 2, 1, 1,
	3, 3, 2, 1, 1, 3, 1, 2, 5, 4,
	6, 4, 3, 3, 6, 5, 5, 4, 3, 5,
	1, 3, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 4, 5, 8, 1, 2,
	5, 7, 10, 8, 11, 1, 2, 5, 5, 5,
	5, 6, 3, 5, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 1, 1, 2, 4, 2, 4, 2,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 3, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 5,
	4, 1, 1, 2, 3, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 0, 1, 1, 0,
	2, 3, 2, 2, 2, 2, 2, 6, 8, 3,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 3, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 4,
	4, 3, 3, 2, 4, 5, 2, 3, 4, 2,
	2, 3, 3, 3, 3, 3, 4, 1, 1, 1,
	1, 1, 6, 6, 4, 4, 4, 5, 3, 3,
	3, 3, 3, 4, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 4,
	4, 4, 4, 4, 2, 1, 2, 1, 2, 2,
	3, 2, 2, 2, 2, 1, 1, 1, 1, 3,
	2, 1, 1, 0, 3, 1, 1, 0, 1, 5,
	4, 0, 1, 1, 2, 2, 3, 2, 0, 1,
	3, 5, 3, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 3,
	3, 3, 2, 1, 5, 1, 1, 0, 2, 2,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 1, 5, 1, 3,
	5, 4, 3, 5, 3, 8, 10, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 4,
	5, 1, 2, 2, 4, 3, 6, 5, 3, 9,
	2, 2, 0, 1, 2, 0, 1, 7, 1, 3,
	8, 8, 3, 3, 3, 5, 3, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 0, 1, 1,
	3, 2, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 2, 2, 2, 6, 2, 4, 4, 4,
	5, 8, 6, 3, 5, 4, 2, 4, 3, 2,
	4, 5, 6, 2, 6, 6, 3, 3, 3, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 3, 2,
	0, 1, 1, 2, 4, 1, 1, 1, 2, 4,
	4, 1, 1, 2, 3, 4, 4, 5, 3, 1,
	1, 3, 3, 1, 1, 1, 1, 0, 3, 1,
	1, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 0, 1, 1, 0, 1, 1, 0, 1, 3,
	5, 1, 1, 3, 5, 1, 2, 3, 5, 2,
	2, 6, 0, 1, 0, 3, 0, 1, 0, 2,
	2, 4, 1, 2, 2, 2, 2, 2, 0, 2,
	1, 3, 3, 1, 3, 0, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 1, 1, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 1, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 12,
	11, 1, 3, 3, 4, 3, 0, 0, 3, 4,
	3, 1, 3, 3, 2, 1, 1, 3, 1, 1,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 1, 1, 5, 6, 6, 6, 5,
	5, 5, 6, 5, 5, 6, 5, 5, 5, 5,
	6, 5, 5, 5, 4, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 4, 6, 6, 4, 8, 8, 8, 8,
	4, 6, 7, 7, 7, 9, 4, 7, 5, 4,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 0, 3, 1, 3, 3, 5, 1, 1,
	1, 1, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -360, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -91, 29,
	-53, 180, -52, 183, 182, 218, 184, 211, 64, 341,
	-66, 344, 345, -365, -216, 269, 270, 20, 37, 346,
	348, 30, 31, 232, 286, 288, 313, -5, -90, -6,
	181, 342, 213, 212, 26, 492, -361, 68, 611, -157,
	15, -68, -366, -68, -71, 9, 10, 8, 441, -68,
	-288, -214, 108, 68, 23, -209, -220, 88, 432, 188,
	-218, 282, 284, -207, -208, -217, 242, 252, 44, 199,
	198, 253, 189, 282, 189, 190, 192, 432, 188, 225,
	224, 282, 284, 189, -112, -235, -224, -225, 300, 72,
	-223, 458, 462, 465, 466, 471, 290, 81, 322, 323,
	314, 324, 209, 283, 289, 292, 315, 578, 325, 327,
	328, 452, 453, 192, 202, 596, 307, 210, 489, 253,
	606, 599, 294, 401, 341, 357, 349, 372, 490, 549,
	264, 340, 418, 297, 257, 320, 550, 407, 413, 267,
	344, 427, 233, 551, 261, 263, 262, 247, 457, 268,
	36, 214, 368, 303, 242, 552, 545, 236, 35, 27,
	235, 430, 99, 553, 331, 415, 389, 332, 231, 554,
	494, 301, 414, 364, 313, 117, 240, 279, 411, 333,
	555, 390, 394, 556, 419, 287, 278, 557, 558, 334,
	559, 191, 293, 560, 243, 421, 298, 388, 200, 491,
	48, 222, 422, 392, 398, 561, 330, 562, 563, 564,
	565, 311, 309, 310, 312, 254, 259, 53, 186, 396,
	395, 397, 260, 417, 377, 375, 566, 567, 302, 206,
	568, 569, 376, 18, 570, 571, 425, 305, 572, 573,
	574, 487, 575, 576, 416, 391, 393, 241, 116, 577,
	308, 412, 317, 493, 291, 579, 336, 221, 216, 426,
	326, 580, 581, 582, 583, 584, 285, 284, 345, 318,
	346, 265, 585, 586, 587, 588, 251, 234, 429, 420,
	52, 403, 589, 321, 337, 406, 342, 228, 7, 258,
	299, 410, 319, 266, 252, 255, 379, 223, 590, 591,
	366, 367, 343, 226, 218, 111, 428, 544, 282, 338,
	51, 229, 592, 593, 256, 230, 347, 296, 369, 189,
	133, 373, 418, 180, 408, 409, 415, -282, 416, 224,
	227, -240, 189, -202, 407, 287, 308, 462, 230, 231,
	190, 191, 32, 420, 419, 411, -235, 193, 347, -77,
	184, 219, -112, -48, 72, 271, -48, 29, 72, 72,
	36, 72, 346, 410, 410, 75, 493, 233, 21, -352,
	-333, 317, -351, -331, 181, 180, 10, 182, 322, 323,
	324, 190, 8, 30, 578, 207, 325, 326, 6, 211,
	327, 328, 225, 9, 329, -336, 74, 72, -223, 21,
	-352, -333, 317, -211, -210, 339, 398, 6, -70, 5,
	-198, 194, 343, -88, 548, -97, -237, -235, -224, 74,
	-8, -3, -90, -175, 17, 16, -74, 54, 55, -69,
	-82, 124, -84, -235, -121, 91, -127, 28, 72, -223,
	24, -126, 300, 219, -122, -149, -224, -148, -100, 133,
	-239, 122, 123, 130, 92, 176, -134, -132, -133, -135,
	-137, -138, 74, 73, 82, 75, 76, 77, 78, 83,
	84, 85, -227, -225, -222, 458, 462, 465, 466, 471,
	-146, -361, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 58, 59, 456, 188, 442, 443,
	370, 8, 444, 445, 446, 488, 209, 450, 94, 47,
	533, 431, 440, 439, 438, 436, 437, 433, 435, 434,
	452, 453, 195, 432, 128, 441, 475, 476, 477, 478,
	479, 480, 481, 482, 484, 485, 483, 459, 460, 461,
	463, 464, 467, 468, 469, 470, 472, 473, 474, 495,
	185, 181, 184, 90, 23, 25, 496, 239, 93, 355,
	384, 449, 16, 20, 203, 187, 373, 201, 132, 197,
	204, 273, 275, 180, 62, 497, 274, 408, 498, 499,
	500, 501, 363, 361, 272, 502, 10, 26, 212, 246,
	503, 359, 182, 237, 97, 98, 505, 41, 40, 306,
	276, 213, 506, 360, 507, 508, 19, 65, 205, 11,
	199, 227, 605, 509, 286, 13, 115, 14, 510, 511,
	512, 513, 194, 110, 190, 595, 60, 244, 514, 353,
	515, 516, 517, 518, 519, 354, 87, 520, 521, 107,
	522, 56, 486, 32, 232, 546, 447, 523, 524, 38,
	37, 383, 387, 382, 525, 399, 108, 17, 30, 526,
	527, 220, 386, 352, 381, 547, 528, 529, 249, 63,
	339, 362, 609, 33, 66, 217, 335, 304, 42, 88,
	15, 245, 61, 34, 454, 112, 610, 365, 196, 224,
	531, 423, 248, 532, 113, 358, 548, 207, 109, 348,
	183, 316, 270, 208, 534, 288, 535, 238, 114, 409,
	536, 537, 451, 29, 211, 269, 351, 198, 538, 250,
	281, 271, 280, 539, 540, 295, 43, 607, 594, 189,
	39, 96, 385, 350, 380, 193, 448, 225, 277, 5,
	44, 31, 404, 9, 329, 64, 67, 374, 371, 541,
	378, 608, 12, 542, 455, 492, 424, 89, 543, 405,
	-68, -68, -68, -187, 343, -194, -191, 419, 420, -192,
	-195, -189, -149, 398, 575, 576, 418, 373, 417, -227,
	-235, 300, 219, 458, 133, 459, 460, 461, 94, 370,
	442, 462, 475, 433, 435, 431, 434, 432, 28, 476,
	24, 85, 477, 456, 195, 8, 176, 463, 464, 478,
	479, 480, 58, 436, 437, 488, 465, 466, 128, 91,
	481, 482, 83, 484, 485, 533, 441, 59, 483, 188,
	469, 468, 467, 470, 444, 445, 471, 84, 438, 439,
	440, 47, 473, 472, 474, -2, -5, 6, -112, -289,
	-276, -280, -227, -224, -225, -226, 215, 204, -303, 72,
	-223, 300, 219, 50, 86, 55, 54, 201, 190, 192,
	441, -205, 195, -205, 225, 224, -219, 250, -205, -205,
	189, -218, 100, 100, -54, -112, -335, -330, -336, -204,
	195, -227, -204, -204, -204, -204, -204, -204, -204, -112,
	177, -104, -112, 72, 29, -203, 108, 12, 432, 188,
	189, 224, 225, 192, -284, 11, 110, 228, 228, 228,
	229, 228, -201, 410, 412, 226, 413, 414, 12, -85,
	108, 19, -361, -175, -175, 125, 72, 346, 193, -62,
	-3, -12, -10, -11, -8, 100, -129, 23, 29, 29,
	74, 51, 29, -43, -42, -44, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 29, -314,
	68, -271, 398, 72, -327, -328, -112, 75, 75, 66,
	308, 66, 69, 193, 69, 66, -353, 318, 68, -353,
	284, 318, 319, 252, 282, 192, -353, -353, 284, -353,
	-353, -353, -353, -353, 410, -353, -353, -353, 320, 321,
	-353, 408, 192, -353, -353, -353, -353, -353, 71, 66,
	69, 308, 66, 11, 66, -300, 133, 331, 332, 333,
	334, 330, 308, 335, 336, 337, 228, 338, -68, -7,
	-5, -361, 21, 22, 189, 423, 69, -88, -178, -361,
	-362, 70, -176, 19, 30, -130, 75, 78, -158, -161,
	-84, -235, 50, -72, 21, 22, 80, 11, -230, 90,
	88, 89, 107, -229, 23, 72, -223, -224, 74, -225,
	-226, 177, -84, -124, 110, 91, 108, 109, 93, 119,
	118, 129, 122, 123, 124, 125, 126, 127, 128, 120,
	121, 132, 100, 101, 102, 103, 104, 105, 106, -199,
	-361, -100, -361, 177, -361, 177, 178, 179, -127, -127,
	-127, -127, -127, -127, -127, -361, 177, 177, -361, -361,
	-361, -361, -361, -8, -141, -84, 492, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -152, -84, -361, -361, -364, -136, -361, -364,
	-136, -364, -136, -364, -361, -364, -136, -364, -136, -364,
	-364, -136, -364, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -361, -361, -361, -361, -361, -361, -361, -361,
	-361, -361, -198, -198, 11, -104, -105, -115, -235, 69,
	-188, -193, 421, 423, 343, -192, -192, -234, -227, 74,
	28, 100, 29, 177, -157, -68, 70, 69, -280, -242,
	-248, -250, -249, -251, -246, -247, 370, 373, 377, 375,
	371, 376, 133, 374, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 29, 214, 366, 367, 368,
	369, 390, 391, 392, 393, 394, 395, 396, 397, 349,
	372, 490, 350, 351, 352, 353, 354, 355, 357, 358,
	359, 360, 361, 362, 363, 364, -242, -242, -242, -242,
	72, 228, -224, -303, 68, -227, -112, -220, -218, 72,
	91, 72, -111, -227, -235, -118, -227, -235, 251, -339,
	-338, -330, -333, -205, -219, -330, 256, 254, 255, 69,
	193, 69, 193, 71, -104, 24, 66, -106, -112, 72,
	72, -111, -118, -332, -330, -333, -236, -235, -221, 495,
	185, 21, 181, 184, 90, 23, 25, 496, 458, 239,
	93, 355, 133, 459, 460, 461, 384, 449, 16, 20,
	203, 94, 187, 370, 373, 201, 132, 197, 204, 273,
	275, 442, 462, 475, 180, 62, 497, 433, 435, 431,
	434, 274, 432, 408, 498, 499, 500, 501, 363, 361,
	272, 28, 502, 10, 476, 26, 212, 246, 22, 503,
	126, 359, 182, 237, 97, 98, 505, 41, 40, 306,
	24, 276, 213, 85, 506, 477, 360, 507, 508, 19,
	65, 205, 11, 199, 227, 605, 509, 286, 13, 456,
	115, 14, 510, 511, 512, 513, 195, 194, 110, 190,
	595, 60, 244, 8, 514, 353, 515, 516, 517, 518,
	519, 354, 176, 87, 520, 521, 107, 522, 56, 463,
	464, 486, 45, 32, 232, 478, 479, 546, 480, 447,
	523, 524, 38, 37, 383, 387, 382, 525, 399, 58,
	108, 17, 436, 437, 30, 526, 527, 488, 465, 220,
	386, 352, 381, 547, 528, 466, 529, 128, 249, 63,
	91, 339, 481, 482, 83, 362, 609, 33, 66, 217,
	335, 304, 42, 88, 15, 245, 61, 34, 454, 112,
	610, 484, 365, 196, 224, 531, 423, 248, 532, 113,
	485, 358, 548, 207, 109, 348, 183, 533, 441, 316,
	270, 208, 534, 288, 59, 535, 238, 114, 483, 188,
	409, 536, 6, 537, 451, 29, 211, 269, 351, 198,
	538, 250, 281, 271, 280, 539, 49, 540, 295, 43,
	469, 468, 467, 470, 607, 57, 444, 445, 471, 594,
	189, 39, 96, 385, 350, 380, 193, 448, 225, 84,
	277, 5, 44, 31, 404, 9, 329, 64, 67, 438,
	439, 440, 47, 374, 371, 541, 473, 378, 472, 474,
	608, 95, 12, 542, 455, 492, 424, 89, 543, 405,
	69, -203, 74, -239, -84, -205, -205, -112, -112, -112,
	-112, -112, -203, -203, -203, -203, -200, 11, 110, 11,
	-200, -200, -84, -127, -330, 434, 124, -235, 72, 72,
	346, 72, 33, -43, -43, 74, -43, 69, 100, -43,
	70, -141, -313, 595, 69, -329, 23, 423, 424, 399,
	-355, 189, 227, 224, 66, -355, -351, 326, -332, -331,
	-330, -353, -354, -227, -353, -353, -353, 410, -353, -353,
	-353, -353, -353, -353, -353, -353, -336, -355, 286, 69,
	-355, -332, -330, 330, 330, 330, 330, 330, 330, -74,
	-8, -112, 424, 425, -97, 23, -177, -227, -228, -224,
	-225, -226, 215, -221, 458, 462, 465, 466, 471, -184,
	87, 9, 110, 69, 18, 69, -174, 25, 26, 177,
	-128, 51, 75, 78, -206, 49, -112, -84, -84, -84,
	-139, 83, 91, 84, 85, -229, 215, 124, -236, -228,
	-225, 300, 219, -221, -227, -127, -140, -146, -100, 79,
	110, 108, 109, 93, -127, -127, -127, -127, -127, -127,
	-127, -127, -127, -127, -127, -127, -127, -127, -127, -238,
	72, 74, 72, -228, -80, -83, 124, -84, -235, -228,
	-126, 83, -126, -227, -72, -228, -228, -72, -72, -72,
	-72, -72, -362, 69, -362, -8, -80, -80, -80, -362,
	-84, -84, -80, -80, -149, 74, -80, -149, 74, -80,
	-127, 447, 448, 449, -80, -80, -72, -150, -151, 95,
	-149, -80, -362, -127, -227, -227, -80, -81, -80, -80,
	-80, -362, -362, -83, -80, -83, -80, -80, -362, -362,
	-362, -362, -80, -80, -80, -80, -80, -80, -80, -80,
	-80, -80, -80, -80, -114, 87, -112, -87, -92, -94,
	-95, -116, -99, -361, -93, -96, -112, -100, 72, 486,
	-112, -104, -363, 11, 67, -363, 69, 177, -191, -194,
	69, 422, 424, 425, -188, -258, 132, 66, 86, -84,
	-228, -236, -175, -74, -291, -292, -293, -228, 74, 75,
	81, 322, 292, -276, -278, -279, -280, -294, 204, -302,
	196, 198, 199, 44, -281, 205, 190, 45, -243, -266,
	403, 404, -252, 68, -252, -252, 378, 370, 373, 371,
	-252, -252, -252, -252, -252, -257, 373, -257, -257, -257,
	-257, 371, 68, 68, -252, -252, -252, -268, 68, -268,
	365, -269, 68, -269, -269, -269, -269, -243, -243, -243,
	-243, -303, -303, -303, -84, -231, 67, 23, 192, -264,
	-263, -260, -261, -262, -259, 28, 24, -264, -49, 239,
	210, 177, 68, 177, 242, 243, -334, 69, 28, -340,
	283, -112, 219, -112, -112, -330, -330, -336, -310, 208,
	203, -112, 69, 69, -112, 74, 72, 72, -129, -285,
	11, 110, -203, -235, -235, -112, -129, -203, -78, 215,
	67, -364, -362, 72, -127, -42, -126, 70, -113, 87,
	74, -328, -237, 398, 424, -356, 124, -227, -355, -356,
	-359, 492, 193, 70, 69, -353, -356, 304, 286, -356,
	11, -301, 19, -72, -362, -56, -55, 185, 182, 183,
	186, 187, -306, 401, 181, 236, 235, 221, -99, -361,
	-362, 69, 177, -183, 34, 35, -227, 52, -130, -130,
	-161, -197, 19, 11, 47, 47, -73, 57, 83, 84,
	85, 177, -361, -140, -127, -127, -127, -78, 90, -362,
	69, -362, 177, -81, -80, -80, -80, -80, -80, -84,
	-362, -362, -362, -362, 69, 67, 23, -362, 67, -362,
	11, 11, -362, 11, 11, -362, -362, 11, -127, -127,
	-127, -362, -362, -80, -153, -151, 97, -84, -362, -362,
	-362, 69, 69, -362, -362, -362, -362, -162, 454, -162,
	-362, -362, -362, -362, -362, -162, -162, -162, -162, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -181, 112, -112, 29, 69, -107, -109, -108, -110,
	56, 60, 62, 57, 58, 59, 63, -214, -87, -98,
	47, -361, -117, 112, -119, 23, -237, 64, 194, 65,
	-361, -361, -181, 67, -87, -87, -115, -235, 124, -193,
	-196, 426, 423, 429, 72, 74, 177, -176, 69, -293,
	100, -280, 68, 72, -286, -224, 45, -281, -283, -281,
	-281, -286, 72, -286, 45, 83, 91, -255, -256, -270,
	-273, -253, 23, 605, 406, 28, 66, 401, 196, 45,
	44, 199, 81, -267, 405, 75, -257, -257, -252, -252,
	-252, 378, -252, -257, -258, 133, 29, -258, 133, -258,
	133, -258, 133, -258, 133, -257, -274, 74, -274, 75,
	-268, 75, 70, 66, -227, -171, -112, -261, -260, -262,
	373, 418, 132, 430, -50, 8, 9, 10, -227, -315,
	-316, -317, -227, 110, 244, 245, -227, -343, 316, -338,
	284, 293, 90, 16, 492, 193, 193, -112, -330, -120,
	12, 72, 72, -200, -203, -127, -333, 230, 231, -181,
	189, -329, 193, 177, 177, -356, 193, 307, -332, -227,
	11, 11, 304, 11, -332, 340, -206, 69, -215, -281,
	-312, -279, -280, -311, 197, 204, -215, 204, 201, -281,
	205, 196, 197, -212, -281, 193, 23, -215, -215, -287,
	100, -215, 32, 32, 112, -228, -228, 69, 74, 74,
	53, -112, -79, -172, 124, -228, -81, -78, 90, -127,
	-83, 124, -236, -362, -362, -362, -362, -362, -362, -241,
	133, 370, 214, 368, 361, 388, 375, 403, 366, 404,
	-238, -241, -238, -127, -127, -127, -127, -127, 11, 11,
	11, 489, -157, 99, -84, 96, -127, -127, -227, -167,
	-361, -162, -162, -162, -162, -162, -163, -162, -163, -163,
	-163, -163, -163, -163, -163, -163, -163, -163, -163, -125,
	29, 47, -361, -8, -361, -186, -190, -149, -224, -226,
	215, 300, 219, 458, 462, 465, 466, 471, -92, -94,
	-94, -92, -94, 56, 56, 56, 61, 56, 61, 56,
	-108, -237, -362, -362, -145, 238, -361, 33, -237, -119,
	190, 190, 190, -81, -127, -120, -87, -120, -120, 177,
	423, 427, 428, -292, -293, -296, -295, -227, -224, 196,
	-302, 44, -302, -286, -286, -286, -286, 68, 83, -361,
	606, 75, -127, 9, 45, 45, 45, 74, 70, -258,
	133, -258, 133, -257, -252, -258, 133, 72, 133, -258,
	133, 70, 69, 70, 69, 70, 69, -123, 553, 91,
	-112, -173, 23, 29, -287, -287, -287, 66, 70, 69,
	-242, -227, -227, -227, -346, 492, 289, -344, -342, 295,
	296, 297, 298, 299, -333, 294, -340, 291, 74, 72,
	-112, -330, -84, -129, -257, -112, -332, 124, 124, -227,
	193, -332, 304, -358, 492, -332, -332, 11, -332, 74,
	-73, -55, 68, -275, 72, -223, -286, -208, 196, 72,
	72, 72, -224, -223, -225, -226, 72, -224, -223, -225,
	-226, -227, 45, 45, 72, -112, -227, -275, 72, -84,
	-227, -227, 177, -227, -184, 69, -82, -362, -127, 177,
	-163, -163, -163, -163, -163, -362, -252, -252, -252, -269,
	-252, 354, -252, 354, -362, -362, -362, 19, 19, 19,
	19, -362, -127, -127, -127, -361, -76, 451, -84, 69,
	69, -232, 72, -185, 66, -186, -144, -147, -146, -361,
	-8, -362, -177, 6, 492, -182, -227, -120, 69, 100,
	100, 100, 100, -102, -101, 66, 67, -103, 66, -101,
	56, 56, -180, 68, 69, -146, -361, -182, -127, -119,
	-361, -361, -361, -362, 69, -157, -120, 70, 69, -252,
	-252, 45, -283, -179, -227, -127, 23, -133, 431, 440,
	439, 438, 436, 437, 433, 435, 434, 452, 453, -258,
	133, -257, 74, -257, 75, 75, 553, 68, -8, -171,
	-287, 72, 133, 72, 133, 74, -112, -318, -319, -320,
	81, 491, 91, 246, 247, 206, 248, 249, 250, -317,
	-242, -242, -242, -349, -350, -348, 292, 314, 315, 300,
	-347, -345, 309, 310, 311, 312, 90, 74, 74, 74,
	-341, 283, 90, 292, 16, 23, -203, -321, -201, -358,
	-332, -358, 286, -332, -79, -275, -159, 209, 210, -242,
	-242, -231, -283, 45, 72, -213, 193, 23, 193, -159,
	-275, 29, 182, 87, -228, -89, 11, -172, -172, 124,
	-257, 72, -127, -127, -127, -127, -362, -362, -362, -127,
	-362, 74, -127, -127, -143, 112, 27, -185, 69, -362,
	-362, 47, -362, -362, 69, -157, -190, -84, -84, -84,
	-84, -84, 68, -84, -179, 238, -362, -119, -214, -179,
	-179, -179, 74, -175, -298, -297, 67, 200, 81, -295,
	-174, -174, -286, -286, 70, 69, -362, -361, -258, 133,
	-258, 133, 70, 70, -296, -171, -173, 72, 133, 19,
	-172, -320, 74, 250, 246, 250, 250, 250, 250, 251,
	-337, 81, 290, -348, 301, 558, 285, 316, 75, 75,
	111, 30, 31, -345, 75, 75, 75, 75, -342, 16,
	492, -340, 291, 74, 74, -322, 38, -324, 39, -357,
	23, -358, -357, 304, -89, 70, 72, -243, -243, 68,
	-286, -286, 72, -227, -159, 28, 28, -361, -120, -87,
	-82, -362, -362, -362, -362, -75, 110, 492, -362, -362,
	-157, 16, 45, -147, -144, 47, -8, -361, -227, -175,
	-179, 70, -146, -117, -237, -362, -362, -362, 413, -297,
	72, -287, 74, 207, -227, -265, 608, 607, -127, 70,
	-8, 237, -173, 36, 36, 242, 243, 74, 74, 28,
	302, 176, 28, 75, 176, 457, 291, 74, 72, 292,
	-254, 194, -325, 43, -323, -272, 42, 16, -330, -357,
	-120, -296, -231, 68, -127, -304, -305, 112, -154, 13,
	-172, -362, 490, 63, 493, -168, 114, 113, -141, 9,
	-144, -8, 70, -119, -361, 75, -112, -362, -299, -298,
	-171, 238, -21, -3, -10, -11, -12, -13, -15, -51,
	-16, -17, -22, -23, -18, -57, -58, -66, -64, -65,
	-61, -60, -26, -24, -27, -19, -28, -29, -30, -34,
	-35, -25, -36, 94, 195, 272, 341, 75, 28, 75,
	28, 305, 292, 23, -180, 75, -324, 16, -326, 40,
	41, 74, 492, -154, 70, 68, -296, -362, 69, -227,
	-155, 14, 16, 53, 491, 494, -362, -169, 93, -170,
	111, 457, -131, 75, 176, -169, -186, -362, -290, -277,
	-228, 68, -265, -160, 240, 241, -171, -84, -84, 72,
	-47, -233, 275, 276, 277, -228, -37, -21, 303, 303,
	74, 38, 114, 74, 16, 16, 284, -155, -299, -296,
	70, -305, 47, -165, 455, -156, -84, -142, -86, -84,
	53, -170, 116, 117, 238, 116, 117, -126, -362, 69,
	-242, -179, -171, 72, 72, -38, -39, 95, 96, 273,
	274, 278, -242, 69, 611, 74, 74, 28, 289, 21,
	-333, -165, 70, -299, 222, -164, -166, -227, 69, 492,
	90, -227, -362, -277, -244, 487, 24, 70, -173, 99,
	97, -39, -84, -37, 19, 19, 19, 28, -228, 99,
	-21, 306, -299, 223, 69, 23, -86, 493, -170, 23,
	-237, 74, 487, -308, -309, 66, -14, -20, -13, -10,
	-11, -12, 341, -90, 94, -37, 96, 611, -48, 75,
	-8, -46, -45, 75, -48, 280, 91, 281, 72, -127,
	-333, -361, -166, -167, 494, -237, -245, 74, -309, 66,
	-308, 66, 10, 9, -171, -37, 611, -37, 99, 97,
	-40, -41, 98, -21, 69, 279, -127, 220, -367, 83,
	28, 332, -307, 208, 203, 206, 29, -307, 611, 99,
	611, 195, -37, 99, 97, -41, -84, -45, -362, -362,
	66, -127, 66, 202, 28, 83, 99, 94, 611, 195,
	-37, 96, 505, 66, 505, 99, 611, -37, 505, 195,
	99, 611, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 782, 782, 0, 782,
	884, -2, 636, 0, 0, 0, 0, -2, 755, 756,
	757, 761, 762, 777, 779, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 41, 56, 0,
	1274, 0, 780, 769, 770, 0, 0, 2120, 2, 1206,
	0, 791, 784, 0, 782, 782, 782, 66, 67, 0,
	98, 0, 0, 0, 885, 0, 0, 0, 1272, 1272,
	250, 1272, 1272, 0, 1288, 248, 0, 1269, 1284, 1285,
	1286, 0, 0, 0, 1270, 0, 1270, 1270, 1270, 1270,
	1270, 1270, 1270, 0, 701, 916, 918, 919, 920, 1297,
	1298, 2115, 2116, 2117, 2118, 2119, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 0,
	0, 0, 746, 0, 712, 713, 714, 0, 716, 0,
	0, 0, 0, 0, 726, 729, 733, 0, 1206, 1206,
	578, 579, 580, 751, 752, 740, 753, 0, 0, 55,
	0, 0, 865, 325, 327, 0, 347, 0, 350, 353,
	1303, 763, 0, 0, 1328, 1329, 0, 0, 0, 0,
	0, 2024, 193, 264, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 0, 195, 195, 195, 2032, 195, 0,
	195, 195, 195, 195, 195, 263, 253, 254, 255, 0,
	0, 0, 2024, 0, 558, 555, 556, 782, 0, 786,
	0, 1275, 758, 53, 0, 57, 1222, 886, 887, 888,
	0, 39, 0, 1212, 0, 0, 794, 792, 793, 783,
	0, 805, 835, 0, 930, 1770, 936, -2, -2, -2,
	1681, 979, 980, 981, 982, 983, 984, 985, 986, 1625,
	0, 0, 0, 0, 0, 1723, 1009, 1010, 1011, 1012,
	1013, 1014, 1179, 1180, 1181, 1182, 1183, 1184, 1185, -2,
	-2, -2, 1168, 1169, 0, -2, -2, -2, -2, -2,
	1239, 0, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1749, 1814, 1700, 1819, 1644, 0,
	1636, 1714, 1843, 1844, 0, 1757, 2097, 0, -2, 1869,
	1807, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	2106, 2107, 1707, 1655, 1767, 1808, 1646, 1667, 1686, 1735,
	1736, 1738, 1772, 1773, 1791, 1800, 1818, 1626, 1627, 1628,
	1730, 1731, 1840, 1839, 1838, 1841, 1875, 1873, 1876, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1622, 1623, 1624,
	1629, 1630, 1631, 1632, 1633, 1635, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1647, 1648, 1649, 1654, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1665, 1666, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1682, 1683, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704,
	1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727,
	1728, 1729, 1732, 1733, 1734, 1737, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1754, 1755,
	1756, 1759, 1760, 1761, 1762, 1763, 1764, 1766, 1768, 1769,
	1771, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1805,
	1806, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1820,
	1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1832, 1833, 1834, 1835, 1836, 1837, 1842, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1870, 1871, 1872,
	1874, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1274, 1274, 0, 83, 2074, 0, 1246, -2, -2, 1248,
	0, 0, 0, -2, -2, -2, -2, 1637, -2, 1168,
	0, 0, 0, 1621, 1625, 1626, 1627, 1628, 1634, 1636,
	1644, 1645, 1646, 1650, 1651, 1652, 1653, 1655, 1664, 1667,
	1681, 1684, 1686, 1700, 1707, 1714, 1723, 1730, 1731, 1735,
	1736, 1738, 1749, 1752, 1753, 1757, 1758, 1765, 1767, 1770,
	1772, 1773, 1774, 1791, 1800, 1807, 1808, 1814, 1818, 1819,
	1838, 1839, 1840, 1841, 1843, 1844, 1845, 1856, 1866, 1867,
	1868, 1869, 1873, 1875, 1876, 99, 1198, 782, 100, 0,
	391, 392, 0, 0, 0, 0, 0, 0, 603, 1291,
	1292, 2109, 2110, 2111, 2112, 2113, 2114, 0, 0, 0,
	248, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	1272, 250, 0, 0, 682, 0, 683, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 700,
	0, 702, 77, 703, 746, 705, 0, 0, 1272, 1272,
	0, 0, 0, 0, 0, 605, 606, 746, 746, 746,
	746, 743, 0, 743, 723, 743, 741, 742, 0, 728,
	0, 0, 0, 736, 737, 0, 764, 0, 0, 771,
	773, 774, 775, 776, 772, 0, 781, 0, 0, 0,
	329, 0, 0, 349, 331, 0, 334, 335, 336, 337,
	338, 339, 340, 341, 342, 343, 344, 345, 0, 352,
	0, 1301, 1304, 768, 1319, 1320, 0, 1330, 1331, 199,
	0, 199, 0, 0, 0, 0, 162, 195, 0, 164,
	195, 195, 195, 0, 195, 195, 171, 172, 195, 174,
	175, 176, 177, 178, 195, 180, 181, 182, 195, 195,
	185, 195, 195, 188, 189, 190, 191, 192, 262, 199,
	0, 0, 199, 0, 0, 540, 0, 0, 0, 0,
	545, 546, 547, 548, 0, 0, 551, 552, 791, 43,
	62, 0, 787, 788, 0, 0, 0, 54, 0, 0,
	61, 2121, 47, 0, 0, 1207, 1210, 1211, 1199, 1200,
	1203, 0, 0, 789, 795, 796, 785, 0, 806, 0,
	0, 0, 0, 836, 0, 839, 840, 841, 842, 843,
	844, 0, 934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 959, 960, 961, 962, 963, 964, 937,
	0, 951, 0, 0, 0, 0, 0, 0, 1002, 1003,
	1004, 1005, 1006, 1007, 0, 794, 0, 0, 794, 794,
	794, 794, 794, 0, 0, 977, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 794, 0, 1160, 0, 0, 1071, 1080, 0, 1072,
	1081, 1073, 1082, 1074, 0, 1075, 1083, 1076, 1084, 1077,
	1078, 1085, 1079, 0, 0, 0, 973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 916, 0,
	84, 86, 0, 0, 2074, 1249, 1250, 514, 1263, 1264,
	1265, 0, 1261, 0, 1206, 791, 620, 0, 393, 409,
	503, 421, 422, 423, 496, 425, 496, 496, 0, 496,
	496, 496, 496, 496, 511, 511, 511, 511, 511, 467,
	468, 469, 470, 471, 0, 0, 444, 496, 496, 496,
	448, 486, 487, 488, 489, 490, 491, 492, 493, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 498,
	498, 500, 500, 500, 500, 500, 409, 409, 409, 409,
	0, 0, 0, 602, 0, 1289, 0, 0, 250, -2,
	0, -2, 0, 911, 0, 0, 921, 0, 0, 110,
	280, 266, 109, 0, 244, 249, 245, 246, 247, 0,
	0, 0, 0, 257, 697, 1271, 0, 690, 75, 691,
	692, 693, 694, 695, 259, 696, 917, 1299, 1300, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602,
	1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612,
	0, 704, 747, 0, 749, 0, 0, 865, 709, 710,
	711, 607, 717, 718, 719, 725, 746, 0, 0, 0,
	865, 746, 727, 965, 730, 1088, 0, 754, 766, 765,
	0, 778, 0, 326, 328, 330, 348, 0, 0, 351,
	354, 0, 0, 0, 0, 1322, 0, 1324, 1326, 0,
	0, 200, 201, 202, 199, 0, 194, 0, 217, 265,
	0, 163, 0, 197, 165, 166, 167, 195, 169, 170,
	173, 179, 183, 184, 186, 187, 261, 0, 0, 0,
	0, 160, 0, 541, 542, 543, 544, 553, 550, 794,
	0, 0, 759, 760, 58, 0, 0, -2, 0, 1228,
	1229, 1230, 1231, 1296, -2, -2, -2, -2, -2, 37,
	0, 1213, 0, 0, 0, 0, 1202, 1204, 1205, 0,
	0, 1187, 0, 0, 797, 790, 40, 931, 932, 933,
	935, 952, 0, 954, 956, 837, 838, 807, 0, 1170,
	1171, 1172, 1173, -2, 1295, 942, 943, 967, 968, 969,
	0, 0, 0, 0, 965, 947, 0, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 1001,
	1102, 1103, 0, 1176, 0, 975, 801, 802, 0, 1177,
	999, 1186, 1000, 1008, 973, 1175, 1174, 0, 0, 0,
	0, 0, 970, 0, 1238, 0, 0, 0, 0, 1049,
	0, 0, 0, 0, 983, 1179, 0, 983, 1179, 0,
	0, 1739, 1854, 1630, 0, 0, 0, 1166, 1163, 0,
	0, 0, 1089, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 915, 0, 845, 847,
	848, 849, -2, 0, 853, 854, 924, 971, 1297, 0,
	-2, 0, 0, 73, 74, 0, 0, 0, 1247, 0,
	0, 0, 89, 90, 85, 1251, 0, -2, 1258, 1259,
	1170, 0, 1212, 794, 390, 621, 623, 626, 627, 628,
	629, 630, 631, 394, 396, 397, 398, 0, 585, 593,
	0, 0, 583, 585, 585, 0, 581, 582, 401, 506,
	504, 505, 424, 0, 511, 511, 496, 496, 496, 496,
	453, 511, 456, 459, 460, 514, 0, 514, 514, 514,
	514, 511, 0, 0, 445, 446, 447, 436, 0, 437,
	498, 439, 0, 440, 441, 442, 443, 402, 403, 404,
	405, 599, 600, 601, 0, 0, 0, 95, 0, 104,
	-2, 521, 522, 523, 0, 518, 1273, 105, 0, 282,
	283, 0, 220, 0, 251, 252, 112, 0, 0, 267,
	0, 388, 389, 0, 684, 0, 686, 256, 688, 698,
	699, 689, 0, 0, 78, 748, 706, 707, 708, 928,
	0, 0, 720, 744, 745, 743, 746, 724, 738, 0,
	0, 731, 0, 767, 866, 332, 333, 355, 81, 0,
	1302, 1321, 0, 1325, 1327, 0, 203, 205, 0, 0,
	154, 0, 0, 196, 0, 168, 0, 0, 0, 0,
	0, 549, 0, 789, 63, 637, 638, -2, 675, 1281,
	675, 675, 661, 568, 675, 0, 0, 0, 59, 0,
	1223, 0, 0, 48, 0, 1930, 51, 0, 1208, 1209,
	1201, 0, 1266, 1267, 1188, 1189, 96, 798, 953, 955,
	957, 0, 973, 944, 965, 948, 0, 945, 0, 939,
	0, 1047, 0, 0, 0, 0, 0, 0, 0, 978,
	-2, 1045, 1046, 1048, 0, 0, 0, 1052, 0, 1055,
	0, 0, 1095, 0, 0, 1096, 1060, 0, 0, 0,
	0, 0, 1066, 1198, 0, 1164, 0, 0, 1069, 1070,
	1090, 0, 0, 1091, 1092, 1093, 1094, 1034, 0, 1035,
	0, 0, 0, 0, 0, 1041, 1042, 1043, 1044, 816,
	816, 816, 816, 816, 816, 816, 816, 816, 816, 816,
	816, 0, 0, 914, 0, 0, 0, 0, 0, 0,
	889, 0, 0, 892, 0, 0, 0, 0, 0, 0,
	0, 0, 858, 0, 860, 0, 924, 0, 0, 0,
	973, 0, 928, 0, 928, 928, 80, 0, 923, 87,
	88, 0, 0, 94, 515, 516, 0, 219, 0, 624,
	0, 395, 0, 586, 0, 0, 585, 585, 585, 584,
	585, 576, 586, 577, 0, 410, 0, 412, 413, 414,
	415, 416, 0, 0, 0, 0, 0, 510, 0, 535,
	537, 0, 0, 420, 507, 0, 514, 514, 511, 451,
	452, 496, 457, 514, 461, 478, 0, 462, 479, 463,
	480, 464, 481, 465, 482, 514, 0, 494, 0, 0,
	438, 0, 617, 0, 1290, 97, 0, 524, 525, 526,
	0, 568, 568, 568, 0, 284, 285, 286, 912, 0,
	221, 222, 0, 0, 0, 0, 922, 122, 0, 281,
	0, 0, 0, 0, 0, 0, 0, 76, 260, 715,
	0, 608, 609, 865, 722, 966, 732, 734, 735, 511,
	0, 1323, 0, 0, 0, 0, 0, 0, 215, 198,
	0, 0, 0, 0, 161, 0, 797, 0, 0, 585,
	0, 662, 663, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1282, 1283, 0, 0, 0,
	569, 0, 670, 671, 0, 1226, 1225, 0, 49, 50,
	1214, 38, 47, 0, 808, 1178, 0, 946, 0, 949,
	976, 803, 0, 1015, 816, 816, 816, 816, 816, 0,
	496, 496, 1149, 496, 500, 1152, 496, 1154, 496, 1157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1161, 1068, 1167, 0, 0, 0, 809, 810,
	812, 1036, 1037, 1038, 1039, 1040, 1019, 817, 1020, 1021,
	1023, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1232,
	0, 0, 0, 1217, 0, 928, 1240, 0, 0, 0,
	0, 2109, 2110, -2, -2, -2, -2, -2, 846, 880,
	882, 0, 877, 890, 891, 893, 0, 895, 0, 897,
	898, 867, 852, 972, 855, 0, 0, 0, 924, 864,
	0, 0, 0, 0, 0, 1198, 928, 71, 72, 0,
	91, 92, 93, 622, 625, 0, 587, 496, 496, 0,
	591, 583, 592, 570, 572, 573, 575, 0, 411, 0,
	0, 419, 508, 0, 534, 536, 538, 539, 497, 449,
	474, 450, 475, 514, 458, 454, 476, 512, 513, 466,
	483, 511, 0, 511, 0, 501, 0, 604, 618, 0,
	0, 0, 95, 568, 0, 0, 0, 0, 228, 0,
	224, 0, 0, 0, 130, 0, 113, 114, 115, 117,
	118, 0, 0, 0, 111, 0, 269, 0, 272, 273,
	685, 687, 929, 746, 1313, 913, 215, 204, 206, 207,
	0, 215, 218, 155, 0, 156, 158, 0, 157, 554,
	96, 639, 0, 672, 0, 0, 1289, 583, 0, -2,
	642, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 0, 668, 0, 644, 0, 672, 0, 665,
	0, 0, 0, 52, 45, 96, 96, 1016, 950, 0,
	1018, 1022, 1017, 1025, 1030, 1050, 1146, 511, 1150, 1151,
	1153, 1155, 1156, 1158, 1054, 1051, 1053, 0, 0, 0,
	0, 1061, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 814, 813, 64, 0, 1232, 1215, 1234, 1236, 0,
	0, 0, 0, -2, 1608, 0, 871, 1198, 0, 0,
	0, 0, 0, 874, 881, 0, 0, 875, 0, 876,
	894, 896, 850, 0, 0, 856, 0, 0, -2, 863,
	0, 0, 0, 873, 0, 1206, 70, 560, 0, 1203,
	1203, 585, 585, 0, 869, 0, 0, 509, 1088, 1088,
	1088, 1088, 1088, 1088, 1088, 1088, 1088, 0, 0, 455,
	477, 514, 495, 514, 0, 0, 619, 0, 95, 97,
	0, 529, 530, 531, 532, 533, 0, 96, 229, 230,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 223,
	225, 226, 227, 148, 131, 132, 0, 0, 0, 0,
	123, 124, 0, 0, 0, 0, 0, 119, 120, 121,
	268, 0, 0, 271, 0, 0, 721, 1315, 1309, 208,
	215, 208, 0, 159, 45, 0, 641, 673, 0, 409,
	409, 0, 585, 585, 664, 0, 1279, 1280, 0, 659,
	672, 0, 0, 0, 1227, 928, 0, 0, 799, 804,
	1147, 1148, 0, 0, 0, 0, 1062, 1063, 1064, 1097,
	1067, 1162, 0, 0, 1198, 0, 0, 65, 0, 1237,
	-2, 0, 0, 82, 0, 1206, 1241, 1242, 1243, 1244,
	1245, 878, 0, 883, 0, 0, 924, 861, 0, 0,
	0, 0, 0, 69, 559, 563, 0, 568, 0, 588,
	589, 590, 571, 574, 0, 0, 406, 0, 472, 484,
	473, 485, 499, 502, 0, 102, 0, 527, 528, 0,
	97, 231, 232, 233, 234, 236, 237, 0, 0, 0,
	108, 0, 0, 133, 0, 0, 0, 0, 143, 144,
	145, 146, 147, 125, 126, 127, 128, 129, 116, 0,
	0, 270, 0, 275, 276, 1276, 1317, -2, 0, 151,
	0, 208, 153, 216, 928, 640, 674, 399, 400, 0,
	1289, 0, 643, 658, 660, 0, 667, 0, 1190, 46,
	96, 1056, 1058, 1057, 1059, 0, 0, 0, 1086, 1087,
	818, 0, 0, 1235, 1216, 0, 1220, 0, 872, 68,
	0, 868, 857, 859, 924, 925, 926, 927, 0, 564,
	565, 0, 567, 0, 870, 417, 407, 408, 0, 561,
	95, 0, 55, 238, 239, 240, 241, 149, 150, 134,
	135, 0, 137, 138, 0, 0, 0, 278, 0, 274,
	867, 0, 1309, 0, 1311, 0, 1308, 0, 209, 152,
	1190, 0, 0, 0, 666, 0, 678, 0, 1195, 0,
	800, 1065, 0, 0, 0, 0, 0, 0, 815, 0,
	1219, 0, 879, 862, 0, 566, 0, 406, 101, 562,
	103, 287, 95, 358, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 387, 0, 0, 0, 55, 0, 139, 0,
	141, 142, 277, 0, 36, 0, 1316, 0, 1314, 0,
	0, 1310, 0, 1195, 561, 0, 0, 677, 0, 0,
	828, 0, 0, 1098, 0, 1101, 811, 819, 0, 822,
	0, 0, 0, 833, 0, 820, 1233, -2, 0, 901,
	0, 0, 418, 95, 0, 0, 107, 0, 0, 1291,
	0, 0, -2, -2, -2, 1293, 0, 356, 136, 140,
	279, 1277, 1278, 1318, 0, 0, 0, 828, 645, 0,
	561, 679, 0, 44, 0, 1196, 1197, 1191, 1192, 1194,
	1099, 0, 823, 824, 825, 826, 827, 0, 0, 0,
	0, 0, 97, 288, 289, 0, 298, 0, 55, 0,
	0, 0, 312, 0, 55, 1312, 1306, 210, 211, 212,
	214, 42, 561, 669, 0, 829, 830, 0, 0, 0,
	0, 834, 0, 902, 903, 0, 0, 594, 55, 0,
	55, 299, 0, 0, 0, 0, 0, 0, 1294, 242,
	357, 0, 646, 0, 0, 0, 1193, 0, 821, 0,
	900, 906, 0, 595, 596, 0, 95, 290, 291, 292,
	293, 294, 55, 56, 296, 0, 55, 55, 308, 309,
	310, 55, 317, 319, 320, 321, 0, 323, 324, 313,
	213, 0, 831, 832, 1100, 899, 907, 905, 597, 0,
	598, 0, 0, 0, 106, 0, 55, 0, 0, 55,
	0, 305, 0, 311, 0, 322, 0, 1759, 904, 0,
	0, 0, 610, 612, 613, 0, 0, 611, 55, 0,
	-2, 301, 0, 0, 55, 306, 0, 318, 680, 681,
	0, 0, 0, 614, 615, 616, 295, 297, 55, 303,
	0, 55, 908, 0, 910, 0, 55, 0, 909, 302,
	0, -2, 304,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:541
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:545
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:587
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:593
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:599
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:610
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:616
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:637
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:644
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:650
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:658
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:671
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:675
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:683
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:689
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:703
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:708
		{
			yyVAL.with = nil
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:712
		{
			yyVAL.with = yyDollar[1].with
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:722
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:728
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:734
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:748
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:756
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:762
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:775
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
			yyVAL.str = InsertStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.str = ReplaceStr
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:797
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:803
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:807
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:811
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:815
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:820
		{
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:829
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:835
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:839
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:849
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:854
		{
			yyVAL.partitions = nil
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:858
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:868
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:875
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:898
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:902
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:908
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:912
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:916
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:925
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:930
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:935
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:941
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:955
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:960
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:964
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 103:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:970
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:976
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:984
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:992
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 107:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:996
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1000
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1019
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1028
		{
			yyVAL.accountNames = nil
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1037
		{
			yyVAL.tlsOptionItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1055
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1061
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1065
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1082
		{
			yyVAL.accountLimitItems = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1119
		{
			yyVAL.passLockItems = nil
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1123
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1133
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1147
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1163
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1167
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.str = ""
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1211
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 152:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1216
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1221
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1225
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1229
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1235
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1240
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1244
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1248
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1252
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1256
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1266
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1298
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1338
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1342
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1374
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1378
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1382
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1388
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1397
		{
			yyVAL.strs = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1401
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1416
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1428
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1446
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1455
		{
			yyVAL.grantAssumption = nil
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1459
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1463
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1467
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1471
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1475
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1479
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1484
		{
			yyVAL.boolean = false
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1488
		{
			yyVAL.boolean = true
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1493
		{
			yyVAL.boolean = false
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1497
		{
			yyVAL.boolean = true
		}
	case 219:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1504
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1516
		{
			yyVAL.procedureParams = nil
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1536
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1544
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1548
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.characteristics = nil
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1573
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1577
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1605
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1615
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1621
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1625
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = ""
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1689
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1739
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1753
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1757
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1761
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1767
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1775
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1779
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1783
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1787
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1793
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1797
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1801
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1811
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = BeforeStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = AfterStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = InsertStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = UpdateStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = DeleteStr
		}
	case 287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1840
		{
			yyVAL.triggerOrder = nil
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1844
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1864
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1870
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1874
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1880
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1890
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 301:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1896
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 302:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1901
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 303:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1906
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 304:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1912
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1924
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1930
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 311:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1956
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2017
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2025
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2035
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2045
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2051
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.statement = &Resignal{}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2115
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2119
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2127
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2133
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2138
		{
			yyVAL.exprs = nil
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2146
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2156
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2197
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2211
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2227
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2244
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2250
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2254
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2263
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2273
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2281
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2332
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2336
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2340
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2345
		{
			yyVAL.columnType = ColumnType{}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2349
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2376
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2412
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2421
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2505
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2511
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2686
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2772
		{
			yyVAL.sqlVal = nil
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2776
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2781
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2785
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2793
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2797
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2803
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2811
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2824
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2834
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2840
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2851
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2855
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2877
		{
			yyVAL.boolean = false
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.boolean = true
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2886
		{
			yyVAL.charsetCollates = nil
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2922
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2926
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2930
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2934
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2940
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2944
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2950
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2956
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2960
		{
			yyVAL.colKeyOpt = colKey
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2964
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2990
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2994
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2998
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3002
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3014
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3018
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3026
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3030
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3039
		{
			yyVAL.str = ""
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3041
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3047
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3050
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.str = yyDollar[1].str
		}
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3056
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3060
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3065
		{
			yyVAL.indexOptions = nil
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3075
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3079
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3085
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3089
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3094
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3100
		{
			yyVAL.str = ""
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3116
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3120
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3124
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3128
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3137
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3141
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3145
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3174
		{
			yyVAL.str = ""
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			yyVAL.str = yyDollar[1].str
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = ""
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3197
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3207
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3213
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3217
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 594:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3227
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 595:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3231
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 596:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3235
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 597:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3239
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 598:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3243
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3249
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3254
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3258
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3262
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3272
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3278
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3287
		{
			yyVAL.str = ""
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3291
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3295
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3301
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3307
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3321
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3329
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3334
		{
			yyVAL.boolean = true
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.boolean = true
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3342
		{
			yyVAL.boolean = false
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3347
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3351
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.str = yyDollar[1].str
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3377
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3390
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3394
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3404
		{
			yyVAL.str = ""
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = string("")
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3426
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3449
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3456
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3467
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 645:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3476
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 646:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3480
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3489
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3494
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3509
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3529
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3538
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3542
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3549
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3555
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3559
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3565
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3571
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3576
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 666:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3580
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3584
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3588
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 669:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3594
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3600
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3609
		{
			yyVAL.columnOrder = nil
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3613
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3617
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3622
		{
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
		}
	case 677:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3628
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3638
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 680:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3644
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 681:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3648
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3654
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3658
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3668
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3676
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3680
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3686
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3694
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3698
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3706
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3714
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3722
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3730
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3738
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3746
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3755
		{

		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3769
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3785
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3790
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3794
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3798
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3802
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3806
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3811
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3815
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3819
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3823
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3831
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3835
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3839
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3843
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3847
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3851
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3855
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 721:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3859
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3864
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3869
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3873
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3877
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3881
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3885
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3891
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3899
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3903
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3908
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3912
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3917
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 734:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3921
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3925
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3929
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3939
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3945
		{
			yyVAL.boolean = false
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3949
		{
			yyVAL.boolean = true
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3955
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3979
		{
			yyVAL.showFilter = nil
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3983
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3987
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3991
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3997
		{
			yyVAL.str = ""
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4001
		{
			yyVAL.str = SessionStr
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.str = GlobalStr
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4015
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.statement = &Begin{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.statement = &Begin{}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4039
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4043
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.statement = &Commit{}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.statement = &Rollback{}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4067
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4071
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4075
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4079
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4085
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4095
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4105
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4117
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4128
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4134
		{
			setAllowComments(yylex, true)
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4138
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4144
		{
			yyVAL.bytes2 = nil
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4148
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.str = UnionStr
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.str = UnionAllStr
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4162
		{
			yyVAL.str = UnionDistinctStr
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4167
		{
			yyVAL.byt = 0
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.byt = 1
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.str = ""
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.str = SQLCacheStr
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4193
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = DistinctStr
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = ""
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = StraightJoinHint
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4212
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4220
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4243
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4257
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4261
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4271
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4277
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4282
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4290
		{
			yyVAL.exprs = nil
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4294
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4299
		{
			yyVAL.over = nil
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.over = yyDollar[1].over
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4308
		{
			yyVAL.frame = nil
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4312
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4316
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4323
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4346
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4361
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4365
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4380
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4388
		{
			yyVAL.window = nil
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.window = yyDollar[2].window
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4406
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4424
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4432
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4436
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4458
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4486
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4502
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4510
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4520
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4526
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4531
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4546
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4550
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4554
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4558
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4569
		{
			yyVAL.expr = nil
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4578
		{
			yyVAL.columns = nil
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4582
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4598
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4602
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4608
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4622
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4626
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4630
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4642
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4646
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4648
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4654
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4657
		{
			yyVAL.empty = struct{}{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.empty = struct{}{}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.str = JoinStr
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4678
		{
			yyVAL.str = JoinStr
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4682
		{
			yyVAL.str = JoinStr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4688
		{
			yyVAL.str = StraightJoinStr
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = LeftJoinStr
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = LeftJoinStr
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = RightJoinStr
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = RightJoinStr
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = NaturalJoinStr
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4716
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 899:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4726
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 900:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4730
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4736
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4741
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4749
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4761
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4771
		{

		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4789
		{

		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{

		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4797
		{

		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{

		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4811
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4817
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4823
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4845
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4849
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4859
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4865
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4870
		{
			yyVAL.indexHints = nil
		}
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4874
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4878
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 927:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4882
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4887
		{
			yyVAL.expr = nil
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4891
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4913
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4917
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4921
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4925
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4931
		{
			yyVAL.str = ""
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4935
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 946:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 950:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4993
		{
			yyVAL.str = IsNullStr
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4997
		{
			yyVAL.str = IsNotNullStr
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5001
		{
			yyVAL.str = IsTrueStr
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5005
		{
			yyVAL.str = IsNotTrueStr
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5009
		{
			yyVAL.str = IsFalseStr
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5013
		{
			yyVAL.str = IsNotFalseStr
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = EqualStr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = LessThanStr
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = GreaterThanStr
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.str = LessEqualStr
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.str = GreaterEqualStr
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5039
		{
			yyVAL.str = NotEqualStr
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5043
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5048
		{
			yyVAL.expr = nil
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5052
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5058
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5066
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5072
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5078
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5082
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5088
		{
			yyVAL.selectExprs = nil
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5095
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5099
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5105
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5109
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5131
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5135
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5139
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5147
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5151
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5155
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5159
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5163
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5167
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5179
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5183
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5187
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5195
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5199
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5203
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5215
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5223
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5237
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5241
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5245
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5265
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5269
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5279
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5283
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5287
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5291
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5295
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5299
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5303
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5307
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5311
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5315
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5319
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5323
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5327
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5331
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5335
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5339
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5343
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5352
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5356
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5360
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5372
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5376
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5380
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5384
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5388
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5392
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5403
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5407
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5411
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5415
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5419
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5423
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5427
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5431
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5435
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1054:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5439
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5443
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1056:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5447
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1057:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5451
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1058:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5455
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5459
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5463
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5467
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1062:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5471
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5475
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1064:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5479
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1065:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5483
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5487
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1067:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5491
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5495
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5499
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5503
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5513
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5517
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5521
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5526
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5531
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5536
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5542
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5547
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5551
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5556
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5560
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5564
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5569
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5574
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5579
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5583
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1087:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5587
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5598
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5612
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5624
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5628
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5634
		{
			yyVAL.str = ""
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5638
		{
			yyVAL.str = BooleanModeStr
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1100:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5646
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5660
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5666
		{
			yyVAL.str = Armscii8Str
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.str = AsciiStr
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.str = Big5Str
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.str = UBinaryStr
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			yyVAL.str = Cp1250Str
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = Cp1251Str
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.str = Cp1256Str
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.str = Cp1257Str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5698
		{
			yyVAL.str = Cp850Str
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5702
		{
			yyVAL.str = Cp852Str
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5706
		{
			yyVAL.str = Cp866Str
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5710
		{
			yyVAL.str = Cp932Str
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = Dec8Str
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = EucjpmsStr
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = EuckrStr
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = Gb18030Str
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5730
		{
			yyVAL.str = Gb2312Str
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.str = GbkStr
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5738
		{
			yyVAL.str = Geostd8Str
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5742
		{
			yyVAL.str = GreekStr
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = HebrewStr
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = Hp8Str
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = Keybcs2Str
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5758
		{
			yyVAL.str = Koi8rStr
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5762
		{
			yyVAL.str = Koi8uStr
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5766
		{
			yyVAL.str = Latin1Str
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5770
		{
			yyVAL.str = Latin2Str
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5774
		{
			yyVAL.str = Latin5Str
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5778
		{
			yyVAL.str = Latin7Str
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = MacceStr
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5786
		{
			yyVAL.str = MacromanStr
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5790
		{
			yyVAL.str = SjisStr
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5794
		{
			yyVAL.str = Swe7Str
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5798
		{
			yyVAL.str = Tis620Str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5802
		{
			yyVAL.str = Ucs2Str
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5806
		{
			yyVAL.str = UjisStr
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5810
		{
			yyVAL.str = Utf16Str
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			yyVAL.str = Utf16leStr
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5818
		{
			yyVAL.str = Utf32Str
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5822
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5826
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5830
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5836
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5840
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5844
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5848
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5852
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5856
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5862
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5866
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5870
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5874
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5878
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5882
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5886
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5891
		{
			yyVAL.expr = nil
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5895
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5900
		{
			yyVAL.str = string("")
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5904
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5910
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5914
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5920
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5925
		{
			yyVAL.expr = nil
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5929
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5935
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5939
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5943
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5947
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5951
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5955
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5959
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5963
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5967
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5971
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5975
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5981
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5985
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6001
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6009
		{
			yyVAL.expr = &NullVal{}
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6015
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6019
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6023
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6028
		{
			yyVAL.exprs = nil
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6032
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6038
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6042
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6048
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6053
		{
			yyVAL.expr = nil
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6057
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6063
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6068
		{
			yyVAL.orderBy = nil
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6072
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6078
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6082
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6088
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6093
		{
			yyVAL.str = AscScr
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6097
		{
			yyVAL.str = AscScr
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6101
		{
			yyVAL.str = DescScr
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6106
		{
			yyVAL.limit = nil
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6110
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6114
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6118
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6124
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6128
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6133
		{
			yyVAL.str = ""
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6137
		{
			yyVAL.str = ForUpdateStr
		}
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6141
		{
			yyVAL.str = ShareModeStr
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6154
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6158
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6162
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6166
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6171
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6175
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6179
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6185
		{
			yyVAL.columns = nil
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6189
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6195
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6199
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6203
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6207
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6215
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6219
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6223
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6228
		{
			yyVAL.assignExprs = nil
		}
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6232
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6242
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6248
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6252
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6258
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6264
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6274
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6278
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6284
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6287
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6291
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6295
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6301
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6305
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6311
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6322
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6335
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6348
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6354
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6358
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6364
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6368
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6372
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6378
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6382
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6386
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6393
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6400
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6404
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6408
		{
			yyVAL.expr = &Default{}
		}
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6417
		{
			yyVAL.byt = 0
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6419
		{
			yyVAL.byt = 1
		}
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6422
		{
			yyVAL.byt = 0
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6424
		{
			yyVAL.byt = 1
		}
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6427
		{
			yyVAL.byt = 0
		}
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6429
		{
			yyVAL.byt = 1
		}
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6432
		{
			yyVAL.str = ""
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6434
		{
			yyVAL.str = IgnoreStr
		}
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6437
		{
			yyVAL.sqlVal = nil
		}
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6439
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6441
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6445
		{
			yyVAL.empty = struct{}{}
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6447
		{
			yyVAL.empty = struct{}{}
		}
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6450
		{
			yyVAL.empty = struct{}{}
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6452
		{
			yyVAL.empty = struct{}{}
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6454
		{
			yyVAL.empty = struct{}{}
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6458
		{
			yyVAL.str = UniqueStr
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6460
		{
			yyVAL.str = FulltextStr
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6462
		{
			yyVAL.str = SpatialStr
		}
	case 1287:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6465
		{
			yyVAL.str = ""
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6470
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6472
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6476
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6480
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6486
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6490
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6497
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6503
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6507
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6514
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6519
		{
			yyVAL.str = string("")
		}
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6521
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6524
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6526
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6529
		{
			yyVAL.EnclosedBy = nil
		}
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6533
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6538
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6542
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6547
		{
			yyVAL.sqlVal = nil
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6551
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6556
		{
			yyVAL.sqlVal = nil
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6560
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6565
		{
			yyVAL.Fields = nil
		}
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6569
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6574
		{
			yyVAL.Lines = nil
		}
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6578
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6583
		{
			yyVAL.sqlVal = nil
		}
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6587
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6593
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6599
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6603
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6609
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6613
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6619
		{
			yyVAL.lockType = LockRead
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6623
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6627
		{
			yyVAL.lockType = LockWrite
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6631
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6637
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6643
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6647
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6651
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7479
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7488
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
