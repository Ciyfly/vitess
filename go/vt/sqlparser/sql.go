// Code generated by goyacc -v y.output -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const ACCESSIBLE = 57817
const ASENSITIVE = 57818
const CUBE = 57819
const DAY_HOUR = 57820
const DAY_MICROSECOND = 57821
const DAY_MINUTE = 57822
const DAY_SECOND = 57823
const DELAYED = 57824
const DISTINCTROW = 57825
const DUAL = 57826
const EMPTY = 57827
const FETCH = 57828
const FLOAT4 = 57829
const FLOAT8 = 57830
const GET = 57831
const HIGH_PRIORITY = 57832
const HOUR_MICROSECOND = 57833
const HOUR_MINUTE = 57834
const HOUR_SECOND = 57835
const INSENSITIVE = 57836
const INT1 = 57837
const INT2 = 57838
const INT3 = 57839
const INT4 = 57840
const INT8 = 57841
const IO_AFTER_GTIDS = 57842
const IO_BEFORE_GTIDS = 57843
const ITERATE = 57844
const LEAVE = 57845
const LINEAR = 57846
const LOOP = 57847
const MASTER_BIND = 57848
const MASTER_SSL_VERIFY_SERVER_CERT = 57849
const MIDDLEINT = 57850
const MINUTE_MICROSECOND = 57851
const MINUTE_SECOND = 57852
const PURGE = 57853
const READ_WRITE = 57854
const REPEAT = 57855
const RETURN = 57856
const RLIKE = 57857
const SECOND_MICROSECOND = 57858
const SENSITIVE = 57859
const SPECIFIC = 57860
const SQL_BIG_RESULT = 57861
const SQL_SMALL_RESULT = 57862
const VARCHARACTER = 57863
const WHILE = 57864
const YEAR_MONTH = 57865
const UNUSED = 57866
const DESCRIPTION = 57867
const JSON_TABLE = 57868
const LATERAL = 57869
const MEMBER = 57870
const RECURSIVE = 57871
const BUCKETS = 57872
const CLONE = 57873
const COMPONENT = 57874
const DEFINITION = 57875
const ENFORCED = 57876
const EXCLUDE = 57877
const GEOMCOLLECTION = 57878
const GET_MASTER_PUBLIC_KEY = 57879
const HISTOGRAM = 57880
const HISTORY = 57881
const INACTIVE = 57882
const INVISIBLE = 57883
const LOCKED = 57884
const MASTER_COMPRESSION_ALGORITHMS = 57885
const MASTER_PUBLIC_KEY_PATH = 57886
const MASTER_TLS_CIPHERSUITES = 57887
const MASTER_ZSTD_COMPRESSION_LEVEL = 57888
const NESTED = 57889
const NETWORK_NAMESPACE = 57890
const NOWAIT = 57891
const NULLS = 57892
const OJ = 57893
const OLD = 57894
const ORDINALITY = 57895
const ORGANIZATION = 57896
const OTHERS = 57897
const PATH = 57898
const PERSIST = 57899
const PERSIST_ONLY = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_LOAD = 57911
const SECONDARY_UNLOAD = 57912
const SKIP = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const VCPU = 57916
const VISIBLE = 57917
const SYSTEM = 57918
const INFILE = 57919
const ACTIVE = 57920
const AGGREGATE = 57921
const ANY = 57922
const ARRAY = 57923
const ASCII = 57924
const AT = 57925
const AUTOEXTEND_SIZE = 57926
const ENDS = 57927
const EVENTS = 57928
const GENERATED = 57929
const ALWAYS = 57930
const STORED = 57931
const VIRTUAL = 57932
const NVAR = 57933
const PASSWORD_LOCK = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	611, 35,
	-2, 55,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 60,
	-2, 1181,
	-1, 41,
	189, 1261,
	190, 1280,
	-2, 247,
	-1, 47,
	228, 748,
	229, 748,
	-2, 737,
	-1, 477,
	177, 1657,
	-2, 928,
	-1, 478,
	177, 1290,
	-2, 1284,
	-1, 479,
	177, 1291,
	-2, 1285,
	-1, 509,
	177, 1767,
	-2, 1169,
	-1, 510,
	177, 1849,
	-2, 930,
	-1, 511,
	177, 1677,
	-2, 931,
	-1, 515,
	177, 1614,
	-2, 2102,
	-1, 516,
	177, 1638,
	-2, 2103,
	-1, 517,
	177, 1751,
	-2, 2104,
	-1, 518,
	177, 1758,
	-2, 2105,
	-1, 519,
	177, 1838,
	-2, 2106,
	-1, 575,
	177, 1627,
	-2, 1145,
	-1, 578,
	177, 1645,
	-2, 1074,
	-1, 579,
	177, 1861,
	-2, 1074,
	-1, 580,
	177, 1860,
	-2, 1074,
	-1, 581,
	177, 1859,
	-2, 1074,
	-1, 582,
	177, 1745,
	-2, 1074,
	-1, 583,
	177, 1746,
	-2, 1074,
	-1, 584,
	177, 1643,
	-2, 1074,
	-1, 585,
	177, 1644,
	-2, 1074,
	-1, 586,
	177, 1646,
	-2, 1074,
	-1, 837,
	100, 1949,
	177, 1949,
	-2, 1245,
	-1, 838,
	100, 2044,
	177, 2044,
	-2, 1246,
	-1, 843,
	100, 1969,
	177, 1969,
	-2, 1247,
	-1, 844,
	100, 2007,
	177, 2007,
	-2, 1248,
	-1, 845,
	100, 2008,
	177, 2008,
	-2, 1249,
	-1, 846,
	100, 1897,
	177, 1897,
	-2, 1253,
	-1, 848,
	100, 1988,
	177, 1988,
	-2, 1255,
	-1, 1366,
	1, 523,
	611, 523,
	-2, 521,
	-1, 1368,
	1, 523,
	611, 523,
	-2, 521,
	-1, 1783,
	177, 1288,
	-2, 1207,
	-1, 1795,
	177, 1334,
	-2, 2102,
	-1, 1796,
	177, 1358,
	-2, 2103,
	-1, 1797,
	177, 1474,
	-2, 2104,
	-1, 1798,
	177, 1481,
	-2, 2105,
	-1, 1799,
	177, 1564,
	-2, 2106,
	-1, 1834,
	177, 1293,
	-2, 1289,
	-1, 1947,
	1, 854,
	5, 854,
	12, 854,
	13, 854,
	14, 854,
	15, 854,
	17, 854,
	19, 854,
	29, 854,
	30, 854,
	56, 854,
	57, 854,
	58, 854,
	59, 854,
	60, 854,
	62, 854,
	63, 854,
	66, 854,
	67, 854,
	69, 854,
	70, 854,
	87, 854,
	455, 854,
	611, 854,
	-2, 886,
	-1, 1953,
	67, 77,
	69, 77,
	-2, 81,
	-1, 1970,
	177, 1771,
	-2, 1250,
	-1, 2058,
	1, 524,
	611, 524,
	-2, 521,
	-1, 2144,
	44, 636,
	196, 638,
	198, 636,
	199, 636,
	-2, 673,
	-1, 2197,
	5, 61,
	-2, 960,
	-1, 2546,
	177, 1614,
	-2, 2102,
	-1, 2547,
	177, 1638,
	-2, 2103,
	-1, 2548,
	177, 1751,
	-2, 2104,
	-1, 2549,
	177, 1758,
	-2, 2105,
	-1, 2550,
	177, 1838,
	-2, 2106,
	-1, 2690,
	196, 639,
	-2, 637,
	-1, 2757,
	177, 1538,
	-2, 780,
	-1, 2787,
	1, 914,
	5, 914,
	12, 914,
	13, 914,
	14, 914,
	15, 914,
	17, 914,
	19, 914,
	29, 914,
	30, 914,
	56, 914,
	57, 914,
	58, 914,
	59, 914,
	60, 914,
	62, 914,
	63, 914,
	66, 914,
	67, 914,
	69, 914,
	70, 914,
	87, 914,
	455, 914,
	611, 914,
	-2, 886,
	-1, 2927,
	5, 61,
	-2, 1201,
	-1, 3018,
	41, 1300,
	-2, 1298,
	-1, 3214,
	5, 61,
	-2, 1204,
	-1, 3226,
	278, 313,
	-2, 1356,
	-1, 3227,
	278, 314,
	-2, 1397,
	-1, 3228,
	278, 315,
	-2, 1576,
	-1, 3376,
	95, 299,
	97, 299,
	99, 299,
	-2, 55,
	-1, 3400,
	97, 306,
	98, 306,
	99, 306,
	-2, 55,
}

const yyPrivate = 57344

const yyLast = 42000

var yyAct = [...]int{
	521, 76, 3335, 2367, 3361, 3368, 952, 3231, 3287, 3316,
	3230, 3317, 3206, 3252, 410, 3247, 2509, 3337, 3267, 3197,
	3143, 7, 3142, 6, 3141, 5, 481, 2956, 3116, 3114,
	68, 3074, 3135, 2535, 2587, 3018, 2633, 479, 3144, 8,
	2781, 520, 3204, 2401, 1199, 2464, 1401, 2277, 2053, 2275,
	2001, 1198, 2883, 2751, 2077, 3020, 2801, 2450, 470, 2650,
	2859, 2750, 2853, 79, 2310, 2837, 456, 2271, 2588, 2747,
	1807, 435, 435, 393, 396, 1980, 3136, 76, 2536, 1218,
	441, 463, 2684, 130, 1992, 1400, 130, 986, 2383, 2463,
	2759, 91, 130, 1782, 1979, 498, 2034, 2773, 928, 1907,
	1219, 2143, 438, 438, 485, 2306, 104, 462, 969, 3140,
	3, 2173, 1978, 130, 1800, 2674, 1010, 2261, 1944, 2106,
	2254, 1943, 1860, 2517, 2429, 1403, 2480, 1912, 460, 1865,
	130, 930, 1732, 916, 1377, 2061, 1291, 1988, 1703, 2018,
	1815, 2060, 2311, 1794, 2059, 2030, 2358, 839, 1115, 1903,
	130, 438, 1273, 930, 1269, 1122, 1947, 1039, 2057, 2123,
	951, 130, 1837, 1118, 915, 1018, 835, 466, 1126, 1272,
	1955, 1136, 455, 836, 1737, 413, 412, 490, 935, 1017,
	1372, 940, 1369, 100, 965, 96, 461, 81, 450, 3400,
	3396, 3391, 3376, 3374, 842, 3356, 3330, 3275, 78, 3076,
	3075, 2602, 1730, 2824, 2997, 3347, 2631, 3202, 405, 39,
	428, 3314, 422, 433, 416, 3122, 2091, 2091, 3290, 3189,
	2995, 3010, 2647, 3201, 3121, 83, 2501, 89, 3094, 3248,
	2395, 2231, 453, 2838, 423, 2998, 2741, 934, 2374, 2122,
	2324, 3046, 2582, 2840, 1733, 2327, 3210, 1108, 3210, 1158,
	1157, 1167, 1168, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1159, 2332, 2331, 1169, 36, 36, 3205, 36, 67, 36,
	2583, 2584, 830, 831, 832, 1965, 1966, 1736, 937, 1964,
	942, 943, 3207, 2328, 3207, 2294, 1753, 2530, 2293, 945,
	1075, 2295, 1778, 1779, 1274, 1067, 1275, 404, 2334, 989,
	2317, 1734, 1735, 990, 991, 2531, 3055, 403, 2318, 2005,
	2273, 2806, 1913, 2812, 2814, 2813, 2810, 2811, 2809, 2808,
	2807, 87, 85, 86, 445, 2336, 77, 77, 1968, 77,
	2121, 77, 2815, 2816, 2003, 2004, 1867, 1036, 2006, 2908,
	2006, 2010, 2012, 2024, 2011, 2019, 2019, 3211, 2728, 3211,
	2031, 2726, 1716, 2690, 402, 452, 2426, 387, 2843, 1774,
	911, 1773, 1000, 1772, 1771, 1770, 407, 1769, 1317, 2305,
	1071, 1072, 1051, 2854, 2390, 2418, 3307, 1082, 996, 1357,
	1083, 2857, 3023, 446, 415, 414, 417, 2673, 973, 974,
	76, 76, 977, 2423, 421, 2855, 2856, 130, 2841, 2842,
	2844, 2845, 2846, 2860, 2861, 2862, 2863, 2134, 3274, 3179,
	1005, 425, 1007, 2330, 1006, 429, 2333, 3233, 2657, 3232,
	472, 462, 2394, 2879, 975, 976, 3098, 2871, 1049, 432,
	2992, 2135, 1764, 3240, 2151, 2145, 2146, 488, 2144, 2147,
	2148, 130, 1008, 2392, 2648, 2078, 2869, 3365, 3272, 1104,
	2651, 2652, 2653, 2654, 2655, 3096, 3014, 1112, 2660, 394,
	997, 998, 1051, 3177, 2651, 2652, 2653, 2654, 2655, 3270,
	3271, 2990, 1304, 3332, 2154, 1375, 2996, 2989, 1178, 2372,
	106, 1180, 931, 987, 1181, 988, 990, 991, 2153, 2152,
	2988, 111, 130, 2987, 2986, 397, 2984, 2985, 931, 1004,
	461, 1384, 1385, 1383, 941, 3088, 1074, 106, 931, 1358,
	1139, 388, 3080, 1191, 3218, 3219, 1193, 1194, 1195, 1196,
	1197, 3325, 1202, 3258, 2373, 1358, 418, 419, 420, 426,
	1743, 430, 431, 434, 112, 1358, 2375, 3138, 398, 2947,
	3084, 3085, 2072, 2073, 2568, 2409, 2410, 985, 2481, 982,
	939, 938, 462, 1318, 3310, 983, 984, 981, 3285, 3386,
	1113, 2884, 2885, 3072, 931, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 941, 1216, 1217, 1220,
	1220, 1220, 1226, 1220, 1220, 1226, 1220, 1226, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 2068, 2329, 1084,
	1736, 3047, 1050, 2326, 406, 2393, 1717, 113, 3208, 2483,
	3208, 461, 972, 108, 3372, 1101, 1001, 2675, 2128, 2993,
	2019, 2839, 2435, 2689, 1734, 1735, 2067, 2033, 2343, 3120,
	2009, 1051, 931, 3090, 2150, 3401, 1998, 3398, 395, 1221,
	1223, 1225, 1227, 1229, 1231, 1232, 1234, 2630, 2957, 395,
	75, 1687, 3095, 3013, 3392, 2659, 931, 97, 1061, 927,
	1222, 1224, 2959, 1228, 1230, 108, 1233, 1110, 1331, 1334,
	1335, 1336, 1337, 1338, 1339, 3011, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 2396, 1319, 1320, 1321, 1322, 1298,
	1302, 1332, 1299, 1305, 1301, 1303, 1300, 1103, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 395, 3341, 131,
	3178, 3336, 3377, 132, 936, 390, 133, 134, 75, 75,
	476, 75, 135, 75, 88, 131, 3100, 3339, 954, 132,
	1738, 2591, 133, 134, 2894, 131, 931, 451, 135, 132,
	1998, 2895, 133, 134, 2417, 1058, 2485, 99, 135, 3089,
	391, 2489, 424, 2484, 1047, 2482, 2414, 110, 109, 2398,
	2487, 2397, 118, 114, 115, 1740, 116, 2000, 1739, 2129,
	1389, 2958, 1123, 2486, 1387, 2088, 1002, 2056, 3370, 2000,
	2087, 3371, 1150, 3369, 2280, 2282, 933, 2000, 2488, 2490,
	2575, 2574, 2325, 2573, 932, 2412, 1107, 1333, 120, 119,
	2206, 106, 944, 359, 2447, 1056, 2314, 2898, 2203, 110,
	109, 107, 111, 3093, 1052, 1059, 1060, 1062, 1063, 1064,
	1065, 1066, 2714, 1068, 1069, 1070, 2000, 1073, 1200, 1076,
	1077, 1078, 1079, 1080, 2707, 1057, 2581, 1053, 1089, 2416,
	130, 101, 2415, 102, 1182, 1183, 2298, 2189, 2178, 930,
	2159, 2071, 2069, 1960, 1810, 1285, 121, 1192, 122, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1054, 1055, 1149, 964, 2978, 1969, 2972, 1046, 1969,
	2970, 2831, 1215, 2829, 1969, 2818, 1969, 2622, 1179, 1969,
	2618, 1158, 1157, 1167, 1168, 1160, 1161, 1162, 1163, 1164,
	1165, 1166, 1159, 1169, 2893, 1169, 2516, 395, 1969, 2614,
	842, 1969, 1999, 999, 2281, 842, 3338, 3340, 2442, 2435,
	435, 2000, 1159, 2439, 1999, 1169, 2438, 2441, 1379, 3115,
	2290, 2619, 1999, 1099, 1969, 2612, 2979, 1969, 2356, 435,
	930, 130, 2832, 2669, 2830, 1286, 1713, 1402, 1969, 2354,
	438, 438, 2922, 1277, 438, 1969, 2352, 2455, 1278, 1378,
	2899, 130, 2255, 1382, 130, 1969, 2350, 1182, 1183, 438,
	438, 1999, 130, 1704, 2446, 1182, 1183, 3235, 2443, 1969,
	2347, 3000, 130, 130, 130, 130, 130, 1267, 2107, 1264,
	1265, 98, 2620, 3259, 3260, 1803, 1360, 1162, 1163, 1164,
	1165, 1166, 1159, 438, 2451, 1169, 117, 130, 3256, 3257,
	3125, 3124, 1711, 1095, 2098, 979, 1135, 3001, 2771, 1290,
	2770, 1808, 1809, 2769, 435, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 94, 1094, 1090, 1091, 1092, 1093,
	1096, 1097, 1098, 1100, 2768, 971, 2767, 1688, 992, 1728,
	2766, 2765, 1844, 3236, 438, 438, 438, 1132, 1762, 930,
	1699, 1700, 1701, 1702, 2764, 1746, 1999, 1842, 1843, 1841,
	1287, 2763, 1705, 2435, 1135, 76, 1725, 931, 1405, 93,
	2436, 1998, 1283, 1009, 1133, 1134, 1132, 947, 1365, 438,
	1364, 1134, 1132, 1380, 438, 438, 1707, 1381, 1708, 946,
	953, 1904, 1744, 1135, 1768, 462, 2503, 3390, 1391, 1135,
	3327, 1399, 1398, 2099, 980, 130, 1367, 130, 1690, 92,
	930, 1692, 1693, 3380, 3362, 3379, 1776, 1157, 1167, 1168,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1159, 130, 3291,
	1169, 970, 1767, 2870, 994, 1139, 2201, 1904, 2200, 2219,
	2864, 76, 1133, 1134, 1132, 1133, 1134, 1132, 1784, 2900,
	3394, 2117, 1720, 1721, 1838, 1801, 1723, 1133, 1134, 1132,
	1129, 1135, 2710, 1202, 1135, 1133, 1134, 1132, 2600, 1869,
	1871, 462, 1726, 3329, 461, 77, 1135, 3387, 2364, 1741,
	1801, 3182, 1742, 1745, 1135, 1830, 1840, 3268, 930, 3296,
	930, 3295, 1812, 462, 3174, 3132, 1133, 1134, 1132, 130,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 956, 957, 958,
	959, 960, 961, 962, 1883, 1135, 1813, 1763, 1119, 1814,
	1766, 1120, 1133, 1134, 1132, 3008, 1948, 3007, 1874, 1775,
	3269, 3006, 3388, 930, 930, 1829, 1133, 1134, 1132, 3005,
	2999, 1135, 1780, 3268, 1822, 1824, 1825, 3175, 2823, 94,
	461, 3091, 1823, 1834, 2822, 1135, 2603, 2363, 1880, 1882,
	2361, 2337, 130, 130, 130, 1886, 1042, 1041, 1691, 1826,
	3277, 3276, 461, 1889, 1892, 3237, 1015, 1317, 2175, 2176,
	2177, 1905, 1861, 2296, 1862, 2297, 930, 930, 3234, 1709,
	2280, 2282, 3188, 1942, 3176, 1133, 1134, 1132, 3092, 1014,
	3265, 1916, 1917, 2505, 3087, 3086, 3071, 3015, 1923, 1924,
	1925, 1926, 2983, 2918, 1135, 2867, 2866, 2865, 2833, 2820,
	1873, 1973, 1875, 1876, 1877, 1878, 1879, 2680, 1975, 2609,
	2460, 1200, 2459, 1918, 2359, 1920, 842, 2118, 2093, 1722,
	3264, 3097, 1901, 3069, 1158, 1157, 1167, 1168, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1159, 2202, 2085, 1169, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 3032, 2314,
	3026, 1974, 2891, 2746, 2703, 2699, 2691, 2661, 130, 2404,
	2403, 1304, 2111, 1989, 130, 130, 438, 438, 438, 1834,
	2095, 130, 1997, 2094, 1863, 2083, 2084, 1718, 1962, 1958,
	1715, 2036, 2037, 2038, 2039, 1961, 1967, 2020, 2021, 2022,
	2023, 1954, 1397, 1396, 1986, 1976, 2049, 2050, 2051, 1368,
	2281, 1133, 1134, 1132, 1366, 1037, 967, 401, 399, 1818,
	1819, 1820, 2966, 3293, 2796, 3283, 2796, 3244, 1114, 1747,
	1135, 1390, 1750, 1751, 1752, 1081, 1754, 1755, 2032, 2210,
	1756, 3195, 1114, 1956, 1864, 3025, 1757, 2796, 3191, 2402,
	1758, 1759, 1318, 1760, 1761, 2974, 1167, 1168, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1159, 1884, 1885, 1169, 2966,
	3130, 1891, 1894, 2973, 1899, 1900, 2640, 2065, 2610, 1114,
	1906, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1159, 1200,
	2285, 1169, 1687, 1887, 1888, 2796, 3078, 77, 1114, 1957,
	1911, 1959, 1914, 1915, 2966, 1114, 2258, 1919, 1047, 1921,
	1922, 2966, 3061, 2966, 2965, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1158, 1157, 1167,
	1168, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1159, 3311,
	1839, 1169, 2931, 1114, 2158, 1114, 1158, 1157, 1167, 1168,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1159, 2007, 2008,
	1169, 2013, 2014, 2015, 2016, 2017, 2796, 2795, 2628, 2627,
	1972, 2624, 2625, 2624, 2623, 2258, 1114, 2734, 3289, 2027,
	2028, 2029, 2187, 1114, 2131, 2130, 2762, 1331, 1334, 1335,
	1336, 1337, 1338, 1339, 3024, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 2925, 1319, 1320, 1321, 1322, 1298, 1302,
	1332, 1299, 1305, 1301, 1303, 1300, 1956, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1158, 1157, 1167, 1168,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1159, 2052, 2257,
	1169, 2054, 2710, 1951, 2744, 503, 502, 505, 506, 507,
	508, 1881, 2115, 1226, 504, 1870, 1881, 1114, 1289, 1288,
	2748, 2402, 1957, 2762, 1687, 130, 1158, 1157, 1167, 1168,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1159, 1881, 2258,
	1169, 80, 130, 130, 130, 1710, 1805, 2076, 1086, 2258,
	2091, 2783, 2114, 1158, 1157, 1167, 1168, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1159, 1085, 2641, 1169, 1045, 130,
	1044, 130, 2626, 1045, 2458, 930, 1333, 2428, 2762, 930,
	2300, 1963, 2156, 2263, 2266, 2267, 2268, 2264, 2075, 2265,
	2269, 2187, 2109, 2774, 2775, 2187, 2780, 1804, 2225, 2224,
	2120, 930, 1724, 2090, 930, 1806, 1047, 1109, 1765, 512,
	1731, 2096, 2100, 2110, 1687, 1388, 1386, 2105, 1271, 912,
	3215, 3192, 2782, 1153, 2104, 1156, 3111, 3029, 2944, 2825,
	2006, 2179, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 930,
	1154, 1155, 1152, 2774, 2775, 2174, 2035, 2599, 2031, 2304,
	1158, 1157, 1167, 1168, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1159, 1051, 2070, 1169, 2263, 2266, 2267, 2268, 2264,
	2026, 2265, 2269, 2025, 1361, 1034, 2141, 2108, 3351, 409,
	3349, 77, 2157, 1838, 3318, 2777, 1830, 2748, 2639, 2119,
	2113, 2365, 1393, 1087, 1048, 1043, 2779, 2557, 2556, 849,
	3254, 2126, 1836, 917, 3200, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	2461, 2164, 2560, 2133, 2558, 955, 2136, 2561, 2562, 2559,
	2267, 2268, 467, 468, 1816, 3246, 1974, 2928, 2155, 2172,
	2171, 1127, 1128, 3052, 2140, 440, 2890, 2799, 2698, 2274,
	2697, 2608, 2607, 2283, 1834, 2606, 1948, 2316, 2308, 1948,
	2593, 1895, 2167, 2186, 2188, 2184, 3102, 3105, 2165, 2166,
	1125, 1908, 3187, 3186, 3019, 3017, 2733, 3083, 130, 462,
	3082, 400, 1719, 2197, 2198, 2199, 130, 2454, 130, 3002,
	3003, 2205, 2453, 130, 2208, 2209, 130, 130, 130, 2214,
	2215, 2190, 1116, 2635, 2180, 2221, 2222, 2348, 2223, 1284,
	1032, 2226, 2227, 1117, 2228, 2229, 930, 2279, 2233, 2234,
	2235, 2236, 2237, 2286, 1016, 1013, 2287, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2270,
	2230, 2232, 1012, 968, 3303, 3036, 3035, 2238, 2239, 2240,
	2241, 2063, 2218, 1808, 1809, 2872, 2923, 2064, 461, 1392,
	3312, 3180, 2873, 3021, 2804, 1011, 2634, 842, 1127, 1128,
	3302, 94, 2055, 2301, 2284, 1158, 1157, 1167, 1168, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1159, 1781, 3301, 1169,
	1360, 2170, 930, 464, 130, 1105, 1106, 3300, 2980, 2169,
	2139, 995, 2313, 2315, 1405, 3239, 3238, 930, 930, 930,
	1277, 3199, 3184, 438, 2288, 435, 2291, 3106, 3051, 465,
	2303, 80, 1378, 2408, 2299, 3198, 3117, 2402, 130, 438,
	2377, 2378, 2379, 3353, 3352, 3353, 2903, 2309, 2400, 2312,
	2678, 2424, 2422, 1123, 2421, 2207, 438, 2338, 2339, 2204,
	2137, 1706, 1130, 3352, 2345, 3127, 2605, 76, 1802, 447,
	912, 449, 3154, 50, 2357, 3156, 19, 438, 82, 930,
	3155, 18, 53, 2360, 1, 438, 3157, 20, 2127, 2362,
	3158, 21, 2132, 3153, 15, 3152, 14, 462, 2191, 2192,
	2193, 2194, 2195, 1748, 2371, 2852, 930, 930, 3146, 10,
	2369, 3169, 34, 2370, 3167, 33, 130, 3166, 32, 2851,
	2391, 3165, 28, 2406, 2216, 2419, 930, 2858, 2196, 1951,
	3164, 27, 2646, 2425, 3163, 26, 3161, 23, 3160, 22,
	3162, 24, 2510, 2649, 2456, 2457, 2389, 2411, 3151, 13,
	2868, 2220, 2405, 3148, 12, 3147, 11, 3145, 9, 1376,
	2991, 950, 2074, 2413, 2466, 2532, 2534, 1038, 3185, 1948,
	1948, 1948, 1948, 1948, 3101, 1830, 461, 3103, 3016, 930,
	2437, 2875, 2448, 2449, 2836, 2274, 2452, 2569, 2433, 1839,
	2502, 2427, 2432, 2835, 2382, 462, 1948, 2430, 2440, 2445,
	2474, 2475, 2476, 2477, 2478, 2479, 130, 130, 130, 130,
	130, 2468, 2381, 1033, 1729, 462, 2533, 2467, 130, 2431,
	2434, 2086, 130, 2149, 3113, 2473, 130, 2471, 2138, 2340,
	2341, 2342, 2344, 130, 2491, 2601, 1883, 2572, 2577, 2492,
	2579, 2580, 1088, 1834, 1990, 1977, 930, 2564, 930, 914,
	930, 90, 930, 2097, 978, 2571, 367, 2346, 1987, 2349,
	2351, 2353, 2355, 2578, 2322, 3104, 1035, 2511, 2512, 2513,
	2514, 2515, 2537, 2321, 461, 2335, 2002, 2058, 2062, 2320,
	2319, 2565, 2566, 3099, 2466, 2323, 1295, 1293, 2552, 2553,
	2551, 2555, 1294, 2554, 461, 1292, 1951, 2563, 1297, 1296,
	2592, 371, 2594, 1951, 1279, 3225, 1951, 2586, 2745, 435,
	1131, 514, 105, 130, 2049, 54, 2051, 2656, 2892, 2444,
	443, 2576, 444, 2585, 2595, 2596, 2597, 95, 2598, 103,
	373, 1177, 2168, 930, 930, 930, 2292, 840, 841, 833,
	438, 2636, 2637, 2638, 2160, 130, 438, 1111, 3123, 3286,
	3217, 1121, 3249, 2217, 1214, 2663, 1902, 487, 2567, 2658,
	130, 2921, 438, 3251, 930, 438, 1821, 501, 500, 438,
	438, 499, 438, 496, 497, 3209, 1811, 2686, 2529, 1151,
	2112, 2629, 486, 484, 474, 1946, 2693, 2695, 930, 1939,
	2615, 2116, 130, 930, 2262, 2260, 2686, 2259, 1394, 1268,
	930, 2776, 2772, 930, 2272, 1945, 930, 1949, 38, 2902,
	2668, 993, 2739, 2672, 389, 2740, 3045, 2676, 2677, 84,
	2679, 448, 469, 25, 17, 1003, 16, 2142, 126, 948,
	40, 2642, 2665, 2711, 42, 2376, 2066, 126, 3224, 3334,
	2682, 2702, 2753, 76, 1019, 1360, 2687, 3360, 2688, 2681,
	3266, 31, 30, 29, 3159, 3168, 3150, 3149, 458, 3320,
	3319, 2666, 4, 1102, 69, 35, 2504, 910, 2, 0,
	0, 0, 0, 462, 2749, 126, 918, 2712, 0, 2785,
	930, 0, 930, 2752, 2789, 2790, 2791, 0, 2709, 2761,
	2720, 0, 2724, 0, 2754, 126, 0, 0, 0, 0,
	0, 2729, 2730, 2181, 2182, 2183, 126, 2735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 930, 1784, 0,
	2784, 0, 0, 0, 0, 0, 0, 0, 0, 2788,
	1950, 0, 2794, 930, 0, 0, 2756, 0, 0, 0,
	0, 0, 2755, 0, 76, 2537, 0, 930, 2827, 0,
	0, 2793, 461, 0, 0, 849, 0, 2211, 2212, 2213,
	849, 1280, 2778, 2616, 0, 0, 0, 0, 2800, 0,
	2786, 0, 0, 0, 462, 0, 124, 2611, 2613, 0,
	0, 0, 0, 0, 2617, 392, 2792, 130, 0, 930,
	2301, 0, 0, 0, 0, 2826, 2621, 0, 0, 0,
	0, 0, 0, 2828, 0, 0, 1951, 1951, 1951, 1951,
	1951, 2805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1951, 913, 0, 0, 438, 0, 0, 0,
	0, 2686, 0, 1951, 0, 0, 0, 0, 0, 0,
	2847, 0, 0, 949, 0, 0, 2888, 0, 0, 2664,
	0, 2686, 1362, 461, 963, 930, 0, 0, 1370, 1373,
	0, 0, 930, 2889, 2876, 2896, 2904, 2905, 0, 0,
	0, 0, 0, 2819, 2880, 2821, 2882, 0, 0, 1370,
	1373, 2881, 0, 0, 2874, 2592, 0, 0, 0, 0,
	2848, 2849, 2850, 2901, 2877, 0, 2897, 2704, 2878, 2049,
	2466, 2721, 2722, 0, 2723, 0, 130, 2725, 0, 2727,
	0, 472, 0, 0, 0, 2968, 0, 1220, 1220, 1220,
	1226, 1220, 1220, 1226, 1220, 1226, 1235, 1236, 0, 2924,
	930, 0, 2886, 2887, 0, 2932, 0, 930, 930, 930,
	2976, 0, 126, 0, 930, 2949, 2913, 2914, 2915, 2946,
	2917, 2933, 2742, 0, 0, 0, 2951, 2952, 2953, 0,
	0, 0, 0, 2926, 2927, 0, 2929, 0, 2407, 2930,
	2975, 1749, 2907, 930, 2977, 2960, 0, 2537, 2961, 2962,
	0, 0, 2955, 0, 0, 2954, 126, 0, 0, 2950,
	0, 2981, 0, 0, 0, 0, 2948, 1221, 1223, 1225,
	1227, 1229, 1231, 1232, 1234, 0, 0, 0, 0, 2797,
	2798, 3037, 2982, 2967, 1948, 2963, 2964, 0, 1222, 1224,
	0, 1228, 1230, 0, 1233, 2994, 0, 0, 0, 3004,
	0, 0, 1783, 0, 3009, 3012, 2753, 458, 0, 2753,
	3057, 0, 0, 930, 3022, 0, 2470, 3027, 3028, 0,
	0, 130, 0, 0, 2817, 1140, 3038, 0, 2785, 0,
	3034, 0, 0, 0, 2493, 2494, 0, 2495, 2496, 1835,
	462, 2497, 0, 3040, 0, 0, 0, 2752, 0, 930,
	2752, 3039, 0, 0, 0, 2506, 2507, 0, 76, 3053,
	966, 3056, 930, 3068, 0, 3050, 130, 0, 130, 3062,
	3054, 0, 0, 0, 0, 3030, 3031, 0, 3063, 0,
	1872, 3060, 1835, 0, 930, 0, 0, 0, 462, 3041,
	3042, 3043, 3044, 0, 3059, 2279, 3070, 3064, 3081, 3048,
	3049, 0, 0, 0, 1040, 1948, 849, 0, 0, 3079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	0, 0, 0, 0, 0, 1909, 1910, 0, 0, 0,
	0, 3065, 3066, 3067, 0, 0, 2753, 0, 76, 438,
	0, 0, 130, 0, 3109, 0, 0, 930, 3107, 0,
	0, 0, 0, 0, 0, 2743, 0, 0, 2604, 3110,
	0, 849, 76, 3137, 0, 0, 3118, 461, 462, 3139,
	1200, 0, 3108, 2732, 0, 1835, 3126, 2752, 1835, 917,
	2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 3129,
	130, 2943, 3131, 0, 2945, 0, 0, 3128, 0, 0,
	0, 0, 1200, 0, 1158, 1157, 1167, 1168, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1159, 0, 3183, 1169, 0,
	3181, 0, 0, 3220, 0, 3119, 3193, 0, 2969, 930,
	2971, 0, 3190, 930, 0, 0, 0, 0, 0, 0,
	0, 3213, 0, 0, 3068, 0, 3216, 461, 3212, 0,
	0, 0, 0, 0, 76, 0, 0, 3134, 0, 0,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 0, 1158, 1157, 1167, 1168, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1159, 0, 0, 1169, 0, 0, 0,
	930, 0, 0, 3194, 0, 0, 0, 0, 3255, 3241,
	2713, 3263, 0, 3203, 3242, 3245, 0, 3243, 0, 3214,
	930, 0, 2537, 0, 0, 0, 0, 0, 3261, 0,
	0, 472, 0, 0, 0, 0, 0, 435, 3229, 2736,
	2737, 2738, 0, 930, 0, 3281, 0, 0, 0, 0,
	0, 3282, 0, 0, 0, 0, 0, 0, 0, 0,
	76, 0, 3262, 0, 0, 0, 76, 3284, 438, 0,
	3299, 0, 0, 3306, 0, 3297, 930, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 76, 3308, 930,
	3294, 0, 76, 3313, 3315, 126, 0, 3328, 0, 0,
	0, 3344, 930, 2510, 435, 3324, 3309, 3323, 3331, 3322,
	3345, 2787, 3343, 3354, 0, 3326, 76, 3350, 3348, 3346,
	76, 76, 462, 3321, 0, 76, 3355, 0, 3306, 0,
	3357, 1951, 3363, 0, 0, 438, 0, 0, 0, 930,
	3304, 0, 2803, 3333, 0, 0, 0, 76, 0, 3373,
	76, 0, 3273, 0, 3306, 3381, 0, 3383, 0, 0,
	3378, 0, 0, 0, 0, 76, 0, 76, 0, 0,
	0, 76, 3306, 0, 3306, 0, 0, 0, 1200, 0,
	0, 3393, 76, 0, 0, 76, 0, 76, 0, 3306,
	1359, 76, 0, 0, 3306, 3397, 126, 0, 3306, 0,
	0, 461, 2715, 2716, 2717, 2718, 2719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 0, 0, 0, 0, 0, 126, 126, 126,
	126, 126, 0, 966, 2500, 57, 0, 0, 0, 0,
	0, 74, 1951, 0, 39, 0, 3384, 3385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2909, 2910, 2911, 2912, 36, 37, 0, 0,
	2916, 0, 0, 0, 2919, 2920, 0, 0, 0, 0,
	57, 0, 0, 77, 0, 0, 74, 3221, 3222, 39,
	61, 62, 0, 0, 0, 0, 0, 58, 0, 0,
	0, 0, 0, 0, 2499, 0, 0, 0, 0, 3170,
	0, 0, 3359, 3362, 3358, 3250, 3253, 0, 0, 0,
	0, 0, 0, 0, 48, 0, 0, 2125, 77, 0,
	0, 2125, 0, 0, 1363, 0, 0, 0, 513, 0,
	0, 1158, 1157, 1167, 1168, 1160, 1161, 1162, 1163, 1164,
	1165, 1166, 1159, 2125, 966, 1169, 2125, 1395, 0, 0,
	126, 0, 458, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1694, 1695, 1696, 1697, 1698,
	0, 0, 0, 126, 127, 3298, 0, 0, 0, 0,
	1140, 2163, 0, 127, 0, 41, 70, 44, 43, 46,
	1835, 0, 0, 0, 0, 0, 3253, 0, 0, 0,
	3171, 1158, 1157, 1167, 1168, 1160, 1161, 1162, 1163, 1164,
	1165, 1166, 1159, 0, 0, 1169, 47, 73, 72, 0,
	0, 127, 919, 45, 0, 0, 0, 0, 0, 0,
	41, 70, 44, 43, 46, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 47, 73, 72, 0, 2731, 0, 0, 45, 3382,
	0, 0, 0, 0, 55, 56, 0, 3172, 0, 0,
	0, 0, 63, 0, 0, 0, 0, 0, 0, 3077,
	0, 64, 0, 65, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 2498, 0, 0, 0, 126, 126, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 55,
	56, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 918, 0, 0, 0, 64, 0, 65, 0,
	0, 0, 849, 0, 0, 0, 3173, 71, 0, 51,
	52, 59, 0, 60, 0, 0, 3112, 0, 1835, 0,
	0, 0, 0, 66, 1158, 1157, 1167, 1168, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1159, 0, 0, 1169, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 0, 0,
	0, 49, 71, 0, 51, 52, 59, 0, 60, 0,
	57, 0, 0, 0, 0, 0, 74, 0, 0, 39,
	1158, 1157, 1167, 1168, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1159, 0, 126, 1169, 0, 0, 0, 0, 126,
	126, 2469, 0, 0, 2366, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 2380,
	2384, 2388, 0, 0, 0, 1941, 0, 1953, 0, 1158,
	1157, 1167, 1168, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1159, 2185, 0, 1169, 3170, 0, 0, 0, 0, 3399,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 75, 1124, 0, 0, 1158,
	1157, 1167, 1168, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1159, 2420, 0, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 1835, 1835,
	75, 0, 125, 0, 0, 386, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 1835, 0,
	41, 70, 44, 43, 46, 0, 0, 0, 0, 1835,
	0, 2079, 457, 0, 0, 3171, 0, 2081, 2082, 0,
	473, 0, 0, 0, 2089, 0, 850, 0, 0, 125,
	0, 47, 73, 72, 0, 0, 0, 0, 45, 0,
	0, 1142, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 2508, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 3342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	56, 0, 3172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3366, 64, 0, 65, 0,
	0, 0, 0, 0, 0, 36, 0, 0, 1835, 0,
	1835, 0, 1835, 0, 2589, 0, 0, 0, 0, 57,
	0, 0, 0, 66, 0, 74, 0, 0, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3173, 71, 0, 51, 52, 59, 0, 60, 0,
	126, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3170, 0, 2643, 2644, 2645, 3395, 0,
	0, 0, 0, 0, 126, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2696, 0, 0, 0, 0, 2701, 0, 0, 0, 0,
	0, 0, 2705, 0, 0, 2706, 0, 0, 2708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 41,
	70, 44, 43, 46, 36, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 3171, 0, 0, 0, 57, 0,
	75, 0, 0, 0, 74, 0, 0, 39, 2092, 0,
	47, 73, 72, 0, 0, 0, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	849, 0, 1783, 0, 2760, 0, 77, 0, 0, 0,
	0, 0, 1040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 3172, 3170, 0, 0, 0, 0, 3389, 0, 2760,
	0, 457, 0, 0, 0, 64, 0, 65, 0, 0,
	0, 127, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2802,
	0, 0, 66, 126, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 458, 0, 0, 0, 0, 126, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 0,
	3173, 71, 0, 51, 52, 59, 0, 60, 0, 0,
	0, 2384, 0, 0, 0, 0, 36, 0, 41, 70,
	44, 43, 46, 0, 2307, 0, 0, 0, 0, 0,
	57, 0, 0, 3171, 0, 0, 74, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 47,
	73, 72, 127, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 127, 0, 1835, 77, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 126,
	0, 0, 0, 127, 127, 127, 127, 127, 0, 0,
	0, 0, 0, 0, 3170, 0, 0, 55, 56, 3375,
	3172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2256, 0, 126, 64, 0, 65, 0, 0, 0,
	0, 0, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 75,
	0, 66, 2802, 0, 0, 0, 0, 0, 0, 2802,
	2802, 2802, 0, 0, 0, 0, 2589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3173,
	71, 0, 51, 52, 59, 0, 60, 0, 0, 0,
	41, 70, 44, 43, 46, 2589, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 3171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 47, 73, 72, 0, 0, 127, 0, 45, 0,
	0, 1786, 0, 0, 0, 0, 0, 2368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 1142, 0, 0, 0,
	0, 0, 0, 0, 0, 3033, 0, 0, 1831, 0,
	0, 2399, 0, 0, 0, 0, 0, 0, 0, 55,
	56, 0, 3172, 0, 0, 0, 0, 0, 0, 0,
	2538, 126, 126, 126, 126, 126, 64, 0, 65, 0,
	0, 3058, 0, 458, 0, 0, 0, 126, 0, 0,
	0, 458, 0, 0, 2802, 0, 0, 0, 126, 1270,
	0, 0, 850, 66, 0, 0, 0, 850, 75, 0,
	0, 0, 0, 0, 0, 0, 3073, 2590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 36, 0, 2462,
	0, 3173, 71, 0, 51, 52, 59, 0, 60, 0,
	0, 57, 0, 0, 0, 0, 0, 74, 0, 0,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 2589,
	0, 0, 0, 0, 1831, 0, 0, 0, 919, 77,
	3364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 1371, 1374, 0, 0, 0,
	126, 0, 0, 0, 0, 3170, 0, 0, 0, 0,
	125, 0, 0, 125, 0, 126, 1371, 1374, 0, 0,
	0, 1404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 125, 125, 125, 125, 0, 0, 0, 2307,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 2589, 0, 0, 0, 3196, 1714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 849, 0, 127,
	75, 0, 0, 0, 0, 127, 127, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 70, 44, 43, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3171, 0, 0, 0,
	0, 0, 1835, 0, 0, 0, 2632, 0, 0, 0,
	0, 0, 47, 73, 72, 0, 0, 0, 0, 45,
	0, 0, 2589, 2538, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2662, 0,
	0, 0, 0, 0, 0, 2802, 0, 0, 0, 0,
	0, 0, 0, 2667, 125, 0, 457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 56, 36, 3172, 0, 0, 0, 125, 3288, 0,
	0, 0, 0, 0, 0, 2700, 57, 64, 0, 65,
	0, 3292, 74, 0, 0, 39, 1404, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 126, 0, 77, 0, 0, 0, 0, 0,
	0, 3288, 3173, 71, 0, 51, 52, 59, 457, 60,
	1868, 1868, 0, 0, 36, 1868, 1868, 0, 1868, 1868,
	3170, 0, 0, 850, 1868, 3305, 0, 0, 57, 0,
	0, 0, 0, 0, 74, 0, 0, 39, 0, 0,
	0, 0, 0, 0, 1868, 1868, 1868, 1868, 0, 0,
	1868, 1868, 1868, 1868, 1868, 0, 0, 0, 0, 1868,
	1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868, 1868,
	1868, 125, 125, 125, 0, 0, 77, 0, 850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	382, 0, 3170, 0, 0, 0, 41, 70, 44, 43,
	46, 458, 0, 0, 0, 2538, 0, 0, 0, 0,
	0, 3171, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 47, 73, 72,
	2834, 0, 0, 0, 45, 127, 0, 0, 0, 2590,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 2590, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 41, 70,
	44, 43, 46, 125, 125, 55, 56, 0, 3172, 0,
	125, 360, 0, 3171, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 65, 0, 0, 0, 0, 47,
	73, 72, 0, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 66,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 1831,
	0, 0, 0, 0, 0, 0, 126, 372, 380, 381,
	0, 0, 0, 0, 0, 0, 0, 3173, 71, 0,
	51, 52, 59, 0, 60, 0, 0, 55, 56, 0,
	3172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 64, 370, 65, 0, 378, 379,
	0, 458, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3173,
	71, 0, 51, 52, 59, 375, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 376, 126, 0, 127,
	0, 0, 2590, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 374, 364, 365, 0, 385,
	2538, 0, 0, 366, 368, 0, 362, 384, 383, 0,
	0, 0, 0, 0, 125, 127, 0, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2101, 2102, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	377, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	457, 0, 0, 0, 0, 2590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1689,
	0, 0, 0, 3133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 1868, 1868, 1868, 1868, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 127, 127,
	127, 127, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 457, 0, 0,
	0, 0, 125, 0, 0, 125, 2289, 1404, 0, 850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 850, 125, 125, 125, 125, 125,
	0, 0, 0, 0, 0, 0, 0, 457, 127, 0,
	0, 125, 0, 0, 0, 457, 0, 0, 0, 0,
	1868, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 850, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 0, 0, 0, 850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 0, 457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 328, 697, 813, 654,
	677, 822, 683, 686, 750, 629, 727, 273, 674, 630,
	0, 125, 621, 480, 622, 655, 199, 477, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 666,
	665, 748, 796, 810, 0, 0, 576, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 695,
	752, 642, 739, 815, 675, 744, 816, 77, 0, 125,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 620,
	475, 494, 625, 575, 0, 801, 662, 663, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 692,
	345, 755, 764, 778, 685, 288, 215, 0, 0, 0,
	0, 491, 492, 471, 850, 0, 0, 591, 0, 493,
	0, 636, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 641,
	618, 660, 770, 619, 617, 258, 632, 566, 799, 693,
	231, 153, 805, 691, 589, 758, 637, 787, 678, 238,
	635, 154, 631, 638, 676, 269, 767, 773, 573, 157,
	784, 656, 669, 191, 0, 298, 745, 344, 483, 731,
	297, 241, 337, 759, 807, 343, 679, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 661, 777, 624, 216,
	287, 194, 234, 696, 751, 657, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 652, 639, 644, 640, 668, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 682, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 667, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 626, 0, 165, 765, 659, 671,
	651, 741, 650, 213, 757, 340, 341, 192, 358, 633,
	818, 167, 634, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 627, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 645, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	578, 590, 584, 586, 585, 582, 583, 581, 580, 579,
	592, 567, 568, 569, 570, 571, 716, 806, 628, 574,
	782, 587, 588, 754, 824, 684, 188, 515, 604, 605,
	606, 516, 607, 608, 517, 518, 609, 610, 611, 612,
	519, 613, 614, 615, 593, 594, 595, 596, 597, 598,
	599, 600, 603, 601, 602, 572, 158, 168, 239, 825,
	293, 210, 616, 623, 643, 646, 647, 648, 649, 653,
	658, 0, 664, 670, 672, 673, 681, 687, 688, 689,
	690, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	577, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 712, 715, 735, 766, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 694, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 680, 160, 797, 821, 742, 756,
	809, 0, 328, 697, 813, 654, 677, 822, 683, 686,
	750, 629, 727, 273, 674, 630, 0, 0, 621, 480,
	622, 655, 199, 477, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 666, 665, 748, 796, 810,
	0, 0, 576, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 695, 752, 642, 739, 815,
	675, 744, 816, 77, 0, 1114, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 620, 475, 494, 625, 575,
	0, 801, 662, 663, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 692, 345, 755, 764, 778,
	685, 288, 215, 0, 0, 0, 0, 491, 492, 0,
	0, 0, 0, 591, 0, 493, 0, 636, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 641, 618, 660, 770, 619,
	617, 258, 632, 566, 799, 693, 231, 153, 805, 691,
	589, 758, 637, 787, 678, 238, 635, 154, 631, 638,
	676, 269, 767, 773, 573, 157, 784, 656, 669, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 679, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 661, 777, 624, 216, 287, 194, 234, 696,
	751, 657, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 652, 639, 644,
	640, 668, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 682, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 667, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	626, 0, 165, 765, 659, 671, 651, 741, 650, 213,
	757, 340, 341, 192, 358, 633, 818, 167, 634, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 627,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 645, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 578, 590, 584, 586,
	585, 582, 583, 581, 580, 579, 592, 567, 568, 569,
	570, 571, 716, 806, 628, 574, 782, 587, 588, 754,
	824, 684, 188, 515, 604, 605, 606, 516, 607, 608,
	517, 518, 609, 610, 611, 612, 519, 613, 614, 615,
	593, 594, 595, 596, 597, 598, 599, 600, 603, 601,
	602, 572, 158, 168, 239, 825, 293, 210, 616, 623,
	643, 646, 647, 648, 649, 653, 658, 0, 664, 670,
	672, 673, 681, 687, 688, 689, 690, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 577, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 712,
	715, 735, 766, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	694, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	680, 160, 797, 821, 742, 756, 809, 0, 328, 697,
	813, 654, 677, 822, 683, 686, 750, 629, 727, 273,
	674, 630, 0, 0, 621, 480, 622, 655, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 666, 665, 748, 796, 810, 0, 0, 576, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 695, 752, 642, 739, 815, 675, 744, 816, 77,
	0, 0, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 620, 475, 494, 625, 575, 0, 801, 662, 663,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 692, 345, 755, 764, 778, 685, 288, 215, 0,
	0, 0, 0, 491, 492, 1866, 0, 0, 0, 591,
	0, 493, 0, 636, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 641, 618, 660, 770, 619, 617, 258, 632, 566,
	799, 693, 231, 153, 805, 691, 589, 758, 637, 787,
	678, 238, 635, 154, 631, 638, 676, 269, 767, 773,
	573, 157, 784, 656, 669, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 679, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 661, 777,
	624, 216, 287, 194, 234, 696, 751, 657, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 652, 639, 644, 640, 668, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 682, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 667, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 626, 0, 165, 765,
	659, 671, 651, 741, 650, 213, 757, 340, 341, 192,
	358, 633, 818, 167, 634, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 627, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 645,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 578, 590, 584, 586, 585, 582, 583, 581,
	580, 579, 592, 567, 568, 569, 570, 571, 716, 806,
	628, 574, 782, 587, 588, 754, 824, 684, 188, 515,
	604, 605, 606, 516, 607, 608, 517, 518, 609, 610,
	611, 612, 519, 613, 614, 615, 593, 594, 595, 596,
	597, 598, 599, 600, 603, 601, 602, 572, 158, 168,
	239, 825, 293, 210, 616, 623, 643, 646, 647, 648,
	649, 653, 658, 0, 664, 670, 672, 673, 681, 687,
	688, 689, 690, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 577, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 712, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 281, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 694, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 680, 160, 797, 821,
	742, 756, 809, 0, 328, 697, 813, 654, 677, 822,
	683, 686, 750, 629, 727, 273, 674, 630, 0, 0,
	621, 480, 622, 655, 199, 477, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 666, 665, 748,
	796, 810, 0, 0, 576, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 695, 752, 642,
	739, 815, 675, 1970, 816, 77, 0, 0, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 1971, 706, 749, 827, 620, 475, 494,
	625, 575, 0, 801, 662, 663, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 692, 345, 755,
	764, 778, 685, 288, 215, 0, 0, 0, 0, 491,
	492, 0, 0, 0, 0, 591, 0, 493, 0, 636,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 641, 618, 660,
	770, 619, 617, 258, 632, 566, 799, 693, 231, 153,
	805, 691, 589, 758, 637, 787, 678, 238, 635, 154,
	631, 638, 676, 269, 767, 773, 573, 157, 784, 656,
	669, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 679, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 661, 777, 624, 216, 287, 194,
	234, 696, 751, 657, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 652,
	639, 644, 640, 668, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 682, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 667, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 626, 0, 165, 765, 659, 671, 651, 741,
	650, 213, 757, 340, 341, 192, 358, 633, 818, 167,
	634, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 627, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 645, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 578, 590,
	584, 586, 585, 582, 583, 581, 580, 579, 592, 567,
	568, 569, 570, 571, 716, 806, 628, 574, 782, 587,
	588, 754, 824, 684, 188, 515, 604, 605, 606, 516,
	607, 608, 517, 518, 609, 610, 611, 612, 519, 613,
	614, 615, 593, 594, 595, 596, 597, 598, 599, 600,
	603, 601, 602, 572, 158, 168, 239, 825, 293, 210,
	616, 623, 643, 646, 647, 648, 649, 653, 658, 0,
	664, 670, 672, 673, 681, 687, 688, 689, 690, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 577, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 712, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 281, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 694, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 680, 160, 797, 821, 742, 756, 809, 0,
	328, 697, 813, 654, 677, 822, 683, 686, 750, 629,
	727, 273, 674, 630, 0, 0, 621, 867, 622, 655,
	199, 865, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 666, 665, 748, 796, 810, 0, 0,
	576, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 695, 752, 642, 739, 815, 675, 744,
	816, 77, 0, 1114, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 620, 884, 494, 625, 575, 0, 801,
	662, 663, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 692, 345, 755, 764, 778, 685, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 591, 0, 493, 0, 636, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 641, 618, 660, 770, 619, 617, 258,
	632, 566, 799, 693, 231, 153, 805, 691, 589, 758,
	637, 787, 678, 238, 635, 154, 631, 638, 676, 269,
	767, 773, 573, 157, 784, 656, 669, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	679, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	661, 777, 624, 216, 287, 194, 234, 696, 751, 657,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 652, 639, 644, 640, 668,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 682,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 667,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 626, 0,
	165, 765, 659, 671, 651, 741, 650, 213, 757, 340,
	341, 192, 358, 633, 818, 167, 634, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 627, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 645, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 578, 590, 584, 586, 585, 582,
	583, 581, 580, 579, 592, 567, 568, 569, 570, 571,
	716, 806, 628, 574, 782, 587, 588, 754, 824, 684,
	188, 515, 604, 605, 606, 516, 607, 608, 517, 518,
	609, 610, 611, 612, 519, 613, 614, 615, 593, 594,
	595, 596, 597, 598, 599, 600, 603, 601, 602, 572,
	158, 168, 239, 825, 293, 210, 616, 623, 643, 646,
	647, 648, 649, 653, 658, 0, 664, 670, 672, 673,
	681, 687, 688, 689, 690, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 577, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 712, 715, 735,
	766, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 694, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 680, 160,
	797, 821, 742, 756, 809, 0, 328, 697, 813, 654,
	677, 822, 683, 686, 750, 629, 727, 273, 674, 630,
	0, 0, 621, 480, 622, 655, 199, 477, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 666,
	665, 748, 796, 810, 0, 0, 576, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 695,
	752, 642, 739, 815, 675, 744, 816, 77, 0, 0,
	0, 478, 503, 1893, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 620,
	475, 494, 625, 575, 0, 801, 662, 663, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 692,
	345, 755, 764, 778, 685, 288, 215, 0, 0, 0,
	0, 491, 492, 1866, 0, 0, 0, 591, 0, 493,
	0, 636, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 641,
	618, 660, 770, 619, 617, 258, 632, 566, 799, 693,
	231, 153, 805, 691, 589, 758, 637, 787, 678, 238,
	635, 154, 631, 638, 676, 269, 767, 773, 573, 157,
	784, 656, 669, 191, 0, 298, 745, 344, 483, 731,
	297, 241, 337, 759, 807, 343, 679, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 661, 777, 624, 216,
	287, 194, 234, 696, 751, 657, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 652, 639, 644, 640, 668, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 682, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 667, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 626, 0, 165, 765, 659, 671,
	651, 741, 650, 213, 757, 340, 341, 192, 358, 633,
	818, 167, 634, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 627, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 645, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	578, 590, 584, 586, 585, 582, 583, 581, 580, 579,
	592, 567, 568, 569, 570, 571, 716, 806, 628, 574,
	782, 587, 588, 754, 824, 684, 188, 515, 604, 605,
	606, 516, 607, 608, 517, 518, 609, 610, 611, 612,
	519, 613, 614, 615, 593, 594, 595, 596, 597, 598,
	599, 600, 603, 601, 602, 572, 158, 168, 239, 825,
	293, 210, 616, 623, 643, 646, 647, 648, 649, 653,
	658, 0, 664, 670, 672, 673, 681, 687, 688, 689,
	690, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	577, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 712, 715, 735, 766, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 694, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 680, 160, 797, 821, 742, 756,
	809, 0, 328, 697, 813, 654, 677, 822, 683, 686,
	750, 629, 727, 273, 674, 630, 0, 0, 621, 480,
	622, 655, 199, 477, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 666, 665, 748, 796, 810,
	0, 0, 576, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 695, 752, 642, 739, 815,
	675, 744, 816, 77, 0, 0, 0, 478, 503, 1890,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 620, 475, 494, 625, 575,
	0, 801, 662, 663, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 692, 345, 755, 764, 778,
	685, 288, 215, 0, 0, 0, 0, 491, 492, 1866,
	0, 0, 0, 591, 0, 493, 0, 636, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 641, 618, 660, 770, 619,
	617, 258, 632, 566, 799, 693, 231, 153, 805, 691,
	589, 758, 637, 787, 678, 238, 635, 154, 631, 638,
	676, 269, 767, 773, 573, 157, 784, 656, 669, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 679, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 661, 777, 624, 216, 287, 194, 234, 696,
	751, 657, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 652, 639, 644,
	640, 668, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 682, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 667, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	626, 0, 165, 765, 659, 671, 651, 741, 650, 213,
	757, 340, 341, 192, 358, 633, 818, 167, 634, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 627,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 645, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 578, 590, 584, 586,
	585, 582, 583, 581, 580, 579, 592, 567, 568, 569,
	570, 571, 716, 806, 628, 574, 782, 587, 588, 754,
	824, 684, 188, 515, 604, 605, 606, 516, 607, 608,
	517, 518, 609, 610, 611, 612, 519, 613, 614, 615,
	593, 594, 595, 596, 597, 598, 599, 600, 603, 601,
	602, 572, 158, 168, 239, 825, 293, 210, 616, 623,
	643, 646, 647, 648, 649, 653, 658, 0, 664, 670,
	672, 673, 681, 687, 688, 689, 690, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 577, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 712,
	715, 735, 766, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	694, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	680, 160, 797, 821, 742, 756, 809, 36, 328, 697,
	813, 654, 677, 822, 683, 686, 750, 629, 727, 273,
	674, 630, 0, 0, 621, 480, 622, 655, 199, 477,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 666, 665, 748, 796, 810, 0, 0, 576, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 695, 752, 642, 739, 815, 675, 744, 816, 77,
	0, 0, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 620, 475, 494, 625, 575, 0, 801, 662, 663,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 692, 345, 755, 764, 778, 685, 288, 215, 0,
	0, 0, 0, 491, 492, 0, 0, 0, 0, 591,
	0, 493, 0, 636, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 641, 618, 660, 770, 619, 617, 258, 632, 566,
	799, 693, 231, 153, 805, 691, 589, 758, 637, 787,
	678, 238, 635, 154, 631, 638, 676, 269, 767, 773,
	573, 157, 784, 656, 669, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 679, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 661, 777,
	624, 216, 287, 194, 234, 696, 751, 657, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 652, 639, 644, 640, 668, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 682, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 667, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 626, 0, 165, 765,
	659, 671, 651, 741, 650, 213, 757, 340, 341, 192,
	358, 633, 818, 167, 634, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 627, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 645,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 578, 590, 584, 586, 585, 582, 583, 581,
	580, 579, 592, 567, 568, 569, 570, 571, 716, 806,
	628, 574, 782, 587, 588, 754, 824, 684, 188, 515,
	604, 605, 606, 516, 607, 608, 517, 518, 609, 610,
	611, 612, 519, 613, 614, 615, 593, 594, 595, 596,
	597, 598, 599, 600, 603, 601, 602, 572, 158, 168,
	239, 1201, 293, 210, 616, 623, 643, 646, 647, 648,
	649, 653, 658, 0, 664, 670, 672, 673, 681, 687,
	688, 689, 690, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 577, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 712, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 281, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 694, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 680, 160, 797, 821,
	742, 756, 809, 0, 328, 697, 813, 654, 677, 822,
	683, 686, 750, 629, 727, 273, 674, 630, 0, 0,
	621, 480, 622, 655, 199, 477, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 666, 665, 748,
	796, 810, 0, 0, 576, 240, 0, 0, 350, 320,
	257, 0, 0, 711, 0, 564, 565, 695, 752, 642,
	739, 815, 675, 744, 816, 77, 0, 1727, 0, 478,
	503, 502, 505, 506, 507, 508, 0, 0, 137, 504,
	509, 510, 511, 0, 706, 749, 827, 620, 475, 494,
	625, 575, 0, 801, 662, 663, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 692, 345, 755,
	764, 778, 685, 288, 215, 0, 0, 0, 0, 491,
	492, 0, 0, 0, 0, 591, 0, 493, 0, 636,
	489, 522, 523, 524, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 495, 0, 0, 0, 641, 618, 660,
	770, 619, 617, 258, 632, 566, 799, 693, 231, 153,
	805, 691, 589, 758, 637, 787, 678, 238, 635, 154,
	631, 638, 676, 269, 767, 773, 573, 157, 784, 656,
	669, 191, 0, 298, 745, 344, 483, 731, 297, 241,
	337, 759, 807, 343, 679, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 661, 777, 624, 216, 287, 194,
	234, 696, 751, 657, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 652,
	639, 644, 640, 668, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 682, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 482, 211, 268,
	193, 747, 277, 667, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 626, 0, 165, 765, 659, 671, 651, 741,
	650, 213, 757, 340, 341, 192, 358, 633, 818, 167,
	634, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 627, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 645, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 578, 590,
	584, 586, 585, 582, 583, 581, 580, 579, 592, 567,
	568, 569, 570, 571, 716, 806, 628, 574, 782, 587,
	588, 754, 824, 684, 188, 515, 604, 605, 606, 516,
	607, 608, 517, 518, 609, 610, 611, 612, 519, 613,
	614, 615, 593, 594, 595, 596, 597, 598, 599, 600,
	603, 601, 602, 572, 158, 168, 239, 825, 293, 210,
	616, 623, 643, 646, 647, 648, 649, 653, 658, 0,
	664, 670, 672, 673, 681, 687, 688, 689, 690, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 577, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 712, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 281, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 694, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 680, 160, 797, 821, 742, 756, 809, 0,
	328, 697, 813, 654, 677, 822, 683, 686, 750, 629,
	727, 273, 674, 630, 0, 0, 621, 480, 622, 655,
	199, 477, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 666, 665, 748, 796, 810, 0, 0,
	576, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 564, 565, 695, 752, 642, 739, 815, 675, 744,
	816, 77, 0, 0, 0, 478, 503, 502, 505, 506,
	507, 508, 0, 0, 137, 504, 509, 510, 511, 0,
	706, 749, 827, 620, 475, 494, 625, 575, 0, 801,
	662, 663, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 692, 345, 755, 764, 778, 685, 288,
	215, 0, 0, 0, 0, 491, 492, 0, 0, 0,
	0, 591, 0, 493, 0, 636, 489, 522, 523, 524,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 495,
	0, 0, 0, 641, 618, 660, 770, 619, 617, 258,
	632, 566, 799, 693, 231, 153, 805, 691, 589, 758,
	637, 787, 678, 238, 635, 154, 631, 638, 676, 269,
	767, 773, 573, 157, 784, 656, 669, 191, 0, 298,
	745, 344, 483, 731, 297, 241, 337, 759, 807, 343,
	679, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	661, 777, 624, 216, 287, 194, 234, 696, 751, 657,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 652, 639, 644, 640, 668,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 682,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 482, 211, 268, 193, 747, 277, 667,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 626, 0,
	165, 765, 659, 671, 651, 741, 650, 213, 757, 340,
	341, 192, 358, 633, 818, 167, 634, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 627, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 645, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 578, 590, 584, 586, 585, 582,
	583, 581, 580, 579, 592, 567, 568, 569, 570, 571,
	716, 806, 628, 574, 782, 587, 588, 754, 824, 684,
	188, 515, 604, 605, 606, 516, 607, 608, 517, 518,
	609, 610, 611, 612, 519, 613, 614, 615, 593, 594,
	595, 596, 597, 598, 599, 600, 603, 601, 602, 572,
	158, 168, 239, 825, 293, 210, 616, 623, 643, 646,
	647, 648, 649, 653, 658, 0, 664, 670, 672, 673,
	681, 687, 688, 689, 690, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 577, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 712, 715, 735,
	766, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 694, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 680, 160,
	797, 821, 742, 756, 809, 0, 328, 697, 813, 654,
	677, 822, 683, 686, 750, 629, 727, 273, 674, 630,
	0, 0, 621, 867, 622, 655, 199, 865, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 666,
	665, 748, 796, 810, 0, 0, 576, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 564, 565, 695,
	752, 642, 739, 815, 675, 744, 816, 77, 0, 0,
	0, 478, 503, 502, 505, 506, 507, 508, 0, 0,
	137, 504, 509, 510, 511, 0, 706, 749, 827, 620,
	884, 494, 625, 575, 0, 801, 662, 663, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 692,
	345, 755, 764, 778, 685, 288, 215, 0, 0, 0,
	0, 491, 492, 0, 0, 0, 0, 591, 0, 493,
	0, 636, 489, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 495, 0, 0, 0, 641,
	618, 660, 770, 619, 617, 258, 632, 566, 799, 693,
	231, 153, 805, 691, 589, 758, 637, 787, 678, 238,
	635, 154, 631, 638, 676, 269, 767, 773, 573, 157,
	784, 656, 669, 191, 0, 298, 745, 344, 483, 3367,
	297, 241, 337, 759, 807, 343, 679, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 661, 777, 624, 216,
	287, 194, 234, 696, 751, 657, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 652, 639, 644, 640, 668, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 682, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 482,
	211, 268, 193, 747, 277, 667, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 626, 0, 165, 765, 659, 671,
	651, 741, 650, 213, 757, 340, 341, 192, 358, 633,
	818, 167, 634, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 627, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 645, 779, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	578, 590, 584, 586, 585, 582, 583, 581, 580, 579,
	592, 567, 568, 569, 570, 571, 716, 806, 628, 574,
	782, 587, 588, 754, 824, 684, 188, 515, 604, 605,
	606, 516, 607, 608, 517, 518, 609, 610, 611, 612,
	519, 613, 614, 615, 593, 594, 595, 596, 597, 598,
	599, 600, 603, 601, 602, 572, 158, 168, 239, 825,
	293, 210, 616, 623, 643, 646, 647, 648, 649, 653,
	658, 0, 664, 670, 672, 673, 681, 687, 688, 689,
	690, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	577, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 712, 715, 735, 766, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 694, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 680, 160, 797, 821, 742, 756,
	809, 0, 328, 697, 813, 654, 677, 822, 683, 686,
	750, 629, 727, 273, 674, 630, 0, 0, 621, 867,
	622, 655, 199, 865, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 666, 665, 748, 796, 810,
	0, 0, 576, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 564, 565, 695, 752, 642, 739, 815,
	675, 744, 816, 77, 0, 0, 0, 478, 503, 502,
	505, 506, 507, 508, 0, 0, 137, 504, 509, 510,
	511, 0, 706, 749, 827, 620, 884, 494, 625, 575,
	0, 801, 662, 663, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 692, 345, 755, 764, 778,
	685, 288, 215, 0, 0, 0, 0, 491, 492, 0,
	0, 0, 0, 591, 0, 493, 0, 636, 489, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 495, 0, 0, 0, 641, 618, 660, 770, 619,
	617, 258, 632, 566, 799, 693, 231, 153, 805, 691,
	589, 758, 637, 787, 678, 238, 635, 154, 631, 638,
	676, 269, 767, 773, 573, 157, 784, 656, 669, 191,
	0, 298, 745, 344, 483, 731, 297, 241, 337, 759,
	807, 343, 679, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 661, 777, 624, 216, 287, 194, 234, 696,
	751, 657, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 652, 639, 644,
	640, 668, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 682, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 482, 211, 268, 193, 747,
	277, 667, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 342, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	626, 0, 165, 765, 659, 671, 651, 741, 650, 213,
	757, 340, 341, 192, 358, 633, 818, 167, 634, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 627,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 645, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 578, 590, 584, 586,
	585, 582, 583, 581, 580, 579, 592, 567, 568, 569,
	570, 571, 716, 806, 628, 574, 782, 587, 588, 754,
	824, 684, 188, 515, 604, 605, 606, 516, 607, 608,
	517, 518, 609, 610, 611, 612, 519, 613, 614, 615,
	593, 594, 595, 596, 597, 598, 599, 600, 603, 601,
	602, 572, 158, 168, 239, 825, 293, 210, 616, 623,
	643, 646, 647, 648, 649, 653, 658, 0, 664, 670,
	672, 673, 681, 687, 688, 689, 690, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 577, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 712,
	715, 735, 766, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	694, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	680, 160, 797, 821, 742, 756, 809, 0, 328, 697,
	813, 654, 677, 822, 683, 686, 750, 629, 727, 273,
	674, 630, 0, 0, 621, 867, 622, 655, 199, 865,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 666, 665, 748, 796, 810, 0, 0, 576, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 564,
	565, 695, 752, 642, 739, 815, 675, 744, 816, 77,
	0, 0, 0, 478, 503, 502, 505, 506, 507, 508,
	0, 0, 137, 504, 509, 510, 511, 0, 706, 749,
	827, 620, 884, 494, 625, 575, 0, 801, 662, 663,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 692, 345, 755, 764, 778, 685, 288, 215, 0,
	0, 0, 0, 491, 492, 0, 0, 0, 0, 591,
	0, 493, 0, 636, 489, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 495, 0, 0,
	0, 641, 618, 660, 770, 619, 617, 258, 632, 566,
	799, 693, 231, 153, 805, 691, 589, 758, 637, 787,
	678, 238, 635, 154, 631, 638, 676, 269, 767, 773,
	573, 157, 784, 656, 669, 191, 0, 298, 745, 344,
	483, 731, 297, 241, 337, 759, 807, 343, 679, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 661, 777,
	624, 216, 287, 194, 234, 696, 751, 657, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 652, 639, 644, 640, 668, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 682, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 482, 211, 268, 193, 747, 277, 667, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 342, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 626, 0, 165, 765,
	659, 671, 651, 741, 650, 213, 757, 340, 341, 192,
	358, 633, 818, 167, 634, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 627, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 645,
	779, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 578, 590, 584, 586, 585, 582, 583, 581,
	580, 579, 592, 567, 568, 569, 570, 571, 1896, 1897,
	1898, 574, 782, 587, 588, 754, 824, 684, 188, 515,
	604, 605, 606, 516, 607, 608, 517, 518, 609, 610,
	611, 612, 519, 613, 614, 615, 593, 594, 595, 596,
	597, 598, 599, 600, 603, 601, 602, 572, 158, 168,
	239, 825, 293, 210, 616, 623, 643, 646, 647, 648,
	649, 653, 658, 0, 664, 670, 672, 673, 681, 687,
	688, 689, 690, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 577, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 712, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 281, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 694, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 680, 160, 797, 821,
	742, 756, 1658, 2757, 328, 1510, 1662, 1460, 1489, 1679,
	1495, 1498, 1581, 1425, 1548, 273, 1486, 1426, 1408, 1465,
	1412, 1477, 1413, 1462, 199, 1458, 1622, 1551, 1660, 1530,
	1574, 1584, 198, 190, 1540, 1539, 1648, 1475, 1474, 1579,
	1636, 1659, 1529, 0, 1669, 240, 1633, 1790, 350, 320,
	257, 1793, 1792, 1525, 1642, 1546, 1611, 1508, 1583, 1442,
	1566, 1664, 1487, 1575, 1665, 77, 0, 1114, 0, 929,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1571, 1656, 1480, 1791, 1520, 1580, 1684, 1411, 1567, 0,
	1417, 1428, 1678, 1649, 1471, 1472, 202, 0, 0, 0,
	0, 0, 0, 0, 1523, 1547, 1601, 1505, 345, 1586,
	1596, 1614, 1497, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 1564, 0, 0, 0, 1433,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 0, 1441, 1409, 1469,
	1603, 1410, 1407, 258, 1429, 1616, 1647, 1506, 231, 153,
	1653, 1504, 1503, 1590, 1434, 1626, 1490, 238, 1432, 154,
	1427, 1435, 1488, 269, 1600, 1608, 142, 157, 1623, 1463,
	1479, 191, 1788, 298, 1576, 344, 1789, 1556, 297, 241,
	337, 1591, 1655, 343, 1491, 327, 351, 355, 208, 1531,
	182, 317, 200, 197, 1470, 1613, 1416, 216, 287, 194,
	234, 1509, 1582, 1464, 187, 1594, 1565, 1628, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1624, 1607, 1630, 1457,
	1436, 1448, 1437, 1478, 1657, 226, 217, 1631, 1629, 348,
	143, 307, 306, 1494, 225, 1610, 144, 136, 294, 145,
	232, 162, 1635, 357, 173, 236, 330, 1787, 211, 268,
	193, 1578, 277, 1476, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 1606, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 1663, 246, 204, 207,
	219, 229, 1577, 296, 324, 349, 1568, 171, 164, 326,
	342, 180, 308, 310, 356, 1602, 166, 1651, 1625, 1558,
	1512, 1518, 1418, 0, 165, 1598, 1468, 1483, 1456, 1572,
	1455, 213, 1589, 340, 341, 192, 358, 1430, 1671, 167,
	1431, 1670, 265, 272, 264, 1674, 336, 1652, 1559, 1543,
	1541, 1423, 1650, 1557, 1542, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1545, 0, 163, 0,
	321, 1661, 1686, 325, 177, 1450, 1617, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1593, 1683, 276, 299, 181, 346, 318, 201, 1446, 1449,
	1444, 1447, 1445, 1549, 1550, 1666, 1667, 1668, 1605, 1438,
	0, 1643, 1644, 0, 1536, 1654, 1424, 0, 1621, 151,
	152, 1585, 1681, 1496, 188, 1795, 1420, 1421, 1422, 1796,
	1526, 1527, 1797, 1798, 1639, 1638, 1637, 1640, 1799, 1675,
	1673, 1676, 1440, 1461, 1482, 1532, 1533, 1535, 1569, 1570,
	1615, 1588, 1597, 1554, 158, 168, 239, 2758, 293, 210,
	1406, 1414, 1443, 1451, 1452, 1453, 1454, 1459, 1466, 0,
	1473, 1481, 1484, 1485, 1493, 1499, 1500, 1501, 1502, 1511,
	1513, 1514, 1515, 1516, 1517, 1521, 1522, 1524, 1537, 1538,
	1544, 1552, 1553, 1561, 1563, 0, 1592, 1595, 1604, 1609,
	1612, 1618, 1620, 1627, 1632, 1634, 1672, 1680, 1685, 347,
	196, 1528, 1534, 1560, 1599, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 281, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1646, 1507, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1492, 160, 1641, 1677, 1573, 1587, 1658, 1619,
	328, 1510, 1662, 1460, 1489, 1679, 1495, 1498, 1581, 1425,
	1548, 273, 1486, 1426, 1408, 1465, 1412, 1477, 1413, 1462,
	199, 1458, 1622, 1551, 1660, 1530, 1574, 1584, 198, 190,
	1540, 1539, 1648, 1475, 1474, 1579, 1636, 1659, 1529, 0,
	1669, 240, 1633, 1790, 350, 320, 257, 1793, 1792, 1525,
	1642, 1546, 1611, 1508, 1583, 1442, 1566, 1664, 1487, 1575,
	1665, 0, 0, 0, 0, 929, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 1571, 1656, 1480, 1791,
	1520, 1580, 1684, 1411, 1567, 0, 1417, 1428, 1678, 1649,
	1471, 1472, 202, 0, 0, 0, 0, 0, 0, 0,
	1523, 1547, 1601, 1505, 345, 1586, 1596, 1614, 1497, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	0, 1564, 0, 0, 0, 1433, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 1441, 1409, 1469, 1603, 1410, 1407, 258,
	1429, 1616, 1647, 1506, 231, 153, 1653, 1504, 1503, 1590,
	1434, 1626, 1490, 238, 1432, 154, 1427, 1435, 1488, 269,
	1600, 1608, 142, 157, 1623, 1463, 1479, 191, 1788, 298,
	1576, 344, 1789, 1556, 297, 241, 337, 1591, 1655, 343,
	1491, 327, 351, 355, 208, 1531, 182, 317, 200, 197,
	1470, 1613, 1416, 216, 287, 194, 234, 1509, 1582, 1464,
	187, 1594, 1565, 1628, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1624, 1607, 1630, 1457, 1436, 1448, 1437, 1478,
	1657, 226, 217, 1631, 1629, 348, 143, 307, 306, 1494,
	225, 1610, 144, 136, 294, 145, 232, 162, 1635, 357,
	173, 236, 330, 1787, 211, 268, 193, 1578, 277, 1476,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 1606,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 1663, 246, 204, 207, 219, 229, 1577, 296,
	324, 349, 1568, 171, 164, 326, 342, 180, 308, 310,
	356, 1602, 166, 1651, 1625, 1558, 1512, 1518, 1418, 0,
	165, 1598, 1468, 1483, 1456, 1572, 1455, 213, 1589, 340,
	341, 192, 358, 1430, 1671, 167, 1431, 1670, 265, 272,
	264, 1674, 336, 1652, 1559, 1543, 1541, 1423, 1650, 1557,
	1542, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1545, 0, 163, 0, 321, 1661, 1686, 325,
	177, 1450, 1617, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1593, 1683, 276, 299,
	181, 346, 318, 201, 1446, 1449, 1444, 1447, 1445, 1549,
	1550, 1666, 1667, 1668, 1605, 1438, 0, 1643, 1644, 0,
	1536, 1654, 1424, 0, 1621, 151, 152, 1585, 1681, 1496,
	188, 1795, 1420, 1421, 1422, 1796, 1526, 1527, 1797, 1798,
	1639, 1638, 1637, 1640, 1799, 1675, 1673, 1676, 1440, 1461,
	1482, 1532, 1533, 1535, 1569, 1570, 1615, 1588, 1597, 1554,
	158, 168, 239, 1682, 293, 210, 1406, 1414, 1443, 1451,
	1452, 1453, 1454, 1459, 1466, 0, 1473, 1481, 1484, 1485,
	1493, 1499, 1500, 1501, 1502, 1511, 1513, 1514, 1515, 1516,
	1517, 1521, 1522, 1524, 1537, 1538, 1544, 1552, 1553, 1561,
	1563, 0, 1592, 1595, 1604, 1609, 1612, 1618, 1620, 1627,
	1632, 1634, 1672, 1680, 1685, 347, 196, 1528, 1534, 1560,
	1599, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1646, 1507, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1492, 160,
	1641, 1677, 1573, 1587, 1658, 1619, 328, 1510, 1662, 1460,
	1489, 1679, 1495, 1498, 1581, 1425, 1548, 273, 1486, 1426,
	1408, 1465, 1412, 1477, 1413, 1462, 199, 1458, 1622, 1551,
	1660, 1530, 1574, 1584, 198, 190, 1540, 1539, 1648, 1475,
	1474, 1579, 1636, 1659, 1529, 0, 1669, 240, 1633, 0,
	350, 320, 257, 0, 0, 1525, 1642, 1546, 1611, 1508,
	1583, 1442, 1566, 1664, 1487, 1575, 1665, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 1571, 1656, 1480, 0, 1520, 1580, 1684, 1411,
	1567, 0, 1417, 1428, 1678, 1649, 1471, 1472, 202, 0,
	0, 0, 0, 0, 0, 0, 1523, 1547, 1601, 1505,
	345, 1586, 1596, 1614, 1497, 288, 215, 0, 0, 0,
	0, 0, 0, 2472, 0, 1467, 0, 1564, 0, 0,
	0, 1433, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 1441,
	1409, 1469, 1603, 1410, 1407, 258, 1429, 1616, 1647, 1506,
	231, 153, 1653, 1504, 1503, 1590, 1434, 1626, 1490, 238,
	1432, 154, 1427, 1435, 1488, 269, 1600, 1608, 142, 157,
	1623, 1463, 1479, 191, 0, 298, 1576, 344, 1833, 1556,
	297, 241, 337, 1591, 1655, 343, 1491, 327, 351, 355,
	208, 1531, 182, 317, 200, 197, 1470, 1613, 1416, 216,
	287, 194, 234, 1509, 1582, 1464, 187, 1594, 1565, 1628,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1624, 1607,
	1630, 1457, 1436, 1448, 1437, 1478, 1657, 226, 217, 1631,
	1629, 348, 143, 307, 306, 1494, 225, 1610, 144, 136,
	294, 145, 232, 162, 1635, 357, 173, 236, 330, 1832,
	211, 268, 193, 1578, 277, 1476, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 1606, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 1663, 246,
	204, 207, 219, 229, 1577, 296, 324, 349, 1568, 171,
	164, 326, 342, 180, 308, 310, 356, 1602, 166, 1651,
	1625, 1558, 1512, 1518, 1418, 0, 165, 1598, 1468, 1483,
	1456, 1572, 1455, 213, 1589, 340, 341, 192, 358, 1430,
	1671, 167, 1431, 1670, 265, 272, 264, 1674, 336, 1652,
	1559, 1543, 1541, 1423, 1650, 1557, 1542, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1545, 0,
	163, 0, 321, 1661, 1686, 325, 177, 1450, 1617, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1593, 1683, 276, 299, 181, 346, 318, 201,
	1446, 1449, 1444, 1447, 1445, 1549, 1550, 1666, 1667, 1668,
	1605, 1438, 0, 1643, 1644, 0, 1536, 1654, 1424, 0,
	1621, 151, 152, 1585, 1681, 1496, 188, 1415, 1420, 1421,
	1422, 1439, 1526, 1527, 1555, 1562, 1639, 1638, 1637, 1640,
	1645, 1675, 1673, 1676, 1440, 1461, 1482, 1532, 1533, 1535,
	1569, 1570, 1615, 1588, 1597, 1554, 158, 168, 239, 1682,
	293, 210, 1406, 1414, 1443, 1451, 1452, 1453, 1454, 1459,
	1466, 0, 1473, 1481, 1484, 1485, 1493, 1499, 1500, 1501,
	1502, 1511, 1513, 1514, 1515, 1516, 1517, 1521, 1522, 1524,
	1537, 1538, 1544, 1552, 1553, 1561, 1563, 0, 1592, 1595,
	1604, 1609, 1612, 1618, 1620, 1627, 1632, 1634, 1672, 1680,
	1685, 347, 196, 1528, 1534, 1560, 1599, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1646, 1507, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1492, 160, 1641, 1677, 1573, 1587,
	1658, 1619, 328, 1510, 1662, 1460, 1489, 1679, 1495, 1498,
	1581, 1425, 1548, 273, 1486, 1426, 1408, 1465, 1412, 1477,
	1413, 1462, 199, 1458, 1622, 1551, 1660, 1530, 1574, 1584,
	198, 190, 1540, 1539, 1648, 1475, 1474, 1579, 1636, 1659,
	1529, 0, 1669, 240, 1633, 0, 350, 320, 257, 0,
	0, 1525, 1642, 1546, 1611, 1508, 1583, 1442, 1566, 1664,
	1487, 1575, 1665, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 1571, 1656,
	1480, 0, 1520, 1580, 1684, 1411, 1567, 0, 1417, 1428,
	1678, 1649, 1471, 1472, 202, 0, 0, 0, 0, 0,
	0, 0, 1523, 1547, 1601, 1505, 345, 1586, 1596, 1614,
	1497, 288, 215, 0, 0, 0, 0, 0, 0, 1828,
	0, 1467, 0, 1564, 0, 0, 0, 1433, 1419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 0, 1441, 1409, 1469, 1603, 1410,
	1407, 258, 1429, 1616, 1647, 1506, 231, 153, 1653, 1504,
	1503, 1590, 1434, 1626, 1490, 238, 1432, 154, 1427, 1435,
	1488, 269, 1600, 1608, 142, 157, 1623, 1463, 1479, 191,
	0, 298, 1576, 344, 1833, 1556, 297, 241, 337, 1591,
	1655, 343, 1491, 327, 351, 355, 208, 1531, 182, 317,
	200, 197, 1470, 1613, 1416, 216, 287, 194, 234, 1509,
	1582, 1464, 187, 1594, 1565, 1628, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1624, 1607, 1630, 1457, 1436, 1448,
	1437, 1478, 1657, 226, 217, 1631, 1629, 348, 143, 307,
	306, 1494, 225, 1610, 144, 136, 294, 145, 232, 162,
	1635, 357, 173, 236, 330, 1832, 211, 268, 193, 1578,
	277, 1476, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 1606, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 1663, 246, 204, 207, 219, 229,
	1577, 296, 324, 349, 1568, 171, 164, 326, 342, 180,
	308, 310, 356, 1602, 166, 1651, 1625, 1558, 1512, 1518,
	1418, 0, 165, 1598, 1468, 1483, 1456, 1572, 1455, 213,
	1589, 340, 341, 192, 358, 1430, 1671, 167, 1431, 1670,
	265, 272, 264, 1674, 336, 1652, 1559, 1543, 1541, 1423,
	1650, 1557, 1542, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1545, 0, 163, 0, 321, 1661,
	1686, 325, 177, 1450, 1617, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1593, 1683,
	276, 299, 181, 346, 318, 201, 1446, 1449, 1444, 1447,
	1445, 1549, 1550, 1666, 1667, 1668, 1605, 1438, 0, 1643,
	1644, 0, 1536, 1654, 1424, 0, 1621, 151, 152, 1585,
	1681, 1496, 188, 1415, 1420, 1421, 1422, 1439, 1526, 1527,
	1555, 1562, 1639, 1638, 1637, 1640, 1645, 1675, 1673, 1676,
	1440, 1461, 1482, 1532, 1533, 1535, 1569, 1570, 1615, 1588,
	1597, 1554, 158, 168, 239, 1682, 293, 210, 1406, 1414,
	1443, 1451, 1452, 1453, 1454, 1459, 1466, 0, 1473, 1481,
	1484, 1485, 1493, 1499, 1500, 1501, 1502, 1511, 1513, 1514,
	1515, 1516, 1517, 1521, 1522, 1524, 1537, 1538, 1544, 1552,
	1553, 1561, 1563, 0, 1592, 1595, 1604, 1609, 1612, 1618,
	1620, 1627, 1632, 1634, 1672, 1680, 1685, 347, 196, 1528,
	1534, 1560, 1599, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1646,
	1507, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1492, 160, 1641, 1677, 1573, 1587, 1658, 1619, 328, 1510,
	1662, 1460, 1489, 1679, 1495, 1498, 1581, 1425, 1548, 273,
	1486, 1426, 1408, 1465, 1412, 1477, 1413, 1462, 199, 1458,
	1622, 1551, 1660, 1530, 1574, 1584, 198, 190, 1540, 1539,
	1648, 1475, 1474, 1579, 1636, 1659, 1529, 0, 1669, 240,
	1633, 0, 350, 320, 257, 0, 0, 1525, 1642, 1546,
	1611, 1508, 1583, 1442, 1566, 1664, 1487, 1575, 1665, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 1571, 1656, 1480, 0, 1520, 1580,
	1684, 1411, 1567, 0, 1417, 1428, 1678, 1649, 1471, 1472,
	202, 0, 0, 0, 0, 0, 0, 0, 1523, 1547,
	1601, 1505, 345, 1586, 1596, 1614, 1497, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 1467, 0, 1564,
	0, 0, 0, 1433, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 1441, 1409, 1469, 1603, 1410, 1407, 258, 1429, 1616,
	1647, 1506, 231, 153, 1653, 1504, 1503, 1590, 1434, 1626,
	1490, 238, 1432, 154, 1427, 1435, 1488, 269, 1600, 1608,
	142, 157, 1623, 1463, 1479, 191, 0, 298, 1576, 344,
	1833, 1556, 297, 241, 337, 1591, 1655, 343, 1491, 327,
	351, 355, 208, 1531, 182, 317, 200, 197, 1470, 1613,
	1416, 216, 287, 194, 234, 1509, 1582, 1464, 187, 1594,
	1565, 1628, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1624, 1607, 1630, 1457, 1436, 1448, 1437, 1478, 1657, 226,
	217, 1631, 1629, 348, 143, 307, 306, 1494, 225, 1610,
	144, 136, 294, 145, 232, 162, 1635, 357, 173, 236,
	330, 1832, 211, 268, 193, 1578, 277, 1476, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 1606, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	1663, 246, 204, 207, 219, 229, 1577, 296, 324, 349,
	1568, 171, 164, 326, 342, 180, 308, 310, 356, 1602,
	166, 1651, 1625, 1558, 1512, 1518, 1418, 0, 165, 1598,
	1468, 1483, 1456, 1572, 1455, 213, 1589, 340, 341, 192,
	358, 1430, 1671, 167, 1431, 1670, 265, 272, 264, 1674,
	336, 1652, 1559, 1543, 1541, 1423, 1650, 1557, 1542, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1545, 0, 163, 0, 321, 1661, 1686, 325, 177, 1450,
	1617, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1593, 1683, 276, 299, 181, 346,
	318, 201, 1446, 1449, 1444, 1447, 1445, 1549, 1550, 1666,
	1667, 1668, 1605, 1438, 0, 1643, 1644, 0, 1536, 1654,
	1424, 0, 1621, 151, 152, 1585, 1681, 1496, 188, 1415,
	1420, 1421, 1422, 1439, 1526, 1527, 1555, 1562, 1639, 1638,
	1637, 1640, 1645, 1675, 1673, 1676, 1440, 1461, 1482, 1532,
	1533, 1535, 1569, 1570, 1615, 1588, 1597, 1554, 158, 168,
	239, 1682, 293, 210, 1406, 1414, 1443, 1451, 1452, 1453,
	1454, 1459, 1466, 0, 1473, 1481, 1484, 1485, 1493, 1499,
	1500, 1501, 1502, 1511, 1513, 1514, 1515, 1516, 1517, 1521,
	1522, 1524, 1537, 1538, 1544, 1552, 1553, 1561, 1563, 0,
	1592, 1595, 1604, 1609, 1612, 1618, 1620, 1627, 1632, 1634,
	1672, 1680, 1685, 347, 196, 1528, 1534, 1560, 1599, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 281, 282, 283, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1646, 1507, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1492, 160, 1641, 1677,
	1573, 1587, 809, 0, 328, 697, 813, 654, 677, 822,
	683, 686, 750, 629, 727, 273, 674, 630, 0, 0,
	621, 867, 622, 655, 199, 865, 783, 728, 811, 713,
	743, 753, 198, 190, 720, 719, 800, 666, 665, 748,
	796, 810, 0, 0, 906, 240, 0, 2542, 350, 320,
	257, 2545, 2544, 711, 0, 877, 892, 695, 752, 642,
	739, 815, 675, 744, 816, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	887, 902, 868, 2543, 706, 749, 827, 620, 884, 0,
	625, 856, 0, 801, 662, 663, 202, 0, 0, 0,
	0, 0, 0, 0, 709, 726, 768, 692, 345, 755,
	764, 778, 685, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 883, 0, 0, 0, 636,
	852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 871, 0, 0, 0, 641, 618, 660,
	770, 619, 617, 258, 632, 894, 799, 693, 231, 153,
	805, 691, 870, 758, 637, 787, 678, 238, 635, 154,
	631, 638, 676, 269, 767, 773, 142, 157, 784, 656,
	669, 191, 2540, 298, 745, 344, 2541, 731, 297, 241,
	337, 759, 807, 343, 679, 327, 351, 355, 208, 714,
	182, 317, 200, 197, 661, 777, 624, 216, 287, 194,
	234, 696, 751, 657, 187, 762, 738, 789, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 785, 772, 791, 652,
	639, 644, 640, 668, 808, 226, 217, 792, 790, 348,
	143, 307, 306, 682, 225, 775, 144, 136, 294, 145,
	232, 162, 795, 357, 173, 236, 330, 2539, 211, 268,
	193, 747, 277, 667, 156, 290, 252, 253, 251, 254,
	214, 140, 146, 771, 292, 309, 332, 175, 323, 138,
	139, 141, 148, 300, 149, 150, 814, 246, 204, 207,
	219, 229, 746, 296, 324, 349, 740, 171, 164, 326,
	342, 180, 308, 310, 356, 769, 166, 803, 786, 733,
	699, 705, 626, 0, 165, 765, 659, 671, 651, 741,
	650, 213, 757, 340, 341, 192, 358, 633, 818, 167,
	634, 817, 265, 272, 264, 820, 336, 804, 734, 723,
	721, 627, 802, 732, 722, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 725, 0, 163, 0,
	321, 812, 829, 325, 177, 645, 779, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	761, 826, 276, 299, 181, 346, 318, 201, 862, 864,
	860, 863, 861, 878, 879, 903, 904, 905, 891, 857,
	0, 899, 900, 0, 716, 806, 628, 0, 782, 151,
	152, 754, 824, 684, 188, 2546, 853, 854, 855, 2547,
	872, 873, 2548, 2549, 897, 896, 895, 898, 2550, 908,
	907, 909, 859, 866, 869, 874, 875, 876, 885, 886,
	893, 888, 889, 880, 158, 168, 239, 825, 293, 210,
	616, 623, 643, 646, 647, 648, 649, 653, 658, 0,
	664, 670, 672, 673, 681, 687, 688, 689, 690, 698,
	700, 701, 702, 703, 704, 707, 708, 710, 717, 718,
	724, 729, 730, 736, 737, 0, 760, 763, 890, 774,
	776, 780, 781, 788, 793, 794, 819, 823, 828, 347,
	196, 712, 715, 735, 766, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 281, 282, 283, 289, 147, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 798, 694, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 680, 160, 797, 821, 742, 756, 809, 0,
	328, 697, 813, 654, 677, 822, 683, 686, 750, 629,
	727, 273, 674, 630, 0, 0, 621, 867, 622, 655,
	199, 865, 783, 728, 811, 713, 743, 753, 198, 190,
	720, 719, 800, 666, 665, 748, 796, 810, 0, 0,
	906, 240, 0, 0, 350, 320, 257, 0, 0, 711,
	0, 877, 892, 695, 752, 642, 739, 815, 675, 744,
	816, 0, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 887, 902, 868, 0,
	706, 749, 827, 620, 884, 0, 625, 856, 0, 801,
	662, 663, 202, 0, 0, 0, 0, 0, 0, 0,
	709, 726, 768, 692, 345, 755, 764, 778, 685, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 0, 636, 852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 0, 641, 618, 660, 770, 619, 617, 258,
	632, 894, 799, 693, 231, 153, 805, 691, 870, 758,
	637, 787, 678, 238, 635, 154, 631, 638, 676, 269,
	767, 773, 142, 157, 784, 656, 669, 191, 0, 298,
	745, 344, 0, 731, 297, 241, 337, 759, 807, 343,
	679, 327, 351, 355, 208, 714, 182, 317, 200, 197,
	661, 777, 624, 216, 287, 194, 234, 696, 751, 657,
	187, 762, 738, 789, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 785, 772, 791, 652, 639, 644, 640, 668,
	808, 226, 217, 792, 790, 348, 143, 307, 306, 682,
	225, 775, 144, 136, 294, 145, 232, 162, 795, 357,
	173, 236, 330, 0, 211, 268, 193, 747, 277, 667,
	156, 290, 252, 253, 251, 254, 214, 140, 146, 771,
	292, 309, 332, 175, 323, 138, 139, 141, 148, 300,
	149, 150, 814, 246, 204, 207, 219, 229, 746, 296,
	324, 349, 740, 171, 164, 326, 342, 180, 308, 310,
	356, 769, 166, 803, 786, 733, 699, 705, 626, 0,
	165, 765, 659, 671, 651, 741, 650, 213, 757, 340,
	341, 192, 358, 633, 818, 167, 634, 817, 265, 272,
	264, 820, 336, 804, 734, 723, 721, 627, 802, 732,
	722, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 725, 0, 163, 0, 321, 812, 829, 325,
	177, 645, 779, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 761, 826, 276, 299,
	181, 346, 318, 201, 862, 864, 860, 863, 861, 878,
	879, 903, 904, 905, 891, 857, 0, 899, 900, 0,
	716, 806, 628, 0, 782, 151, 152, 754, 824, 684,
	188, 851, 853, 854, 855, 858, 872, 873, 881, 882,
	897, 896, 895, 898, 901, 908, 907, 909, 859, 866,
	869, 874, 875, 876, 885, 886, 893, 888, 889, 880,
	158, 168, 239, 825, 293, 210, 616, 623, 643, 646,
	647, 648, 649, 653, 658, 0, 664, 670, 672, 673,
	681, 687, 688, 689, 690, 698, 700, 701, 702, 703,
	704, 707, 708, 710, 717, 718, 724, 729, 730, 736,
	737, 0, 760, 763, 890, 774, 776, 780, 781, 788,
	793, 794, 819, 823, 828, 347, 196, 712, 715, 735,
	766, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 147, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 798, 694, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 680, 160,
	797, 821, 742, 756, 809, 0, 328, 697, 813, 654,
	677, 822, 683, 686, 750, 629, 727, 273, 674, 630,
	0, 0, 621, 867, 622, 655, 199, 865, 783, 728,
	811, 713, 743, 753, 198, 190, 720, 719, 800, 666,
	665, 748, 796, 810, 0, 0, 906, 240, 0, 0,
	350, 320, 257, 0, 0, 711, 0, 877, 892, 695,
	752, 642, 739, 815, 675, 744, 816, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 887, 902, 868, 0, 706, 749, 827, 620,
	884, 0, 625, 856, 0, 801, 662, 663, 202, 0,
	0, 0, 0, 0, 0, 0, 709, 726, 768, 692,
	345, 755, 764, 778, 685, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 883, 0, 0,
	0, 636, 852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 871, 0, 0, 0, 641,
	618, 660, 770, 619, 617, 258, 632, 894, 799, 693,
	231, 153, 805, 691, 870, 758, 637, 787, 678, 238,
	635, 154, 631, 638, 676, 269, 767, 773, 142, 157,
	784, 656, 669, 191, 0, 298, 745, 344, 0, 731,
	297, 241, 337, 759, 807, 343, 679, 327, 351, 355,
	208, 714, 182, 317, 200, 197, 661, 777, 624, 216,
	287, 194, 234, 696, 751, 657, 187, 762, 738, 789,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 785, 772,
	791, 652, 639, 644, 640, 668, 808, 226, 217, 792,
	790, 348, 143, 307, 306, 682, 225, 775, 144, 136,
	294, 145, 232, 162, 795, 357, 173, 236, 330, 0,
	211, 268, 193, 747, 277, 667, 156, 290, 252, 253,
	251, 254, 214, 140, 146, 771, 292, 309, 332, 175,
	323, 138, 139, 141, 148, 300, 149, 150, 814, 246,
	204, 207, 219, 229, 746, 296, 324, 349, 740, 171,
	164, 326, 342, 180, 308, 310, 356, 769, 166, 803,
	786, 733, 699, 705, 626, 0, 165, 765, 659, 671,
	651, 741, 650, 213, 757, 340, 341, 192, 358, 633,
	818, 167, 847, 817, 265, 272, 264, 820, 336, 804,
	734, 723, 721, 627, 802, 732, 722, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 843, 725, 0,
	163, 0, 321, 812, 829, 325, 177, 645, 779, 331,
	218, 291, 178, 212, 205, 284, 848, 846, 837, 838,
	235, 242, 761, 826, 276, 299, 181, 346, 318, 201,
	862, 864, 860, 863, 861, 878, 879, 903, 904, 905,
	891, 857, 0, 899, 900, 0, 716, 806, 628, 0,
	782, 151, 152, 754, 824, 684, 188, 851, 853, 854,
	855, 858, 872, 873, 881, 882, 897, 896, 895, 898,
	901, 908, 907, 909, 859, 866, 869, 874, 875, 876,
	885, 886, 893, 888, 889, 880, 158, 168, 239, 825,
	293, 210, 616, 623, 643, 646, 647, 648, 649, 653,
	658, 0, 664, 670, 672, 673, 681, 687, 688, 689,
	690, 698, 700, 701, 702, 703, 704, 707, 708, 710,
	717, 718, 724, 729, 730, 736, 737, 0, 760, 763,
	890, 774, 776, 780, 781, 788, 793, 794, 819, 823,
	828, 347, 196, 712, 715, 735, 766, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 844, 845, 289, 147, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 798, 694, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 680, 160, 797, 821, 742, 756,
	809, 0, 328, 697, 813, 654, 677, 822, 683, 686,
	750, 629, 727, 273, 674, 630, 0, 0, 621, 867,
	622, 655, 199, 865, 783, 728, 811, 713, 743, 753,
	198, 190, 720, 719, 800, 666, 665, 748, 796, 810,
	0, 0, 906, 240, 0, 0, 350, 320, 257, 0,
	0, 711, 0, 877, 892, 695, 752, 642, 739, 815,
	675, 744, 816, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 887, 902,
	868, 0, 706, 749, 827, 620, 884, 0, 625, 856,
	0, 801, 662, 663, 202, 0, 0, 0, 0, 0,
	0, 0, 709, 726, 768, 692, 345, 755, 764, 778,
	685, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 883, 0, 0, 0, 636, 852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 871, 0, 0, 0, 641, 618, 660, 770, 619,
	617, 258, 632, 894, 799, 693, 231, 153, 805, 691,
	870, 758, 637, 787, 678, 238, 635, 154, 631, 638,
	676, 269, 767, 773, 142, 157, 784, 656, 669, 191,
	0, 298, 745, 344, 0, 731, 297, 241, 337, 759,
	807, 343, 679, 327, 351, 355, 208, 714, 182, 317,
	200, 197, 661, 777, 624, 216, 287, 194, 234, 696,
	751, 657, 187, 762, 738, 789, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 785, 772, 791, 652, 639, 644,
	640, 668, 808, 226, 217, 792, 790, 348, 143, 307,
	306, 682, 225, 775, 144, 136, 294, 145, 232, 162,
	795, 357, 173, 236, 330, 0, 211, 268, 193, 747,
	277, 667, 156, 290, 252, 253, 251, 254, 214, 140,
	146, 771, 292, 309, 332, 175, 323, 138, 139, 141,
	148, 300, 149, 150, 814, 246, 204, 207, 219, 229,
	746, 296, 324, 349, 740, 171, 164, 326, 1276, 180,
	308, 310, 356, 769, 166, 803, 786, 733, 699, 705,
	626, 0, 165, 765, 659, 671, 651, 741, 650, 213,
	757, 340, 341, 192, 358, 633, 818, 167, 634, 817,
	265, 272, 264, 820, 336, 804, 734, 723, 721, 627,
	802, 732, 722, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 725, 0, 163, 0, 321, 812,
	829, 325, 177, 645, 779, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 761, 826,
	276, 299, 181, 346, 318, 201, 862, 864, 860, 863,
	861, 878, 879, 903, 904, 905, 891, 857, 0, 899,
	900, 0, 716, 806, 628, 0, 782, 151, 152, 754,
	824, 684, 188, 851, 853, 854, 855, 858, 872, 873,
	881, 882, 897, 896, 895, 898, 901, 908, 907, 909,
	859, 866, 869, 874, 875, 876, 885, 886, 893, 888,
	889, 880, 158, 168, 239, 825, 293, 210, 616, 623,
	643, 646, 647, 648, 649, 653, 658, 0, 664, 670,
	672, 673, 681, 687, 688, 689, 690, 698, 700, 701,
	702, 703, 704, 707, 708, 710, 717, 718, 724, 729,
	730, 736, 737, 0, 760, 763, 890, 774, 776, 780,
	781, 788, 793, 794, 819, 823, 828, 347, 196, 712,
	715, 735, 766, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 147, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 798,
	694, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	680, 160, 797, 821, 742, 756, 809, 0, 328, 697,
	813, 654, 677, 822, 683, 686, 750, 629, 727, 273,
	674, 630, 0, 0, 621, 867, 622, 655, 199, 865,
	783, 728, 811, 713, 743, 753, 198, 190, 720, 719,
	800, 666, 665, 748, 796, 810, 0, 0, 906, 240,
	0, 0, 350, 320, 257, 0, 0, 711, 0, 877,
	892, 695, 752, 642, 739, 815, 675, 744, 816, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 887, 902, 868, 0, 706, 749,
	827, 620, 884, 0, 625, 856, 0, 801, 662, 663,
	202, 0, 0, 0, 0, 0, 0, 0, 709, 726,
	768, 692, 345, 755, 764, 778, 685, 288, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 883,
	0, 0, 0, 636, 852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 641, 618, 660, 770, 619, 617, 258, 632, 894,
	799, 693, 231, 153, 805, 691, 870, 758, 637, 787,
	678, 238, 635, 154, 631, 638, 676, 269, 767, 773,
	142, 157, 784, 656, 669, 191, 0, 298, 745, 344,
	0, 731, 297, 241, 337, 759, 807, 343, 679, 327,
	351, 355, 208, 714, 182, 317, 200, 197, 661, 777,
	624, 216, 287, 194, 234, 696, 751, 657, 187, 762,
	738, 789, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	785, 772, 791, 652, 639, 644, 640, 668, 808, 226,
	217, 792, 790, 348, 143, 307, 306, 682, 225, 775,
	144, 136, 294, 145, 232, 162, 795, 357, 173, 236,
	330, 0, 211, 268, 193, 747, 277, 667, 156, 290,
	252, 253, 251, 254, 214, 140, 146, 771, 292, 309,
	332, 175, 323, 138, 139, 141, 148, 300, 149, 150,
	814, 246, 204, 207, 219, 229, 746, 296, 324, 349,
	740, 171, 164, 326, 834, 180, 308, 310, 356, 769,
	166, 803, 786, 733, 699, 705, 626, 0, 165, 765,
	659, 671, 651, 741, 650, 213, 757, 340, 341, 192,
	358, 633, 818, 167, 847, 817, 265, 272, 264, 820,
	336, 804, 734, 723, 721, 627, 802, 732, 722, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 843,
	725, 0, 163, 0, 321, 812, 829, 325, 177, 645,
	779, 331, 218, 291, 178, 212, 205, 284, 848, 846,
	837, 838, 235, 242, 761, 826, 276, 299, 181, 346,
	318, 201, 862, 864, 860, 863, 861, 878, 879, 903,
	904, 905, 891, 857, 0, 899, 900, 0, 716, 806,
	628, 0, 782, 151, 152, 754, 824, 684, 188, 851,
	853, 854, 855, 858, 872, 873, 881, 882, 897, 896,
	895, 898, 901, 908, 907, 909, 859, 866, 869, 874,
	875, 876, 885, 886, 893, 888, 889, 880, 158, 168,
	239, 825, 293, 210, 616, 623, 643, 646, 647, 648,
	649, 653, 658, 0, 664, 670, 672, 673, 681, 687,
	688, 689, 690, 698, 700, 701, 702, 703, 704, 707,
	708, 710, 717, 718, 724, 729, 730, 736, 737, 0,
	760, 763, 890, 774, 776, 780, 781, 788, 793, 794,
	819, 823, 828, 347, 196, 712, 715, 735, 766, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 281, 844, 845, 289, 147,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 798, 694, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 680, 160, 797, 821,
	742, 756, 1658, 1619, 328, 1510, 1662, 1460, 1489, 1679,
	1495, 1498, 1581, 1425, 1548, 273, 1486, 1426, 1408, 1465,
	1412, 1477, 1413, 1462, 199, 1458, 1622, 1551, 1660, 1530,
	1574, 1584, 198, 190, 1540, 1539, 1648, 1475, 1474, 1579,
	1636, 1659, 1529, 0, 1669, 240, 1633, 0, 350, 320,
	257, 0, 0, 1525, 1642, 1546, 1611, 1508, 1583, 1442,
	1566, 1664, 1487, 1575, 1665, 0, 0, 0, 0, 929,
	0, 1981, 1982, 0, 0, 0, 0, 0, 1983, 0,
	1571, 1656, 1480, 0, 1520, 1580, 1684, 1411, 1567, 0,
	1417, 1428, 1678, 1649, 1471, 1472, 202, 2302, 0, 0,
	0, 0, 0, 0, 1523, 1547, 1601, 1505, 345, 1586,
	1596, 1614, 1497, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 1564, 0, 0, 0, 1433,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 0, 1441, 1409, 1469,
	1603, 1410, 1407, 258, 1429, 1616, 1647, 1506, 231, 0,
	1653, 1504, 1503, 1590, 1434, 1626, 1490, 238, 1432, 154,
	1427, 1435, 1488, 269, 1600, 1608, 0, 157, 1623, 1463,
	1479, 191, 0, 298, 1576, 344, 0, 1556, 297, 241,
	337, 1591, 1655, 343, 1491, 327, 351, 355, 208, 1531,
	182, 317, 200, 197, 1470, 1613, 1416, 216, 287, 194,
	234, 1509, 1582, 1464, 187, 1594, 1565, 1628, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1624, 1607, 1630, 1457,
	1436, 1448, 1437, 1478, 1657, 226, 217, 1631, 1629, 348,
	0, 307, 306, 1494, 225, 1610, 0, 0, 294, 1985,
	232, 162, 1635, 357, 173, 236, 330, 0, 211, 268,
	193, 1578, 277, 1476, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 1606, 292, 309, 332, 175, 323, 1984,
	0, 0, 0, 300, 0, 0, 1663, 246, 204, 207,
	219, 229, 1577, 296, 324, 349, 1568, 171, 164, 326,
	342, 180, 308, 310, 356, 1602, 166, 1651, 1625, 1558,
	1512, 1518, 1418, 0, 165, 1598, 1468, 1483, 1456, 1572,
	1455, 213, 1589, 340, 341, 192, 358, 1430, 1671, 167,
	1431, 1670, 265, 272, 264, 1674, 336, 1652, 1559, 1543,
	1541, 1423, 1650, 1557, 1542, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1545, 0, 163, 0,
	321, 1661, 1686, 325, 177, 1450, 1617, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1593, 1683, 276, 299, 181, 346, 318, 201, 1446, 1449,
	1444, 1447, 1445, 1549, 1550, 1666, 1667, 1668, 1605, 1438,
	0, 1643, 1644, 0, 1536, 1654, 1424, 0, 1621, 0,
	0, 1585, 1681, 1496, 188, 1415, 1420, 1421, 1422, 1439,
	1526, 1527, 1555, 1562, 1639, 1638, 1637, 1640, 1645, 1675,
	1673, 1676, 1440, 1461, 1482, 1532, 1533, 1535, 1569, 1570,
	1615, 1588, 1597, 1554, 158, 168, 239, 1682, 293, 210,
	1406, 1414, 1443, 1451, 1452, 1453, 1454, 1459, 1466, 0,
	1473, 1481, 1484, 1485, 1493, 1499, 1500, 1501, 1502, 1511,
	1513, 1514, 1515, 1516, 1517, 1521, 1522, 1524, 1537, 1538,
	1544, 1552, 1553, 1561, 1563, 0, 1592, 1595, 1604, 1609,
	1612, 1618, 1620, 1627, 1632, 1634, 1672, 1680, 1685, 347,
	196, 1528, 1534, 1560, 1599, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 281, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1646, 1507, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1492, 160, 1641, 1677, 1573, 1587, 1658, 1619,
	328, 1510, 1662, 1460, 1489, 1679, 1495, 1498, 1581, 1425,
	1548, 273, 1486, 1426, 1408, 1465, 1412, 1477, 1413, 1462,
	199, 1458, 1622, 1551, 1660, 1530, 1574, 1584, 198, 190,
	1540, 1539, 1648, 1475, 1474, 1579, 1636, 1659, 1529, 0,
	1669, 240, 1633, 0, 350, 320, 257, 0, 0, 1525,
	1642, 1546, 1611, 1508, 1583, 1442, 1566, 1664, 1487, 1575,
	1665, 0, 0, 0, 0, 929, 0, 1981, 1982, 0,
	0, 0, 0, 0, 1983, 0, 1571, 1656, 1480, 0,
	1520, 1580, 1684, 1411, 1567, 0, 1417, 1428, 1678, 1649,
	1471, 1472, 202, 0, 0, 0, 0, 0, 0, 0,
	1523, 1547, 1601, 1505, 345, 1586, 1596, 1614, 1497, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	0, 1564, 0, 0, 0, 1433, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 1441, 1409, 1469, 1603, 1410, 1407, 258,
	1429, 1616, 1647, 1506, 231, 0, 1653, 1504, 1503, 1590,
	1434, 1626, 1490, 238, 1432, 154, 1427, 1435, 1488, 269,
	1600, 1608, 0, 157, 1623, 1463, 1479, 191, 0, 298,
	1576, 344, 0, 1556, 297, 241, 337, 1591, 1655, 343,
	1491, 327, 351, 355, 208, 1531, 182, 317, 200, 197,
	1470, 1613, 1416, 216, 287, 194, 234, 1509, 1582, 1464,
	187, 1594, 1565, 1628, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1624, 1607, 1630, 1457, 1436, 1448, 1437, 1478,
	1657, 226, 217, 1631, 1629, 348, 0, 307, 306, 1494,
	225, 1610, 0, 0, 294, 1985, 232, 162, 1635, 357,
	173, 236, 330, 0, 211, 268, 193, 1578, 277, 1476,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 1606,
	292, 309, 332, 175, 323, 1984, 0, 0, 0, 300,
	0, 0, 1663, 246, 204, 207, 219, 229, 1577, 296,
	324, 349, 1568, 171, 164, 326, 342, 180, 308, 310,
	356, 1602, 166, 1651, 1625, 1558, 1512, 1518, 1418, 0,
	165, 1598, 1468, 1483, 1456, 1572, 1455, 213, 1589, 340,
	341, 192, 358, 1430, 1671, 167, 1431, 1670, 265, 272,
	264, 1674, 336, 1652, 1559, 1543, 1541, 1423, 1650, 1557,
	1542, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1545, 0, 163, 0, 321, 1661, 1686, 325,
	177, 1450, 1617, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1593, 1683, 276, 299,
	181, 346, 318, 201, 1446, 1449, 1444, 1447, 1445, 1549,
	1550, 1666, 1667, 1668, 1605, 1438, 0, 1643, 1644, 0,
	1536, 1654, 1424, 0, 1621, 0, 0, 1585, 1681, 1496,
	188, 1415, 1420, 1421, 1422, 1439, 1526, 1527, 1555, 1562,
	1639, 1638, 1637, 1640, 1645, 1675, 1673, 1676, 1440, 1461,
	1482, 1532, 1533, 1535, 1569, 1570, 1615, 1588, 1597, 1554,
	158, 168, 239, 1682, 293, 210, 1406, 1414, 1443, 1451,
	1452, 1453, 1454, 1459, 1466, 0, 1473, 1481, 1484, 1485,
	1493, 1499, 1500, 1501, 1502, 1511, 1513, 1514, 1515, 1516,
	1517, 1521, 1522, 1524, 1537, 1538, 1544, 1552, 1553, 1561,
	1563, 0, 1592, 1595, 1604, 1609, 1612, 1618, 1620, 1627,
	1632, 1634, 1672, 1680, 1685, 347, 196, 1528, 1534, 1560,
	1599, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1646, 1507, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1492, 160,
	1641, 1677, 1573, 1587, 1658, 1619, 328, 1510, 1662, 1460,
	1489, 1679, 1495, 1498, 1581, 1425, 1548, 273, 1486, 1426,
	1408, 1465, 1412, 1477, 1413, 1462, 199, 1458, 1622, 1551,
	1660, 1530, 1574, 1584, 198, 190, 1540, 1539, 1648, 1475,
	1474, 1579, 1636, 1659, 1529, 0, 1669, 240, 1633, 0,
	350, 320, 257, 0, 0, 1525, 1642, 1546, 1611, 1508,
	1583, 1442, 1566, 1664, 1487, 1575, 1665, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 1656, 1480, 0, 1520, 1580, 1684, 1411,
	1567, 0, 1417, 1428, 1678, 1649, 1471, 1472, 202, 0,
	0, 0, 0, 0, 0, 0, 1523, 1547, 1601, 1505,
	345, 1586, 1596, 1614, 1497, 288, 215, 0, 0, 0,
	0, 0, 0, 2906, 0, 1467, 0, 1564, 0, 0,
	0, 1433, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 1441,
	1409, 1469, 1603, 1410, 1407, 258, 1429, 1616, 1647, 1506,
	231, 0, 1653, 1504, 1503, 1590, 1434, 1626, 1490, 238,
	1432, 154, 1427, 1435, 1488, 269, 1600, 1608, 0, 157,
	1623, 1463, 1479, 191, 0, 298, 1576, 344, 0, 1556,
	297, 241, 337, 1591, 1655, 343, 1491, 327, 351, 355,
	208, 1531, 182, 317, 200, 197, 1470, 1613, 1416, 216,
	287, 194, 234, 1509, 1582, 1464, 187, 1594, 1565, 1628,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1624, 1607,
	1630, 1457, 1436, 1448, 1437, 1478, 1657, 226, 217, 1631,
	1629, 348, 0, 307, 306, 1494, 225, 1610, 0, 0,
	294, 0, 232, 162, 1635, 357, 173, 236, 330, 0,
	211, 268, 193, 1578, 277, 1476, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 1606, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 1663, 246,
	204, 207, 219, 229, 1577, 296, 324, 349, 1568, 171,
	164, 326, 342, 180, 308, 310, 356, 1602, 166, 1651,
	1625, 1558, 1512, 1518, 1418, 0, 165, 1598, 1468, 1483,
	1456, 1572, 1455, 213, 1589, 340, 341, 192, 358, 1430,
	1671, 167, 1431, 1670, 265, 272, 264, 1674, 336, 1652,
	1559, 1543, 1541, 1423, 1650, 1557, 1542, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1545, 0,
	163, 0, 321, 1661, 1686, 325, 177, 1450, 1617, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1593, 1683, 276, 299, 181, 346, 318, 201,
	1446, 1449, 1444, 1447, 1445, 1549, 1550, 1666, 1667, 1668,
	1605, 1438, 0, 1643, 1644, 0, 1536, 1654, 1424, 0,
	1621, 0, 0, 1585, 1681, 1496, 188, 1415, 1420, 1421,
	1422, 1439, 1526, 1527, 1555, 1562, 1639, 1638, 1637, 1640,
	1645, 1675, 1673, 1676, 1440, 1461, 1482, 1532, 1533, 1535,
	1569, 1570, 1615, 1588, 1597, 1554, 158, 168, 239, 1682,
	293, 210, 1406, 1414, 1443, 1451, 1452, 1453, 1454, 1459,
	1466, 0, 1473, 1481, 1484, 1485, 1493, 1499, 1500, 1501,
	1502, 1511, 1513, 1514, 1515, 1516, 1517, 1521, 1522, 1524,
	1537, 1538, 1544, 1552, 1553, 1561, 1563, 0, 1592, 1595,
	1604, 1609, 1612, 1618, 1620, 1627, 1632, 1634, 1672, 1680,
	1685, 347, 196, 1528, 1534, 1560, 1599, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1646, 1507, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 1492, 160, 1641, 1677, 1573, 1587,
	1658, 1619, 328, 1510, 1662, 1460, 1489, 1679, 1495, 1498,
	1581, 1425, 1548, 273, 1486, 1426, 1408, 1465, 1412, 1477,
	1413, 1462, 199, 1458, 1622, 1551, 1660, 1530, 1574, 1584,
	198, 190, 1540, 1539, 1648, 1475, 1474, 1579, 1636, 1659,
	1529, 0, 1669, 240, 1633, 0, 350, 320, 257, 0,
	0, 1525, 1642, 1546, 1611, 1508, 1583, 1442, 1566, 1664,
	1487, 1575, 1665, 0, 0, 0, 0, 929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1571, 1656,
	1480, 0, 1520, 1580, 1684, 1411, 1567, 0, 1417, 1428,
	1678, 1649, 1471, 1472, 202, 0, 0, 0, 0, 0,
	0, 0, 1523, 1547, 1601, 1505, 345, 1586, 1596, 1614,
	1497, 288, 215, 0, 0, 0, 0, 0, 0, 2465,
	0, 1467, 0, 1564, 0, 0, 0, 1433, 1419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 0, 1441, 1409, 1469, 1603, 1410,
	1407, 258, 1429, 1616, 1647, 1506, 231, 0, 1653, 1504,
	1503, 1590, 1434, 1626, 1490, 238, 1432, 154, 1427, 1435,
	1488, 269, 1600, 1608, 0, 157, 1623, 1463, 1479, 191,
	0, 298, 1576, 344, 0, 1556, 297, 241, 337, 1591,
	1655, 343, 1491, 327, 351, 355, 208, 1531, 182, 317,
	200, 197, 1470, 1613, 1416, 216, 287, 194, 234, 1509,
	1582, 1464, 187, 1594, 1565, 1628, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 1624, 1607, 1630, 1457, 1436, 1448,
	1437, 1478, 1657, 226, 217, 1631, 1629, 348, 0, 307,
	306, 1494, 225, 1610, 0, 0, 294, 0, 232, 162,
	1635, 357, 173, 236, 330, 0, 211, 268, 193, 1578,
	277, 1476, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 1606, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 1663, 246, 204, 207, 219, 229,
	1577, 296, 324, 349, 1568, 171, 164, 326, 342, 180,
	308, 310, 356, 1602, 166, 1651, 1625, 1558, 1512, 1518,
	1418, 0, 165, 1598, 1468, 1483, 1456, 1572, 1455, 213,
	1589, 340, 341, 192, 358, 1430, 1671, 167, 1431, 1670,
	265, 272, 264, 1674, 336, 1652, 1559, 1543, 1541, 1423,
	1650, 1557, 1542, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 1545, 0, 163, 0, 321, 1661,
	1686, 325, 177, 1450, 1617, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 1593, 1683,
	276, 299, 181, 346, 318, 201, 1446, 1449, 1444, 1447,
	1445, 1549, 1550, 1666, 1667, 1668, 1605, 1438, 0, 1643,
	1644, 0, 1536, 1654, 1424, 0, 1621, 0, 0, 1585,
	1681, 1496, 188, 1415, 1420, 1421, 1422, 1439, 1526, 1527,
	1555, 1562, 1639, 1638, 1637, 1640, 1645, 1675, 1673, 1676,
	1440, 1461, 1482, 1532, 1533, 1535, 1569, 1570, 1615, 1588,
	1597, 1554, 158, 168, 239, 1682, 293, 210, 1406, 1414,
	1443, 1451, 1452, 1453, 1454, 1459, 1466, 0, 1473, 1481,
	1484, 1485, 1493, 1499, 1500, 1501, 1502, 1511, 1513, 1514,
	1515, 1516, 1517, 1521, 1522, 1524, 1537, 1538, 1544, 1552,
	1553, 1561, 1563, 0, 1592, 1595, 1604, 1609, 1612, 1618,
	1620, 1627, 1632, 1634, 1672, 1680, 1685, 347, 196, 1528,
	1534, 1560, 1599, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 1646,
	1507, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	1492, 160, 1641, 1677, 1573, 1587, 1658, 1619, 328, 1510,
	1662, 1460, 1489, 1679, 1495, 1498, 1581, 1425, 1548, 273,
	1486, 1426, 1408, 1465, 1412, 1477, 1413, 1462, 199, 1458,
	1622, 1551, 1660, 1530, 1574, 1584, 198, 190, 1540, 1539,
	1648, 1475, 1474, 1579, 1636, 1659, 1529, 0, 1669, 240,
	1633, 0, 350, 320, 257, 0, 0, 1525, 1642, 1546,
	1611, 1508, 1583, 1442, 1566, 1664, 1487, 1575, 1665, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1571, 1656, 1480, 0, 1520, 1580,
	1684, 1411, 1567, 0, 1417, 1428, 1678, 1649, 1471, 1472,
	202, 0, 0, 0, 0, 0, 0, 0, 1523, 1547,
	1601, 1505, 345, 1586, 1596, 1614, 1497, 288, 215, 0,
	0, 0, 0, 0, 0, 2290, 0, 1467, 0, 1564,
	0, 0, 0, 1433, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 1441, 1409, 1469, 1603, 1410, 1407, 258, 1429, 1616,
	1647, 1506, 231, 0, 1653, 1504, 1503, 1590, 1434, 1626,
	1490, 238, 1432, 154, 1427, 1435, 1488, 269, 1600, 1608,
	0, 157, 1623, 1463, 1479, 191, 0, 298, 1576, 344,
	0, 1556, 297, 241, 337, 1591, 1655, 343, 1491, 327,
	351, 355, 208, 1531, 182, 317, 200, 197, 1470, 1613,
	1416, 216, 287, 194, 234, 1509, 1582, 1464, 187, 1594,
	1565, 1628, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	1624, 1607, 1630, 1457, 1436, 1448, 1437, 1478, 1657, 226,
	217, 1631, 1629, 348, 0, 307, 306, 1494, 225, 1610,
	0, 0, 294, 0, 232, 162, 1635, 357, 173, 236,
	330, 0, 211, 268, 193, 1578, 277, 1476, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 1606, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	1663, 246, 204, 207, 219, 229, 1577, 296, 324, 349,
	1568, 171, 164, 326, 342, 180, 308, 310, 356, 1602,
	166, 1651, 1625, 1558, 1512, 1518, 1418, 0, 165, 1598,
	1468, 1483, 1456, 1572, 1455, 213, 1589, 340, 341, 192,
	358, 1430, 1671, 167, 1431, 1670, 265, 272, 264, 1674,
	336, 1652, 1559, 1543, 1541, 1423, 1650, 1557, 1542, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	1545, 0, 163, 0, 321, 1661, 1686, 325, 177, 1450,
	1617, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 1593, 1683, 276, 299, 181, 346,
	318, 201, 1446, 1449, 1444, 1447, 1445, 1549, 1550, 1666,
	1667, 1668, 1605, 1438, 0, 1643, 1644, 0, 1536, 1654,
	1424, 0, 1621, 0, 0, 1585, 1681, 1496, 188, 1415,
	1420, 1421, 1422, 1439, 1526, 1527, 1555, 1562, 1639, 1638,
	1637, 1640, 1645, 1675, 1673, 1676, 1440, 1461, 1482, 1532,
	1533, 1535, 1569, 1570, 1615, 1588, 1597, 1554, 158, 168,
	239, 1682, 293, 210, 1406, 1414, 1443, 1451, 1452, 1453,
	1454, 1459, 1466, 0, 1473, 1481, 1484, 1485, 1493, 1499,
	1500, 1501, 1502, 1511, 1513, 1514, 1515, 1516, 1517, 1521,
	1522, 1524, 1537, 1538, 1544, 1552, 1553, 1561, 1563, 0,
	1592, 1595, 1604, 1609, 1612, 1618, 1620, 1627, 1632, 1634,
	1672, 1680, 1685, 347, 196, 1528, 1534, 1560, 1599, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 281, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 1646, 1507, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 1492, 160, 1641, 1677,
	1573, 1587, 1658, 1619, 328, 1510, 1662, 1460, 1489, 1679,
	1495, 1498, 1581, 1425, 1548, 273, 1486, 1426, 1408, 1465,
	1412, 1477, 1413, 1462, 199, 1458, 1622, 1551, 1660, 1530,
	1574, 1584, 198, 190, 1540, 1539, 1648, 1475, 1474, 1579,
	1636, 1659, 1529, 0, 1669, 240, 1633, 0, 350, 320,
	257, 0, 0, 1525, 1642, 1546, 1611, 1508, 1583, 1442,
	1566, 1664, 1487, 1575, 1665, 0, 0, 0, 0, 929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1571, 1656, 1480, 0, 1520, 1580, 1684, 1411, 1567, 0,
	1417, 1428, 1678, 1649, 1471, 1472, 202, 0, 0, 0,
	0, 0, 0, 0, 1523, 1547, 1601, 1505, 345, 1586,
	1596, 1614, 1497, 288, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 1467, 0, 1564, 0, 0, 0, 1433,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 0, 1441, 1409, 1469,
	1603, 1410, 1407, 258, 1429, 1616, 1647, 1506, 231, 0,
	1653, 1504, 1503, 1590, 1434, 1626, 1490, 238, 1432, 154,
	1427, 1435, 1488, 269, 1600, 1608, 0, 157, 1623, 1463,
	1479, 191, 0, 298, 1576, 344, 0, 1556, 297, 241,
	337, 1591, 1655, 343, 1491, 327, 351, 355, 208, 1531,
	182, 317, 200, 197, 1470, 1613, 1416, 216, 287, 194,
	234, 1509, 1582, 1464, 187, 1594, 1565, 1628, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 1624, 1607, 1630, 1457,
	1436, 1448, 1437, 1478, 1657, 226, 217, 1631, 1629, 348,
	0, 307, 306, 1494, 225, 1610, 0, 0, 294, 0,
	232, 162, 1635, 357, 173, 236, 330, 0, 211, 268,
	193, 1578, 277, 1476, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 1606, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 1663, 246, 204, 207,
	219, 229, 1577, 296, 324, 349, 1568, 171, 164, 326,
	342, 180, 308, 310, 356, 1602, 166, 1651, 1625, 1558,
	1512, 1518, 1418, 0, 165, 1598, 1468, 1483, 1456, 1572,
	1455, 213, 1589, 340, 341, 192, 358, 1430, 1671, 167,
	1431, 1670, 265, 272, 264, 1674, 336, 1652, 1559, 1543,
	1541, 1423, 1650, 1557, 1542, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 1545, 0, 163, 0,
	321, 1661, 1686, 325, 177, 1450, 1617, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	1593, 1683, 276, 299, 181, 346, 318, 201, 1446, 1449,
	1444, 1447, 1445, 1549, 1550, 1666, 1667, 1668, 1605, 1438,
	0, 1643, 1644, 0, 1536, 1654, 1424, 0, 1621, 0,
	0, 1585, 1681, 1496, 188, 1415, 1420, 1421, 1422, 1439,
	1526, 1527, 1555, 1562, 1639, 1638, 1637, 1640, 1645, 1675,
	1673, 1676, 1440, 1461, 1482, 1532, 1533, 1535, 1569, 1570,
	1615, 1588, 1597, 1554, 158, 168, 239, 1682, 293, 210,
	1406, 1414, 1443, 1451, 1452, 1453, 1454, 1459, 1466, 0,
	1473, 1481, 1484, 1485, 1493, 1499, 1500, 1501, 1502, 1511,
	1513, 1514, 1515, 1516, 1517, 1521, 1522, 1524, 1537, 1538,
	1544, 1552, 1553, 1561, 1563, 0, 1592, 1595, 1604, 1609,
	1612, 1618, 1620, 1627, 1632, 1634, 1672, 1680, 1685, 347,
	196, 1528, 1534, 1560, 1599, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 281, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 1646, 1507, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 1492, 160, 1641, 1677, 1573, 1587, 1658, 1619,
	328, 1510, 1662, 1460, 1489, 1679, 1495, 1498, 1581, 1425,
	1548, 273, 1486, 1426, 1408, 1465, 1412, 1477, 1413, 1462,
	199, 1458, 1622, 1551, 1660, 1530, 1574, 1584, 198, 190,
	1540, 1539, 1648, 1475, 1474, 1579, 1636, 1659, 1529, 0,
	1669, 240, 1633, 0, 350, 320, 257, 0, 0, 1525,
	1642, 1546, 1611, 1508, 1583, 1442, 1566, 1664, 1487, 1575,
	1665, 0, 0, 0, 0, 3223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1571, 1656, 1480, 0,
	1520, 1580, 1684, 1411, 1567, 0, 1417, 1428, 1678, 1649,
	1471, 1472, 202, 0, 0, 0, 0, 0, 0, 0,
	1523, 1547, 1601, 1505, 345, 1586, 1596, 1614, 1497, 288,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 1467,
	0, 1564, 0, 0, 0, 1433, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 1441, 1409, 1469, 1603, 1410, 1407, 258,
	1429, 1616, 1647, 1506, 231, 0, 1653, 1504, 1503, 1590,
	1434, 1626, 1490, 238, 1432, 154, 1427, 1435, 1488, 269,
	1600, 1608, 0, 157, 1623, 1463, 1479, 191, 0, 298,
	1576, 344, 0, 1556, 297, 241, 337, 1591, 1655, 343,
	1491, 327, 351, 355, 208, 1531, 182, 317, 200, 197,
	1470, 1613, 1416, 216, 287, 194, 234, 1509, 1582, 1464,
	187, 1594, 1565, 1628, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 1624, 1607, 1630, 1457, 1436, 1448, 3226, 3227,
	3228, 226, 217, 1631, 1629, 348, 0, 307, 306, 1494,
	225, 1610, 0, 0, 294, 0, 232, 162, 1635, 357,
	173, 236, 330, 0, 211, 268, 193, 1578, 277, 1476,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 1606,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 1663, 246, 204, 207, 219, 229, 1577, 296,
	324, 349, 1568, 171, 164, 326, 342, 180, 308, 310,
	356, 1602, 166, 1651, 1625, 1558, 1512, 1518, 1418, 0,
	165, 1598, 1468, 1483, 1456, 1572, 1455, 213, 1589, 340,
	341, 192, 358, 1430, 1671, 167, 1431, 1670, 265, 272,
	264, 1674, 336, 1652, 1559, 1543, 1541, 1423, 1650, 1557,
	1542, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 1545, 0, 163, 0, 321, 1661, 1686, 325,
	177, 1450, 1617, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 1593, 1683, 276, 299,
	181, 346, 318, 201, 1446, 1449, 1444, 1447, 1445, 1549,
	1550, 1666, 1667, 1668, 1605, 1438, 0, 1643, 1644, 0,
	1536, 1654, 1424, 0, 1621, 0, 0, 1585, 1681, 1496,
	188, 1415, 1420, 1421, 1422, 1439, 1526, 1527, 1555, 1562,
	1639, 1638, 1637, 1640, 1645, 1675, 1673, 1676, 1440, 1461,
	1482, 1532, 1533, 1535, 1569, 1570, 1615, 1588, 1597, 1554,
	158, 168, 239, 1682, 293, 210, 1406, 1414, 1443, 1451,
	1452, 1453, 1454, 1459, 1466, 0, 1473, 1481, 1484, 1485,
	1493, 1499, 1500, 1501, 1502, 1511, 1513, 1514, 1515, 1516,
	1517, 1521, 1522, 1524, 1537, 1538, 1544, 1552, 1553, 1561,
	1563, 0, 1592, 1595, 1604, 1609, 1612, 1618, 1620, 1627,
	1632, 1634, 1672, 1680, 1685, 347, 196, 1528, 1534, 1560,
	1599, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 1646, 1507, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 1492, 160,
	1641, 1677, 1573, 1587, 1658, 1619, 328, 1510, 1662, 1460,
	1489, 1679, 1495, 1498, 1581, 1425, 1548, 273, 1486, 1426,
	1408, 1465, 1412, 1477, 1413, 1462, 199, 1458, 1622, 1551,
	1660, 1530, 1574, 1584, 198, 190, 1540, 1539, 1648, 1475,
	1474, 1579, 1636, 1659, 1529, 0, 1669, 240, 1633, 0,
	350, 320, 257, 0, 0, 1525, 1642, 1546, 1611, 1508,
	1583, 1442, 1566, 1664, 1487, 1575, 1665, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1571, 1656, 1480, 0, 1520, 1580, 1684, 1411,
	1567, 0, 1417, 1428, 1678, 1649, 1471, 1472, 202, 0,
	0, 0, 0, 0, 0, 0, 1523, 1547, 1601, 1505,
	345, 1586, 1596, 1614, 1497, 288, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 1467, 0, 1564, 0, 0,
	0, 1433, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 1441,
	1409, 1469, 1603, 1410, 1407, 258, 1429, 1616, 1647, 1506,
	231, 0, 1653, 1504, 1503, 1590, 1434, 1626, 1490, 238,
	1432, 154, 1427, 1435, 1488, 269, 1600, 1608, 0, 157,
	1623, 1463, 1479, 191, 0, 298, 1576, 344, 0, 1556,
	297, 241, 337, 1591, 1655, 343, 1491, 327, 351, 355,
	208, 1531, 182, 317, 200, 197, 1470, 1613, 1416, 216,
	287, 194, 234, 1509, 1582, 1464, 187, 1594, 1565, 1628,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 1624, 1607,
	1630, 1457, 1436, 1448, 1437, 1478, 1657, 226, 217, 1631,
	1629, 348, 0, 307, 306, 1494, 225, 1610, 0, 0,
	294, 0, 232, 162, 1635, 357, 173, 236, 330, 0,
	211, 268, 193, 1578, 277, 1476, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 1606, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 1663, 246,
	204, 207, 219, 229, 1577, 296, 324, 349, 1568, 171,
	164, 326, 342, 180, 308, 310, 356, 1602, 166, 1651,
	1625, 1558, 1512, 1518, 1418, 0, 165, 1598, 1468, 1483,
	1456, 1572, 1455, 213, 1589, 340, 341, 192, 358, 1430,
	1671, 167, 1431, 1670, 265, 272, 264, 1674, 336, 1652,
	1559, 1543, 1541, 1423, 1650, 1557, 1542, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 1545, 0,
	163, 0, 321, 1661, 1686, 325, 177, 1450, 1617, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 1593, 1683, 276, 299, 181, 346, 318, 201,
	1446, 1449, 1444, 1447, 1445, 1549, 1550, 1666, 1667, 1668,
	1605, 1438, 0, 1643, 1644, 0, 1536, 1654, 1424, 0,
	1621, 0, 0, 1585, 1681, 1496, 188, 1415, 1420, 1421,
	1422, 1439, 1526, 1527, 1555, 1562, 1639, 1638, 1637, 1640,
	1645, 1675, 1673, 1676, 1440, 1461, 1482, 1532, 1533, 1535,
	1569, 1570, 1615, 1588, 1597, 1554, 158, 168, 239, 1682,
	293, 210, 1406, 1414, 1443, 1451, 1452, 1453, 1454, 1459,
	1466, 0, 1473, 1481, 1484, 1485, 1493, 1499, 1500, 1501,
	1502, 1511, 1513, 1514, 1515, 1516, 1517, 1521, 1522, 1524,
	1537, 1538, 1544, 1552, 1553, 1561, 1563, 0, 1592, 1595,
	1604, 1609, 1612, 1618, 1620, 1627, 1632, 1634, 1672, 1680,
	1685, 347, 196, 1528, 1534, 1560, 1599, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 1646, 1507, 155, 0, 0, 161, 328,
	0, 0, 0, 0, 1492, 160, 1641, 1677, 1573, 1587,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 1996, 2000, 0, 0,
	240, 0, 923, 350, 320, 257, 926, 925, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 1999, 231, 153, 0, 0, 0, 1993, 0,
	1994, 1995, 238, 931, 154, 0, 1991, 1998, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 921, 298, 0,
	344, 922, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 920, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 1137,
	0, 0, 0, 199, 151, 152, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 1145, 350, 320, 257,
	1148, 1147, 0, 0, 0, 0, 0, 0, 0, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 1138, 0,
	1141, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 1146, 0, 1133, 1134, 1132, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 1135, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 347, 196, 0, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 281, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 0, 0, 231, 153, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 142, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 1144, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 143,
	307, 306, 0, 225, 0, 144, 136, 294, 145, 232,
	162, 0, 357, 173, 236, 330, 1143, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 0, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 151, 152,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	923, 350, 320, 257, 926, 925, 0, 0, 0, 0,
	0, 0, 0, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 929, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 347, 196,
	0, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	281, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 931, 154, 0, 927, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 921, 298, 0, 344, 922,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	920, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 1145, 350, 320, 257, 1148, 1147,
	0, 0, 0, 0, 0, 0, 0, 158, 168, 239,
	0, 293, 210, 0, 0, 0, 1138, 0, 1141, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	1146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 347, 196, 0, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 281, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 153, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 1827,
	298, 0, 344, 1144, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 1143, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 36, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 151, 152, 0, 199,
	0, 188, 131, 0, 0, 0, 132, 198, 190, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 2273,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	77, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 347, 196, 288, 215,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 281, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 128, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 151, 152, 0, 199, 0, 188,
	131, 0, 0, 0, 132, 198, 190, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 158,
	168, 239, 75, 293, 210, 0, 0, 0, 77, 0,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 347, 196, 288, 215, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 281, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 199, 151, 152, 0, 0, 0, 188, 131, 198,
	190, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 168, 239,
	0, 293, 210, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 347, 196, 0, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 281, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	258, 0, 0, 0, 0, 231, 153, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 0, 0, 142, 157, 0, 0, 0, 191, 0,
	298, 0, 344, 2080, 0, 297, 241, 337, 0, 0,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 143, 307, 306,
	0, 225, 0, 144, 136, 294, 145, 232, 162, 0,
	357, 173, 236, 330, 128, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 140, 146,
	0, 292, 309, 332, 175, 323, 138, 139, 141, 148,
	300, 149, 150, 0, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 151, 152, 0, 0,
	0, 188, 131, 198, 190, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 1940, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 288, 215, 347, 196, 0, 0,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 281, 282,
	283, 289, 147, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 258, 0, 0, 0, 0, 231,
	153, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 142, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 143, 307, 306, 0, 225, 0, 144, 136, 294,
	145, 232, 162, 0, 357, 173, 236, 330, 128, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 140, 146, 0, 292, 309, 332, 175, 323,
	138, 139, 141, 148, 300, 149, 150, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 328,
	0, 0, 0, 1266, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	151, 152, 0, 0, 0, 188, 131, 198, 190, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	347, 196, 0, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 281, 282, 283, 289, 147, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 153, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 142, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 143, 307, 306, 0, 225,
	0, 144, 136, 294, 145, 232, 162, 0, 357, 173,
	236, 330, 128, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 140, 146, 0, 292,
	309, 332, 175, 323, 138, 139, 141, 148, 300, 149,
	150, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 151, 152, 0, 0, 0, 188,
	131, 198, 190, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 240, 0, 0, 350, 320, 257,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 288, 215, 347, 196, 0, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 281, 282, 283, 289,
	147, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 0, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 258, 0, 0, 123, 0, 231, 153, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 154, 0,
	0, 0, 269, 0, 0, 142, 157, 0, 0, 0,
	191, 0, 298, 0, 344, 0, 0, 297, 241, 337,
	0, 0, 343, 0, 327, 351, 355, 208, 0, 182,
	317, 200, 197, 0, 0, 0, 216, 287, 194, 234,
	0, 0, 0, 187, 0, 0, 0, 316, 334, 159,
	255, 335, 354, 174, 329, 256, 262, 184, 186, 185,
	170, 311, 333, 179, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 226, 217, 0, 0, 348, 143,
	307, 306, 0, 225, 0, 144, 136, 294, 145, 232,
	162, 0, 357, 173, 236, 330, 128, 211, 268, 193,
	0, 277, 0, 156, 290, 252, 253, 251, 254, 214,
	140, 146, 0, 292, 309, 332, 175, 323, 138, 139,
	141, 148, 300, 149, 150, 0, 246, 204, 207, 219,
	229, 0, 296, 324, 349, 0, 171, 164, 326, 342,
	180, 308, 310, 356, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	213, 0, 340, 341, 192, 358, 0, 0, 167, 0,
	0, 265, 272, 264, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 206, 221, 285, 243, 286,
	222, 260, 259, 261, 244, 0, 0, 163, 0, 321,
	0, 0, 325, 177, 0, 0, 331, 218, 291, 178,
	212, 205, 284, 263, 172, 224, 319, 235, 242, 0,
	0, 276, 299, 181, 346, 318, 201, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 151, 152,
	0, 0, 0, 188, 131, 198, 190, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 168, 239, 0, 293, 210, 0,
	0, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 347, 196,
	0, 0, 0, 0, 169, 176, 183, 195, 203, 209,
	220, 223, 227, 228, 230, 233, 245, 247, 248, 249,
	250, 266, 267, 270, 271, 274, 275, 278, 279, 280,
	281, 282, 283, 289, 147, 295, 301, 302, 303, 304,
	305, 312, 313, 314, 315, 322, 338, 339, 352, 353,
	0, 0, 155, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 153, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 142,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 143, 307, 306, 0, 225, 0, 144,
	136, 294, 145, 232, 162, 0, 357, 173, 236, 330,
	128, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 140, 146, 0, 292, 309, 332,
	175, 323, 138, 139, 141, 148, 300, 149, 150, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 152, 0, 0, 0, 188, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 168, 239,
	0, 293, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 196, 0, 0, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 281, 282, 283, 289, 147, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	428, 328, 422, 433, 416, 0, 160, 0, 0, 0,
	0, 0, 273, 0, 0, 439, 0, 0, 0, 0,
	0, 199, 0, 0, 423, 0, 0, 0, 0, 198,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 350, 320, 257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 437, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	288, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 414, 417, 0, 0, 0,
	258, 0, 0, 0, 421, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 154, 0, 0, 0,
	269, 425, 0, 0, 157, 429, 0, 0, 191, 0,
	298, 0, 344, 0, 0, 297, 241, 337, 0, 432,
	343, 0, 327, 351, 355, 208, 0, 182, 317, 200,
	197, 0, 0, 0, 216, 287, 194, 234, 0, 0,
	0, 187, 0, 0, 0, 316, 334, 159, 255, 335,
	354, 174, 329, 256, 262, 184, 186, 185, 170, 311,
	333, 179, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 217, 0, 0, 348, 0, 307, 306,
	0, 225, 0, 0, 0, 294, 0, 232, 162, 0,
	357, 173, 236, 330, 0, 211, 268, 193, 0, 277,
	0, 156, 290, 252, 253, 251, 254, 214, 0, 0,
	0, 442, 309, 332, 175, 323, 418, 419, 420, 426,
	427, 430, 431, 434, 246, 204, 207, 219, 229, 0,
	296, 324, 349, 0, 171, 164, 326, 342, 180, 308,
	310, 356, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 213, 0,
	340, 341, 192, 358, 0, 0, 167, 0, 0, 265,
	272, 264, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 206, 221, 285, 243, 286, 222, 260,
	259, 261, 244, 0, 0, 163, 0, 321, 0, 0,
	325, 177, 0, 0, 331, 218, 291, 178, 212, 205,
	284, 263, 172, 224, 319, 235, 242, 0, 0, 276,
	299, 181, 346, 318, 201, 0, 0, 0, 428, 328,
	422, 433, 416, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 408, 0, 0, 0, 0, 0, 199,
	0, 188, 423, 0, 0, 0, 0, 198, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 158, 168, 239, 0, 293, 210, 0, 0, 0,
	0, 0, 0, 0, 437, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 347, 196, 288, 215,
	0, 0, 169, 176, 183, 195, 203, 209, 220, 223,
	227, 228, 230, 233, 245, 247, 248, 249, 250, 266,
	267, 270, 271, 274, 275, 278, 279, 280, 281, 282,
	283, 289, 424, 295, 301, 302, 303, 304, 305, 312,
	313, 314, 315, 322, 338, 339, 352, 353, 0, 0,
	155, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	160, 0, 415, 414, 417, 0, 0, 0, 258, 0,
	0, 0, 421, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 425,
	0, 0, 157, 429, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 432, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 411,
	309, 332, 175, 323, 418, 419, 420, 426, 427, 430,
	431, 434, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 281, 282, 283, 289,
	424, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 328, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 273, 160, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 1158, 1157, 1167,
	1168, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1159, 0,
	0, 1169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 2278, 0, 0, 0, 199, 188, 0, 0, 0,
	0, 0, 0, 198, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 158, 168, 239, 0,
	293, 210, 2280, 2282, 0, 0, 0, 0, 0, 0,
	129, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	2276, 347, 196, 0, 288, 215, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 231,
	0, 0, 2281, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 0, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 0, 307, 306, 0, 225, 0, 0, 0, 294,
	0, 232, 162, 0, 357, 173, 236, 330, 0, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 0, 0, 0, 292, 309, 332, 175, 323,
	0, 0, 0, 0, 300, 0, 0, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 196, 0, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 281, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 328, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 273, 160, 0, 0, 0, 2278, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2280,
	2282, 0, 0, 0, 0, 0, 0, 129, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 2281,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 188, 131, 198, 190, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 129, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 347, 196, 0,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	0, 0, 0, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 188, 131, 0, 0,
	2570, 132, 198, 190, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 347, 196, 288, 215, 0, 454, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 188, 131, 198, 190, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 129, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 347,
	196, 0, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 281, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 188, 131,
	198, 190, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 347, 196, 0, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 281, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	3280, 0, 0, 0, 0, 0, 199, 3278, 0, 0,
	0, 0, 188, 131, 198, 190, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 437, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 347, 196, 0,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 3279, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 188, 0, 198, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2385, 345, 0, 0, 0, 0, 288,
	215, 347, 196, 0, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 2386, 2387, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	188, 0, 198, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 437,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 347, 196, 0, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 1712, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 1282,
	0, 0, 0, 0, 188, 0, 198, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 929, 0, 1281, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 347,
	196, 0, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 281, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 188, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 437, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 347, 196, 0, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 281, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 0, 0, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 188, 0, 0, 0, 0, 0, 198, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 2683, 0, 0, 0, 2685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 347, 196, 288,
	215, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 328, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 273, 160,
	0, 0, 0, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 198, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 350, 320, 257, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 929, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 288, 215, 0, 0,
	0, 0, 0, 0, 2670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 154, 0, 0, 0, 269, 0, 0, 0,
	157, 0, 0, 0, 191, 0, 298, 0, 344, 0,
	0, 297, 241, 337, 0, 0, 343, 0, 327, 351,
	355, 208, 0, 182, 317, 200, 197, 0, 0, 0,
	216, 287, 194, 234, 0, 0, 0, 187, 0, 0,
	0, 316, 334, 159, 255, 335, 354, 174, 329, 256,
	262, 184, 186, 185, 170, 311, 333, 179, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 226, 217,
	0, 0, 348, 0, 307, 306, 0, 225, 0, 0,
	0, 294, 0, 232, 162, 0, 357, 173, 236, 330,
	0, 211, 268, 193, 0, 277, 0, 156, 290, 252,
	253, 251, 254, 214, 0, 0, 0, 292, 309, 332,
	175, 323, 0, 0, 0, 0, 300, 0, 0, 0,
	246, 204, 207, 219, 229, 0, 296, 324, 349, 0,
	171, 164, 326, 342, 180, 308, 310, 356, 0, 166,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 213, 0, 340, 341, 192, 358,
	0, 0, 167, 0, 0, 265, 272, 264, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 206,
	221, 285, 243, 286, 222, 260, 259, 261, 244, 0,
	0, 163, 0, 321, 0, 0, 325, 177, 0, 0,
	331, 218, 291, 178, 212, 205, 284, 263, 172, 224,
	319, 235, 242, 0, 0, 276, 299, 181, 346, 318,
	201, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 0, 188, 0, 0,
	0, 0, 0, 198, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 350,
	320, 257, 0, 0, 0, 0, 0, 158, 168, 239,
	0, 293, 210, 0, 0, 0, 77, 0, 0, 0,
	929, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 347, 196, 288, 215, 0, 0, 169, 176,
	183, 195, 203, 209, 220, 223, 227, 228, 230, 233,
	245, 247, 248, 249, 250, 266, 267, 270, 271, 274,
	275, 278, 279, 280, 281, 282, 283, 289, 0, 295,
	301, 302, 303, 304, 305, 312, 313, 314, 315, 322,
	338, 339, 352, 353, 0, 0, 155, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	154, 0, 0, 0, 269, 0, 0, 0, 157, 0,
	0, 0, 191, 0, 298, 0, 344, 0, 0, 297,
	241, 337, 0, 0, 343, 0, 327, 351, 355, 208,
	0, 182, 317, 200, 197, 0, 0, 0, 216, 287,
	194, 234, 0, 0, 0, 187, 0, 0, 0, 316,
	334, 159, 255, 335, 354, 174, 329, 256, 262, 184,
	186, 185, 170, 311, 333, 179, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 217, 0, 0,
	348, 0, 307, 306, 0, 225, 0, 0, 0, 294,
	0, 232, 162, 0, 357, 173, 236, 330, 0, 211,
	268, 193, 0, 277, 0, 156, 290, 252, 253, 251,
	254, 214, 0, 0, 0, 292, 309, 332, 175, 323,
	0, 0, 0, 0, 300, 0, 0, 0, 246, 204,
	207, 219, 229, 0, 296, 324, 349, 0, 171, 164,
	326, 342, 180, 308, 310, 356, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 213, 0, 340, 341, 192, 358, 0, 0,
	167, 0, 0, 265, 272, 264, 0, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 206, 221, 285,
	243, 286, 222, 260, 259, 261, 244, 0, 0, 163,
	0, 321, 0, 0, 325, 177, 0, 0, 331, 218,
	291, 178, 212, 205, 284, 263, 172, 224, 319, 235,
	242, 0, 0, 276, 299, 181, 346, 318, 201, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 188, 2161, 2162, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 350, 320, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 168, 239, 0, 293,
	210, 0, 0, 0, 929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 288, 215,
	347, 196, 0, 0, 0, 0, 169, 176, 183, 195,
	203, 209, 220, 223, 227, 228, 230, 233, 245, 247,
	248, 249, 250, 266, 267, 270, 271, 274, 275, 278,
	279, 280, 281, 282, 283, 289, 0, 295, 301, 302,
	303, 304, 305, 312, 313, 314, 315, 322, 338, 339,
	352, 353, 0, 0, 155, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 258, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 154, 0, 0, 0, 269, 0,
	0, 0, 157, 0, 0, 0, 191, 0, 298, 0,
	344, 0, 0, 297, 241, 337, 0, 0, 343, 0,
	327, 351, 355, 208, 0, 182, 317, 200, 197, 0,
	0, 0, 216, 287, 194, 234, 0, 0, 0, 187,
	0, 0, 0, 316, 334, 159, 255, 335, 354, 174,
	329, 256, 262, 184, 186, 185, 170, 311, 333, 179,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	226, 217, 0, 0, 348, 0, 307, 306, 0, 225,
	0, 0, 0, 294, 0, 232, 162, 0, 357, 173,
	236, 330, 0, 211, 268, 193, 0, 277, 0, 156,
	290, 252, 253, 251, 254, 214, 0, 0, 0, 292,
	309, 332, 175, 323, 0, 0, 0, 0, 300, 0,
	0, 0, 246, 204, 207, 219, 229, 0, 296, 324,
	349, 0, 171, 164, 326, 342, 180, 308, 310, 356,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 213, 0, 340, 341,
	192, 358, 0, 0, 167, 0, 0, 265, 272, 264,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 206, 221, 285, 243, 286, 222, 260, 259, 261,
	244, 0, 0, 163, 0, 321, 0, 0, 325, 177,
	0, 0, 331, 218, 291, 178, 212, 205, 284, 263,
	172, 224, 319, 235, 242, 0, 0, 276, 299, 181,
	346, 318, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	168, 239, 0, 293, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 196, 0, 0, 0, 0,
	169, 176, 183, 195, 203, 209, 220, 223, 227, 228,
	230, 233, 245, 247, 248, 249, 250, 266, 267, 270,
	271, 274, 275, 278, 279, 280, 281, 282, 283, 289,
	0, 295, 301, 302, 303, 304, 305, 312, 313, 314,
	315, 322, 338, 339, 352, 353, 328, 0, 155, 0,
	0, 161, 0, 0, 0, 0, 0, 273, 160, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 0, 0, 0,
	0, 0, 0, 2124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 188, 0, 198, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 347, 196, 0, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	188, 0, 198, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 350, 320,
	257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 2685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 288, 215, 347, 196, 0, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 258, 0, 0, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 154,
	0, 0, 0, 269, 0, 0, 0, 157, 0, 0,
	0, 191, 0, 298, 0, 344, 0, 0, 297, 241,
	337, 0, 0, 343, 0, 327, 351, 355, 208, 0,
	182, 317, 200, 197, 0, 0, 0, 216, 287, 194,
	234, 0, 0, 0, 187, 0, 0, 0, 316, 334,
	159, 255, 335, 354, 174, 329, 256, 262, 184, 186,
	185, 170, 311, 333, 179, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 226, 217, 0, 0, 348,
	0, 307, 306, 0, 225, 0, 0, 0, 294, 0,
	232, 162, 0, 357, 173, 236, 330, 0, 211, 268,
	193, 0, 277, 0, 156, 290, 252, 253, 251, 254,
	214, 0, 0, 0, 292, 309, 332, 175, 323, 0,
	0, 0, 0, 300, 0, 0, 0, 246, 204, 207,
	219, 229, 0, 296, 324, 349, 0, 171, 164, 326,
	342, 180, 308, 310, 356, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 213, 0, 340, 341, 192, 358, 0, 0, 167,
	0, 0, 265, 272, 264, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 206, 221, 285, 243,
	286, 222, 260, 259, 261, 244, 0, 0, 163, 0,
	321, 0, 0, 325, 177, 0, 0, 331, 218, 291,
	178, 212, 205, 284, 263, 172, 224, 319, 235, 242,
	0, 0, 276, 299, 181, 346, 318, 201, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 188, 0, 198, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 350, 320, 257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 168, 239, 0, 293, 210,
	0, 0, 0, 2694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 288, 215, 347,
	196, 0, 0, 0, 0, 169, 176, 183, 195, 203,
	209, 220, 223, 227, 228, 230, 233, 245, 247, 248,
	249, 250, 266, 267, 270, 271, 274, 275, 278, 279,
	280, 281, 282, 283, 289, 0, 295, 301, 302, 303,
	304, 305, 312, 313, 314, 315, 322, 338, 339, 352,
	353, 0, 0, 155, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 258, 0, 0,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 154, 0, 0, 0, 269, 0, 0,
	0, 157, 0, 0, 0, 191, 0, 298, 0, 344,
	0, 0, 297, 241, 337, 0, 0, 343, 0, 327,
	351, 355, 208, 0, 182, 317, 200, 197, 0, 0,
	0, 216, 287, 194, 234, 0, 0, 0, 187, 0,
	0, 0, 316, 334, 159, 255, 335, 354, 174, 329,
	256, 262, 184, 186, 185, 170, 311, 333, 179, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 226,
	217, 0, 0, 348, 0, 307, 306, 0, 225, 0,
	0, 0, 294, 0, 232, 162, 0, 357, 173, 236,
	330, 0, 211, 268, 193, 0, 277, 0, 156, 290,
	252, 253, 251, 254, 214, 0, 0, 0, 292, 309,
	332, 175, 323, 0, 0, 0, 0, 300, 0, 0,
	0, 246, 204, 207, 219, 229, 0, 296, 324, 349,
	0, 171, 164, 326, 342, 180, 308, 310, 356, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 213, 0, 340, 341, 192,
	358, 0, 0, 167, 0, 0, 265, 272, 264, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	206, 221, 285, 243, 286, 222, 260, 259, 261, 244,
	0, 0, 163, 0, 321, 0, 0, 325, 177, 0,
	0, 331, 218, 291, 178, 212, 205, 284, 263, 172,
	224, 319, 235, 242, 0, 0, 276, 299, 181, 346,
	318, 201, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 188, 0,
	198, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 350, 320, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 168,
	239, 0, 293, 210, 0, 0, 0, 2692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 288, 215, 347, 196, 0, 0, 0, 0, 169,
	176, 183, 195, 203, 209, 220, 223, 227, 228, 230,
	233, 245, 247, 248, 249, 250, 266, 267, 270, 271,
	274, 275, 278, 279, 280, 281, 282, 283, 289, 0,
	295, 301, 302, 303, 304, 305, 312, 313, 314, 315,
	322, 338, 339, 352, 353, 0, 0, 155, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 258, 0, 0, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 154, 0, 0,
	0, 269, 0, 0, 0, 157, 0, 0, 0, 191,
	0, 298, 0, 344, 0, 0, 297, 241, 337, 0,
	0, 343, 0, 327, 351, 355, 208, 0, 182, 317,
	200, 197, 0, 0, 0, 216, 287, 194, 234, 0,
	0, 0, 187, 0, 0, 0, 316, 334, 159, 255,
	335, 354, 174, 329, 256, 262, 184, 186, 185, 170,
	311, 333, 179, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 226, 217, 0, 0, 348, 0, 307,
	306, 0, 225, 0, 0, 0, 294, 0, 232, 162,
	0, 357, 173, 236, 330, 0, 211, 268, 193, 0,
	277, 0, 156, 290, 252, 253, 251, 254, 214, 0,
	0, 0, 292, 309, 332, 175, 323, 0, 0, 0,
	0, 300, 0, 0, 0, 246, 204, 207, 219, 229,
	0, 296, 324, 349, 0, 171, 164, 326, 342, 180,
	308, 310, 356, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 0, 213,
	0, 340, 341, 192, 358, 0, 0, 167, 0, 0,
	265, 272, 264, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 206, 221, 285, 243, 286, 222,
	260, 259, 261, 244, 0, 0, 163, 0, 321, 0,
	0, 325, 177, 0, 0, 331, 218, 291, 178, 212,
	205, 284, 263, 172, 224, 319, 235, 242, 0, 0,
	276, 299, 181, 346, 318, 201, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 188, 0, 198, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	350, 320, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 168, 239, 0, 293, 210, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 288, 215, 347, 196, 0,
	0, 0, 0, 169, 176, 183, 195, 203, 209, 220,
	223, 227, 228, 230, 233, 245, 247, 248, 249, 250,
	266, 267, 270, 271, 274, 275, 278, 279, 280, 281,
	282, 283, 289, 0, 295, 301, 302, 303, 304, 305,
	312, 313, 314, 315, 322, 338, 339, 352, 353, 0,
	0, 155, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 258, 0, 0, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 154, 0, 0, 0, 269, 0, 0, 0, 157,
	0, 0, 0, 191, 0, 298, 0, 344, 0, 0,
	297, 241, 337, 0, 0, 343, 0, 327, 351, 355,
	208, 0, 182, 317, 200, 197, 0, 0, 0, 216,
	287, 194, 234, 0, 0, 0, 187, 0, 0, 0,
	316, 334, 159, 255, 335, 354, 174, 329, 256, 262,
	184, 186, 185, 170, 311, 333, 179, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 226, 217, 0,
	0, 348, 0, 307, 306, 0, 225, 0, 0, 0,
	294, 0, 232, 162, 0, 357, 173, 236, 330, 0,
	211, 268, 193, 0, 277, 0, 156, 290, 252, 253,
	251, 254, 214, 0, 0, 0, 292, 309, 332, 175,
	323, 0, 0, 0, 0, 300, 0, 0, 0, 246,
	204, 207, 219, 229, 0, 296, 324, 349, 0, 171,
	164, 326, 342, 180, 308, 310, 356, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 213, 0, 340, 341, 192, 358, 0,
	0, 167, 0, 0, 265, 272, 264, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 206, 221,
	285, 243, 286, 222, 260, 259, 261, 244, 0, 0,
	163, 0, 321, 0, 0, 325, 177, 0, 0, 331,
	218, 291, 178, 212, 205, 284, 263, 172, 224, 319,
	235, 242, 0, 0, 276, 299, 181, 346, 318, 201,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 188, 0, 198, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 350, 320, 257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 168, 239, 0,
	293, 210, 0, 0, 0, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 288,
	215, 347, 196, 0, 0, 0, 0, 169, 176, 183,
	195, 203, 209, 220, 223, 227, 228, 230, 233, 245,
	247, 248, 249, 250, 266, 267, 270, 271, 274, 275,
	278, 279, 280, 281, 282, 283, 289, 0, 295, 301,
	302, 303, 304, 305, 312, 313, 314, 315, 322, 338,
	339, 352, 353, 0, 0, 155, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 258,
	0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 154, 0, 0, 0, 269,
	0, 0, 0, 157, 0, 0, 0, 191, 0, 298,
	0, 344, 0, 0, 297, 241, 337, 0, 0, 343,
	0, 327, 351, 355, 208, 0, 182, 317, 200, 197,
	0, 0, 0, 216, 287, 194, 234, 0, 0, 0,
	187, 0, 0, 0, 316, 334, 159, 255, 335, 354,
	174, 329, 256, 262, 184, 186, 185, 170, 311, 333,
	179, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 226, 217, 0, 0, 348, 0, 307, 306, 0,
	225, 0, 0, 0, 294, 0, 232, 162, 0, 357,
	173, 236, 330, 0, 211, 268, 193, 0, 277, 0,
	156, 290, 252, 253, 251, 254, 214, 0, 0, 0,
	292, 309, 332, 175, 323, 0, 0, 0, 0, 300,
	0, 0, 0, 246, 204, 207, 219, 229, 0, 296,
	324, 349, 0, 171, 164, 326, 342, 180, 308, 310,
	356, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 213, 0, 340,
	341, 192, 358, 0, 0, 167, 0, 0, 265, 272,
	264, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 206, 221, 285, 243, 286, 222, 260, 259,
	261, 244, 0, 0, 163, 0, 321, 0, 0, 325,
	177, 0, 0, 331, 218, 291, 178, 212, 205, 284,
	263, 172, 224, 319, 235, 242, 0, 0, 276, 299,
	181, 346, 318, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 168, 239, 0, 293, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 196, 0, 0, 0,
	0, 169, 176, 183, 195, 203, 209, 220, 223, 227,
	228, 230, 233, 245, 247, 248, 249, 250, 266, 267,
	270, 271, 274, 275, 278, 279, 280, 281, 282, 283,
	289, 0, 295, 301, 302, 303, 304, 305, 312, 313,
	314, 315, 322, 338, 339, 352, 353, 0, 0, 155,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 160,
}

var yyPact = [...]int{
	3480, -1000, -413, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2106, -1000, -1000, 313, -1000,
	1041, 589, -1000, 345, 604, 29526, 644, 5188, 40969, -1000,
	-1000, -1000, 164, 561, 29950, 387, 466, 1396, 1945, 1395,
	8, -103, -113, 133, 30972, 30544, -15, -1000, 2153, 2156,
	573, 12, -1000, -1000, -1000, 32999, 261, -1000, -1000, 2076,
	2103, 1878, -1000, 6929, -1000, -1000, -1000, -1000, -1000, 20261,
	-1000, 2154, 29950, 26550, -1000, 634, 624, -204, 549, 549,
	326, 549, 549, 643, -1000, 265, 1029, -1000, -1000, -1000,
	-1000, 1017, 29950, 36395, 563, 39273, 563, 563, 563, 563,
	563, 563, 563, 29950, -1000, 727, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29950,
	1394, 2014, 1063, 200, -1000, -1000, -1000, 1034, -1000, 329,
	321, 327, 319, 73, 1066, 2082, -1000, 1479, 2076, 2076,
	-1000, -1000, -1000, -1000, -1000, -1000, 818, 290, 613, 261,
	261, 1013, 2042, 2013, 1996, 1265, 1995, 632, 1981, 1807,
	-61, -1000, 1393, 29950, -1000, -1000, 1232, 1231, 1829, 1704,
	715, 1828, -1000, -1000, 304, 583, 1794, 394, 1794, 1794,
	1794, 1794, 1794, -115, 1794, 1794, 1794, 50, 1794, 98,
	1794, 1794, 1794, 1794, 1794, 1414, -1000, -1000, -1000, 311,
	1699, 1737, 1827, 735, -1000, -1000, -1000, -1000, 1813, 2074,
	637, -1000, -176, 1738, 33851, -1000, 1479, -1000, -1000, -1000,
	1408, -1000, 2153, 1983, 1183, 12383, 1920, -1000, -1000, 1120,
	2141, -1000, 26126, 726, -1000, 12383, 1732, 1479, -1000, -1000,
	1479, -1000, -1000, 1479, -1000, 696, -1000, -1000, -1000, 13595,
	13595, 13595, 13595, 13595, 13595, 13595, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1479, -1000, 710, 1479, 1479, 1479, 1479, 1479,
	-1000, 11171, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 12383, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	573, 573, 29102, 1749, -127, 19655, -1000, -1000, -1000, -1000,
	18443, 35971, 1012, -1000, -1000, -1000, -1000, 1980, -1000, -1000,
	708, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2106, -1000, -1000, 1649, 475, -1000, 1288, 1288, 1288,
	1288, 1288, 1288, 1288, 1288, 1288, 1288, 307, -1000, -1000,
	-1000, 1806, 39273, 29950, 238, 1392, 1055, 1387, 41393, 41393,
	-1000, 224, 36395, 36395, 549, 254, 36395, 247, 1747, 611,
	1746, 607, 1410, 29950, 2035, 1826, 29950, 1381, 1380, 41393,
	41393, 36395, 36395, -1000, 25109, 1745, -1000, -1000, 1063, -1000,
	5615, 12383, 549, 549, 29950, 29950, 29950, 29950, 29950, -1000,
	-1000, 1063, 1063, 1063, 1063, 992, 2140, 992, -1000, 992,
	-1000, -1000, 12383, -1000, 13595, 35547, 852, -1000, -1000, 40969,
	-1000, 1368, 280, -1000, -1000, -1000, -1000, -1000, -1000, 1365,
	-1000, 1949, 632, 632, -1000, 1305, 632, 1733, -1000, 1006,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 632, -1000, 11777, -393, -1000, -1000, 1741, -1000,
	221, -1000, -1000, 571, 571, 204, 36395, 36395, 36395, -1000,
	1794, 39273, -1000, 1794, 1794, 1794, -124, 1794, 1794, -1000,
	-1000, 1794, -1000, -1000, -1000, -1000, -1000, 1794, -1000, -1000,
	-1000, 1794, 1794, -1000, 1794, 1794, -1000, -1000, -1000, -1000,
	-1000, 36395, 571, 146, 1739, 571, 36395, 36395, -1000, 37,
	35, 34, 33, -1000, -1000, -1000, -1000, 31, 29, -1000,
	-1000, 1878, -1000, -1000, 261, -1000, -1000, 29950, -132, 33851,
	1738, 2064, 15413, -1000, -1000, 1108, 2149, 915, 1728, -1000,
	-1000, 1736, -1000, 1026, 707, 1181, 1885, -1000, -1000, -1000,
	29950, -1000, 12383, 12383, 12383, 1201, -1000, 26974, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16625,
	939, 13595, 1147, 989, 13595, 13595, 13595, 13595, 13595, 13595,
	13595, 13595, 13595, 13595, 13595, 13595, 13595, 13595, 13595, 1250,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1362, -1000,
	261, 8141, 1632, 1632, 801, 801, 801, 801, 801, 801,
	31559, 2047, 23897, 2047, 2047, 2047, 2047, 2047, 1408, 1647,
	1097, 32999, 11171, 8141, 8141, 1408, 12383, 12383, 10565, 9959,
	14201, 8141, 8141, 2047, 1036, 1097, 18443, 8141, -1000, -1000,
	9353, -1000, -1000, -1000, -1000, -1000, 1408, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 39273, 39273, 8141, 8141, 8141,
	8141, 1408, 1408, 8141, 8141, 8141, 8141, 8141, 1408, 1408,
	1408, 1408, 8141, 8141, 8141, 8141, 8141, 8141, 8141, 8141,
	8141, 8141, 8141, 8141, 28678, 27830, 29950, 1655, 1482, -1000,
	706, 19049, 1712, -1000, -143, -149, -127, -1000, -1000, 809,
	-1000, -1000, -1000, 8747, -1000, 17231, 2076, 1878, 21473, 25702,
	-1000, -1000, -69, -1000, -1000, -1000, 1762, -1000, 1762, 272,
	-29, 1762, 1762, 1762, 1762, 1762, -27, -27, -27, -27,
	-28, -1000, -1000, -1000, -1000, -1000, 1805, 1802, -1000, 1762,
	1762, 1762, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1780, 282, 1778, 1778, 1778, 1778, 1778, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 363, 363, 363,
	-1000, 12383, 1634, 2049, 615, 254, 2023, 2033, 2023, 407,
	-1000, 705, 1795, -1000, 704, 300, 1719, -1000, 162, 1489,
	28254, -1000, -1000, -1000, -1000, -1000, 29950, 29950, 36395, 36395,
	36395, 602, -1000, 29950, 1734, -1000, -1000, -1000, -1000, -1000,
	1681, -1000, 1489, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 29950, -1000, -1000,
	1304, 1097, 1361, 1358, 2042, -1000, -1000, -1000, 1033, -1000,
	-1000, -1000, -1000, 1063, 40969, 40969, 29950, 2042, 1063, 1097,
	803, 1810, 1479, 1408, -1000, -1000, -1000, 1350, -1000, 13595,
	1733, 1733, -1000, 1733, 632, 1632, 1733, -1000, 1642, 1104,
	1303, 29950, -1000, 33851, -68, -1000, -185, 38849, -1000, -1000,
	-1000, 38849, -1000, 50, 148, -1000, 606, -1000, 1565, -1000,
	-1000, -1000, -1000, 1794, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 38849, 103, 145, 38849, 1681, 2139, -1000,
	-1000, -1000, -1000, 2081, -1000, 2047, 1408, 253, -1000, -1000,
	-1000, 1479, 1525, -1000, 703, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 38262, -1000, 1869, 1183, 1183, 12383, -1000, -1000, -1000,
	17231, 2080, -1000, 1893, 1892, 1788, -1000, -1000, 939, 1032,
	997, -1000, -1000, 1235, -1000, -1000, -1000, -1000, -1000, 701,
	1479, -1000, -1000, -1000, -1000, -1000, 1568, -1000, -1000, -1000,
	-1000, 1147, 13595, 13595, 13595, 803, 1568, 3811, 1386, 1038,
	801, 903, 903, 823, 823, 823, 823, 823, 1409, 1409,
	-1000, -1000, -1000, 1408, 1563, -1000, -1000, 1097, 700, -1000,
	-1000, -1000, -1000, 8141, -1000, 8141, 8141, 8141, 8141, 8141,
	-1000, 12383, -1000, 1408, 1563, 1563, -1000, 1109, 1373, 827,
	2138, 1563, 819, 2134, 1563, 1478, 13595, 13595, 13595, 1563,
	1563, 8141, 1082, -1000, 12383, 1408, 1563, -1000, 1459, 1730,
	1729, 1563, 1408, 1722, 1563, 1563, -223, -223, 1408, 1563,
	1408, 1563, 1563, -223, -223, -223, -223, 1563, 1563, 1563,
	1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563, 1563, 880,
	29950, -1000, 1670, 1809, -1000, -1000, -1000, 2048, 27402, -1000,
	31988, -1000, 1479, 880, 1473, 27830, -1000, -1000, 27830, 40969,
	23291, -1000, 18443, -127, -138, -1000, -1000, 1712, -1000, 1251,
	-1000, -1000, 1097, -1000, 699, 1983, 2047, 1711, 20867, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 475, -1000, -1000, -1000,
	1781, 297, -1000, 1913, 772, 772, 764, 1337, 1912, -1000,
	-1000, 217, -80, -1000, -1000, -1000, 1226, -27, -27, 1762,
	1762, 270, 1762, -1000, -27, -1000, -1000, -1000, 877, 1978,
	863, 853, 846, 835, -27, 1300, 1300, -1000, -1000, -1000,
	-1000, 1225, -1000, 1780, -1000, 1222, -1000, -1000, -1000, -1000,
	217, 217, 217, 217, 217, 217, 217, 217, 217, -1000,
	-1000, -1000, 1148, 1825, 39273, -1000, 29950, -1000, 2023, -1000,
	-1000, -1000, 106, -1000, -1000, -1000, 2122, -1000, -1000, 39273,
	35123, 39273, -1000, -1000, 58, 36395, 159, 332, 214, -1000,
	-1000, 598, -1000, 596, -1000, -1000, -1000, -1000, -1000, -1000,
	29950, 36395, -1000, -1000, -1000, -1000, -1000, 2115, 1348, 1347,
	-1000, -1000, -1000, 992, 1063, -1000, -1000, 13595, 36395, -1000,
	315, -1000, 1568, -1000, -1000, -1000, 880, 636, -1000, -1000,
	-122, -1000, -1000, 593, 695, 692, 581, -1000, 68, 36395,
	-1000, 39273, -1000, 2133, 2131, 89, 2130, 36395, -1000, 16,
	1885, -1000, 1708, -1000, 906, 752, 811, 445, 445, -1000,
	934, 445, 1960, 1955, 875, -1000, 263, -1000, 23897, 23897,
	1705, 1298, 1296, -1000, 1867, -1000, -1000, -1000, 29950, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 22685, 8141,
	-1000, 803, 1568, 3771, -1000, 13595, -1000, 8141, -1000, 16019,
	1408, 1563, 1563, 1563, 1563, 1563, 1097, -1000, -1000, -1000,
	415, 1250, 415, 13595, 13595, -1000, 13595, 13595, -1000, -1000,
	13595, 3722, 3513, 3443, -261, -1000, 1726, 1037, -1000, 12383,
	1247, -1000, -1000, -1000, 13595, 13595, -1000, -1000, -1000, -1000,
	-1000, 37838, -1000, -223, -223, -223, -223, -223, -1000, -1000,
	-1000, -1000, -223, -223, -223, -223, -223, -223, -223, -223,
	-223, -223, -223, -223, 258, 1479, -1000, 17837, 27830, 27830,
	27830, 27830, 27830, -1000, 1842, 1841, -1000, 1868, 1866, 1872,
	33851, 1556, 1408, 306, 27402, -1000, 1479, -1000, 33427, 750,
	633, 631, 630, 8141, 2115, 27830, 1487, 1487, -1000, 689,
	-1000, -1000, -1000, -181, -157, -1000, -1000, -1000, 23897, -1000,
	21473, -1000, 21473, -1000, 34275, 565, 1916, 451, 1337, 1337,
	1337, -1000, 1337, -1000, -1000, -1000, 1779, -1000, 1125, -1000,
	-1000, -1000, -1000, -1000, 1479, -405, 1221, 13595, 2147, -1000,
	1910, -1000, 1907, 1906, 1295, -1000, -1000, 1458, 832, 806,
	-27, -1000, -1000, 1762, -1000, 787, -1000, -1000, 889, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 784, 1554, -1000,
	1552, 1703, -1000, 1549, 115, 29950, -1000, -1000, 2043, -1000,
	-1000, -1000, 1974, 934, 934, 934, 1822, -1000, -1000, -1000,
	-1000, 1456, 1697, -1000, 1288, 39273, 39273, 39273, -1000, -268,
	155, -1000, 36395, 124, 162, 384, 1345, 29950, 36395, -1000,
	-1000, -1000, 12383, -1000, -1000, 2042, -1000, 1568, 1489, -1000,
	-1000, -27, 29950, -1000, 36395, 849, 37410, 36395, 83, 147,
	-1000, 36395, 36395, 2129, 36395, 1681, 1293, 1788, 253, 36823,
	1337, 641, -1000, -1000, 447, -1000, 281, 1344, 40545, 40121,
	39273, 1905, 1903, 1343, 29950, 39273, -1000, -1000, 39697, 1342,
	12383, -1000, 39273, -1000, -1000, 39273, 687, -1000, 39273, -1000,
	-1000, -1000, -1000, 1133, 6929, -1000, -1000, 1408, -1000, 13595,
	1568, -1000, -1000, 675, -1000, -223, -223, -223, -223, -223,
	1408, 1762, 1762, -1000, 1762, 1778, -1000, 1762, -3, 1762,
	-6, 1408, 1408, 3676, 3074, 1957, 1608, 1459, 13595, 13595,
	13595, 1479, -215, -1000, 1097, 12383, 3006, 1635, -1000, -1000,
	1341, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1821,
	17837, 1479, 14807, -1000, 39273, 1709, -1000, 1001, 994, 981,
	980, 976, 974, 953, 950, 948, -1000, -1000, -1000, -1000,
	-1000, 1809, 1777, 1819, 1727, -1000, -1000, -1000, -1000, 1840,
	-1000, 1740, -1000, -1000, 1754, -1000, -1000, 1682, 1479, 39273,
	13595, 750, -1000, 1479, 1479, 1479, 1408, 2106, 1487, -1000,
	-1000, 836, -1000, -1000, -1000, 20867, -1000, 1547, -1000, 1762,
	1762, 1902, -1000, 772, -1000, -1000, -1000, -1000, -1000, 39273,
	-1000, 13595, 2041, -1000, 1568, -120, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 782, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -27, 1285, -27, 1219, -1000, 1213, -1000,
	-1000, -349, 1761, 261, -1000, 934, 841, 839, 1284, 29950,
	152, 35123, -1000, 1288, 1288, 1288, 81, 94, -1000, 1090,
	-1000, -1000, -1000, 1283, 1282, 1281, 1489, 163, 1083, 135,
	-1000, 2039, -1000, -1000, 1097, 1063, -110, -1000, 147, -1000,
	-1000, -1000, 147, -1000, -1000, 137, 1681, 1681, 36395, 1681,
	-1000, -1000, -1000, 39697, 352, 1288, 1288, 1634, 772, 1901,
	451, -1000, -1000, -1000, -1000, -1000, -1000, 1340, -1000, 741,
	-1000, 578, 352, 39697, 1097, 808, 1102, 23897, -1000, 2125,
	-1000, -1000, -1000, 1568, 22079, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 267, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 13595, 13595, 13595, 13595, -1000, 1459, 1459, 1459, 13595,
	1408, 1279, 1097, 13595, 13595, 870, -1000, -1000, 2029, 1654,
	1584, -1000, -1000, 7535, 1408, 1890, 1525, -1000, 32999, 1523,
	-1000, 2106, 17837, 12383, 12383, 12383, 12383, 12383, 12383, 12383,
	12383, 12383, -1000, -1000, 12383, 1760, -1000, 12383, -1000, -1000,
	-1000, -1000, 39273, 301, -1000, 12383, 1523, 1266, -1000, 39273,
	39273, 39273, -1000, 2076, -1000, 601, 34275, 2028, 2028, 1337,
	1337, 1494, -1000, 1459, 1479, -1000, 1479, 1479, 1479, 1479,
	1479, 1479, 1479, 1479, 1479, 1479, 1479, -1000, -1000, 777,
	-1000, 774, 1453, 1435, -1000, 34275, -1000, -1000, 833, -1000,
	-1000, -1000, -1000, -1000, 2079, -1000, 152, -1000, 1278, 246,
	251, -1000, 244, 243, 240, 227, 220, -1000, -1000, -1000,
	-1000, 349, 81, -1000, -81, 1205, 936, 1959, 94, -1000,
	1204, 1196, 1192, 1190, 169, -1000, -1000, -1000, -1000, 205,
	162, -1000, 382, 1273, -1000, 1937, 1935, 2040, 2040, 78,
	1681, 1633, 1425, -1000, -1000, 1338, -1000, -1000, 1759, 1337,
	1337, -1000, 1336, -1000, -1000, 39273, -1000, 352, 2018, 2017,
	1479, -1000, 2115, 27830, 6929, -1000, -1000, -1000, -1000, 1459,
	1459, 1459, 1459, -1000, -1000, -1000, 131, -1000, -1000, 1459,
	1459, 2106, 2102, 1898, -1000, 1479, -1000, -1000, 1479, 259,
	-1000, 39273, 2076, -1000, 1097, 1097, 1097, 1097, 1097, 1097,
	1097, 1097, 1097, 1097, 39273, 1097, 1492, 1479, 32575, -1000,
	33851, 1485, 1485, 1485, -1000, 601, -1000, 1311, 934, 1272,
	-1000, -1000, -1000, -1000, -1000, 356, 39273, -408, 13595, -1000,
	-1000, -1000, -1000, -1000, -1000, 1476, -1000, 261, -1000, -1000,
	275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1944, 1941,
	298, -1000, 1271, 1270, -1000, 477, 1263, 667, -229, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	381, 1309, -1000, 134, -1000, -1000, 562, 1923, 1925, 2101,
	-1000, 36395, -1000, -1000, 27830, -1000, -1000, 217, 217, 34275,
	1634, 1758, -1000, -1000, -1000, 13595, -1000, 847, 2113, 1680,
	-1000, -1000, -1000, -1000, -1000, 1408, 161, -276, -1000, -1000,
	927, 12383, 2146, -1000, 1584, 1479, -1000, 261, -1000, -1000,
	1450, -1000, -1000, -1000, 750, -1000, -1000, -1000, -1000, -1000,
	1160, -1000, 29950, -1000, -1000, -1000, -1000, 1459, 601, -1000,
	299, 5128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1159, -1000, -1000, 1259, 435, 117, -1000, 2038, -1000, 1754,
	1146, 1935, 2096, 1933, 1931, -1000, 1258, -271, 1487, 1428,
	1753, 34275, 1568, 1422, -1000, 39273, 2111, 2095, -1000, -1000,
	1851, -266, -285, 1408, 173, 173, 1669, 17837, 1584, 1408,
	-1000, -1000, -1000, 1752, -408, -1000, 601, -1000, 274, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	12383, 12383, 24503, 5128, 116, -1000, 114, -1000, -1000, -1000,
	1254, -1000, 969, -1000, 1241, -1000, 2090, 2089, -1000, 149,
	2113, 601, 34275, 1407, -1000, 847, 1888, -226, 12383, 12383,
	-1000, 1847, -1000, -1000, -1000, 171, -1000, 922, 285, 907,
	-1000, 1632, -1000, 1567, -1000, 39273, -1000, -1000, 1308, 1268,
	-1000, 1188, 1174, 196, 170, 339, -1000, -1000, -1000, -1000,
	-414, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1237, 1236,
	34699, 2111, -1000, 1405, 601, -1000, 336, -1000, 39273, -1000,
	1097, 1559, -1000, 1097, -272, 1079, -1000, -1000, -1000, -1000,
	-1000, 39273, 1403, -1000, -1000, -1000, 1132, -1000, 12383, 5128,
	2078, 2069, 2051, 2016, 23897, 5046, -1000, -1000, -1000, -1000,
	70, 1489, -226, 601, -1000, 331, 1520, -1000, 2037, 12383,
	-280, 171, -1000, 1818, 180, 1046, 5128, -1000, 1117, -415,
	398, 261, 666, 13595, -1000, -1000, -1000, 36395, -1000, -1000,
	1479, 39273, 1479, -1000, -287, -1000, 1814, 1812, 2124, -1000,
	-1000, -1000, -1000, -1000, -1000, 5128, -1000, -1000, -416, 5128,
	3435, -1000, -1000, -1000, 4781, -1000, -1000, -1000, -1000, 168,
	-1000, -1000, 1568, 1489, 12989, -1000, -1000, -1000, -1000, 2126,
	-1000, 2143, 605, 605, -1000, -418, 4450, -419, 547, 5128,
	1056, -1000, 12383, -1000, 666, -1000, 1459, 1408, -1000, -1000,
	-1000, 357, 1189, -1000, 4278, 1043, 5128, -1000, -420, 479,
	5128, -1000, 1094, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4099, -1000, -421, 5128, 462, 3810, -422, -1000, 460,
	5128, -1000,
}

var yyPgo = [...]int{
	0, 2558, 2557, 109, 2555, 268, 2554, 2553, 51, 2552,
	24, 22, 20, 38, 2550, 2247, 2245, 2243, 2238, 2230,
	2549, 7, 2547, 2546, 2228, 2545, 2544, 2226, 2224, 2220,
	2211, 2543, 2542, 2541, 2207, 2204, 2201, 10, 2540, 18,
	2537, 4, 165, 179, 2534, 2, 2529, 2528, 17, 2526,
	2525, 2198, 2524, 2520, 2519, 101, 2517, 2185, 2183, 2516,
	2180, 2176, 2515, 2514, 2170, 2165, 2162, 2513, 187, 2512,
	2511, 2509, 168, 111, 167, 2506, 2505, 2504, 119, 89,
	312, 127, 58, 129, 336, 2501, 13, 67, 232, 2499,
	30, 2498, 121, 2497, 118, 2495, 172, 2494, 156, 437,
	97, 2492, 2491, 184, 2489, 2488, 2487, 117, 2485, 2484,
	182, 2620, 2481, 2479, 154, 2475, 49, 180, 47, 43,
	2474, 2473, 2471, 2469, 2468, 26, 750, 2466, 116, 163,
	2465, 2464, 95, 2463, 2461, 100, 2458, 2457, 2456, 162,
	44, 2453, 2451, 61, 2448, 41, 53, 2447, 104, 2446,
	149, 2444, 2443, 28, 19, 2442, 63, 2441, 52, 2440,
	155, 123, 936, 2439, 15, 8, 16, 2438, 42, 12,
	3, 45, 36, 70, 81, 148, 93, 2437, 56, 40,
	120, 90, 2434, 114, 69, 33, 2429, 169, 2428, 78,
	173, 147, 152, 166, 2427, 2426, 2422, 188, 2421, 138,
	87, 2420, 108, 1130, 178, 140, 2419, 106, 2417, 2412,
	2410, 2409, 2408, 91, 124, 2405, 2402, 183, 181, 185,
	143, 2401, 37, 2472, 3558, 1809, 75, 171, 2400, 48,
	2398, 2395, 2394, 3926, 125, 66, 122, 177, 2391, 126,
	136, 50, 2389, 2388, 2385, 2382, 2377, 2376, 309, 2375,
	2373, 2370, 2369, 139, 328, 2368, 144, 141, 135, 2367,
	158, 31, 2366, 2365, 145, 96, 2363, 2356, 2355, 2354,
	146, 82, 164, 2348, 137, 133, 142, 2346, 64, 2344,
	2343, 105, 57, 2341, 2339, 2335, 112, 94, 2334, 68,
	34, 27, 76, 32, 2332, 2318, 84, 98, 2314, 29,
	2313, 5, 9, 11, 2311, 2310, 2309, 2304, 2303, 2302,
	2284, 88, 2283, 2274, 65, 2271, 2268, 2267, 35, 2264,
	2258, 2257, 157, 132, 46, 175, 85, 14, 2252, 2251,
	6, 2250, 134, 2249, 54, 2240, 59, 2236, 2233, 60,
	2222, 2217, 62, 2209, 2195, 176, 1879, 428, 2193, 174,
	159, 55, 115, 2178, 2174, 0, 99, 170, 79, 2172,
	2168,
}

var yyR1 = [...]int{
	0, 354, 354, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 183, 183, 183,
	183, 182, 182, 90, 90, 91, 91, 88, 88, 96,
	6, 6, 7, 7, 10, 10, 71, 71, 11, 12,
	12, 12, 12, 357, 357, 105, 105, 103, 103, 104,
	104, 180, 180, 13, 13, 13, 187, 187, 192, 192,
	192, 195, 195, 195, 195, 170, 171, 172, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	328, 328, 337, 337, 337, 338, 338, 336, 336, 336,
	336, 336, 340, 340, 341, 341, 339, 339, 339, 339,
	343, 343, 344, 344, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 331, 331,
	331, 34, 34, 34, 34, 35, 35, 35, 35, 35,
	35, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 346, 346, 347, 347, 348, 348, 349, 349,
	349, 349, 350, 350, 350, 350, 350, 351, 351, 351,
	351, 351, 351, 351, 352, 352, 353, 353, 2, 309,
	309, 310, 310, 311, 311, 311, 311, 312, 312, 313,
	313, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 25, 219, 219, 216, 216, 216, 217, 217, 218,
	218, 218, 330, 330, 330, 324, 324, 324, 326, 326,
	325, 325, 325, 327, 327, 332, 332, 332, 332, 332,
	334, 334, 334, 334, 334, 334, 335, 335, 335, 333,
	333, 49, 49, 50, 50, 50, 159, 159, 159, 14,
	14, 14, 14, 14, 20, 22, 22, 38, 38, 39,
	23, 23, 23, 23, 40, 40, 41, 26, 26, 26,
	26, 26, 26, 47, 47, 47, 46, 46, 45, 45,
	45, 45, 45, 45, 24, 24, 24, 24, 48, 48,
	43, 43, 42, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 27, 27, 27, 27, 27,
	27, 19, 308, 308, 308, 37, 37, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 53, 53, 283,
	284, 284, 284, 284, 284, 284, 284, 284, 271, 271,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	261, 261, 261, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 240, 240, 240, 240, 244, 244,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	243, 243, 243, 243, 243, 243, 243, 243, 245, 245,
	245, 245, 245, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	247, 247, 247, 247, 247, 247, 247, 247, 270, 270,
	248, 248, 264, 264, 265, 265, 265, 262, 262, 262,
	263, 263, 251, 252, 266, 253, 253, 253, 254, 254,
	254, 255, 255, 260, 260, 259, 259, 259, 259, 259,
	259, 256, 256, 256, 256, 257, 257, 258, 269, 269,
	269, 269, 269, 249, 36, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 295, 295, 209,
	209, 210, 210, 273, 273, 293, 293, 292, 292, 291,
	291, 291, 282, 282, 288, 288, 288, 288, 288, 288,
	288, 288, 277, 277, 277, 276, 276, 278, 278, 281,
	281, 290, 290, 289, 289, 274, 274, 274, 296, 296,
	296, 296, 296, 275, 275, 275, 275, 275, 297, 279,
	279, 280, 280, 280, 302, 303, 301, 301, 301, 301,
	301, 122, 122, 122, 285, 285, 285, 286, 286, 286,
	287, 287, 287, 287, 287, 287, 306, 306, 305, 305,
	51, 52, 56, 56, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	158, 158, 158, 214, 214, 300, 298, 298, 299, 299,
	16, 16, 54, 54, 329, 329, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 304, 304, 304, 18, 18,
	57, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 85, 201, 201, 200,
	200, 199, 199, 199, 202, 202, 202, 202, 238, 238,
	238, 59, 59, 59, 63, 63, 66, 66, 66, 64,
	65, 28, 29, 29, 29, 29, 30, 215, 215, 61,
	61, 62, 62, 62, 62, 77, 77, 359, 359, 60,
	360, 68, 69, 69, 70, 70, 70, 205, 205, 74,
	74, 74, 72, 72, 72, 73, 73, 79, 79, 83,
	83, 83, 83, 82, 82, 82, 82, 161, 161, 166,
	230, 230, 142, 142, 162, 162, 167, 167, 167, 168,
	168, 169, 169, 169, 169, 169, 164, 164, 163, 163,
	165, 130, 130, 228, 228, 228, 228, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 87, 87,
	92, 92, 94, 94, 94, 94, 94, 97, 144, 144,
	115, 115, 116, 116, 116, 116, 116, 128, 128, 179,
	179, 178, 178, 181, 181, 93, 95, 95, 95, 95,
	100, 100, 101, 101, 102, 102, 213, 213, 235, 235,
	235, 106, 106, 106, 108, 107, 107, 107, 107, 109,
	109, 110, 110, 112, 113, 113, 111, 111, 111, 111,
	111, 117, 117, 114, 118, 118, 118, 118, 119, 119,
	84, 84, 84, 84, 84, 84, 84, 84, 198, 198,
	121, 121, 120, 120, 120, 120, 120, 120, 120, 120,
	120, 120, 138, 138, 138, 138, 138, 138, 123, 123,
	123, 123, 123, 123, 123, 78, 78, 139, 139, 139,
	99, 98, 98, 81, 81, 80, 80, 140, 140, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 133, 133, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 358, 358, 135, 134, 134, 134,
	134, 134, 134, 75, 75, 75, 75, 75, 236, 236,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 151, 151, 76, 76, 149,
	149, 150, 152, 152, 148, 148, 148, 148, 148, 148,
	148, 148, 125, 125, 125, 125, 125, 125, 125, 125,
	127, 127, 127, 153, 153, 141, 141, 86, 154, 154,
	155, 156, 156, 157, 157, 160, 173, 173, 173, 174,
	174, 174, 174, 129, 129, 175, 175, 175, 124, 124,
	124, 124, 124, 124, 124, 177, 177, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	184, 184, 143, 143, 146, 146, 145, 147, 185, 185,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 186,
	186, 190, 190, 190, 190, 193, 193, 194, 194, 194,
	191, 191, 191, 188, 188, 188, 232, 232, 232, 196,
	196, 206, 206, 203, 203, 204, 204, 197, 197, 250,
	250, 250, 212, 212, 211, 211, 211, 207, 207, 207,
	208, 208, 229, 229, 225, 225, 231, 231, 226, 226,
	233, 233, 234, 234, 307, 307, 267, 267, 317, 317,
	268, 268, 318, 318, 320, 320, 315, 315, 316, 316,
	319, 319, 31, 321, 321, 322, 322, 323, 323, 323,
	323, 32, 33, 33, 33, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 223, 223, 223, 223, 223, 355, 356,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 0, 1, 1, 3, 4,
	1, 3, 1, 3, 8, 9, 1, 1, 10, 9,
	8, 7, 7, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 1, 1, 0, 2, 3, 2, 2, 2, 2,
	2, 6, 8, 3, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 4, 4, 3, 3, 2, 4, 5,
	2, 3, 4, 2, 2, 3, 3, 3, 3, 3,
	4, 1, 1, 1, 1, 1, 6, 6, 4, 4,
	4, 5, 3, 3, 3, 3, 3, 4, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 4, 4, 4, 4, 4, 2, 1,
	2, 1, 2, 2, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 3, 1,
	1, 0, 1, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 3, 5, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	1, 5, 1, 3, 5, 4, 3, 5, 3, 8,
	10, 3, 3, 3, 3, 3, 5, 4, 5, 1,
	2, 2, 4, 3, 6, 5, 3, 9, 2, 2,
	0, 1, 2, 0, 1, 7, 1, 3, 8, 8,
	3, 3, 3, 5, 3, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 3, 4, 3, 5, 5, 5, 4, 4, 4,
	2, 2, 2, 6, 2, 4, 4, 4, 5, 8,
	6, 3, 5, 4, 2, 4, 3, 2, 4, 5,
	6, 2, 6, 6, 3, 3, 3, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 3, 2, 0, 1,
	1, 2, 4, 1, 1, 1, 2, 4, 4, 1,
	1, 2, 3, 4, 4, 5, 3, 1, 1, 3,
	3, 1, 1, 1, 1, 0, 3, 1, 1, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 0,
	1, 1, 0, 1, 1, 0, 1, 3, 5, 1,
	1, 3, 5, 1, 2, 3, 5, 2, 2, 6,
	0, 1, 0, 3, 0, 1, 0, 2, 2, 4,
	1, 2, 2, 2, 2, 2, 0, 2, 1, 3,
	3, 1, 3, 0, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 1, 2, 2, 4,
	2, 6, 1, 4, 6, 3, 2, 0, 3, 0,
	3, 1, 3, 1, 3, 4, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 1, 3, 3, 2, 1, 1, 3, 1, 1,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 1, 1, 5, 6, 6, 6, 5,
	5, 5, 6, 5, 5, 6, 5, 5, 5, 5,
	6, 5, 5, 5, 4, 4, 5, 5, 5, 5,
	5, 4, 4, 4, 4, 4, 4, 4, 3, 6,
	6, 6, 8, 8, 8, 8, 4, 6, 7, 7,
	7, 9, 4, 7, 5, 4, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 0, 2,
	1, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 1, 1, 0, 2, 4, 2, 4,
	1, 3, 5, 4, 6, 0, 3, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 1, 0, 4,
	0, 1, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 3, 3, 1, 3, 2, 4, 1, 2, 1,
	2, 2, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -354, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -91, 29,
	-53, 180, -52, 183, 182, 218, 184, 211, 64, 341,
	-66, 344, 345, -359, -215, 269, 270, 20, 37, 346,
	348, 30, 31, 232, 286, 288, 313, -5, -90, -6,
	181, 342, 213, 212, 26, 490, -355, 68, 611, -156,
	15, -68, -360, -68, -71, 9, 10, 8, 441, -68,
	-283, -213, 108, 68, 23, -208, -219, 88, 432, 188,
	-217, 282, 284, -206, -207, -216, 242, 252, 44, 199,
	198, 253, 189, 282, 189, 190, 192, 432, 188, 225,
	224, 282, 284, 189, -111, -233, -223, -224, 300, 72,
	-222, 458, 462, 465, 466, 471, 290, 81, 322, 323,
	314, 324, 209, 283, 289, 292, 315, 578, 325, 327,
	328, 452, 453, 192, 202, 596, 307, 210, 487, 253,
	606, 599, 294, 401, 341, 357, 349, 372, 488, 548,
	264, 340, 418, 297, 257, 320, 549, 407, 413, 267,
	344, 427, 233, 550, 261, 263, 262, 247, 457, 268,
	36, 214, 368, 303, 242, 551, 543, 236, 35, 27,
	235, 430, 99, 552, 331, 415, 389, 332, 231, 553,
	492, 301, 414, 364, 313, 117, 240, 279, 411, 333,
	554, 390, 394, 555, 419, 287, 278, 556, 557, 334,
	558, 191, 293, 559, 243, 421, 298, 388, 200, 489,
	48, 222, 422, 392, 398, 560, 330, 561, 562, 563,
	564, 311, 309, 310, 312, 254, 259, 53, 186, 396,
	395, 397, 260, 417, 377, 375, 565, 566, 302, 206,
	567, 568, 376, 18, 569, 570, 425, 305, 571, 572,
	573, 574, 575, 576, 416, 391, 393, 241, 116, 577,
	308, 412, 317, 491, 291, 579, 336, 221, 216, 426,
	326, 580, 581, 582, 583, 584, 285, 284, 345, 318,
	346, 265, 585, 586, 587, 588, 251, 234, 429, 420,
	52, 403, 589, 321, 337, 406, 342, 228, 7, 258,
	299, 410, 319, 266, 252, 255, 379, 223, 590, 591,
	366, 367, 343, 226, 218, 111, 428, 542, 282, 338,
	51, 229, 592, 593, 256, 230, 347, 296, 369, 189,
	133, 373, 418, 180, 408, 409, 415, -277, 416, 224,
	227, -238, 189, -201, 407, 287, 308, 462, 230, 231,
	190, 191, 32, 420, 419, 411, -233, 193, 347, -77,
	184, 219, -111, -48, 72, 271, -48, 29, 72, 72,
	36, 72, 346, 410, 410, 75, 491, 233, 21, -346,
	-327, 317, -345, -325, 181, 180, 10, 182, 322, 323,
	324, 190, 8, 30, 578, 207, 325, 326, 6, 211,
	327, 328, 225, 9, 329, -330, 74, 72, -222, 21,
	-346, -327, 317, -210, -209, 339, 398, 6, -70, 5,
	-197, 194, 343, -88, 547, -96, -235, -233, -223, 74,
	-8, -3, -90, -174, 17, 16, -74, 54, 55, -69,
	-82, 124, -84, -233, -120, 91, -126, 28, 72, -222,
	24, -125, 300, 219, -121, -148, -223, -147, -99, 133,
	-237, 122, 123, 130, 92, 176, -133, -131, -132, -134,
	-136, -137, 74, 73, 82, 75, 76, 77, 78, 83,
	84, 85, -225, -224, -221, 458, 462, 465, 466, 471,
	-145, -355, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 58, 59, 188, 442, 443, 444,
	445, 446, 486, 209, 450, 94, 47, 531, 431, 440,
	439, 438, 436, 437, 433, 435, 434, 452, 453, 195,
	432, 128, 441, 475, 476, 477, 478, 479, 480, 481,
	482, 484, 485, 483, 459, 460, 461, 463, 464, 467,
	468, 469, 470, 472, 473, 474, 493, 185, 181, 184,
	90, 23, 25, 494, 239, 93, 355, 384, 449, 16,
	20, 203, 187, 370, 373, 201, 132, 197, 204, 273,
	275, 180, 62, 495, 274, 408, 496, 497, 498, 499,
	363, 361, 272, 500, 10, 26, 212, 246, 501, 359,
	182, 237, 97, 98, 503, 41, 40, 306, 276, 213,
	504, 360, 505, 506, 19, 65, 205, 11, 199, 227,
	605, 507, 286, 13, 456, 115, 14, 508, 509, 510,
	511, 194, 110, 190, 595, 60, 244, 8, 512, 353,
	513, 514, 515, 516, 517, 354, 87, 518, 519, 107,
	520, 56, 544, 32, 232, 545, 447, 521, 522, 38,
	37, 383, 387, 382, 523, 399, 108, 17, 30, 524,
	525, 220, 386, 352, 381, 546, 526, 527, 249, 63,
	339, 362, 609, 33, 66, 217, 335, 304, 42, 88,
	15, 245, 61, 34, 454, 112, 610, 365, 196, 224,
	529, 423, 248, 530, 113, 358, 547, 207, 109, 348,
	183, 316, 270, 208, 532, 288, 533, 238, 114, 409,
	534, 535, 451, 29, 211, 269, 351, 198, 536, 250,
	281, 271, 280, 537, 538, 295, 43, 607, 594, 189,
	39, 96, 385, 350, 380, 193, 448, 225, 277, 5,
	44, 31, 404, 9, 329, 64, 67, 374, 371, 539,
	378, 608, 12, 540, 455, 490, 424, 89, 541, 405,
	-68, -68, -68, -186, 343, -193, -190, 419, 420, -191,
	-194, -188, -148, 398, 575, 576, 418, 373, 417, -225,
	-233, 458, 133, 459, 460, 461, 94, 442, 462, 475,
	433, 435, 431, 434, 432, 28, 476, 24, 85, 477,
	195, 176, 463, 464, 478, 479, 480, 58, 436, 437,
	486, 465, 466, 128, 91, 481, 482, 83, 484, 485,
	531, 441, 59, 483, 188, 469, 468, 467, 470, 444,
	445, 471, 84, 438, 439, 440, 47, 473, 472, 474,
	-2, -5, 6, -111, -284, -272, -275, -225, -223, -224,
	300, 215, 219, 50, 86, 55, 54, 204, -297, 72,
	-222, 201, 190, 192, 441, -204, 195, -204, 225, 224,
	-218, 250, -204, -204, 189, -217, 100, 100, -54, -111,
	-329, -324, -330, -203, 195, -225, -203, -203, -203, -203,
	-203, -203, -203, -111, 177, -103, -111, 72, 29, -202,
	108, 12, 432, 188, 189, 224, 225, 192, -279, 11,
	110, 228, 228, 228, 229, 228, -200, 410, 412, 226,
	413, 414, 12, -85, 108, 19, -355, -174, -174, 125,
	72, 346, 193, -62, -3, -12, -10, -11, -8, 100,
	-128, 23, 29, 29, 74, 51, 29, -43, -42, -44,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 29, -308, 68, -267, 398, 72, -321, -322,
	-111, 75, 75, 66, 66, 69, 193, 69, 66, -347,
	318, 68, -347, 284, 318, 319, 252, 282, 192, -347,
	-347, 284, -347, -347, -347, -347, -347, 410, -347, -347,
	-347, 320, 321, -347, 408, 192, -347, -347, -347, -347,
	-347, 71, 66, 69, 308, 66, 11, 66, -294, 133,
	331, 332, 333, 334, 330, 308, 335, 336, 337, 228,
	338, -68, -7, -5, -355, 21, 22, 189, 423, 69,
	-88, -177, -355, -356, 70, -175, 19, 30, -129, 75,
	78, -157, -160, -84, -233, 50, -72, 21, 22, 80,
	11, -228, 90, 88, 89, 107, -227, 23, 72, -222,
	-223, 74, -224, 300, 219, 50, 86, 55, 54, 177,
	-84, -123, 110, 91, 108, 109, 93, 119, 118, 129,
	122, 123, 124, 125, 126, 127, 128, 120, 121, 132,
	100, 101, 102, 103, 104, 105, 106, -198, -355, -99,
	-355, -355, 178, 179, -126, -126, -126, -126, -126, -126,
	-126, -355, 177, -355, -355, -355, -355, -355, -8, -140,
	-84, 490, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -151, -84, -355, -355, -358, -135,
	-355, -358, -135, -358, -135, -358, -355, -358, -135, -358,
	-135, -358, -358, -135, -358, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -355, -355, -197, -197, 11, -103, -104, -114,
	-233, 69, -187, -192, 421, 423, 343, -191, -191, -232,
	-225, 74, 28, 100, 29, 177, -156, -68, 70, 69,
	-275, -240, -244, -246, -245, -247, -242, -243, 370, 373,
	377, 375, 371, 376, 133, 374, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 29, 214, 366,
	367, 368, 369, 390, 391, 392, 393, 394, 395, 396,
	397, 349, 372, 488, 350, 351, 352, 353, 354, 355,
	357, 358, 359, 360, 361, 362, 363, 364, -240, -240,
	-240, -240, -240, -240, -240, -240, -240, 72, 228, -223,
	-297, 68, -225, -111, -219, -217, 72, 91, 72, -110,
	-225, -233, -117, -225, -233, 251, -333, -332, -324, -327,
	-204, -218, -324, 256, 254, 255, 69, 193, 69, 193,
	71, -103, 24, 66, -105, -111, 72, 72, -110, -117,
	-326, -324, -327, -234, -233, -220, 493, 185, 21, 181,
	184, 90, 23, 25, 494, 458, 239, 93, 355, 133,
	459, 460, 461, 384, 449, 16, 20, 203, 94, 187,
	370, 373, 201, 132, 197, 204, 273, 275, 442, 462,
	475, 180, 62, 495, 433, 435, 431, 434, 274, 432,
	408, 496, 497, 498, 499, 363, 361, 272, 28, 500,
	10, 476, 26, 212, 246, 22, 501, 126, 359, 182,
	237, 97, 98, 503, 41, 40, 306, 24, 276, 213,
	85, 504, 477, 360, 505, 506, 19, 65, 205, 11,
	199, 227, 605, 507, 286, 13, 456, 115, 14, 508,
	509, 510, 511, 195, 194, 110, 190, 595, 60, 244,
	8, 512, 353, 513, 514, 515, 516, 517, 354, 176,
	87, 518, 519, 107, 520, 56, 463, 464, 544, 45,
	32, 232, 478, 479, 545, 480, 447, 521, 522, 38,
	37, 383, 387, 382, 523, 399, 58, 108, 17, 436,
	437, 30, 524, 525, 486, 465, 220, 386, 352, 381,
	546, 526, 466, 527, 128, 249, 63, 91, 339, 481,
	482, 83, 362, 609, 33, 66, 217, 335, 304, 42,
	88, 15, 245, 61, 34, 454, 112, 610, 484, 365,
	196, 224, 529, 423, 248, 530, 113, 485, 358, 547,
	207, 109, 348, 183, 531, 441, 316, 270, 208, 532,
	288, 59, 533, 238, 114, 483, 188, 409, 534, 6,
	535, 451, 29, 211, 269, 351, 198, 536, 250, 281,
	271, 280, 537, 49, 538, 295, 43, 469, 468, 467,
	470, 607, 57, 444, 445, 471, 594, 189, 39, 96,
	385, 350, 380, 193, 448, 225, 84, 277, 5, 44,
	31, 404, 9, 329, 64, 67, 438, 439, 440, 47,
	374, 371, 539, 473, 378, 472, 474, 608, 95, 12,
	540, 455, 490, 424, 89, 541, 405, 69, -202, 74,
	-237, -84, -204, -204, -111, -111, -111, -111, -111, -202,
	-202, -202, -202, -199, 11, 110, 11, -199, -199, -84,
	-126, -324, 434, 124, -233, 72, 72, 346, 72, 33,
	-43, -43, 74, -43, 69, 100, -43, 70, -140, -307,
	595, 69, -323, 23, 423, 424, 399, -349, 189, 227,
	224, -349, -345, 326, -326, -325, -324, -347, -348, -225,
	-347, -347, -347, 410, -347, -347, -347, -347, -347, -347,
	-347, -347, -330, -349, 286, 69, -349, -326, -324, 330,
	330, 330, 330, 330, 330, -74, -8, -111, 424, 425,
	-96, 23, -176, -225, -226, -223, -224, 300, 215, 219,
	50, 86, 55, 54, -220, 458, 462, 465, 466, 471,
	-183, 87, 9, 110, 69, 18, 69, -173, 25, 26,
	177, -127, 51, 75, 78, -205, 49, -111, -84, -84,
	-84, -138, 83, 91, 84, 85, -227, 215, 124, -234,
	-226, -224, 300, 219, -220, -225, -126, -139, -145, -99,
	79, 110, 108, 109, 93, -126, -126, -126, -126, -126,
	-126, -126, -126, -126, -126, -126, -126, -126, -126, -126,
	-236, 72, 74, 72, -80, -83, 124, -84, -233, -125,
	83, -125, -225, -72, -226, -72, -72, -72, -72, -72,
	-356, 69, -356, -8, -80, -80, -356, -84, -84, -148,
	74, -80, -148, 74, -80, -126, 447, 448, 449, -80,
	-80, -72, -149, -150, 95, -148, -80, -356, -126, -225,
	-225, -80, -81, -80, -80, -80, -356, -356, -83, -80,
	-83, -80, -80, -356, -356, -356, -356, -80, -80, -80,
	-80, -80, -80, -80, -80, -80, -80, -80, -80, -113,
	87, -111, -87, -92, -94, -95, -115, -98, -355, -93,
	-111, -99, 72, -111, -103, -357, 11, 67, -357, 69,
	177, -190, -193, 69, 422, 424, 425, -187, -254, 132,
	66, 86, -84, -226, -234, -174, -74, -285, -286, -287,
	-226, 74, 75, 81, 322, 292, -272, -273, -274, -275,
	-288, 204, -296, 196, 198, 199, 44, -276, 205, 190,
	45, -241, -262, 403, 404, -248, 68, -248, -248, 378,
	370, 373, 371, -248, -248, -248, -248, -248, -253, 373,
	-253, -253, -253, -253, 371, 68, 68, -248, -248, -248,
	-264, 68, -264, 365, -265, 68, -265, -265, -265, -265,
	-241, -241, -241, -241, -241, -241, -241, -241, -241, -297,
	-297, -297, -84, -229, 67, 23, 192, -260, -259, -256,
	-257, -258, -255, 28, 24, -260, -49, 239, 210, 177,
	68, 177, 242, 243, -328, 69, 28, -334, 283, -111,
	219, -111, -111, -324, -324, -330, -304, 208, 203, -111,
	69, 69, -111, 74, 72, 72, -128, -280, 11, 110,
	-202, -233, -233, -111, -128, -202, -78, 215, 67, -358,
	-356, 72, -126, -42, -125, 70, -112, 87, 74, -322,
	-235, 398, 424, -350, 124, -225, -350, -353, 490, 193,
	70, 69, -347, -350, 304, 286, -350, 11, -295, 19,
	-72, -356, -56, -55, 185, 182, 183, 186, 187, -300,
	401, 181, 236, 235, 221, -98, -355, -356, 69, 177,
	-182, 34, 35, -225, 52, -129, -129, -160, -196, 19,
	11, 47, 47, -73, 57, 83, 84, 85, 177, -355,
	-139, -126, -126, -126, -78, 90, -356, 69, -356, 177,
	-81, -80, -80, -80, -80, -80, -84, -356, -356, -356,
	69, 67, 23, 11, 11, -356, 11, 11, -356, -356,
	11, -126, -126, -126, -356, -356, -80, -152, -150, 97,
	-84, -356, -356, -356, 69, 69, -356, -356, -356, -356,
	-161, 454, -161, -356, -356, -356, -356, -356, -161, -161,
	-161, -161, -356, -356, -356, -356, -356, -356, -356, -356,
	-356, -356, -356, -356, -180, 112, -111, 29, 69, -106,
	-108, -107, -109, 56, 60, 62, 57, 58, 59, 63,
	-213, -87, -97, 47, -355, -116, 112, -118, 23, -235,
	64, 194, 65, -355, -180, 67, -87, -87, -114, -233,
	124, -192, -195, 426, 423, 429, 72, 74, 177, -175,
	69, -287, 100, -275, 68, 72, -281, -223, 45, -276,
	-278, -276, -276, -281, 72, -281, 45, 83, 91, -251,
	-252, -266, -269, -249, 23, 605, 406, 28, 66, 401,
	196, 45, 44, 199, 81, -263, 405, 75, -253, -253,
	-248, -248, -248, 378, -248, -253, -254, 133, 29, -254,
	133, -254, 133, -254, 133, -254, 133, -253, -270, 74,
	-270, 75, -264, 75, 70, 66, -225, -170, -111, -257,
	-256, -258, 373, 418, 132, 430, -50, 8, 9, 10,
	-225, -309, -310, -311, -225, 110, 244, 245, -225, -337,
	316, -332, 284, 293, 90, 16, 490, 193, 193, -111,
	-324, -119, 12, 72, 72, -199, -202, -126, -327, 230,
	231, -180, 189, -323, 193, 177, 177, 193, 307, -326,
	-225, 11, 11, 304, 11, -326, 340, -205, 69, -214,
	-276, -306, -274, -275, -305, 197, 204, -214, 204, 201,
	-276, 205, 196, 197, -211, -276, 193, 23, -214, -214,
	-282, 100, -214, 32, 32, 112, -226, -226, 69, 74,
	74, 53, -111, -79, -171, 124, -226, -81, -78, 90,
	-126, -83, 124, -234, -356, -356, -356, -356, -356, -356,
	-239, 133, 370, 214, 368, 361, 388, 375, 403, 366,
	404, -236, -239, -126, -126, -126, -126, -126, 11, 11,
	11, 487, -156, 99, -84, 96, -126, -126, -225, -166,
	-355, -161, -161, -161, -161, -161, -162, -161, -162, -162,
	-162, -162, -162, -162, -162, -162, -162, -162, -162, -124,
	29, 47, -355, -8, -355, -185, -189, -148, -223, 300,
	215, 219, 50, 86, 55, 54, 458, 462, 465, 466,
	471, -92, -94, -94, -92, -94, 56, 56, 56, 61,
	56, 61, 56, -107, -235, -356, -356, -144, 238, -355,
	33, -235, -118, 190, 190, 190, -81, -119, -87, -119,
	-119, 177, 423, 427, 428, -286, -287, -290, -289, -225,
	-223, 196, -296, 44, -296, -281, -281, -281, -281, 68,
	83, -355, 606, 75, -126, 9, 45, 45, 45, 74,
	70, -254, 133, -254, 133, -253, -248, -254, 133, 72,
	133, -254, 133, 70, 69, 70, 69, 70, 69, -122,
	552, 91, -111, -172, 23, 29, -282, -282, -282, 66,
	70, 69, -240, -225, -225, -225, -340, 490, 289, -338,
	-336, 295, 296, 297, 298, 299, -327, 294, -334, 291,
	74, 72, -111, -324, -84, -128, -253, -111, -326, 124,
	124, -225, -326, 304, -352, 490, -326, -326, 11, -326,
	74, -73, -55, 68, -271, 72, -222, -281, -207, 196,
	72, 72, 72, -222, 72, -222, -225, 45, 45, 72,
	-111, -225, -271, 72, -84, -225, -225, 177, -225, -183,
	69, -82, -356, -126, 177, -162, -162, -162, -162, -162,
	-356, -248, -248, -248, -265, -248, 354, -248, 354, -356,
	-356, 19, 19, 19, 19, -356, -126, -126, -126, -355,
	-76, 451, -84, 69, 69, -230, 72, -184, 66, -185,
	-143, -146, -145, -355, -8, -356, -176, 6, 490, -181,
	-225, -119, 69, 100, 100, 100, 100, 100, 100, 100,
	100, 100, -101, -100, 66, 67, -102, 66, -100, 56,
	56, -179, 68, 69, -145, -355, -181, -126, -118, -355,
	-355, -355, -356, -156, -119, 70, 69, -248, -248, 45,
	-278, -178, -225, -126, 23, -132, 431, 440, 439, 438,
	436, 437, 433, 435, 434, 452, 453, -254, 133, -253,
	74, -253, 75, 75, 552, 68, -8, -170, -282, 72,
	133, 72, 133, 74, -111, -312, -313, -314, 81, 489,
	91, 246, 247, 206, 248, 249, 250, -311, -240, -240,
	-240, -343, -344, -342, 292, 314, 315, 300, -341, -339,
	309, 310, 311, 312, 90, 74, 74, 74, -335, 283,
	90, 292, 16, 23, -202, -315, -200, -352, -352, 286,
	-326, -79, -271, -158, 209, 210, -240, -240, -229, -278,
	45, 72, -212, 193, 23, 193, -158, -271, 29, 182,
	87, -226, -89, 11, -171, -171, 124, -253, 72, -126,
	-126, -126, -126, -356, -356, -356, -126, -356, 74, -126,
	-126, -142, 112, 27, -184, 69, -356, -356, 47, -356,
	-356, 69, -156, -189, -84, -84, -84, -84, -84, -84,
	-84, -84, -84, -84, 68, -84, -178, 238, -356, -118,
	-213, -178, -178, -178, -174, -292, -291, 67, 200, 81,
	-289, -173, -173, -281, -281, 70, 69, -356, -355, -254,
	133, -254, 133, 70, 70, -290, -170, -172, 72, 133,
	19, -171, -314, 74, 250, 246, 250, 250, 250, 250,
	251, -331, 81, 290, -342, 301, 557, 285, 316, 75,
	75, 111, 30, 31, -339, 75, 75, 75, 75, -336,
	16, 490, -334, 291, 74, 74, -316, 38, -318, 39,
	-351, 23, -351, 304, 11, 70, 72, -241, -241, 68,
	-281, -281, 72, -225, -158, 28, 28, -355, -119, -87,
	-82, -356, -356, -356, -356, -75, 110, 490, -356, -356,
	-156, 16, 45, -146, -143, 47, -8, -355, -225, -174,
	-178, 70, -145, -116, -235, -356, -356, -356, -291, 72,
	-282, 74, 207, -225, -261, 608, 607, -126, 70, -8,
	237, -172, 36, 36, 242, 243, 74, 74, 28, 302,
	176, 28, 75, 176, 457, 291, 74, 72, 292, -250,
	194, -319, 43, -317, -268, 42, 16, -324, -87, -290,
	-229, 68, -126, -298, -299, 112, -153, 13, -171, -356,
	488, 63, 491, -167, 114, 113, -140, 9, -143, -8,
	70, -118, 75, -111, -356, -293, -292, -170, 238, -21,
	-3, -10, -11, -12, -13, -15, -51, -16, -17, -22,
	-23, -18, -57, -58, -66, -64, -65, -61, -60, -26,
	-24, -27, -19, -28, -29, -30, -34, -35, -25, -36,
	94, 195, 272, 341, 75, 28, 75, 28, 305, 292,
	23, -179, 75, -318, 16, -320, 40, 41, 74, 490,
	-119, 70, 68, -290, -356, 69, -225, -154, 14, 16,
	53, 489, 492, -356, -168, 93, -169, 111, 457, -130,
	75, 176, -168, -185, -356, 68, -261, -159, 240, 241,
	-170, -84, -84, 72, -47, -231, 275, 276, 277, -226,
	-37, -21, 303, 303, 74, 38, 114, 74, 16, 16,
	284, -153, -293, -290, 70, -299, 47, -164, 455, -155,
	-84, -141, -86, -84, 53, -169, 116, 117, 238, 116,
	117, -125, -178, -170, 72, 72, -38, -39, 95, 96,
	273, 274, 278, -240, 69, 611, 74, 74, 28, 289,
	21, -327, -154, 70, -293, 222, -163, -165, -225, 69,
	490, 90, -225, 70, -172, 99, 97, -39, -84, -37,
	19, 19, 19, 28, -226, 99, -21, 306, -164, -293,
	223, 69, 23, -86, 491, -169, -302, -303, 66, -14,
	-20, -13, -10, -11, -12, 341, -90, 94, -37, 96,
	611, -48, 75, -8, -46, -45, 75, -48, 280, 91,
	281, 72, -126, -327, -355, -165, -166, 492, -303, 66,
	-302, 66, 10, 9, -170, -37, 611, -37, 99, 97,
	-40, -41, 98, -21, 69, 279, -126, 220, -301, 208,
	203, 206, 29, -301, 611, 99, 611, 195, -37, 99,
	97, -41, -84, -45, -356, -356, 202, 28, 83, 99,
	94, 611, 195, -37, 96, 99, 611, -37, 195, 99,
	611, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 780, 780, 0, 780,
	886, -2, 640, 0, 0, 0, 0, -2, 753, 754,
	755, 759, 760, 775, 777, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 41, 56, 0,
	1267, 0, 778, 767, 768, 0, 0, 2107, 2, 1189,
	0, 789, 782, 0, 780, 780, 780, 66, 67, 0,
	98, 0, 0, 0, 887, 0, 0, 0, 1265, 1265,
	249, 1265, 1265, 0, 1281, 247, 0, 1262, 1277, 1278,
	1279, 0, 0, 0, 1263, 0, 1263, 1263, 1263, 1263,
	1263, 1263, 1263, 0, 699, 906, 908, 909, 910, 1290,
	1291, 2102, 2103, 2104, 2105, 2106, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 0,
	0, 0, 744, 0, 710, 711, 712, 0, 714, 0,
	0, 0, 0, 0, 724, 727, 731, 0, 1189, 1189,
	582, 583, 584, 749, 750, 738, 751, 0, 0, 55,
	0, 0, 867, 324, 326, 0, 346, 0, 349, 352,
	1296, 761, 0, 0, 1321, 1322, 0, 0, 0, 0,
	0, 2017, 192, 263, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 0, 194, 194, 194, 2025, 194, 0,
	194, 194, 194, 194, 194, 262, 252, 253, 254, 0,
	0, 0, 2017, 0, 562, 559, 560, 780, 0, 784,
	0, 1268, 756, 53, 0, 57, 1205, 888, 889, 890,
	0, 39, 0, 1195, 0, 0, 792, 790, 791, 781,
	0, 803, 833, 0, 920, 1763, 926, -2, -2, -2,
	1674, 969, 970, 971, 972, 973, 974, 975, 976, 1618,
	0, 0, 0, 0, 0, 1716, 999, 1000, 1001, 1002,
	1003, 1004, 1162, 1163, 1164, 1165, 1166, 1167, 1168, -2,
	-2, -2, 1154, 1157, 0, -2, -2, -2, -2, -2,
	1227, 0, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1742, 1807, 1812, 1637, 0, 1836,
	1837, 0, 1750, 2090, 0, -2, 1862, 1800, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 2099, 2100, 1700,
	1648, 1760, 1801, 1639, 1660, 1679, 1728, 1729, 1731, 1765,
	1766, 1784, 1793, 1811, 1619, 1620, 1621, 1723, 1724, 1833,
	1832, 1831, 1834, 1868, 1866, 1869, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1615, 1616, 1617, 1622, 1623, 1624,
	1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1640, 1641, 1642, 1647, 1649, 1650, 1651, 1652, 1653,
	1654, 1655, 1656, 1658, 1659, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1676,
	1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720,
	1721, 1722, 1725, 1726, 1727, 1730, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1747, 1748,
	1749, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1761, 1762,
	1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1794, 1795, 1796, 1797, 1798,
	1799, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1835, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 1857, 1858, 1863, 1864, 1865,
	1867, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1267, 1267, 0, 83, 2067, 0, 1239, -2, -2, 1241,
	0, 0, 0, -2, -2, -2, -2, 1630, -2, 1154,
	0, 1614, 1618, 1619, 1620, 1621, 1627, 1637, 1638, 1639,
	1643, 1644, 1645, 1646, 1648, 1657, 1660, 1674, 1677, 1679,
	1700, 1716, 1723, 1724, 1728, 1729, 1731, 1742, 1745, 1746,
	1750, 1751, 1758, 1760, 1763, 1765, 1766, 1767, 1784, 1793,
	1800, 1801, 1807, 1811, 1812, 1831, 1832, 1833, 1834, 1836,
	1837, 1838, 1849, 1859, 1860, 1861, 1862, 1866, 1868, 1869,
	99, 1181, 780, 100, 0, 390, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 1284,
	1285, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 1265, 249, 0, 0, 680, 0,
	681, 0, 257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 698, 0, 700, 77, 701, 744, 703,
	0, 0, 1265, 1265, 0, 0, 0, 0, 0, 609,
	610, 744, 744, 744, 744, 741, 0, 741, 721, 741,
	739, 740, 0, 726, 0, 0, 0, 734, 735, 0,
	762, 0, 0, 769, 771, 772, 773, 774, 770, 0,
	779, 0, 0, 0, 328, 0, 0, 348, 330, 0,
	333, 334, 335, 336, 337, 338, 339, 340, 341, 342,
	343, 344, 0, 351, 0, 1294, 1297, 766, 1312, 1313,
	0, 1323, 1324, 198, 198, 0, 0, 0, 0, 161,
	194, 0, 163, 194, 194, 194, 0, 194, 194, 170,
	171, 194, 173, 174, 175, 176, 177, 194, 179, 180,
	181, 194, 194, 184, 194, 194, 187, 188, 189, 190,
	191, 261, 198, 0, 0, 198, 0, 0, 544, 0,
	0, 0, 0, 549, 550, 551, 552, 0, 0, 555,
	556, 789, 43, 62, 0, 785, 786, 0, 0, 0,
	54, 0, 0, 61, 2108, 47, 0, 0, 1190, 1193,
	1194, 1182, 1183, 1186, 0, 0, 787, 793, 794, 783,
	0, 804, 0, 0, 0, 0, 834, 0, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 0,
	924, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	948, 949, 950, 951, 952, 953, 954, 927, 0, 941,
	0, 0, 0, 0, 992, 993, 994, 995, 996, 997,
	0, 792, 0, 792, 792, 792, 792, 792, 0, 0,
	967, 1874, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 792, 0, 1146, 0, 0, 1057, 1066,
	0, 1058, 1067, 1059, 1068, 1060, 0, 1061, 1069, 1062,
	1070, 1063, 1064, 1071, 1065, 0, 0, 0, 963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	906, 0, 84, 86, 0, 0, 2067, 1242, 1243, 518,
	1256, 1257, 1258, 0, 1254, 0, 1189, 789, 624, 0,
	392, 413, 507, 425, 426, 427, 500, 429, 500, 500,
	0, 500, 500, 500, 500, 500, 515, 515, 515, 515,
	515, 471, 472, 473, 474, 475, 0, 0, 448, 500,
	500, 500, 452, 490, 491, 492, 493, 494, 495, 496,
	497, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 502, 502, 504, 504, 504, 504, 504, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 0, 0, 0,
	606, 0, 1282, 0, 0, 249, -2, 0, -2, 0,
	901, 0, 0, 911, 0, 0, 110, 279, 265, 109,
	0, 243, 248, 244, 245, 246, 0, 0, 0, 0,
	256, 695, 1264, 0, 688, 75, 689, 690, 691, 692,
	693, 258, 694, 907, 1292, 1293, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 0, 702, 745,
	0, 747, 0, 0, 867, 707, 708, 709, 611, 715,
	716, 717, 723, 744, 0, 0, 0, 867, 744, 725,
	955, 728, 1074, 0, 752, 764, 763, 0, 776, 0,
	325, 327, 329, 347, 0, 0, 350, 353, 0, 0,
	0, 0, 1315, 0, 1317, 1319, 0, 0, 199, 200,
	201, 0, 193, 0, 216, 264, 0, 162, 0, 196,
	164, 165, 166, 194, 168, 169, 172, 178, 182, 183,
	185, 186, 260, 0, 0, 0, 0, 159, 0, 545,
	546, 547, 548, 557, 554, 792, 0, 0, 757, 758,
	58, 0, 0, -2, 0, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1289, -2, -2, -2, -2, -2,
	37, 0, 1196, 0, 0, 0, 0, 1185, 1187, 1188,
	0, 0, 1170, 0, 0, 795, 788, 40, 921, 922,
	923, 925, 942, 0, 944, 946, 835, 836, 805, 0,
	1155, 1158, 1159, 1160, -2, 1288, 932, 933, 957, 958,
	959, 0, 0, 0, 0, 955, 937, 0, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	991, 1088, 1089, 0, 0, 965, 799, 800, 0, 989,
	1169, 990, 998, 963, 1161, 0, 0, 0, 0, 0,
	960, 0, 1226, 0, 0, 0, 1038, 0, 0, 973,
	1162, 0, 973, 1162, 0, 0, 1732, 1847, 1623, 0,
	0, 0, 1152, 1149, 0, 0, 0, 1075, 0, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 905, 0, 848, 850, 851, 852, -2, 0, 856,
	914, 961, 1290, -2, 0, 0, 73, 74, 0, 0,
	0, 1240, 0, 0, 0, 89, 90, 85, 1244, 0,
	-2, 1251, 1252, 1155, 0, 1195, 792, 389, 625, 627,
	630, 631, 632, 633, 634, 635, 393, 395, 396, 397,
	0, 589, 597, 0, 0, 587, 589, 589, 0, 585,
	586, 400, 510, 508, 509, 428, 0, 515, 515, 500,
	500, 500, 500, 457, 515, 460, 463, 464, 518, 0,
	518, 518, 518, 518, 515, 0, 0, 449, 450, 451,
	440, 0, 441, 502, 443, 0, 444, 445, 446, 447,
	401, 402, 403, 404, 405, 406, 407, 408, 409, 603,
	604, 605, 0, 0, 0, 95, 0, 104, -2, 525,
	526, 527, 0, 522, 1266, 105, 0, 281, 282, 0,
	219, 0, 250, 251, 112, 0, 0, 266, 0, 387,
	388, 0, 682, 0, 684, 255, 686, 696, 697, 687,
	0, 0, 78, 746, 704, 705, 706, 918, 0, 0,
	718, 742, 743, 741, 744, 722, 736, 0, 0, 729,
	0, 765, 868, 331, 332, 354, 81, 0, 1295, 1314,
	0, 1318, 1320, 0, 202, 204, 0, 153, 0, 0,
	195, 0, 167, 0, 0, 0, 0, 0, 553, 0,
	787, 63, 641, 642, -2, 673, 1274, 673, 673, 659,
	572, 673, 0, 0, 0, 59, 0, 1206, 0, 0,
	48, 0, 1923, 51, 0, 1191, 1192, 1184, 0, 1259,
	1260, 1171, 1172, 96, 796, 943, 945, 947, 0, 963,
	934, 955, 938, 0, 935, 0, 929, 0, 1037, 0,
	0, 0, 0, 0, 0, 0, 968, -2, 1035, 1036,
	0, 0, 0, 0, 0, 1081, 0, 0, 1082, 1046,
	0, 0, 0, 0, 0, 1052, 1181, 0, 1150, 0,
	0, 1055, 1056, 1076, 0, 0, 1077, 1078, 1079, 1080,
	1024, 0, 1025, 0, 0, 0, 0, 0, 1031, 1032,
	1033, 1034, 814, 814, 814, 814, 814, 814, 814, 814,
	814, 814, 814, 814, 0, 0, 904, 0, 0, 0,
	0, 0, 0, 891, 0, 0, 894, 0, 0, 0,
	0, 0, 0, 0, 0, 860, 0, 862, 0, 914,
	0, 0, 0, 963, 918, 0, 918, 918, 80, 0,
	913, 87, 88, 0, 0, 94, 519, 520, 0, 218,
	0, 628, 0, 394, 0, 590, 0, 0, 589, 589,
	589, 588, 589, 580, 590, 581, 0, 414, 0, 416,
	417, 418, 419, 420, 0, 0, 0, 0, 0, 514,
	0, 539, 541, 0, 0, 424, 511, 0, 518, 518,
	515, 455, 456, 500, 461, 518, 465, 482, 0, 466,
	483, 467, 484, 468, 485, 469, 486, 518, 0, 498,
	0, 0, 442, 0, 621, 0, 1283, 97, 0, 528,
	529, 530, 0, 572, 572, 572, 0, 283, 284, 285,
	902, 0, 220, 221, 0, 0, 0, 0, 912, 122,
	0, 280, 0, 0, 0, 0, 0, 0, 0, 76,
	259, 713, 0, 612, 613, 867, 720, 956, 730, 732,
	733, 515, 0, 1316, 0, 0, 0, 0, 0, 214,
	197, 0, 0, 0, 0, 160, 0, 795, 0, 0,
	589, 0, 660, 661, 0, 674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 1276, 0, 0,
	0, 573, 0, 668, 669, 0, 1209, 1208, 0, 49,
	50, 1197, 38, 47, 0, 806, 1156, 0, 936, 0,
	939, 966, 801, 0, 1005, 814, 814, 814, 814, 814,
	0, 500, 500, 1135, 500, 504, 1138, 500, 1140, 500,
	1143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1147, 1054, 1153, 0, 0, 0, 807, 808,
	810, 1026, 1027, 1028, 1029, 1030, 1009, 815, 1010, 1011,
	1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1220,
	0, 0, 0, 1200, 0, 918, 1228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, -2, -2,
	-2, 849, 882, 884, 0, 879, 892, 893, 895, 0,
	897, 0, 899, 900, 869, 855, 962, 857, 0, 0,
	0, 914, 866, 0, 0, 0, 0, 1181, 918, 71,
	72, 0, 91, 92, 93, 626, 629, 0, 591, 500,
	500, 0, 595, 587, 596, 574, 576, 577, 579, 0,
	415, 0, 0, 423, 512, 0, 538, 540, 542, 543,
	501, 453, 478, 454, 479, 518, 462, 458, 480, 516,
	517, 470, 487, 515, 0, 515, 0, 505, 0, 608,
	622, 0, 0, 0, 95, 572, 0, 0, 0, 0,
	227, 0, 223, 0, 0, 0, 130, 0, 113, 114,
	115, 117, 118, 0, 0, 0, 111, 0, 268, 0,
	271, 272, 683, 685, 919, 744, 1306, 903, 214, 203,
	205, 206, 214, 217, 154, 0, 155, 157, 0, 156,
	558, 96, 643, 0, 670, 0, 0, 1282, 587, 0,
	-2, 646, 651, 652, 653, 654, 655, 0, 666, 0,
	648, 0, 670, 0, 663, 0, 0, 0, 52, 45,
	96, 96, 1006, 940, 0, 1008, 1012, 1007, 1015, 1020,
	1039, 1132, 515, 1136, 1137, 1139, 1141, 1142, 1144, 1041,
	1040, 0, 0, 0, 0, 1047, 0, 0, 0, 0,
	0, 0, 1151, 0, 0, 812, 811, 64, 0, 1220,
	1198, 1222, 1224, 0, 0, 0, 0, -2, 1601, 0,
	873, 1181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 876, 883, 0, 0, 877, 0, 878, 896,
	898, 853, 0, 0, 858, 0, 0, -2, 865, 0,
	0, 0, 875, 1189, 70, 564, 0, 1186, 1186, 589,
	589, 0, 871, 0, 0, 513, 1074, 1074, 1074, 1074,
	1074, 1074, 1074, 1074, 1074, 0, 0, 459, 481, 518,
	499, 518, 0, 0, 623, 0, 95, 97, 0, 533,
	534, 535, 536, 537, 0, 96, 228, 229, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 222, 224, 225,
	226, 148, 131, 132, 0, 0, 0, 0, 123, 124,
	0, 0, 0, 0, 0, 119, 120, 121, 267, 0,
	0, 270, 0, 0, 719, 1308, 1302, 207, 207, 0,
	158, 0, 0, 645, 671, 0, 413, 413, 0, 589,
	589, 662, 0, 1272, 1273, 0, 657, 670, 0, 0,
	0, 1210, 918, 0, 0, 797, 802, 1133, 1134, 0,
	0, 0, 0, 1048, 1049, 1050, 1083, 1053, 1148, 0,
	0, 1181, 0, 0, 65, 0, 1225, -2, 0, 0,
	82, 0, 1189, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 880, 0, 885, 0, 0, 914, 863,
	0, 0, 0, 0, 69, 563, 567, 0, 572, 0,
	592, 593, 594, 575, 578, 0, 0, 410, 0, 476,
	488, 477, 489, 503, 506, 0, 102, 0, 531, 532,
	0, 97, 230, 231, 232, 233, 235, 236, 0, 0,
	0, 108, 0, 0, 133, 0, 0, 0, 0, 143,
	144, 145, 146, 147, 125, 126, 127, 128, 129, 116,
	0, 0, 269, 0, 274, 275, 1269, 1310, -2, 0,
	151, 0, 152, 215, 0, 644, 672, 398, 399, 0,
	1282, 0, 647, 656, 658, 0, 665, 0, 1173, 46,
	96, 1042, 1044, 1043, 1045, 0, 0, 0, 1072, 1073,
	816, 0, 0, 1223, 1199, 0, 1203, 0, 874, 68,
	0, 870, 859, 861, 914, 915, 916, 917, 568, 569,
	0, 571, 0, 872, 421, 411, 412, 0, 565, 95,
	0, 55, 237, 238, 239, 240, 149, 150, 134, 135,
	0, 137, 138, 0, 0, 0, 277, 0, 273, 869,
	0, 1302, 0, 1304, 0, 1301, 0, 208, 918, 0,
	0, 0, 664, 0, 676, 0, 1178, 0, 798, 1051,
	0, 0, 0, 0, 0, 0, 813, 0, 1202, 0,
	881, 864, 570, 0, 410, 101, 566, 103, 286, 95,
	357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 386,
	0, 0, 0, 55, 0, 139, 0, 141, 142, 276,
	0, 36, 0, 1309, 0, 1307, 0, 0, 1303, 0,
	1173, 565, 0, 0, 675, 0, 0, 826, 0, 0,
	1084, 0, 1087, 809, 817, 0, 820, 0, 0, 0,
	831, 0, 818, 1221, -2, 0, 422, 95, 0, 0,
	107, 0, 0, 1284, 0, 0, -2, -2, -2, 1286,
	0, 355, 136, 140, 278, 1270, 1271, 1311, 0, 0,
	0, 1178, 649, 0, 565, 677, 0, 44, 0, 1179,
	1180, 1174, 1175, 1177, 1085, 0, 821, 822, 823, 824,
	825, 0, 0, 97, 287, 288, 0, 297, 0, 55,
	0, 0, 0, 311, 0, 55, 1305, 1299, 209, 210,
	211, 213, 826, 565, 667, 0, 827, 828, 0, 0,
	0, 0, 832, 598, 55, 0, 55, 298, 0, 0,
	0, 0, 0, 0, 1287, 241, 356, 0, 42, 650,
	0, 0, 0, 1176, 0, 819, 599, 600, 0, 95,
	289, 290, 291, 292, 293, 55, 56, 295, 0, 55,
	55, 307, 308, 309, 55, 316, 318, 319, 320, 0,
	322, 323, 312, 212, 0, 829, 830, 1086, 601, 0,
	602, 0, 0, 0, 106, 0, 55, 0, 0, 55,
	0, 304, 0, 310, 0, 321, 0, 1752, 614, 616,
	617, 0, 0, 615, 55, 0, -2, 300, 0, 0,
	55, 305, 0, 317, 678, 679, 618, 619, 620, 294,
	296, 55, 302, 0, 55, 0, 55, 0, 301, 0,
	-2, 303,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:538
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:542
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:590
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:596
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:623
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:634
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:641
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:647
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:655
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:672
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:705
		{
			yyVAL.with = nil
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.with = yyDollar[1].with
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:719
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:725
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:731
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:753
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:759
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:772
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:784
		{
			yyVAL.str = InsertStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.str = ReplaceStr
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:794
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:800
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:804
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:808
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:812
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:817
		{
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:818
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:842
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:846
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:851
		{
			yyVAL.partitions = nil
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:855
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:865
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:872
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:895
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:899
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:905
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:917
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:922
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:927
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:932
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:938
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:947
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:952
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:957
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:961
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 103:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:967
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:973
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:981
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:989
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 107:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:993
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:997
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1016
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1025
		{
			yyVAL.accountNames = nil
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1029
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1034
		{
			yyVAL.tlsOptionItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1038
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1048
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1052
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1058
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1079
		{
			yyVAL.accountLimitItems = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1111
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1116
		{
			yyVAL.passLockItems = nil
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1144
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1156
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1160
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1164
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1168
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1193
		{
			yyVAL.str = ""
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1208
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1213
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1217
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1221
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1227
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1232
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1236
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1240
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1244
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1248
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1266
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1338
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1346
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1354
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1374
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1380
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1389
		{
			yyVAL.strs = nil
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1408
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1447
		{
			yyVAL.grantAssumption = nil
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1451
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1455
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1459
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1463
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1467
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1471
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1476
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1480
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1485
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1489
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1496
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1508
		{
			yyVAL.procedureParams = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1528
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1545
		{
			yyVAL.characteristics = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1549
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1559
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1565
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1569
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1573
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1589
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1607
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1613
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1673
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1695
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1709
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1731
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1745
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1749
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1753
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1759
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1763
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1767
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1771
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1775
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1779
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1785
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1789
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1793
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1803
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = BeforeStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = AfterStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = InsertStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = UpdateStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = DeleteStr
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1832
		{
			yyVAL.triggerOrder = nil
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1836
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1840
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1856
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1862
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 296:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1866
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1876
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1882
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 300:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1888
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1893
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1898
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1904
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1916
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1922
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1948
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2009
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2017
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2027
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2037
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.statement = &Resignal{}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2107
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2119
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2130
		{
			yyVAL.exprs = nil
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.exprs = nil
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2148
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2189
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2203
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2219
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2242
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2246
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2273
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2355
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2364
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2368
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = ColumnType{}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2390
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2417
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2426
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2435
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2444
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 422:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2453
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2473
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2537
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2549
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2561
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 477:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2726
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2734
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2738
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2746
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 488:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2750
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 489:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2754
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2794
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2799
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2804
		{
			yyVAL.sqlVal = nil
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2808
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2813
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2817
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2825
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2835
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2843
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2856
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2860
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2866
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2883
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2909
		{
			yyVAL.boolean = false
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.boolean = true
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2918
		{
			yyVAL.charsetCollates = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2940
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2944
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2948
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2954
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2958
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2962
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2966
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2972
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2976
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2982
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.colKeyOpt = colKey
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2996
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3010
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3016
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3022
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3026
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3054
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3058
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3071
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3079
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3082
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3088
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3092
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3097
		{
			yyVAL.indexOptions = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3107
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3111
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3117
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3126
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3132
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3144
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3148
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3152
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3156
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3160
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3169
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3173
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3206
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = yyDollar[1].str
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3215
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3219
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3229
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3235
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3239
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3245
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3249
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3253
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 598:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3259
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3263
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3267
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 601:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3271
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 602:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3275
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3281
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3294
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3298
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3304
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3310
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3314
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3319
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3323
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3327
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3345
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3357
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3366
		{
			yyVAL.boolean = true
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3370
		{
			yyVAL.boolean = true
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			yyVAL.boolean = false
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3379
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.str = yyDollar[1].str
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3422
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3426
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3436
		{
			yyVAL.str = ""
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3440
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3445
		{
			yyVAL.str = string("")
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3449
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3458
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3471
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3481
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3488
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3495
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3499
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 649:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3508
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 650:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3512
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3516
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3521
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3526
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3531
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3536
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3540
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3544
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3551
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3557
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3567
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3573
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 664:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3582
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3586
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3590
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 667:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3596
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3602
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3611
		{
			yyVAL.columnOrder = nil
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3624
		{
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
		}
	case 675:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3630
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 678:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3646
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 679:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3650
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3660
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3670
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3678
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3682
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3688
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3696
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3700
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3708
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3716
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3724
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3732
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3740
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3748
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3757
		{

		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3761
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3765
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3771
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3781
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3792
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3796
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3800
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3804
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3808
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3813
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3817
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3821
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3825
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3833
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3837
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3845
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3849
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3853
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3857
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 719:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3861
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3866
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3875
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3879
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3883
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3887
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3893
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3901
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3905
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3910
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3914
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3919
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3923
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3927
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3931
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3935
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3941
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3947
		{
			yyVAL.boolean = false
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.boolean = true
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3957
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3961
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3967
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3971
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3975
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3981
		{
			yyVAL.showFilter = nil
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3985
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3989
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3993
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3999
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.str = SessionStr
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.str = GlobalStr
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4013
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4017
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4021
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.statement = &Begin{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4037
		{
			yyVAL.statement = &Begin{}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4041
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4045
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.statement = &Commit{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.statement = &Rollback{}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4063
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4069
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4073
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4077
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4081
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4087
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4101
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4115
		{
			yyVAL.str = ""
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4119
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4130
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			setAllowComments(yylex, true)
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4146
		{
			yyVAL.bytes2 = nil
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4150
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.str = UnionStr
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4160
		{
			yyVAL.str = UnionAllStr
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4164
		{
			yyVAL.str = UnionDistinctStr
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4169
		{
			yyVAL.byt = 0
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.byt = 1
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = ""
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = SQLCacheStr
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = ""
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = DistinctStr
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = StraightJoinHint
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4214
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4222
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4241
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4245
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4259
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4263
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4269
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4273
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4279
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4284
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4292
		{
			yyVAL.exprs = nil
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4296
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4301
		{
			yyVAL.over = nil
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.over = yyDollar[1].over
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4310
		{
			yyVAL.frame = nil
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4314
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4318
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4325
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4348
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4363
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4367
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4371
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4375
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4382
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4390
		{
			yyVAL.window = nil
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4393
		{
			yyVAL.window = yyDollar[2].window
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4402
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4408
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4421
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4426
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4434
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4438
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4490
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4494
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4504
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4508
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4524
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4531
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4537
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4541
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4547
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4552
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4567
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4571
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4579
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4590
		{
			yyVAL.expr = nil
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4594
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4599
		{
			yyVAL.columns = nil
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4613
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4623
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4629
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4642
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4646
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4650
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4654
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4660
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4662
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4666
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4672
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4674
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			yyVAL.empty = struct{}{}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.empty = struct{}{}
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4684
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4688
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = JoinStr
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = JoinStr
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = JoinStr
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = StraightJoinStr
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = LeftJoinStr
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4718
		{
			yyVAL.str = LeftJoinStr
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4722
		{
			yyVAL.str = RightJoinStr
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4726
		{
			yyVAL.str = RightJoinStr
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = NaturalJoinStr
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4736
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4750
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4756
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4762
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4766
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4772
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4781
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4785
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4810
		{
			yyVAL.indexHints = nil
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4814
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 916:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4818
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 917:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4822
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4827
		{
			yyVAL.expr = nil
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4831
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4853
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4861
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = ""
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4881
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4885
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4891
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4895
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4899
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4903
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4907
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4911
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.str = IsNullStr
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4937
		{
			yyVAL.str = IsNotNullStr
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4941
		{
			yyVAL.str = IsTrueStr
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = IsNotTrueStr
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4949
		{
			yyVAL.str = IsFalseStr
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4953
		{
			yyVAL.str = IsNotFalseStr
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			yyVAL.str = EqualStr
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4963
		{
			yyVAL.str = LessThanStr
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4967
		{
			yyVAL.str = GreaterThanStr
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.str = LessEqualStr
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4975
		{
			yyVAL.str = GreaterEqualStr
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4979
		{
			yyVAL.str = NotEqualStr
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4983
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4988
		{
			yyVAL.expr = nil
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4992
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5002
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5006
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5012
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5018
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5022
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5028
		{
			yyVAL.selectExprs = nil
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5039
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5049
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5127
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5131
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5135
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5139
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5143
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5147
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5151
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5155
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5163
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5177
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5181
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5185
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5205
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5209
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1007:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5219
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5227
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5231
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5235
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5239
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5243
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5251
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5255
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5259
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5263
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5267
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5271
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5275
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1022:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5279
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1023:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5283
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5292
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5296
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1026:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5300
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1027:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5304
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5308
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5312
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5316
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5320
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5324
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5328
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5332
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5343
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5347
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5351
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5355
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5359
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5363
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1041:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5367
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5371
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5375
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1044:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5379
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1045:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5383
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5387
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5391
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1048:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5395
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1049:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5399
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1050:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5403
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1051:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5407
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5411
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1053:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5415
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5419
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5423
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5427
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5437
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5441
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5445
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5450
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5455
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5460
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5466
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5471
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5475
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5480
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5484
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5488
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5493
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5498
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5503
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1072:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5507
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1073:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5511
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5522
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5532
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5536
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5540
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5544
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5548
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5552
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5558
		{
			yyVAL.str = ""
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5562
		{
			yyVAL.str = BooleanModeStr
		}
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5566
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1086:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5570
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5574
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5580
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5590
		{
			yyVAL.str = Armscii8Str
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.str = AsciiStr
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.str = Big5Str
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5602
		{
			yyVAL.str = UBinaryStr
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5606
		{
			yyVAL.str = Cp1250Str
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5610
		{
			yyVAL.str = Cp1251Str
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5614
		{
			yyVAL.str = Cp1256Str
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.str = Cp1257Str
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.str = Cp850Str
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5626
		{
			yyVAL.str = Cp852Str
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.str = Cp866Str
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.str = Cp932Str
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5638
		{
			yyVAL.str = Dec8Str
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = EucjpmsStr
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5646
		{
			yyVAL.str = EuckrStr
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = Gb18030Str
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5654
		{
			yyVAL.str = Gb2312Str
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5658
		{
			yyVAL.str = GbkStr
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.str = Geostd8Str
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5666
		{
			yyVAL.str = GreekStr
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.str = HebrewStr
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.str = Hp8Str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.str = Keybcs2Str
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			yyVAL.str = Koi8rStr
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = Koi8uStr
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.str = Latin1Str
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.str = Latin2Str
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5698
		{
			yyVAL.str = Latin5Str
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5702
		{
			yyVAL.str = Latin7Str
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5706
		{
			yyVAL.str = MacceStr
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5710
		{
			yyVAL.str = MacromanStr
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5714
		{
			yyVAL.str = SjisStr
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = Swe7Str
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = Tis620Str
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = Ucs2Str
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5730
		{
			yyVAL.str = UjisStr
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.str = Utf16Str
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5738
		{
			yyVAL.str = Utf16leStr
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5742
		{
			yyVAL.str = Utf32Str
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5746
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5750
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5754
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5760
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5764
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5768
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5772
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5776
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5780
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5786
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5790
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5794
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5798
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5802
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5806
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5810
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5815
		{
			yyVAL.expr = nil
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5819
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1147:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5824
		{
			yyVAL.str = string("")
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5828
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5834
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5838
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5844
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5849
		{
			yyVAL.expr = nil
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5853
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5859
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5863
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5867
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5872
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5876
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5880
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5884
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5888
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5894
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5898
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5902
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5906
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5910
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5914
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5918
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5922
		{
			yyVAL.expr = &NullVal{}
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5928
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5932
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5936
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5941
		{
			yyVAL.exprs = nil
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5945
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5951
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5955
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5961
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5966
		{
			yyVAL.expr = nil
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5970
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5976
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5981
		{
			yyVAL.orderBy = nil
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5985
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5991
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5995
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6001
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = AscScr
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6010
		{
			yyVAL.str = AscScr
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6014
		{
			yyVAL.str = DescScr
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6019
		{
			yyVAL.limit = nil
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6023
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6027
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6031
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6037
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6041
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6046
		{
			yyVAL.str = ""
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6050
		{
			yyVAL.str = ForUpdateStr
		}
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6054
		{
			yyVAL.str = ShareModeStr
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6067
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6071
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6075
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6084
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6088
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6092
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6098
		{
			yyVAL.columns = nil
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6102
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6108
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6112
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6116
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6120
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6124
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6128
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6132
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6136
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6140
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6144
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6148
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6152
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6156
		{
			yyVAL.columns = Columns{NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6161
		{
			yyVAL.assignExprs = nil
		}
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6165
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6171
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6181
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6185
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6191
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6197
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6211
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6217
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6220
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6228
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6232
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6236
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6240
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6244
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6248
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6254
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6258
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6264
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6275
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6288
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6301
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6307
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6311
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6317
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6321
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6325
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6331
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6335
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6339
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6346
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6353
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6357
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6361
		{
			yyVAL.expr = &Default{}
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6370
		{
			yyVAL.byt = 0
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6372
		{
			yyVAL.byt = 1
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6375
		{
			yyVAL.byt = 0
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6377
		{
			yyVAL.byt = 1
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6380
		{
			yyVAL.byt = 0
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6382
		{
			yyVAL.byt = 1
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6385
		{
			yyVAL.str = ""
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6387
		{
			yyVAL.str = IgnoreStr
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6390
		{
			yyVAL.sqlVal = nil
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6392
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6394
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6398
		{
			yyVAL.empty = struct{}{}
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6400
		{
			yyVAL.empty = struct{}{}
		}
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6403
		{
			yyVAL.empty = struct{}{}
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6405
		{
			yyVAL.empty = struct{}{}
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6407
		{
			yyVAL.empty = struct{}{}
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6411
		{
			yyVAL.str = UniqueStr
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6413
		{
			yyVAL.str = FulltextStr
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6415
		{
			yyVAL.str = SpatialStr
		}
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6418
		{
			yyVAL.str = ""
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6420
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6423
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6425
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6429
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6433
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6439
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6443
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6450
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6456
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6460
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6467
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6472
		{
			yyVAL.str = string("")
		}
	case 1295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6474
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6477
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6479
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6482
		{
			yyVAL.EnclosedBy = nil
		}
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6486
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6491
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6495
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6500
		{
			yyVAL.sqlVal = nil
		}
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6504
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6509
		{
			yyVAL.sqlVal = nil
		}
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6513
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6518
		{
			yyVAL.Fields = nil
		}
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6522
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6527
		{
			yyVAL.Lines = nil
		}
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6531
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6536
		{
			yyVAL.sqlVal = nil
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6540
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6546
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6552
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6556
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6562
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6566
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6572
		{
			yyVAL.lockType = LockRead
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6576
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6580
		{
			yyVAL.lockType = LockWrite
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6584
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6590
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6596
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6600
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6604
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7434
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7443
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
