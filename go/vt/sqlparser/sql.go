// Code generated by goyacc -v y.output -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const ACCESSIBLE = 57817
const ASENSITIVE = 57818
const CUBE = 57819
const DAY_HOUR = 57820
const DAY_MICROSECOND = 57821
const DAY_MINUTE = 57822
const DAY_SECOND = 57823
const DELAYED = 57824
const DISTINCTROW = 57825
const DUAL = 57826
const EMPTY = 57827
const FETCH = 57828
const FLOAT4 = 57829
const FLOAT8 = 57830
const GET = 57831
const HIGH_PRIORITY = 57832
const HOUR_MICROSECOND = 57833
const HOUR_MINUTE = 57834
const HOUR_SECOND = 57835
const INSENSITIVE = 57836
const INT1 = 57837
const INT2 = 57838
const INT3 = 57839
const INT4 = 57840
const INT8 = 57841
const IO_AFTER_GTIDS = 57842
const IO_BEFORE_GTIDS = 57843
const ITERATE = 57844
const LEAVE = 57845
const LINEAR = 57846
const LOOP = 57847
const MASTER_BIND = 57848
const MASTER_SSL_VERIFY_SERVER_CERT = 57849
const MIDDLEINT = 57850
const MINUTE_MICROSECOND = 57851
const MINUTE_SECOND = 57852
const PURGE = 57853
const READ_WRITE = 57854
const REPEAT = 57855
const RETURN = 57856
const RLIKE = 57857
const SECOND_MICROSECOND = 57858
const SENSITIVE = 57859
const SPECIFIC = 57860
const SQL_BIG_RESULT = 57861
const SQL_SMALL_RESULT = 57862
const VARCHARACTER = 57863
const WHILE = 57864
const YEAR_MONTH = 57865
const UNUSED = 57866
const DESCRIPTION = 57867
const JSON_TABLE = 57868
const LATERAL = 57869
const MEMBER = 57870
const RECURSIVE = 57871
const BUCKETS = 57872
const CLONE = 57873
const COMPONENT = 57874
const DEFINITION = 57875
const ENFORCED = 57876
const EXCLUDE = 57877
const GEOMCOLLECTION = 57878
const GET_MASTER_PUBLIC_KEY = 57879
const HISTOGRAM = 57880
const HISTORY = 57881
const INACTIVE = 57882
const INVISIBLE = 57883
const LOCKED = 57884
const MASTER_COMPRESSION_ALGORITHMS = 57885
const MASTER_PUBLIC_KEY_PATH = 57886
const MASTER_TLS_CIPHERSUITES = 57887
const MASTER_ZSTD_COMPRESSION_LEVEL = 57888
const NESTED = 57889
const NETWORK_NAMESPACE = 57890
const NOWAIT = 57891
const NULLS = 57892
const OJ = 57893
const OLD = 57894
const ORDINALITY = 57895
const ORGANIZATION = 57896
const OTHERS = 57897
const PATH = 57898
const PERSIST = 57899
const PERSIST_ONLY = 57900
const PRIVILEGE_CHECKS_USER = 57901
const PROCESS = 57902
const REFERENCE = 57903
const REQUIRE_ROW_FORMAT = 57904
const RESOURCE = 57905
const RESPECT = 57906
const RESTART = 57907
const RETAIN = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_LOAD = 57911
const SECONDARY_UNLOAD = 57912
const SKIP = 57913
const THREAD_PRIORITY = 57914
const TIES = 57915
const VCPU = 57916
const VISIBLE = 57917
const SYSTEM = 57918
const INFILE = 57919
const ACTIVE = 57920
const AGGREGATE = 57921
const ANY = 57922
const ARRAY = 57923
const ASCII = 57924
const AT = 57925
const AUTOEXTEND_SIZE = 57926
const ENDS = 57927
const EVENTS = 57928
const GENERATED = 57929
const ALWAYS = 57930
const STORED = 57931
const VIRTUAL = 57932
const NVAR = 57933
const PASSWORD_LOCK = 57934

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 58,
	-2, 1146,
	-1, 43,
	189, 1210,
	190, 1229,
	-2, 245,
	-1, 49,
	228, 732,
	229, 732,
	-2, 721,
	-1, 491,
	177, 1239,
	-2, 1233,
	-1, 492,
	177, 1240,
	-2, 1234,
	-1, 637,
	100, 1618,
	177, 1618,
	-2, 1194,
	-1, 638,
	100, 1711,
	177, 1711,
	-2, 1195,
	-1, 643,
	100, 1637,
	177, 1637,
	-2, 1196,
	-1, 644,
	100, 1674,
	177, 1674,
	-2, 1197,
	-1, 645,
	100, 1675,
	177, 1675,
	-2, 1198,
	-1, 646,
	100, 1573,
	177, 1573,
	-2, 1202,
	-1, 648,
	100, 1656,
	177, 1656,
	-2, 1204,
	-1, 1276,
	1, 830,
	5, 830,
	12, 830,
	13, 830,
	14, 830,
	15, 830,
	17, 830,
	19, 830,
	29, 830,
	30, 830,
	56, 830,
	57, 830,
	58, 830,
	59, 830,
	60, 830,
	62, 830,
	63, 830,
	66, 830,
	67, 830,
	69, 830,
	70, 830,
	87, 830,
	455, 830,
	611, 830,
	-2, 862,
	-1, 1282,
	67, 75,
	69, 75,
	-2, 79,
	-1, 1378,
	1, 511,
	611, 511,
	-2, 509,
	-1, 1380,
	1, 511,
	611, 511,
	-2, 509,
	-1, 1546,
	177, 1242,
	-2, 1238,
	-1, 1712,
	44, 577,
	-2, 1306,
	-1, 1716,
	68, 575,
	72, 575,
	-2, 1362,
	-1, 1717,
	68, 577,
	-2, 1527,
	-1, 1720,
	68, 573,
	72, 573,
	-2, 1380,
	-1, 1721,
	68, 574,
	72, 574,
	-2, 1402,
	-1, 1769,
	1, 512,
	611, 512,
	-2, 509,
	-1, 1853,
	44, 620,
	196, 622,
	198, 620,
	199, 620,
	-2, 657,
	-1, 1921,
	5, 59,
	-2, 933,
	-1, 2254,
	69, 1488,
	70, 1488,
	177, 1488,
	-2, 764,
	-1, 2277,
	1, 887,
	5, 887,
	12, 887,
	13, 887,
	14, 887,
	15, 887,
	17, 887,
	19, 887,
	29, 887,
	30, 887,
	56, 887,
	57, 887,
	58, 887,
	59, 887,
	60, 887,
	62, 887,
	63, 887,
	66, 887,
	67, 887,
	69, 887,
	70, 887,
	87, 887,
	455, 887,
	611, 887,
	-2, 862,
	-1, 2393,
	196, 623,
	-2, 621,
	-1, 2454,
	5, 59,
	-2, 1166,
	-1, 2673,
	41, 1249,
	-2, 1247,
	-1, 2772,
	5, 59,
	-2, 1169,
}

const yyPrivate = 57344

const yyLast = 38500

var yyAct = [...]int{
	546, 80, 2973, 2955, 2999, 3006, 2956, 2870, 2975, 967,
	2781, 3, 2926, 2847, 2891, 2237, 2082, 373, 2886, 2869,
	2784, 7, 2838, 2783, 6, 1704, 2776, 2337, 2906, 494,
	2758, 2760, 492, 2718, 2291, 2845, 1313, 2782, 5, 2673,
	2785, 8, 2612, 2271, 497, 1968, 1998, 662, 2179, 1764,
	1220, 2247, 2466, 1413, 1664, 483, 1722, 2354, 2165, 1670,
	1788, 2675, 83, 2524, 2530, 2554, 356, 359, 1219, 2508,
	2292, 1668, 2387, 476, 419, 2777, 398, 398, 2377, 495,
	129, 80, 1523, 129, 2248, 404, 2098, 1713, 660, 129,
	1412, 475, 2025, 2178, 1000, 509, 93, 545, 1969, 401,
	401, 1516, 1703, 2244, 106, 1852, 1702, 2256, 1024, 1882,
	1514, 2189, 129, 1571, 2263, 2210, 1580, 657, 1415, 1815,
	2143, 658, 1531, 129, 983, 1692, 1709, 129, 665, 1464,
	1632, 1647, 1389, 1435, 1772, 1771, 642, 1770, 2026, 2073,
	1751, 1129, 639, 1755, 1293, 1654, 1626, 129, 401, 474,
	665, 1272, 1136, 1140, 1053, 1276, 1273, 1548, 129, 421,
	1032, 1832, 1768, 656, 1292, 1469, 635, 479, 499, 966,
	1132, 636, 631, 1150, 418, 376, 375, 501, 1031, 950,
	628, 1236, 2188, 1381, 1384, 955, 102, 1284, 98, 85,
	1237, 3038, 3034, 2039, 3029, 3014, 3012, 2994, 2042, 2968,
	2914, 82, 2720, 2719, 2306, 1462, 2652, 2335, 2495, 2985,
	368, 2843, 2953, 2766, 2047, 2046, 2665, 1801, 36, 2110,
	1801, 2929, 2650, 2830, 2351, 36, 36, 87, 88, 89,
	90, 91, 2842, 2231, 2738, 2509, 2043, 2653, 36, 2765,
	72, 39, 40, 2887, 36, 2511, 1951, 2446, 949, 1963,
	1294, 2049, 1295, 2032, 1582, 2019, 1465, 2851, 1831, 2597,
	2703, 2033, 391, 2286, 385, 396, 379, 1964, 1165, 1164,
	1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166,
	81, 952, 1176, 957, 958, 1666, 386, 81, 81, 2007,
	2851, 1122, 2006, 2848, 960, 2008, 2287, 2288, 1688, 1468,
	81, 72, 39, 40, 1485, 416, 81, 1081, 2846, 1689,
	1690, 601, 345, 607, 609, 608, 605, 606, 604, 603,
	602, 367, 41, 1466, 1467, 69, 2848, 1510, 1511, 1003,
	1004, 1005, 2486, 2487, 1860, 1854, 1855, 366, 1853, 1856,
	1857, 1010, 485, 2051, 1089, 120, 116, 117, 408, 118,
	1724, 1725, 1830, 80, 80, 129, 1050, 1727, 2852, 1727,
	2514, 1740, 2581, 1018, 475, 1745, 2045, 1740, 370, 2048,
	2433, 2431, 1448, 1019, 1863, 1739, 1021, 1731, 1733, 1752,
	1732, 122, 121, 365, 415, 2140, 1506, 1505, 1862, 1861,
	1020, 2852, 987, 988, 350, 1504, 991, 1014, 1503, 129,
	2512, 2513, 2515, 2516, 2517, 1502, 2089, 409, 1501, 1085,
	1086, 2105, 1118, 323, 2132, 1011, 1012, 2946, 2678, 652,
	1126, 2376, 1022, 2137, 1096, 1065, 2525, 1097, 989, 990,
	2818, 1843, 489, 2872, 2528, 2871, 378, 377, 380, 123,
	2361, 124, 2531, 2532, 2533, 2534, 384, 2352, 2526, 2527,
	129, 2109, 2820, 2355, 2356, 2357, 2358, 2359, 2742, 2542,
	326, 2740, 2669, 388, 2550, 2364, 1844, 392, 1065, 335,
	343, 344, 2355, 2356, 2357, 2358, 2359, 2647, 2651, 1496,
	2879, 395, 2732, 2211, 114, 2911, 2107, 3003, 1789, 2540,
	108, 1185, 2645, 1387, 1187, 2909, 2910, 421, 2970, 1063,
	2644, 113, 357, 980, 332, 2643, 2640, 333, 360, 2642,
	341, 342, 2641, 1001, 2639, 1002, 1004, 1005, 1153, 1396,
	1397, 1395, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 108, 956, 1218, 1779, 1222, 351, 2724,
	2979, 361, 2897, 2974, 1859, 2728, 2729, 475, 1783, 1784,
	1088, 954, 953, 999, 2213, 1154, 2779, 338, 2468, 2977,
	996, 2044, 2857, 2858, 995, 1778, 2041, 115, 381, 382,
	383, 389, 1475, 393, 394, 397, 1989, 956, 339, 119,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1115, 1235, 1238, 1238, 1238, 1244, 1238, 1238, 1244, 1238,
	1244, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 369, 1277, 2123, 2124,
	2734, 2949, 1468, 2924, 2964, 353, 986, 3024, 2378, 2849,
	2704, 1837, 1285, 2510, 997, 998, 1449, 2087, 3010, 2555,
	2556, 2717, 2149, 324, 2108, 110, 1466, 1467, 129, 129,
	129, 110, 1186, 1740, 2764, 1312, 1098, 2058, 2334, 1730,
	354, 1015, 2849, 73, 665, 1064, 1754, 2392, 2739, 2668,
	642, 1271, 2363, 3039, 1075, 642, 2648, 337, 327, 328,
	2666, 348, 2088, 2111, 358, 329, 331, 1470, 325, 347,
	346, 358, 79, 2744, 2090, 99, 2024, 2819, 2024, 79,
	79, 2215, 1673, 1675, 1065, 1306, 2219, 1103, 2214, 3036,
	2212, 2295, 79, 1124, 3030, 2217, 1312, 1312, 79, 3015,
	2151, 2151, 1472, 1137, 73, 1471, 951, 1117, 2216, 1371,
	969, 1312, 340, 1157, 1311, 414, 2566, 1061, 1372, 358,
	358, 2131, 2128, 2218, 2220, 2113, 2733, 2162, 2976, 2978,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 2112, 1838, 1310, 2040, 1798, 1767, 1297, 2024,
	1401, 1797, 2565, 1298, 1239, 1241, 1243, 1245, 1247, 1249,
	1250, 1252, 2613, 1240, 1242, 1280, 1246, 1248, 1399, 1251,
	1016, 1221, 948, 1996, 1995, 101, 2615, 2126, 1283, 112,
	111, 1994, 1113, 2024, 2024, 112, 111, 1288, 947, 1121,
	959, 322, 3008, 2737, 2569, 3009, 2418, 3007, 1188, 1189,
	2410, 2130, 1930, 2129, 387, 1927, 2011, 2003, 1072, 1899,
	2029, 1887, 1674, 1307, 1868, 1782, 1780, 1526, 1305, 1290,
	1156, 2023, 979, 2023, 1234, 1693, 2627, 2157, 2149, 108,
	2149, 1176, 2154, 1693, 1312, 2153, 2156, 2150, 2151, 109,
	113, 1060, 1693, 2625, 1693, 2489, 1693, 2326, 1066, 1073,
	1074, 1076, 1077, 1078, 1079, 1080, 1013, 1082, 1083, 1084,
	2372, 1087, 1109, 1090, 1091, 1092, 1093, 1094, 1070, 103,
	2633, 104, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166,
	1693, 2322, 1176, 1684, 1108, 1104, 1105, 1106, 1107, 1110,
	1111, 1112, 1114, 2502, 2023, 2614, 1166, 2161, 1071, 1176,
	1067, 2158, 2500, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1166, 2564, 2323, 1176, 1445, 96, 2874, 2023, 2023,
	2759, 2634, 1693, 2318, 1068, 1069, 2593, 1934, 398, 2170,
	1169, 1170, 1171, 1172, 1173, 1166, 1391, 2570, 1176, 1648,
	665, 129, 1693, 2316, 2503, 1693, 2071, 398, 1693, 2069,
	401, 401, 1519, 2501, 401, 1414, 2655, 1673, 1675, 1188,
	1189, 129, 1188, 1189, 129, 1693, 2067, 1693, 2065, 401,
	401, 1390, 129, 1149, 2324, 1394, 1693, 2062, 2898, 2899,
	2166, 129, 129, 129, 129, 129, 1128, 1417, 2895, 2896,
	2769, 2768, 2656, 2875, 3018, 3000, 3017, 1816, 2261, 2260,
	1457, 1436, 401, 1807, 1303, 993, 129, 1146, 1023, 100,
	1629, 1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1166, 1443, 1149, 1176, 962, 985, 1147, 1148,
	1146, 398, 96, 1006, 1165, 1164, 1174, 1175, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1166, 1555, 1149, 1176, 961,
	1925, 968, 1924, 401, 401, 401, 1148, 1146, 665, 1460,
	2233, 1553, 1554, 1552, 1627, 1494, 1942, 1420, 1524, 1525,
	1627, 1147, 1148, 1146, 1149, 3028, 1478, 95, 2965, 80,
	1431, 1432, 1433, 1434, 1147, 1148, 1146, 1674, 401, 475,
	1149, 1379, 3032, 401, 401, 1439, 1377, 1440, 1376, 1392,
	1437, 2930, 1808, 1149, 994, 413, 1393, 2541, 2535, 1403,
	2413, 1476, 1515, 2571, 129, 1500, 129, 94, 1410, 665,
	1411, 1826, 1422, 984, 1517, 2304, 1424, 1425, 1517, 1008,
	2816, 1147, 1148, 1146, 1147, 1148, 1146, 129, 1147, 1148,
	1146, 2907, 1545, 3025, 1153, 1143, 2967, 1508, 80, 2823,
	1149, 1499, 2907, 1149, 2935, 2815, 2934, 1149, 475, 1538,
	1540, 1541, 2916, 421, 1546, 1452, 1453, 1539, 2773, 1455,
	971, 972, 973, 974, 975, 976, 977, 2817, 1575, 1576,
	1147, 1148, 1146, 1222, 1473, 1458, 2663, 1926, 2908, 665,
	2915, 1154, 2662, 475, 625, 626, 1474, 1477, 3026, 1149,
	1423, 1884, 1885, 1886, 2661, 665, 665, 1174, 1175, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1166, 1549, 2660, 1176,
	81, 1441, 1495, 1133, 2654, 1498, 1134, 2876, 1147, 1148,
	1146, 1551, 2735, 1613, 1616, 1544, 2235, 2079, 1667, 2873,
	1628, 1528, 1676, 1507, 2494, 1277, 2493, 1149, 475, 1277,
	2307, 1607, 1147, 1148, 1146, 1147, 1148, 1146, 1512, 1572,
	2078, 1573, 129, 1221, 2076, 1529, 2052, 2009, 1530, 2010,
	129, 1149, 129, 1056, 1149, 1055, 2829, 129, 129, 2736,
	2731, 129, 129, 129, 1029, 1542, 2730, 2716, 1550, 2670,
	2638, 1697, 2591, 2538, 2537, 658, 642, 2536, 1417, 1679,
	2504, 665, 665, 1681, 2491, 2383, 2313, 1028, 2175, 2174,
	2074, 1578, 1827, 1546, 1672, 1586, 1802, 1454, 2904, 421,
	1591, 1592, 2903, 2741, 2714, 2687, 2029, 2681, 1599, 2562,
	2449, 2406, 1603, 1663, 2402, 2394, 1638, 2365, 1640, 2118,
	1699, 2117, 1820, 1804, 1803, 1574, 1624, 1450, 1447, 1409,
	1408, 1371, 1380, 1378, 1051, 981, 364, 362, 2604, 2932,
	1372, 1534, 1535, 1536, 2477, 2922, 514, 513, 516, 517,
	518, 519, 1795, 1402, 1677, 515, 520, 2477, 2883, 2836,
	1128, 2477, 2832, 1128, 1698, 129, 1095, 1710, 2477, 2722,
	2680, 129, 129, 401, 401, 401, 2604, 2710, 129, 2604,
	2621, 1442, 2604, 1128, 1999, 1244, 1280, 2629, 1718, 2604,
	2603, 2477, 2476, 1280, 1793, 1794, 2628, 1280, 1686, 1761,
	1762, 1691, 1682, 1685, 2458, 1128, 1867, 1128, 2344, 129,
	129, 129, 2314, 1707, 1286, 1700, 2679, 1221, 2332, 2331,
	1286, 1611, 1612, 2328, 2329, 2328, 2327, 1823, 1897, 1128,
	1651, 1128, 1840, 1839, 1605, 1824, 129, 1999, 129, 1605,
	1128, 1651, 665, 1309, 1308, 1753, 665, 84, 1787, 1061,
	1757, 1758, 1759, 1760, 1865, 1650, 1656, 1659, 1660, 1661,
	1657, 2245, 1658, 1662, 2259, 1127, 2264, 2265, 665, 1521,
	1287, 665, 1289, 2950, 2413, 1805, 1287, 1678, 1285, 1285,
	1829, 1099, 2928, 1776, 1059, 421, 1888, 2259, 1813, 1786,
	665, 1100, 1545, 1058, 2259, 1651, 1059, 1605, 1696, 2452,
	1809, 1897, 1651, 1801, 1479, 1814, 2345, 1482, 1483, 1484,
	2330, 1486, 1487, 2273, 1546, 1488, 2173, 2142, 2013, 1687,
	1520, 1489, 1897, 1914, 1913, 1490, 1491, 1456, 1492, 1493,
	1800, 1547, 1522, 1123, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1061,
	1497, 1463, 1285, 1400, 1398, 1291, 81, 1822, 1828, 653,
	2854, 2833, 2272, 2755, 2684, 2496, 1818, 1727, 1763, 2464,
	1656, 1659, 1660, 1661, 1657, 1835, 1658, 1662, 1756, 2303,
	1752, 2264, 2265, 2989, 2017, 1698, 1065, 1781, 1965, 1967,
	1549, 1747, 1277, 1277, 1277, 1277, 1277, 1842, 475, 1746,
	1845, 1849, 1373, 1619, 1048, 1765, 1817, 2987, 1667, 1864,
	1990, 1630, 372, 2957, 2343, 1876, 1893, 2267, 475, 1277,
	2245, 81, 1280, 2080, 129, 129, 129, 129, 129, 1405,
	1101, 1874, 1875, 1062, 1057, 1970, 129, 1981, 1971, 1883,
	129, 2270, 1982, 2269, 129, 1741, 1742, 1743, 1744, 1979,
	1889, 129, 1978, 1977, 1980, 1983, 1966, 1660, 1661, 480,
	481, 1550, 2893, 2841, 2176, 1873, 2001, 1532, 2002, 2885,
	2455, 642, 1993, 2000, 1919, 665, 1607, 1881, 1985, 1880,
	403, 2594, 2561, 421, 1141, 1142, 1992, 1726, 1950, 1952,
	2480, 421, 1160, 2401, 1163, 1958, 1959, 1960, 1961, 2400,
	2031, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 2297, 1161,
	1162, 1159, 1941, 1139, 2312, 2311, 2310, 1137, 2021, 1165,
	1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1166, 2746, 2020, 1176, 2749, 2828, 2827, 2674, 665, 2672,
	129, 1372, 2727, 1972, 2726, 2014, 1975, 1997, 1984, 1973,
	1974, 363, 1976, 665, 665, 665, 1451, 2657, 2658, 401,
	1280, 1280, 1280, 1280, 1280, 2016, 2169, 398, 2168, 1297,
	2339, 1130, 2004, 129, 401, 2122, 1280, 2063, 1304, 1046,
	1390, 2012, 1131, 1030, 1027, 1026, 982, 1280, 2942, 2691,
	401, 2690, 1774, 2116, 2022, 2115, 2027, 1524, 1525, 1775,
	1920, 2450, 1404, 2951, 2821, 2061, 80, 2064, 2066, 2068,
	2070, 401, 2676, 665, 2543, 2484, 475, 1025, 2338, 401,
	1766, 2544, 1943, 96, 1821, 1141, 1142, 2075, 1513, 1119,
	1120, 1879, 2941, 2171, 2172, 2077, 2940, 1633, 2939, 1878,
	665, 665, 2635, 1848, 2086, 2084, 1009, 2085, 477, 2878,
	129, 2877, 2840, 2181, 2825, 2750, 2706, 478, 84, 2106,
	665, 2839, 2761, 1999, 2574, 1545, 2092, 2093, 2094, 2133,
	2991, 2990, 653, 2381, 2138, 2136, 2135, 2139, 2120, 1931,
	1928, 1846, 1438, 1144, 2990, 2991, 2119, 1546, 2707, 2309,
	1518, 410, 2238, 412, 2795, 52, 86, 2125, 55, 2127,
	2797, 19, 2796, 18, 1, 2250, 80, 2798, 20, 2799,
	21, 2147, 2141, 2028, 2030, 2152, 475, 2163, 2164, 1836,
	2146, 2167, 2794, 15, 665, 1841, 1890, 1891, 1892, 1480,
	2275, 1515, 2144, 2155, 2160, 2279, 2280, 2281, 665, 2523,
	665, 2522, 2232, 2793, 14, 2787, 10, 2529, 1970, 2246,
	2183, 1971, 2810, 34, 2187, 2258, 2808, 33, 2191, 2182,
	2807, 32, 2350, 665, 2806, 28, 2805, 27, 2804, 26,
	2802, 23, 2801, 22, 2251, 2803, 24, 2181, 2353, 2221,
	2305, 2104, 2222, 2539, 665, 1388, 665, 2285, 665, 2646,
	665, 965, 2278, 1935, 1936, 1937, 2792, 13, 2789, 12,
	1785, 2283, 2249, 2788, 11, 2239, 2240, 2241, 2242, 2243,
	2786, 9, 1052, 2826, 2745, 2747, 2253, 2671, 2546, 2507,
	2506, 2097, 2096, 2192, 2193, 1047, 544, 2274, 2195, 2196,
	2268, 1461, 2199, 2200, 2201, 2202, 2145, 2294, 2276, 2206,
	2207, 2208, 2148, 1796, 2053, 2054, 2296, 1761, 2298, 1762,
	1858, 2060, 2757, 129, 1847, 1102, 1711, 398, 2290, 1701,
	2289, 2072, 655, 92, 1806, 2360, 992, 330, 1708, 2037,
	2748, 1049, 2036, 665, 665, 665, 2346, 2050, 1723, 1769,
	401, 1773, 2035, 2034, 2743, 129, 401, 2340, 2341, 2342,
	2038, 1317, 1315, 1316, 1314, 1319, 1318, 334, 1299, 129,
	2864, 401, 2448, 665, 401, 1145, 107, 2367, 401, 401,
	2362, 401, 56, 2563, 2159, 406, 407, 97, 649, 2315,
	2317, 105, 661, 336, 1184, 1877, 2321, 2005, 665, 640,
	641, 633, 129, 665, 1869, 1125, 2767, 2234, 2325, 2925,
	665, 2856, 1135, 665, 970, 2888, 665, 1940, 1233, 1625,
	498, 1988, 2592, 2890, 1537, 1279, 512, 511, 510, 2371,
	507, 508, 2375, 2389, 2850, 1527, 2379, 2380, 2368, 2382,
	2020, 1962, 2444, 2396, 2398, 2414, 2405, 1158, 2333, 1372,
	496, 1128, 487, 2389, 1275, 1268, 1825, 1655, 2385, 2121,
	2391, 2384, 1653, 1652, 2284, 1406, 629, 2266, 2262, 1665,
	1274, 1278, 70, 126, 2573, 1007, 352, 2445, 2702, 38,
	1604, 1606, 355, 411, 482, 25, 1610, 2299, 2300, 17,
	2412, 2301, 1017, 2302, 16, 1851, 963, 42, 129, 1165,
	1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1166, 44, 2091, 1176, 1970, 665, 630, 1971, 1636, 1637,
	654, 1777, 665, 665, 665, 1643, 1644, 1645, 1646, 2863,
	2972, 2459, 665, 1033, 2998, 2905, 31, 2185, 30, 29,
	964, 2800, 2472, 2473, 2474, 421, 665, 2470, 80, 2809,
	2791, 978, 2790, 2959, 2958, 4, 2203, 2204, 475, 1116,
	2451, 71, 35, 651, 2, 2498, 2482, 2475, 2460, 2429,
	2223, 2224, 0, 2225, 2226, 0, 0, 2227, 0, 2417,
	0, 0, 0, 0, 2471, 0, 129, 2419, 665, 0,
	2420, 2421, 0, 0, 2519, 2520, 2521, 0, 2424, 0,
	2481, 0, 2014, 0, 0, 0, 0, 0, 2499, 0,
	2390, 0, 0, 0, 0, 2485, 2497, 0, 0, 0,
	0, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	2407, 0, 0, 0, 2277, 2557, 2558, 0, 0, 0,
	0, 2319, 2518, 0, 485, 0, 2572, 0, 0, 0,
	2559, 0, 0, 665, 2181, 2488, 0, 0, 0, 0,
	2548, 665, 0, 2250, 2549, 0, 2250, 2599, 0, 2553,
	0, 0, 2575, 2576, 2547, 0, 2389, 475, 0, 2275,
	0, 2567, 2551, 0, 0, 2308, 0, 0, 2552, 2568,
	0, 2296, 1761, 0, 2560, 2623, 2389, 1212, 1213, 0,
	2447, 665, 0, 2545, 0, 0, 1819, 665, 0, 0,
	0, 2369, 129, 0, 129, 1221, 0, 2596, 0, 0,
	665, 0, 0, 0, 2631, 2461, 2462, 2602, 0, 2463,
	0, 0, 2465, 0, 0, 2598, 2632, 0, 0, 665,
	1221, 2630, 0, 2601, 0, 0, 0, 2595, 630, 0,
	0, 2606, 0, 0, 1672, 0, 2607, 0, 2616, 421,
	2249, 421, 2611, 2249, 0, 2636, 0, 2294, 0, 1850,
	0, 2617, 2618, 0, 0, 1866, 2605, 0, 0, 0,
	0, 0, 2692, 0, 0, 1277, 2294, 2637, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 2649, 0, 0,
	0, 0, 0, 2664, 2659, 0, 0, 0, 2250, 665,
	80, 0, 2667, 0, 0, 0, 0, 129, 0, 0,
	475, 2677, 0, 0, 2682, 2683, 2624, 2416, 2626, 0,
	2693, 0, 0, 0, 0, 1895, 0, 0, 0, 2694,
	1898, 2695, 0, 80, 2689, 1900, 1901, 665, 1903, 1904,
	1905, 1906, 0, 475, 1909, 1910, 1911, 1912, 0, 2708,
	0, 1916, 1917, 1918, 2713, 2705, 0, 0, 1921, 1922,
	1923, 2441, 2442, 2443, 2725, 0, 1929, 2712, 2709, 1932,
	1933, 2439, 0, 2715, 1938, 0, 0, 0, 0, 1944,
	1277, 1945, 1946, 1947, 0, 1948, 1949, 0, 0, 1953,
	1954, 1955, 1956, 1957, 0, 2249, 0, 0, 0, 0,
	0, 2723, 0, 2490, 0, 2492, 0, 0, 0, 401,
	0, 0, 129, 0, 0, 1986, 1987, 665, 0, 2753,
	0, 0, 649, 0, 0, 0, 80, 649, 1300, 0,
	2751, 0, 0, 2780, 2752, 2754, 2619, 2620, 2483, 0,
	2778, 0, 0, 1280, 2762, 0, 0, 0, 0, 0,
	129, 0, 1970, 2771, 0, 1971, 0, 2770, 0, 0,
	0, 0, 0, 0, 2294, 0, 0, 0, 0, 0,
	1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1166, 0, 0, 1176, 2824, 0, 2822, 665, 0,
	2834, 0, 665, 0, 0, 0, 0, 2859, 0, 2831,
	0, 0, 0, 2580, 0, 2853, 0, 0, 0, 2855,
	0, 0, 0, 0, 0, 80, 2685, 2686, 0, 0,
	2713, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 2294, 0, 0, 0, 2868,
	0, 1270, 0, 1282, 0, 0, 665, 0, 1280, 0,
	0, 0, 0, 0, 0, 2578, 2579, 0, 0, 2881,
	2894, 0, 0, 2880, 0, 0, 665, 2884, 2882, 2582,
	2583, 2584, 2585, 2902, 0, 0, 0, 2589, 0, 0,
	0, 0, 2900, 0, 0, 0, 0, 665, 0, 398,
	0, 0, 0, 0, 0, 0, 0, 2920, 0, 0,
	0, 2912, 0, 2921, 0, 0, 0, 2901, 0, 80,
	2923, 0, 401, 2294, 0, 80, 0, 0, 0, 0,
	665, 0, 2945, 0, 0, 0, 0, 0, 2938, 0,
	2933, 0, 0, 665, 2936, 0, 80, 0, 0, 2943,
	2947, 80, 0, 2952, 2954, 0, 665, 2186, 2969, 2948,
	2982, 475, 2238, 2194, 2963, 2966, 398, 2962, 2197, 2198,
	2988, 1221, 2986, 2983, 2981, 80, 2205, 2984, 80, 80,
	2209, 2961, 0, 80, 2960, 2992, 2945, 0, 0, 401,
	3001, 0, 0, 665, 2993, 0, 0, 2995, 0, 0,
	0, 0, 0, 0, 0, 80, 0, 3011, 80, 0,
	0, 0, 2945, 3019, 0, 3021, 0, 0, 0, 2971,
	0, 0, 0, 80, 0, 80, 2252, 3016, 0, 80,
	2945, 0, 2945, 0, 0, 0, 0, 0, 0, 0,
	80, 2438, 0, 80, 1374, 80, 0, 2945, 3031, 80,
	1382, 1385, 2945, 0, 0, 0, 2945, 0, 2282, 0,
	0, 0, 3035, 0, 0, 0, 2721, 0, 0, 0,
	0, 1382, 1385, 0, 0, 0, 2860, 2861, 1728, 1729,
	0, 1734, 1735, 1736, 1737, 1738, 0, 0, 0, 0,
	0, 2230, 0, 0, 0, 0, 0, 0, 0, 1748,
	1749, 1750, 0, 0, 2889, 2892, 1579, 1584, 1585, 0,
	1587, 1588, 1589, 1590, 0, 0, 1593, 1594, 1595, 1596,
	0, 0, 0, 1600, 1601, 1602, 2437, 2423, 0, 0,
	0, 1608, 1609, 2756, 0, 0, 1615, 1618, 0, 1623,
	1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1166, 0, 0, 1176, 0, 0, 0, 0, 0,
	0, 1631, 1481, 1634, 1635, 0, 0, 0, 1639, 0,
	1641, 1642, 2937, 0, 1375, 0, 1165, 1164, 1174, 1175,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166, 0, 0,
	1176, 0, 0, 2892, 630, 2436, 0, 1407, 1165, 1164,
	1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166,
	0, 0, 1176, 0, 1426, 1427, 1428, 1429, 1430, 0,
	0, 0, 0, 661, 0, 1165, 1164, 1174, 1175, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1166, 0, 0, 1176,
	0, 0, 0, 2415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 0, 0, 0, 0, 36, 0,
	72, 39, 40, 0, 0, 3020, 0, 0, 0, 0,
	0, 2425, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 41, 2434, 2435, 0, 0, 0, 0, 2440, 0,
	0, 0, 0, 1577, 1165, 1164, 1174, 1175, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1166, 2422, 0, 1176, 1597,
	1598, 2453, 2454, 0, 2456, 0, 0, 2457, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 1138, 0, 0,
	0, 0, 649, 0, 0, 0, 0, 2469, 0, 0,
	0, 0, 0, 0, 0, 0, 2811, 1509, 0, 2997,
	3000, 2996, 0, 0, 0, 1165, 1164, 1174, 1175, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1166, 0, 0, 1176,
	1533, 0, 0, 0, 0, 127, 0, 0, 349, 0,
	0, 0, 0, 0, 127, 2980, 0, 0, 649, 1165,
	1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1166, 0, 661, 1176, 0, 661, 661, 420, 0, 0,
	0, 0, 0, 0, 0, 486, 0, 0, 632, 650,
	0, 0, 127, 0, 0, 3004, 0, 0, 0, 0,
	0, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 2229, 127, 0, 0, 0, 0, 2812, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 2228, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 0, 1896, 0, 2055, 2056,
	2057, 2059, 0, 0, 1902, 1649, 0, 0, 0, 1907,
	1908, 2393, 2586, 2587, 2588, 0, 2590, 1915, 0, 0,
	473, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 2813, 0, 0, 0, 433, 0,
	0, 0, 1939, 2608, 2609, 2610, 0, 0, 66, 0,
	67, 0, 0, 0, 2622, 0, 440, 0, 1165, 1164,
	1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166,
	0, 0, 1176, 0, 0, 68, 1834, 0, 0, 0,
	1834, 0, 0, 1165, 1164, 1174, 1175, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1166, 0, 0, 1176, 0, 0,
	0, 0, 1834, 2814, 75, 1834, 53, 54, 61, 0,
	62, 0, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1166, 0, 1872, 1176, 0, 0, 1790, 0,
	0, 472, 0, 661, 1791, 1792, 0, 0, 0, 0,
	1312, 1799, 0, 0, 0, 0, 0, 0, 439, 2696,
	2697, 0, 2184, 2698, 2699, 2700, 2701, 0, 442, 0,
	127, 0, 0, 0, 0, 0, 0, 459, 0, 0,
	434, 0, 431, 0, 1812, 0, 0, 1894, 0, 441,
	1165, 1164, 1174, 1175, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1166, 0, 0, 1176, 0, 0, 0, 0, 1054,
	0, 0, 0, 73, 127, 1165, 1164, 1174, 1175, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1166, 445, 443, 1176,
	0, 0, 446, 0, 0, 0, 0, 0, 451, 425,
	0, 453, 0, 0, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 36, 37, 72, 39, 40,
	0, 0, 79, 437, 455, 420, 0, 649, 0, 59,
	0, 435, 436, 438, 457, 78, 458, 464, 41, 63,
	64, 0, 0, 2763, 0, 0, 60, 0, 0, 0,
	2772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2775, 649, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 81, 0, 661,
	0, 1339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2320, 0, 2835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2844, 0,
	426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	444, 2913, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2095, 2099, 2103,
	0, 465, 466, 0, 0, 0, 0, 427, 428, 429,
	430, 432, 447, 448, 449, 450, 462, 461, 460, 463,
	467, 470, 469, 471, 0, 1326, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2134, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 127, 127, 127, 0, 0, 0, 0,
	0, 65, 0, 650, 661, 661, 0, 0, 650, 2426,
	2427, 0, 2428, 0, 0, 2430, 0, 2432, 0, 0,
	0, 0, 0, 0, 661, 0, 1340, 0, 0, 0,
	0, 0, 0, 2083, 0, 0, 661, 0, 57, 58,
	0, 0, 0, 0, 0, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 2114, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 454,
	0, 0, 68, 0, 0, 0, 0, 0, 2236, 0,
	0, 2478, 2479, 0, 0, 0, 0, 0, 0, 0,
	649, 0, 661, 0, 2257, 3022, 3023, 0, 0, 0,
	51, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2177, 0, 0, 0, 0, 661, 0,
	661, 0, 661, 0, 2293, 0, 0, 0, 0, 0,
	0, 1353, 1356, 1357, 1358, 1359, 1360, 1361, 0, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 0, 1341, 1342,
	1343, 1344, 1320, 1324, 1354, 1321, 1327, 1323, 1325, 1322,
	0, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2347, 2348, 2349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 2374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2399, 0, 0, 0, 0, 2404, 0, 0,
	1355, 0, 0, 0, 2408, 0, 0, 2409, 0, 0,
	2411, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 1383, 1386, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 127,
	0, 0, 1383, 1386, 0, 0, 2336, 1416, 0, 0,
	0, 0, 0, 0, 1339, 0, 127, 127, 127, 127,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2366, 0,
	0, 1446, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2370, 0, 0, 0, 649, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2467,
	0, 0, 0, 0, 0, 0, 2467, 2467, 2467, 0,
	0, 0, 0, 0, 0, 2403, 661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2467, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2099, 0, 0, 0, 0, 0, 0, 127,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1340,
	0, 0, 0, 0, 0, 0, 0, 661, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1583, 1583, 1583, 0,
	1583, 1583, 1583, 1583, 0, 0, 1583, 1583, 1583, 1583,
	0, 0, 0, 1583, 1583, 1583, 0, 0, 0, 0,
	0, 1583, 1583, 0, 0, 2600, 1583, 1583, 0, 1583,
	0, 2467, 0, 650, 0, 0, 0, 0, 0, 2505,
	0, 0, 0, 0, 2293, 0, 0, 0, 0, 0,
	0, 1583, 1583, 1583, 1583, 0, 0, 1583, 1583, 1583,
	1583, 1583, 0, 2293, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 420, 0, 0,
	0, 0, 127, 127, 0, 0, 127, 1683, 1416, 650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 1353, 1356, 1357, 1358, 1359, 1360,
	1361, 0, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	0, 1341, 1342, 1343, 1344, 1320, 1324, 1354, 1321, 1327,
	1323, 1325, 1322, 2688, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 36, 0, 72, 39, 40, 0, 0,
	0, 36, 0, 72, 39, 40, 0, 59, 0, 0,
	0, 2711, 0, 78, 0, 59, 41, 0, 0, 0,
	0, 78, 0, 0, 41, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 127, 127, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 1421, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1811, 127, 0, 0, 0,
	0, 2811, 0, 1355, 0, 0, 3037, 0, 0, 2811,
	0, 2293, 0, 0, 3033, 0, 0, 0, 0, 0,
	0, 127, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 649, 0, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 0, 0,
	0, 0, 2293, 0, 1416, 0, 2837, 43, 74, 46,
	45, 48, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 2812, 0, 0, 0, 0, 0, 0, 0,
	2812, 0, 0, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 1583, 0, 0, 0,
	661, 0, 0, 0, 1583, 0, 0, 0, 0, 1583,
	1583, 0, 0, 0, 0, 0, 0, 1583, 0, 0,
	2293, 1583, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2774, 0, 0, 57, 58, 0, 2813,
	0, 2467, 1583, 0, 57, 58, 0, 2813, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 650, 127,
	127, 127, 127, 127, 2927, 0, 0, 0, 0, 0,
	68, 420, 0, 0, 0, 127, 0, 2931, 68, 420,
	0, 0, 0, 0, 1583, 0, 127, 0, 0, 0,
	661, 0, 0, 0, 650, 0, 0, 0, 2814, 75,
	0, 53, 54, 61, 0, 62, 2814, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 391,
	292, 385, 396, 379, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 402, 0, 0, 0, 0, 0,
	172, 0, 0, 386, 0, 0, 0, 0, 171, 163,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 206, 0, 0, 0, 285, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 400, 73, 399, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 79, 0, 253,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1583, 0, 0, 0,
	0, 0, 0, 0, 0, 1583, 0, 1416, 0, 0,
	0, 0, 0, 378, 377, 380, 0, 0, 0, 224,
	0, 0, 0, 384, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 130, 0, 0, 0, 235,
	388, 0, 0, 133, 392, 0, 0, 164, 0, 263,
	0, 308, 0, 0, 262, 207, 301, 0, 395, 307,
	0, 0, 314, 318, 0, 0, 0, 282, 173, 170,
	0, 650, 0, 0, 252, 167, 200, 0, 0, 0,
	160, 0, 0, 0, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 272, 271, 0,
	192, 0, 0, 0, 259, 0, 198, 137, 0, 320,
	147, 202, 294, 0, 182, 234, 166, 0, 242, 0,
	132, 255, 218, 219, 217, 220, 185, 0, 0, 0,
	405, 274, 296, 149, 288, 381, 382, 383, 389, 390,
	393, 394, 397, 212, 176, 179, 186, 193, 0, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 0, 140, 0, 0, 0, 0, 0, 127, 0,
	139, 0, 0, 0, 0, 0, 0, 184, 0, 304,
	305, 165, 321, 0, 0, 141, 0, 0, 231, 0,
	230, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	127, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 0, 0, 127, 0, 286, 0, 0, 290,
	151, 0, 0, 295, 0, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 0, 0, 241, 264,
	155, 310, 283, 174, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 142, 205, 0, 258, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 0, 0, 0, 650, 0, 0,
	0, 0, 0, 0, 0, 311, 169, 0, 0, 0,
	0, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 387, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 486, 0, 0, 916, 878, 292, 773,
	920, 715, 750, 939, 757, 761, 839, 688, 806, 238,
	745, 689, 0, 719, 673, 733, 674, 716, 172, 713,
	881, 809, 918, 793, 831, 0, 171, 163, 799, 798,
	0, 0, 0, 837, 893, 917, 792, 0, 927, 206,
	0, 825, 928, 285, 223, 0, 0, 788, 900, 804,
	872, 771, 841, 701, 824, 922, 746, 833, 923, 0,
	0, 0, 0, 2862, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 828, 915, 736, 832, 783, 838,
	944, 671, 827, 0, 680, 691, 938, 907, 725, 726,
	728, 0, 0, 0, 0, 0, 0, 127, 786, 805,
	861, 769, 309, 843, 856, 874, 759, 253, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 822,
	0, 0, 0, 695, 682, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 782, 0, 0,
	0, 700, 669, 723, 864, 670, 668, 224, 692, 875,
	906, 770, 197, 936, 913, 768, 767, 849, 0, 886,
	752, 204, 1418, 130, 690, 1419, 747, 235, 860, 869,
	739, 133, 882, 717, 734, 164, 0, 263, 834, 308,
	748, 814, 262, 207, 301, 850, 914, 307, 753, 894,
	314, 318, 729, 794, 698, 282, 173, 170, 724, 0,
	679, 744, 252, 167, 200, 772, 840, 718, 160, 854,
	823, 888, 281, 298, 135, 221, 299, 317, 148, 293,
	222, 228, 157, 159, 158, 144, 276, 297, 153, 162,
	884, 868, 889, 712, 0, 0, 2865, 2866, 2867, 760,
	749, 0, 0, 312, 766, 272, 271, 756, 192, 871,
	826, 676, 259, 844, 198, 137, 892, 320, 147, 202,
	294, 667, 182, 234, 166, 836, 242, 731, 132, 255,
	218, 219, 217, 220, 185, 735, 846, 867, 257, 274,
	296, 149, 288, 730, 732, 738, 863, 265, 883, 904,
	921, 212, 176, 179, 186, 193, 835, 261, 289, 313,
	0, 145, 138, 291, 306, 154, 273, 275, 319, 862,
	140, 911, 885, 816, 775, 781, 681, 0, 139, 858,
	722, 740, 711, 829, 0, 184, 848, 304, 305, 165,
	321, 693, 930, 141, 694, 929, 231, 0, 230, 933,
	300, 912, 817, 801, 0, 686, 910, 815, 800, 203,
	178, 188, 250, 209, 251, 189, 226, 225, 227, 210,
	803, 0, 677, 0, 286, 919, 946, 290, 151, 707,
	876, 295, 751, 256, 152, 183, 177, 249, 229, 146,
	191, 284, 201, 208, 853, 943, 241, 264, 155, 310,
	283, 174, 705, 706, 703, 0, 704, 807, 808, 924,
	925, 926, 866, 697, 0, 901, 902, 0, 0, 0,
	687, 0, 880, 908, 909, 842, 941, 758, 161, 678,
	683, 684, 685, 699, 789, 790, 813, 820, 897, 896,
	895, 898, 903, 934, 932, 935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 847, 857, 812, 134, 142,
	205, 942, 258, 181, 666, 675, 702, 708, 709, 710,
	0, 714, 720, 0, 727, 737, 741, 742, 755, 762,
	763, 764, 765, 774, 776, 777, 778, 779, 780, 784,
	785, 787, 796, 797, 802, 810, 811, 819, 821, 0,
	852, 855, 865, 870, 873, 877, 879, 887, 890, 891,
	931, 940, 945, 311, 169, 791, 795, 818, 859, 143,
	150, 156, 168, 175, 180, 187, 190, 194, 195, 196,
	199, 211, 213, 214, 215, 216, 232, 233, 236, 237,
	239, 240, 243, 244, 245, 246, 247, 248, 254, 851,
	260, 266, 267, 268, 269, 270, 277, 278, 279, 280,
	287, 302, 303, 315, 316, 905, 0, 131, 0, 0,
	672, 0, 0, 0, 0, 0, 754, 136, 899, 937,
	830, 845, 916, 878, 292, 773, 920, 715, 750, 939,
	757, 761, 839, 688, 806, 238, 745, 689, 0, 719,
	673, 733, 674, 716, 172, 713, 881, 809, 918, 793,
	831, 0, 171, 163, 799, 798, 0, 0, 0, 837,
	893, 917, 792, 0, 927, 206, 0, 825, 928, 285,
	223, 0, 0, 788, 900, 804, 872, 771, 841, 701,
	824, 922, 746, 833, 923, 0, 0, 0, 0, 664,
	0, 1705, 1706, 0, 0, 0, 0, 0, 696, 0,
	828, 915, 736, 832, 783, 838, 944, 671, 827, 0,
	680, 691, 938, 907, 725, 726, 728, 2015, 0, 0,
	0, 0, 0, 0, 786, 805, 861, 769, 309, 843,
	856, 874, 759, 253, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 822, 0, 0, 0, 695,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 782, 0, 0, 0, 700, 669, 723,
	864, 670, 668, 224, 692, 875, 906, 770, 197, 936,
	913, 768, 767, 849, 0, 886, 752, 204, 1418, 130,
	690, 1419, 747, 235, 860, 869, 739, 133, 882, 717,
	734, 164, 0, 263, 834, 308, 748, 814, 262, 207,
	301, 850, 914, 307, 753, 894, 314, 318, 729, 794,
	698, 282, 173, 170, 724, 0, 679, 744, 252, 167,
	200, 772, 840, 718, 160, 854, 823, 888, 281, 298,
	135, 221, 299, 317, 148, 293, 222, 228, 157, 159,
	158, 144, 276, 297, 153, 162, 884, 868, 889, 712,
	0, 0, 0, 0, 0, 760, 749, 0, 0, 312,
	766, 272, 271, 756, 192, 871, 826, 676, 259, 844,
	198, 137, 892, 320, 147, 202, 294, 667, 182, 234,
	166, 836, 242, 731, 132, 255, 218, 219, 217, 220,
	185, 735, 846, 867, 257, 274, 296, 149, 288, 730,
	732, 738, 863, 265, 883, 904, 921, 212, 176, 179,
	186, 193, 835, 261, 289, 313, 0, 145, 138, 291,
	306, 154, 273, 275, 319, 862, 140, 911, 885, 816,
	775, 781, 681, 0, 139, 858, 722, 740, 711, 829,
	0, 184, 848, 304, 305, 165, 321, 693, 930, 141,
	694, 929, 231, 0, 230, 933, 300, 912, 817, 801,
	0, 686, 910, 815, 800, 203, 178, 188, 250, 209,
	251, 189, 226, 225, 227, 210, 803, 0, 677, 0,
	286, 919, 946, 290, 151, 707, 876, 295, 751, 256,
	152, 183, 177, 249, 229, 146, 191, 284, 201, 208,
	853, 943, 241, 264, 155, 310, 283, 174, 705, 706,
	703, 0, 704, 807, 808, 924, 925, 926, 866, 697,
	0, 901, 902, 0, 0, 0, 687, 0, 880, 908,
	909, 842, 941, 758, 161, 678, 683, 684, 685, 699,
	789, 790, 813, 820, 897, 896, 895, 898, 903, 934,
	932, 935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 847, 857, 812, 134, 142, 205, 942, 258, 181,
	666, 675, 702, 708, 709, 710, 0, 714, 720, 0,
	727, 737, 741, 742, 755, 762, 763, 764, 765, 774,
	776, 777, 778, 779, 780, 784, 785, 787, 796, 797,
	802, 810, 811, 819, 821, 0, 852, 855, 865, 870,
	873, 877, 879, 887, 890, 891, 931, 940, 945, 311,
	169, 791, 795, 818, 859, 143, 150, 156, 168, 175,
	180, 187, 190, 194, 195, 196, 199, 211, 213, 214,
	215, 216, 232, 233, 236, 237, 239, 240, 243, 244,
	245, 246, 247, 248, 254, 851, 260, 266, 267, 268,
	269, 270, 277, 278, 279, 280, 287, 302, 303, 315,
	316, 905, 0, 131, 0, 0, 672, 0, 0, 0,
	0, 0, 754, 136, 899, 937, 830, 845, 916, 878,
	292, 773, 920, 715, 750, 939, 757, 761, 839, 688,
	806, 238, 745, 689, 0, 719, 673, 733, 674, 716,
	172, 713, 881, 809, 918, 793, 831, 0, 171, 163,
	799, 798, 0, 0, 0, 837, 893, 917, 792, 0,
	927, 206, 0, 825, 928, 285, 223, 0, 0, 788,
	900, 804, 872, 771, 841, 701, 824, 922, 746, 833,
	923, 0, 0, 0, 0, 664, 0, 1705, 1706, 0,
	0, 0, 0, 0, 696, 0, 828, 915, 736, 832,
	783, 838, 944, 671, 827, 0, 680, 691, 938, 907,
	725, 726, 728, 0, 0, 0, 0, 0, 0, 0,
	786, 805, 861, 769, 309, 843, 856, 874, 759, 253,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 822, 0, 0, 0, 695, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 782,
	0, 0, 0, 700, 669, 723, 864, 670, 668, 224,
	692, 875, 906, 770, 197, 936, 913, 768, 767, 849,
	0, 886, 752, 204, 1418, 130, 690, 1419, 747, 235,
	860, 869, 739, 133, 882, 717, 734, 164, 0, 263,
	834, 308, 748, 814, 262, 207, 301, 850, 914, 307,
	753, 894, 314, 318, 729, 794, 698, 282, 173, 170,
	724, 0, 679, 744, 252, 167, 200, 772, 840, 718,
	160, 854, 823, 888, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 884, 868, 889, 712, 0, 0, 0, 0,
	0, 760, 749, 0, 0, 312, 766, 272, 271, 756,
	192, 871, 826, 676, 259, 844, 198, 137, 892, 320,
	147, 202, 294, 667, 182, 234, 166, 836, 242, 731,
	132, 255, 218, 219, 217, 220, 185, 735, 846, 867,
	257, 274, 296, 149, 288, 730, 732, 738, 863, 265,
	883, 904, 921, 212, 176, 179, 186, 193, 835, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 862, 140, 911, 885, 816, 775, 781, 681, 0,
	139, 858, 722, 740, 711, 829, 0, 184, 848, 304,
	305, 165, 321, 693, 930, 141, 694, 929, 231, 0,
	230, 933, 300, 912, 817, 801, 0, 686, 910, 815,
	800, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 803, 0, 677, 0, 286, 919, 946, 290,
	151, 707, 876, 295, 751, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 853, 943, 241, 264,
	155, 310, 283, 174, 705, 706, 703, 0, 704, 807,
	808, 924, 925, 926, 866, 697, 0, 901, 902, 0,
	0, 0, 687, 0, 880, 908, 909, 842, 941, 758,
	161, 678, 683, 684, 685, 699, 789, 790, 813, 820,
	897, 896, 895, 898, 903, 934, 932, 935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 847, 857, 812,
	134, 142, 205, 942, 258, 181, 666, 675, 702, 708,
	709, 710, 0, 714, 720, 0, 727, 737, 741, 742,
	755, 762, 763, 764, 765, 774, 776, 777, 778, 779,
	780, 784, 785, 787, 796, 797, 802, 810, 811, 819,
	821, 0, 852, 855, 865, 870, 873, 877, 879, 887,
	890, 891, 931, 940, 945, 311, 169, 791, 795, 818,
	859, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 851, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 905, 0, 131,
	0, 0, 672, 0, 0, 0, 0, 0, 754, 136,
	899, 937, 830, 845, 916, 2254, 292, 773, 920, 715,
	750, 939, 757, 761, 839, 688, 806, 238, 745, 689,
	0, 719, 673, 733, 674, 716, 172, 713, 881, 809,
	918, 793, 831, 0, 171, 163, 799, 798, 0, 0,
	0, 837, 893, 917, 792, 0, 927, 206, 0, 825,
	928, 285, 223, 0, 0, 788, 900, 804, 872, 771,
	841, 701, 824, 922, 746, 833, 923, 81, 0, 1128,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 0, 828, 915, 736, 832, 783, 838, 944, 671,
	827, 0, 680, 691, 938, 907, 725, 726, 728, 0,
	0, 0, 0, 0, 0, 0, 786, 805, 861, 769,
	309, 843, 856, 874, 759, 253, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 822, 0, 0,
	0, 695, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 782, 0, 0, 0, 700,
	669, 723, 864, 670, 668, 224, 692, 875, 906, 770,
	197, 936, 913, 768, 767, 849, 0, 886, 752, 204,
	1418, 130, 690, 1419, 747, 235, 860, 869, 739, 133,
	882, 717, 734, 164, 0, 263, 834, 308, 748, 814,
	262, 207, 301, 850, 914, 307, 753, 894, 314, 318,
	729, 794, 698, 282, 173, 170, 724, 0, 679, 744,
	252, 167, 200, 772, 840, 718, 160, 854, 823, 888,
	281, 298, 135, 221, 299, 317, 148, 293, 222, 228,
	157, 159, 158, 144, 276, 297, 153, 162, 884, 868,
	889, 712, 0, 0, 0, 0, 0, 760, 749, 0,
	0, 312, 766, 272, 271, 756, 192, 871, 826, 676,
	259, 844, 198, 137, 892, 320, 147, 202, 294, 667,
	182, 234, 166, 836, 242, 731, 132, 255, 218, 219,
	217, 220, 185, 735, 846, 867, 257, 274, 296, 149,
	288, 730, 732, 738, 863, 265, 883, 904, 921, 212,
	176, 179, 186, 193, 835, 261, 289, 313, 0, 145,
	138, 291, 306, 154, 273, 275, 319, 862, 140, 911,
	885, 816, 775, 781, 681, 0, 139, 858, 722, 740,
	711, 829, 0, 184, 848, 304, 305, 165, 321, 693,
	930, 141, 694, 929, 231, 0, 230, 933, 300, 912,
	817, 801, 0, 686, 910, 815, 800, 203, 178, 188,
	250, 209, 251, 189, 226, 225, 227, 210, 803, 0,
	677, 0, 286, 919, 946, 290, 151, 707, 876, 295,
	751, 256, 152, 183, 177, 249, 229, 146, 191, 284,
	201, 208, 853, 943, 241, 264, 155, 310, 283, 174,
	705, 706, 703, 0, 704, 807, 808, 924, 925, 926,
	866, 697, 0, 901, 902, 0, 0, 0, 687, 0,
	880, 908, 909, 842, 941, 758, 161, 678, 683, 684,
	685, 699, 789, 790, 813, 820, 897, 896, 895, 898,
	903, 934, 932, 935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 857, 812, 134, 142, 205, 2255,
	258, 181, 666, 675, 702, 708, 709, 710, 0, 714,
	720, 0, 727, 737, 741, 742, 755, 762, 763, 764,
	765, 774, 776, 777, 778, 779, 780, 784, 785, 787,
	796, 797, 802, 810, 811, 819, 821, 0, 852, 855,
	865, 870, 873, 877, 879, 887, 890, 891, 931, 940,
	945, 311, 169, 791, 795, 818, 859, 143, 150, 156,
	168, 175, 180, 187, 190, 194, 195, 196, 199, 211,
	213, 214, 215, 216, 232, 233, 236, 237, 239, 240,
	243, 244, 245, 246, 247, 248, 254, 851, 260, 266,
	267, 268, 269, 270, 277, 278, 279, 280, 287, 302,
	303, 315, 316, 905, 0, 131, 0, 0, 672, 0,
	0, 0, 0, 0, 754, 136, 899, 937, 830, 845,
	916, 878, 292, 773, 920, 715, 750, 939, 757, 761,
	839, 688, 806, 238, 745, 689, 0, 719, 673, 733,
	674, 716, 172, 713, 881, 809, 918, 793, 831, 0,
	171, 163, 799, 798, 0, 0, 0, 837, 893, 917,
	792, 0, 927, 206, 0, 825, 928, 285, 223, 0,
	0, 788, 900, 804, 872, 771, 841, 701, 824, 922,
	746, 833, 923, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 0, 828, 915,
	736, 832, 783, 838, 944, 671, 827, 0, 680, 691,
	938, 907, 725, 726, 728, 0, 0, 0, 0, 0,
	0, 0, 786, 805, 861, 769, 309, 843, 856, 874,
	759, 253, 743, 0, 0, 0, 0, 0, 0, 2577,
	0, 721, 0, 822, 0, 0, 0, 695, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 782, 0, 0, 0, 700, 669, 723, 864, 670,
	668, 224, 692, 875, 906, 770, 197, 936, 913, 768,
	767, 849, 0, 886, 752, 204, 1418, 130, 690, 1419,
	747, 235, 860, 869, 739, 133, 882, 717, 734, 164,
	0, 263, 834, 308, 748, 814, 262, 207, 301, 850,
	914, 307, 753, 894, 314, 318, 729, 794, 698, 282,
	173, 170, 724, 0, 679, 744, 252, 167, 200, 772,
	840, 718, 160, 854, 823, 888, 281, 298, 135, 221,
	299, 317, 148, 293, 222, 228, 157, 159, 158, 144,
	276, 297, 153, 162, 884, 868, 889, 712, 0, 0,
	0, 0, 0, 760, 749, 0, 0, 312, 766, 272,
	271, 756, 192, 871, 826, 676, 259, 844, 198, 137,
	892, 320, 147, 202, 294, 667, 182, 234, 166, 836,
	242, 731, 132, 255, 218, 219, 217, 220, 185, 735,
	846, 867, 257, 274, 296, 149, 288, 730, 732, 738,
	863, 265, 883, 904, 921, 212, 176, 179, 186, 193,
	835, 261, 289, 313, 0, 145, 138, 291, 306, 154,
	273, 275, 319, 862, 140, 911, 885, 816, 775, 781,
	681, 0, 139, 858, 722, 740, 711, 829, 0, 184,
	848, 304, 305, 165, 321, 693, 930, 141, 694, 929,
	231, 0, 230, 933, 300, 912, 817, 801, 0, 686,
	910, 815, 800, 203, 178, 188, 250, 209, 251, 189,
	226, 225, 227, 210, 803, 0, 677, 0, 286, 919,
	946, 290, 151, 707, 876, 295, 751, 256, 152, 183,
	177, 249, 229, 146, 191, 284, 201, 208, 853, 943,
	241, 264, 155, 310, 283, 174, 705, 706, 703, 0,
	704, 807, 808, 924, 925, 926, 866, 697, 0, 901,
	902, 0, 0, 0, 687, 0, 880, 908, 909, 842,
	941, 758, 161, 678, 683, 684, 685, 699, 789, 790,
	813, 820, 897, 896, 895, 898, 903, 934, 932, 935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 847,
	857, 812, 134, 142, 205, 942, 258, 181, 666, 675,
	702, 708, 709, 710, 0, 714, 720, 0, 727, 737,
	741, 742, 755, 762, 763, 764, 765, 774, 776, 777,
	778, 779, 780, 784, 785, 787, 796, 797, 802, 810,
	811, 819, 821, 0, 852, 855, 865, 870, 873, 877,
	879, 887, 890, 891, 931, 940, 945, 311, 169, 791,
	795, 818, 859, 143, 150, 156, 168, 175, 180, 187,
	190, 194, 195, 196, 199, 211, 213, 214, 215, 216,
	232, 233, 236, 237, 239, 240, 243, 244, 245, 246,
	247, 248, 254, 851, 260, 266, 267, 268, 269, 270,
	277, 278, 279, 280, 287, 302, 303, 315, 316, 905,
	0, 131, 0, 0, 672, 0, 0, 0, 0, 0,
	754, 136, 899, 937, 830, 845, 916, 878, 292, 773,
	920, 715, 750, 939, 757, 761, 839, 688, 806, 238,
	745, 689, 0, 719, 673, 733, 674, 716, 172, 713,
	881, 809, 918, 793, 831, 0, 171, 163, 799, 798,
	0, 0, 0, 837, 893, 917, 792, 0, 927, 206,
	0, 825, 928, 285, 223, 0, 0, 788, 900, 804,
	872, 771, 841, 701, 824, 922, 746, 833, 923, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 828, 915, 736, 832, 783, 838,
	944, 671, 827, 0, 680, 691, 938, 907, 725, 726,
	728, 0, 0, 0, 0, 0, 0, 0, 786, 805,
	861, 769, 309, 843, 856, 874, 759, 253, 743, 0,
	0, 0, 0, 0, 0, 2190, 0, 721, 0, 822,
	0, 0, 0, 695, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 782, 0, 0,
	0, 700, 669, 723, 864, 670, 668, 224, 692, 875,
	906, 770, 197, 936, 913, 768, 767, 849, 0, 886,
	752, 204, 1418, 130, 690, 1419, 747, 235, 860, 869,
	739, 133, 882, 717, 734, 164, 0, 263, 834, 308,
	748, 814, 262, 207, 301, 850, 914, 307, 753, 894,
	314, 318, 729, 794, 698, 282, 173, 170, 724, 0,
	679, 744, 252, 167, 200, 772, 840, 718, 160, 854,
	823, 888, 281, 298, 135, 221, 299, 317, 148, 293,
	222, 228, 157, 159, 158, 144, 276, 297, 153, 162,
	884, 868, 889, 712, 0, 0, 0, 0, 0, 760,
	749, 0, 0, 312, 766, 272, 271, 756, 192, 871,
	826, 676, 259, 844, 198, 137, 892, 320, 147, 202,
	294, 667, 182, 234, 166, 836, 242, 731, 132, 255,
	218, 219, 217, 220, 185, 735, 846, 867, 257, 274,
	296, 149, 288, 730, 732, 738, 863, 265, 883, 904,
	921, 212, 176, 179, 186, 193, 835, 261, 289, 313,
	0, 145, 138, 291, 306, 154, 273, 275, 319, 862,
	140, 911, 885, 816, 775, 781, 681, 0, 139, 858,
	722, 740, 711, 829, 0, 184, 848, 304, 305, 165,
	321, 693, 930, 141, 694, 929, 231, 0, 230, 933,
	300, 912, 817, 801, 0, 686, 910, 815, 800, 203,
	178, 188, 250, 209, 251, 189, 226, 225, 227, 210,
	803, 0, 677, 0, 286, 919, 946, 290, 151, 707,
	876, 295, 751, 256, 152, 183, 177, 249, 229, 146,
	191, 284, 201, 208, 853, 943, 241, 264, 155, 310,
	283, 174, 705, 706, 703, 0, 704, 807, 808, 924,
	925, 926, 866, 697, 0, 901, 902, 0, 0, 0,
	687, 0, 880, 908, 909, 842, 941, 758, 161, 678,
	683, 684, 685, 699, 789, 790, 813, 820, 897, 896,
	895, 898, 903, 934, 932, 935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 847, 857, 812, 134, 142,
	205, 942, 258, 181, 666, 675, 702, 708, 709, 710,
	0, 714, 720, 0, 727, 737, 741, 742, 755, 762,
	763, 764, 765, 774, 776, 777, 778, 779, 780, 784,
	785, 787, 796, 797, 802, 810, 811, 819, 821, 0,
	852, 855, 865, 870, 873, 877, 879, 887, 890, 891,
	931, 940, 945, 311, 169, 791, 795, 818, 859, 143,
	150, 156, 168, 175, 180, 187, 190, 194, 195, 196,
	199, 211, 213, 214, 215, 216, 232, 233, 236, 237,
	239, 240, 243, 244, 245, 246, 247, 248, 254, 851,
	260, 266, 267, 268, 269, 270, 277, 278, 279, 280,
	287, 302, 303, 315, 316, 905, 0, 131, 0, 0,
	672, 0, 0, 0, 0, 0, 754, 136, 899, 937,
	830, 845, 916, 878, 292, 773, 920, 715, 750, 939,
	757, 761, 839, 688, 806, 238, 745, 689, 0, 719,
	673, 733, 674, 716, 172, 713, 881, 809, 918, 793,
	831, 0, 171, 163, 799, 798, 0, 0, 0, 837,
	893, 917, 792, 0, 927, 206, 0, 825, 928, 285,
	223, 0, 0, 788, 900, 804, 872, 771, 841, 701,
	824, 922, 746, 833, 923, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 0,
	828, 915, 736, 832, 783, 838, 944, 671, 827, 0,
	680, 691, 938, 907, 725, 726, 728, 0, 0, 0,
	0, 0, 0, 0, 786, 805, 861, 769, 309, 843,
	856, 874, 759, 253, 743, 0, 0, 0, 0, 0,
	0, 2180, 0, 721, 0, 822, 0, 0, 0, 695,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 782, 0, 0, 0, 700, 669, 723,
	864, 670, 668, 224, 692, 875, 906, 770, 197, 936,
	913, 768, 767, 849, 0, 886, 752, 204, 1418, 130,
	690, 1419, 747, 235, 860, 869, 739, 133, 882, 717,
	734, 164, 0, 263, 834, 308, 748, 814, 262, 207,
	301, 850, 914, 307, 753, 894, 314, 318, 729, 794,
	698, 282, 173, 170, 724, 0, 679, 744, 252, 167,
	200, 772, 840, 718, 160, 854, 823, 888, 281, 298,
	135, 221, 299, 317, 148, 293, 222, 228, 157, 159,
	158, 144, 276, 297, 153, 162, 884, 868, 889, 712,
	0, 0, 0, 0, 0, 760, 749, 0, 0, 312,
	766, 272, 271, 756, 192, 871, 826, 676, 259, 844,
	198, 137, 892, 320, 147, 202, 294, 667, 182, 234,
	166, 836, 242, 731, 132, 255, 218, 219, 217, 220,
	185, 735, 846, 867, 257, 274, 296, 149, 288, 730,
	732, 738, 863, 265, 883, 904, 921, 212, 176, 179,
	186, 193, 835, 261, 289, 313, 0, 145, 138, 291,
	306, 154, 273, 275, 319, 862, 140, 911, 885, 816,
	775, 781, 681, 0, 139, 858, 722, 740, 711, 829,
	0, 184, 848, 304, 305, 165, 321, 693, 930, 141,
	694, 929, 231, 0, 230, 933, 300, 912, 817, 801,
	0, 686, 910, 815, 800, 203, 178, 188, 250, 209,
	251, 189, 226, 225, 227, 210, 803, 0, 677, 0,
	286, 919, 946, 290, 151, 707, 876, 295, 751, 256,
	152, 183, 177, 249, 229, 146, 191, 284, 201, 208,
	853, 943, 241, 264, 155, 310, 283, 174, 705, 706,
	703, 0, 704, 807, 808, 924, 925, 926, 866, 697,
	0, 901, 902, 0, 0, 0, 687, 0, 880, 908,
	909, 842, 941, 758, 161, 678, 683, 684, 685, 699,
	789, 790, 813, 820, 897, 896, 895, 898, 903, 934,
	932, 935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 847, 857, 812, 134, 142, 205, 942, 258, 181,
	666, 675, 702, 708, 709, 710, 0, 714, 720, 0,
	727, 737, 741, 742, 755, 762, 763, 764, 765, 774,
	776, 777, 778, 779, 780, 784, 785, 787, 796, 797,
	802, 810, 811, 819, 821, 0, 852, 855, 865, 870,
	873, 877, 879, 887, 890, 891, 931, 940, 945, 311,
	169, 791, 795, 818, 859, 143, 150, 156, 168, 175,
	180, 187, 190, 194, 195, 196, 199, 211, 213, 214,
	215, 216, 232, 233, 236, 237, 239, 240, 243, 244,
	245, 246, 247, 248, 254, 851, 260, 266, 267, 268,
	269, 270, 277, 278, 279, 280, 287, 302, 303, 315,
	316, 905, 0, 131, 0, 0, 672, 0, 0, 0,
	0, 0, 754, 136, 899, 937, 830, 845, 916, 878,
	292, 773, 920, 715, 750, 939, 757, 761, 839, 688,
	806, 238, 745, 689, 0, 719, 673, 733, 674, 716,
	172, 713, 881, 809, 918, 793, 831, 0, 171, 163,
	799, 798, 0, 0, 0, 837, 893, 917, 792, 0,
	927, 206, 0, 825, 928, 285, 223, 0, 0, 788,
	900, 804, 872, 771, 841, 701, 824, 922, 746, 833,
	923, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 0, 828, 915, 736, 832,
	783, 838, 944, 671, 827, 0, 680, 691, 938, 907,
	725, 726, 728, 0, 0, 0, 0, 0, 0, 0,
	786, 805, 861, 769, 309, 843, 856, 874, 759, 253,
	743, 0, 0, 0, 0, 0, 0, 1684, 0, 721,
	0, 822, 0, 0, 0, 695, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 782,
	0, 0, 0, 700, 669, 723, 864, 670, 668, 224,
	692, 875, 906, 770, 197, 936, 913, 768, 767, 849,
	0, 886, 752, 204, 1418, 130, 690, 1419, 747, 235,
	860, 869, 739, 133, 882, 717, 734, 164, 0, 263,
	834, 308, 748, 814, 262, 207, 301, 850, 914, 307,
	753, 894, 314, 318, 729, 794, 698, 282, 173, 170,
	724, 0, 679, 744, 252, 167, 200, 772, 840, 718,
	160, 854, 823, 888, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 884, 868, 889, 712, 0, 0, 0, 0,
	0, 760, 749, 0, 0, 312, 766, 272, 271, 756,
	192, 871, 826, 676, 259, 844, 198, 137, 892, 320,
	147, 202, 294, 667, 182, 234, 166, 836, 242, 731,
	132, 255, 218, 219, 217, 220, 185, 735, 846, 867,
	257, 274, 296, 149, 288, 730, 732, 738, 863, 265,
	883, 904, 921, 212, 176, 179, 186, 193, 835, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 862, 140, 911, 885, 816, 775, 781, 681, 0,
	139, 858, 722, 740, 711, 829, 0, 184, 848, 304,
	305, 165, 321, 693, 930, 141, 694, 929, 231, 0,
	230, 933, 300, 912, 817, 801, 0, 686, 910, 815,
	800, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 803, 0, 677, 0, 286, 919, 946, 290,
	151, 707, 876, 295, 751, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 853, 943, 241, 264,
	155, 310, 283, 174, 705, 706, 703, 0, 704, 807,
	808, 924, 925, 926, 866, 697, 0, 901, 902, 0,
	0, 0, 687, 0, 880, 908, 909, 842, 941, 758,
	161, 678, 683, 684, 685, 699, 789, 790, 813, 820,
	897, 896, 895, 898, 903, 934, 932, 935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 847, 857, 812,
	134, 142, 205, 942, 258, 181, 666, 675, 702, 708,
	709, 710, 0, 714, 720, 0, 727, 737, 741, 742,
	755, 762, 763, 764, 765, 774, 776, 777, 778, 779,
	780, 784, 785, 787, 796, 797, 802, 810, 811, 819,
	821, 0, 852, 855, 865, 870, 873, 877, 879, 887,
	890, 891, 931, 940, 945, 311, 169, 791, 795, 818,
	859, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 851, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 905, 0, 131,
	0, 0, 672, 0, 0, 0, 0, 0, 754, 136,
	899, 937, 830, 845, 916, 878, 292, 773, 920, 715,
	750, 939, 757, 761, 839, 688, 806, 238, 745, 689,
	0, 719, 673, 733, 674, 716, 172, 713, 881, 809,
	918, 793, 831, 0, 171, 163, 799, 798, 0, 0,
	0, 837, 893, 917, 792, 0, 927, 206, 0, 825,
	928, 285, 223, 0, 0, 788, 900, 804, 872, 771,
	841, 701, 824, 922, 746, 833, 923, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 0, 828, 915, 736, 832, 783, 838, 944, 671,
	827, 0, 680, 691, 938, 907, 725, 726, 728, 0,
	0, 0, 0, 0, 0, 0, 786, 805, 861, 769,
	309, 843, 856, 874, 759, 253, 743, 0, 0, 0,
	0, 0, 0, 1543, 0, 721, 0, 822, 0, 0,
	0, 695, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 782, 0, 0, 0, 700,
	669, 723, 864, 670, 668, 224, 692, 875, 906, 770,
	197, 936, 913, 768, 767, 849, 0, 886, 752, 204,
	1418, 130, 690, 1419, 747, 235, 860, 869, 739, 133,
	882, 717, 734, 164, 0, 263, 834, 308, 748, 814,
	262, 207, 301, 850, 914, 307, 753, 894, 314, 318,
	729, 794, 698, 282, 173, 170, 724, 0, 679, 744,
	252, 167, 200, 772, 840, 718, 160, 854, 823, 888,
	281, 298, 135, 221, 299, 317, 148, 293, 222, 228,
	157, 159, 158, 144, 276, 297, 153, 162, 884, 868,
	889, 712, 0, 0, 0, 0, 0, 760, 749, 0,
	0, 312, 766, 272, 271, 756, 192, 871, 826, 676,
	259, 844, 198, 137, 892, 320, 147, 202, 294, 667,
	182, 234, 166, 836, 242, 731, 132, 255, 218, 219,
	217, 220, 185, 735, 846, 867, 257, 274, 296, 149,
	288, 730, 732, 738, 863, 265, 883, 904, 921, 212,
	176, 179, 186, 193, 835, 261, 289, 313, 0, 145,
	138, 291, 306, 154, 273, 275, 319, 862, 140, 911,
	885, 816, 775, 781, 681, 0, 139, 858, 722, 740,
	711, 829, 0, 184, 848, 304, 305, 165, 321, 693,
	930, 141, 694, 929, 231, 0, 230, 933, 300, 912,
	817, 801, 0, 686, 910, 815, 800, 203, 178, 188,
	250, 209, 251, 189, 226, 225, 227, 210, 803, 0,
	677, 0, 286, 919, 946, 290, 151, 707, 876, 295,
	751, 256, 152, 183, 177, 249, 229, 146, 191, 284,
	201, 208, 853, 943, 241, 264, 155, 310, 283, 174,
	705, 706, 703, 0, 704, 807, 808, 924, 925, 926,
	866, 697, 0, 901, 902, 0, 0, 0, 687, 0,
	880, 908, 909, 842, 941, 758, 161, 678, 683, 684,
	685, 699, 789, 790, 813, 820, 897, 896, 895, 898,
	903, 934, 932, 935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 857, 812, 134, 142, 205, 942,
	258, 181, 666, 675, 702, 708, 709, 710, 0, 714,
	720, 0, 727, 737, 741, 742, 755, 762, 763, 764,
	765, 774, 776, 777, 778, 779, 780, 784, 785, 787,
	796, 797, 802, 810, 811, 819, 821, 0, 852, 855,
	865, 870, 873, 877, 879, 887, 890, 891, 931, 940,
	945, 311, 169, 791, 795, 818, 859, 143, 150, 156,
	168, 175, 180, 187, 190, 194, 195, 196, 199, 211,
	213, 214, 215, 216, 232, 233, 236, 237, 239, 240,
	243, 244, 245, 246, 247, 248, 254, 851, 260, 266,
	267, 268, 269, 270, 277, 278, 279, 280, 287, 302,
	303, 315, 316, 905, 0, 131, 0, 0, 672, 0,
	0, 0, 0, 0, 754, 136, 899, 937, 830, 845,
	916, 878, 292, 773, 920, 715, 750, 939, 757, 761,
	839, 688, 806, 238, 745, 689, 0, 719, 673, 733,
	674, 716, 172, 713, 881, 809, 918, 793, 831, 0,
	171, 163, 799, 798, 0, 0, 0, 837, 893, 917,
	792, 0, 927, 206, 0, 825, 928, 285, 223, 0,
	0, 788, 900, 804, 872, 771, 841, 701, 824, 922,
	746, 833, 923, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 696, 0, 828, 915,
	736, 832, 783, 838, 944, 671, 827, 0, 680, 691,
	938, 907, 725, 726, 728, 0, 0, 0, 0, 0,
	0, 0, 786, 805, 861, 769, 309, 843, 856, 874,
	759, 253, 743, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 822, 0, 0, 0, 695, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 782, 0, 0, 0, 700, 669, 723, 864, 670,
	668, 224, 692, 875, 906, 770, 197, 936, 913, 768,
	767, 849, 0, 886, 752, 204, 1418, 130, 690, 1419,
	747, 235, 860, 869, 739, 133, 882, 717, 734, 164,
	0, 263, 834, 308, 748, 814, 262, 207, 301, 850,
	914, 307, 753, 894, 314, 318, 729, 794, 698, 282,
	173, 170, 724, 0, 679, 744, 252, 167, 200, 772,
	840, 718, 160, 854, 823, 888, 281, 298, 135, 221,
	299, 317, 148, 293, 222, 228, 157, 159, 158, 144,
	276, 297, 153, 162, 884, 868, 889, 712, 0, 0,
	0, 0, 0, 760, 749, 0, 0, 312, 766, 272,
	271, 756, 192, 871, 826, 676, 259, 844, 198, 137,
	892, 320, 147, 202, 294, 667, 182, 234, 166, 836,
	242, 731, 132, 255, 218, 219, 217, 220, 185, 735,
	846, 867, 257, 274, 296, 149, 288, 730, 732, 738,
	863, 265, 883, 904, 921, 212, 176, 179, 186, 193,
	835, 261, 289, 313, 0, 145, 138, 291, 306, 154,
	273, 275, 319, 862, 140, 911, 885, 816, 775, 781,
	681, 0, 139, 858, 722, 740, 711, 829, 0, 184,
	848, 304, 305, 165, 321, 693, 930, 141, 694, 929,
	231, 0, 230, 933, 300, 912, 817, 801, 0, 686,
	910, 815, 800, 203, 178, 188, 250, 209, 251, 189,
	226, 225, 227, 210, 803, 0, 677, 0, 286, 919,
	946, 290, 151, 707, 876, 295, 751, 256, 152, 183,
	177, 249, 229, 146, 191, 284, 201, 208, 853, 943,
	241, 264, 155, 310, 283, 174, 705, 706, 703, 0,
	704, 807, 808, 924, 925, 926, 866, 697, 0, 901,
	902, 0, 0, 0, 687, 0, 880, 908, 909, 842,
	941, 758, 161, 678, 683, 684, 685, 699, 789, 790,
	813, 820, 897, 896, 895, 898, 903, 934, 932, 935,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 847,
	857, 812, 134, 142, 205, 942, 258, 181, 666, 675,
	702, 708, 709, 710, 0, 714, 720, 0, 727, 737,
	741, 742, 755, 762, 763, 764, 765, 774, 776, 777,
	778, 779, 780, 784, 785, 787, 796, 797, 802, 810,
	811, 819, 821, 0, 852, 855, 865, 870, 873, 877,
	879, 887, 890, 891, 931, 940, 945, 311, 169, 791,
	795, 818, 859, 143, 150, 156, 168, 175, 180, 187,
	190, 194, 195, 196, 199, 211, 213, 214, 215, 216,
	232, 233, 236, 237, 239, 240, 243, 244, 245, 246,
	247, 248, 254, 851, 260, 266, 267, 268, 269, 270,
	277, 278, 279, 280, 287, 302, 303, 315, 316, 905,
	0, 131, 0, 0, 672, 0, 0, 0, 0, 0,
	754, 136, 899, 937, 830, 845, 916, 878, 292, 773,
	920, 715, 750, 939, 757, 761, 839, 688, 806, 238,
	745, 689, 0, 719, 673, 733, 674, 716, 172, 713,
	881, 809, 918, 793, 831, 0, 171, 163, 799, 798,
	0, 0, 0, 837, 893, 917, 792, 0, 927, 206,
	0, 825, 928, 285, 223, 0, 0, 788, 900, 804,
	872, 771, 841, 701, 824, 922, 746, 833, 923, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 696, 0, 828, 915, 736, 832, 783, 838,
	944, 671, 827, 0, 680, 691, 938, 907, 725, 726,
	728, 0, 0, 0, 0, 0, 0, 0, 786, 805,
	861, 769, 309, 843, 856, 874, 759, 253, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 822,
	0, 0, 0, 695, 682, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 782, 0, 0,
	0, 700, 669, 723, 864, 670, 668, 224, 692, 875,
	906, 770, 197, 936, 913, 768, 767, 849, 0, 886,
	752, 204, 1418, 130, 690, 1419, 747, 235, 860, 869,
	739, 133, 882, 717, 734, 164, 0, 263, 834, 308,
	748, 814, 262, 207, 301, 850, 914, 307, 753, 894,
	314, 318, 729, 794, 698, 282, 173, 170, 724, 0,
	679, 744, 252, 167, 200, 772, 840, 718, 160, 854,
	823, 888, 281, 298, 135, 221, 299, 317, 148, 293,
	222, 228, 157, 159, 158, 144, 276, 297, 153, 162,
	884, 868, 889, 712, 0, 0, 0, 0, 0, 760,
	749, 0, 0, 312, 766, 272, 271, 756, 192, 871,
	826, 676, 259, 844, 198, 137, 892, 320, 147, 202,
	294, 667, 182, 234, 166, 836, 242, 731, 132, 255,
	218, 219, 217, 220, 185, 735, 846, 867, 257, 274,
	296, 149, 288, 730, 732, 738, 863, 265, 883, 904,
	921, 212, 176, 179, 186, 193, 835, 261, 289, 313,
	0, 145, 138, 291, 306, 154, 273, 275, 319, 862,
	140, 911, 885, 816, 775, 781, 681, 0, 139, 858,
	722, 740, 711, 829, 0, 184, 848, 304, 305, 165,
	321, 693, 930, 141, 694, 929, 231, 0, 230, 933,
	300, 912, 817, 801, 0, 686, 910, 815, 800, 203,
	178, 188, 250, 209, 251, 189, 226, 225, 227, 210,
	803, 0, 677, 0, 286, 919, 946, 290, 151, 707,
	876, 295, 751, 256, 152, 183, 177, 249, 229, 146,
	191, 284, 201, 208, 853, 943, 241, 264, 155, 310,
	283, 174, 705, 706, 703, 0, 704, 807, 808, 924,
	925, 926, 866, 697, 0, 901, 902, 0, 0, 0,
	687, 0, 880, 908, 909, 842, 941, 758, 161, 678,
	683, 684, 685, 699, 789, 790, 813, 820, 897, 896,
	895, 898, 903, 934, 932, 935, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 847, 857, 812, 134, 142,
	205, 942, 258, 181, 666, 675, 702, 708, 709, 710,
	0, 714, 720, 0, 727, 737, 741, 742, 755, 762,
	763, 764, 765, 774, 776, 777, 778, 779, 780, 784,
	785, 787, 796, 797, 802, 810, 811, 819, 821, 0,
	852, 855, 865, 870, 873, 877, 879, 887, 890, 891,
	931, 940, 945, 311, 169, 791, 795, 818, 859, 143,
	150, 156, 168, 175, 180, 187, 190, 194, 195, 196,
	199, 211, 213, 214, 215, 216, 232, 233, 236, 237,
	239, 240, 243, 244, 245, 246, 247, 248, 254, 851,
	260, 266, 267, 268, 269, 270, 277, 278, 279, 280,
	287, 302, 303, 315, 316, 905, 0, 131, 0, 0,
	672, 0, 0, 0, 0, 0, 754, 136, 899, 937,
	830, 845, 916, 878, 292, 773, 920, 715, 750, 939,
	757, 761, 839, 688, 806, 238, 745, 689, 0, 719,
	673, 733, 674, 716, 172, 713, 881, 809, 918, 793,
	831, 0, 171, 163, 799, 798, 0, 0, 0, 837,
	893, 1717, 1721, 0, 927, 206, 0, 825, 928, 285,
	223, 0, 0, 788, 900, 804, 872, 771, 841, 701,
	824, 922, 746, 833, 923, 0, 0, 0, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 0,
	828, 915, 736, 832, 783, 838, 944, 671, 827, 0,
	680, 691, 938, 907, 725, 726, 728, 0, 0, 0,
	0, 0, 0, 0, 786, 805, 861, 769, 309, 843,
	856, 874, 759, 253, 743, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 822, 0, 0, 0, 695,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 782, 0, 0, 0, 700, 669, 723,
	864, 670, 668, 224, 692, 875, 906, 1720, 197, 936,
	913, 768, 767, 1714, 0, 1715, 1716, 204, 663, 130,
	690, 1712, 1719, 235, 860, 869, 739, 133, 882, 717,
	734, 164, 0, 263, 834, 308, 748, 814, 262, 207,
	301, 850, 914, 307, 753, 894, 314, 318, 729, 794,
	698, 282, 173, 170, 724, 0, 679, 744, 252, 167,
	200, 772, 840, 718, 160, 854, 823, 888, 281, 298,
	135, 221, 299, 317, 148, 293, 222, 228, 157, 159,
	158, 144, 276, 297, 153, 162, 884, 868, 889, 712,
	0, 0, 0, 0, 0, 760, 749, 0, 0, 312,
	766, 272, 271, 756, 192, 871, 826, 676, 259, 844,
	198, 137, 892, 320, 147, 202, 294, 667, 182, 234,
	166, 836, 242, 731, 132, 255, 218, 219, 217, 220,
	185, 735, 846, 867, 257, 274, 296, 149, 288, 730,
	732, 738, 863, 265, 883, 904, 921, 212, 176, 179,
	186, 193, 835, 261, 289, 313, 0, 145, 138, 291,
	306, 154, 273, 275, 319, 862, 140, 911, 885, 816,
	775, 781, 681, 0, 139, 858, 722, 740, 711, 829,
	0, 184, 848, 304, 305, 165, 321, 693, 930, 141,
	694, 929, 231, 0, 230, 933, 300, 912, 817, 801,
	0, 686, 910, 815, 800, 203, 178, 188, 250, 209,
	251, 189, 226, 225, 227, 210, 803, 0, 677, 0,
	286, 919, 946, 290, 151, 707, 876, 295, 751, 256,
	152, 183, 177, 249, 229, 146, 191, 284, 201, 208,
	853, 943, 241, 264, 155, 310, 283, 174, 705, 706,
	703, 0, 704, 807, 808, 924, 925, 926, 866, 697,
	0, 901, 902, 0, 0, 0, 687, 0, 880, 908,
	909, 842, 941, 758, 161, 678, 683, 684, 685, 699,
	789, 790, 813, 820, 897, 896, 895, 898, 903, 934,
	932, 935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 847, 857, 812, 134, 142, 205, 942, 258, 181,
	666, 675, 702, 708, 709, 710, 0, 714, 720, 0,
	727, 737, 741, 742, 755, 762, 763, 764, 765, 774,
	776, 777, 778, 779, 780, 784, 785, 787, 796, 797,
	802, 810, 811, 819, 821, 0, 852, 855, 865, 870,
	873, 877, 879, 887, 890, 891, 931, 940, 945, 311,
	169, 791, 795, 818, 859, 143, 150, 156, 168, 175,
	180, 187, 190, 194, 195, 196, 199, 211, 213, 214,
	215, 216, 232, 233, 236, 237, 239, 240, 243, 244,
	245, 246, 247, 248, 254, 851, 260, 266, 267, 268,
	269, 270, 277, 278, 279, 280, 287, 302, 303, 315,
	316, 905, 0, 131, 0, 0, 672, 0, 0, 0,
	0, 0, 754, 136, 899, 937, 830, 845, 916, 878,
	292, 773, 920, 715, 750, 939, 757, 761, 839, 688,
	806, 238, 745, 689, 0, 719, 673, 733, 674, 716,
	172, 713, 881, 809, 918, 793, 831, 0, 171, 163,
	799, 798, 0, 0, 0, 837, 893, 917, 792, 0,
	927, 206, 0, 825, 928, 285, 223, 0, 0, 788,
	900, 804, 872, 771, 841, 701, 824, 922, 746, 833,
	923, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 696, 0, 828, 915, 736, 832,
	783, 838, 944, 671, 827, 0, 680, 691, 938, 907,
	725, 726, 728, 0, 0, 0, 0, 0, 0, 0,
	786, 805, 861, 769, 309, 843, 856, 874, 759, 253,
	743, 0, 0, 0, 0, 0, 0, 0, 0, 721,
	0, 822, 0, 0, 0, 695, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 782,
	0, 0, 0, 700, 669, 723, 864, 670, 668, 224,
	692, 875, 906, 770, 197, 936, 913, 768, 767, 849,
	0, 886, 752, 204, 1418, 130, 690, 1419, 747, 235,
	860, 869, 739, 133, 882, 717, 734, 164, 0, 263,
	834, 308, 748, 814, 262, 207, 301, 850, 914, 307,
	753, 894, 314, 318, 729, 794, 698, 282, 173, 170,
	724, 0, 679, 744, 252, 167, 200, 772, 840, 718,
	160, 854, 823, 888, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 884, 868, 889, 712, 0, 0, 0, 0,
	0, 760, 749, 0, 0, 312, 766, 272, 271, 756,
	192, 871, 826, 676, 259, 844, 198, 137, 892, 320,
	147, 202, 294, 667, 182, 234, 166, 836, 242, 731,
	132, 255, 218, 219, 217, 220, 185, 735, 846, 867,
	257, 274, 296, 149, 288, 730, 732, 738, 863, 265,
	883, 904, 921, 212, 176, 179, 186, 193, 835, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 862, 140, 911, 885, 816, 775, 781, 681, 0,
	139, 858, 722, 740, 711, 829, 0, 184, 848, 304,
	305, 165, 321, 693, 930, 141, 694, 929, 231, 0,
	230, 933, 300, 912, 817, 801, 0, 686, 910, 815,
	800, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 803, 0, 677, 0, 286, 919, 946, 290,
	151, 707, 876, 295, 751, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 853, 943, 241, 264,
	155, 310, 283, 174, 705, 706, 703, 0, 704, 807,
	808, 924, 925, 926, 866, 697, 0, 901, 902, 0,
	0, 0, 687, 0, 880, 908, 909, 842, 941, 758,
	161, 678, 683, 684, 685, 699, 789, 790, 813, 820,
	897, 896, 895, 898, 903, 934, 932, 935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 847, 857, 812,
	134, 142, 205, 942, 258, 181, 666, 675, 702, 708,
	709, 710, 0, 714, 720, 0, 727, 737, 741, 742,
	755, 762, 763, 764, 765, 774, 776, 777, 778, 779,
	780, 784, 785, 787, 796, 797, 802, 810, 811, 819,
	821, 0, 852, 855, 865, 870, 873, 877, 879, 887,
	890, 891, 931, 940, 945, 311, 169, 791, 795, 818,
	859, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 851, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 905, 0, 131,
	0, 0, 672, 0, 0, 0, 0, 0, 754, 136,
	899, 937, 830, 845, 916, 878, 292, 773, 920, 715,
	750, 939, 757, 761, 839, 688, 806, 238, 745, 689,
	0, 719, 673, 733, 674, 716, 172, 713, 881, 809,
	918, 793, 831, 0, 171, 163, 799, 798, 0, 0,
	0, 837, 893, 917, 792, 0, 927, 206, 0, 825,
	928, 285, 223, 0, 0, 788, 900, 804, 872, 771,
	841, 701, 824, 922, 746, 833, 923, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	696, 0, 828, 915, 736, 832, 783, 838, 944, 671,
	827, 0, 680, 691, 938, 907, 725, 726, 728, 0,
	0, 0, 0, 0, 0, 0, 786, 805, 861, 769,
	309, 843, 856, 874, 759, 253, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 721, 0, 822, 0, 0,
	0, 695, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 782, 0, 0, 0, 700,
	669, 723, 864, 670, 668, 224, 692, 875, 906, 770,
	197, 936, 913, 768, 767, 849, 0, 886, 752, 204,
	663, 130, 690, 659, 747, 235, 860, 869, 739, 133,
	882, 717, 734, 164, 0, 263, 834, 308, 748, 814,
	262, 207, 301, 850, 914, 307, 753, 894, 314, 318,
	729, 794, 698, 282, 173, 170, 724, 0, 679, 744,
	252, 167, 200, 772, 840, 718, 160, 854, 823, 888,
	281, 298, 135, 221, 299, 317, 148, 293, 222, 228,
	157, 159, 158, 144, 276, 297, 153, 162, 884, 868,
	889, 712, 0, 0, 0, 0, 0, 760, 749, 0,
	0, 312, 766, 272, 271, 756, 192, 871, 826, 676,
	259, 844, 198, 137, 892, 320, 147, 202, 294, 667,
	182, 234, 166, 836, 242, 731, 132, 255, 218, 219,
	217, 220, 185, 735, 846, 867, 257, 274, 296, 149,
	288, 730, 732, 738, 863, 265, 883, 904, 921, 212,
	176, 179, 186, 193, 835, 261, 289, 313, 0, 145,
	138, 291, 306, 154, 273, 275, 319, 862, 140, 911,
	885, 816, 775, 781, 681, 0, 139, 858, 722, 740,
	711, 829, 0, 184, 848, 304, 305, 165, 321, 693,
	930, 141, 694, 929, 231, 0, 230, 933, 300, 912,
	817, 801, 0, 686, 910, 815, 800, 203, 178, 188,
	250, 209, 251, 189, 226, 225, 227, 210, 803, 0,
	677, 0, 286, 919, 946, 290, 151, 707, 876, 295,
	751, 256, 152, 183, 177, 249, 229, 146, 191, 284,
	201, 208, 853, 943, 241, 264, 155, 310, 283, 174,
	705, 706, 703, 0, 704, 807, 808, 924, 925, 926,
	866, 697, 0, 901, 902, 0, 0, 0, 687, 0,
	880, 908, 909, 842, 941, 758, 161, 678, 683, 684,
	685, 699, 789, 790, 813, 820, 897, 896, 895, 898,
	903, 934, 932, 935, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 857, 812, 134, 142, 205, 942,
	258, 181, 666, 675, 702, 708, 709, 710, 0, 714,
	720, 0, 727, 737, 741, 742, 755, 762, 763, 764,
	765, 774, 776, 777, 778, 779, 780, 784, 785, 787,
	796, 797, 802, 810, 811, 819, 821, 0, 852, 855,
	865, 870, 873, 877, 879, 887, 890, 891, 931, 940,
	945, 311, 169, 791, 795, 818, 859, 143, 150, 156,
	168, 175, 180, 187, 190, 194, 195, 196, 199, 211,
	213, 214, 215, 216, 232, 233, 236, 237, 239, 240,
	243, 244, 245, 246, 247, 248, 254, 851, 260, 266,
	267, 268, 269, 270, 277, 278, 279, 280, 287, 302,
	303, 315, 316, 905, 0, 131, 0, 0, 672, 292,
	0, 0, 0, 0, 754, 136, 899, 937, 830, 845,
	238, 0, 0, 0, 0, 0, 493, 0, 0, 172,
	490, 0, 0, 0, 0, 0, 0, 171, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	206, 0, 0, 468, 285, 223, 0, 0, 0, 0,
	589, 590, 0, 0, 0, 0, 0, 0, 1694, 0,
	81, 0, 0, 0, 491, 514, 513, 516, 517, 518,
	519, 0, 0, 473, 515, 520, 542, 543, 1695, 0,
	0, 0, 0, 488, 505, 0, 599, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 253, 440,
	0, 0, 0, 0, 502, 503, 0, 0, 0, 0,
	612, 0, 504, 0, 0, 500, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	591, 0, 0, 197, 472, 0, 0, 610, 0, 0,
	0, 0, 204, 0, 130, 0, 0, 0, 235, 0,
	0, 526, 133, 0, 0, 0, 164, 0, 263, 0,
	308, 527, 0, 262, 207, 301, 0, 0, 307, 0,
	459, 314, 318, 434, 0, 431, 282, 173, 170, 0,
	0, 0, 441, 252, 167, 200, 0, 0, 0, 160,
	0, 0, 0, 281, 298, 135, 221, 299, 317, 148,
	293, 222, 228, 157, 159, 158, 144, 276, 297, 153,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	445, 443, 0, 0, 312, 446, 272, 271, 0, 192,
	0, 451, 425, 259, 453, 198, 137, 0, 320, 147,
	202, 294, 423, 182, 234, 166, 0, 242, 0, 132,
	255, 218, 219, 217, 220, 185, 437, 455, 0, 257,
	274, 296, 149, 288, 435, 436, 438, 457, 265, 458,
	464, 0, 212, 176, 179, 186, 193, 0, 261, 289,
	313, 0, 145, 138, 291, 306, 154, 273, 275, 319,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 184, 0, 304, 305,
	165, 321, 0, 0, 141, 0, 0, 231, 0, 230,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 178, 188, 250, 209, 251, 189, 226, 225, 227,
	210, 0, 0, 426, 0, 286, 0, 0, 290, 151,
	0, 0, 295, 444, 256, 152, 183, 177, 249, 229,
	146, 191, 284, 201, 208, 0, 0, 241, 264, 155,
	310, 283, 174, 601, 611, 607, 609, 608, 605, 606,
	604, 603, 602, 613, 592, 593, 594, 595, 596, 0,
	0, 0, 598, 0, 536, 537, 0, 0, 0, 161,
	521, 522, 523, 524, 525, 528, 529, 530, 531, 534,
	533, 532, 535, 538, 540, 539, 541, 614, 615, 616,
	617, 618, 619, 620, 621, 624, 622, 623, 597, 134,
	142, 205, 0, 258, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 169, 0, 0, 0, 0,
	143, 150, 156, 168, 175, 180, 187, 190, 194, 195,
	196, 199, 211, 213, 214, 215, 216, 232, 233, 236,
	237, 239, 240, 243, 244, 245, 246, 247, 248, 254,
	456, 260, 266, 267, 268, 269, 270, 277, 278, 279,
	280, 287, 302, 303, 315, 316, 0, 0, 131, 0,
	0, 424, 36, 292, 0, 0, 0, 0, 136, 0,
	0, 452, 454, 0, 238, 0, 0, 0, 0, 0,
	493, 0, 0, 172, 490, 0, 0, 0, 0, 0,
	0, 171, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 206, 0, 0, 468, 285, 223,
	0, 0, 0, 0, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 491, 514,
	513, 516, 517, 518, 519, 0, 0, 473, 515, 520,
	542, 543, 0, 0, 0, 0, 0, 488, 505, 0,
	599, 0, 0, 0, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 253, 440, 0, 0, 0, 0, 502, 503,
	0, 0, 0, 0, 612, 0, 504, 0, 0, 500,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 591, 0, 0, 197, 472, 0,
	0, 610, 0, 0, 0, 0, 204, 0, 130, 0,
	0, 0, 235, 0, 0, 526, 133, 0, 0, 0,
	164, 0, 263, 0, 308, 527, 0, 262, 207, 301,
	0, 0, 307, 0, 459, 314, 318, 434, 0, 431,
	282, 173, 170, 0, 0, 0, 441, 252, 167, 200,
	0, 0, 0, 160, 0, 0, 0, 281, 298, 135,
	221, 299, 317, 148, 293, 222, 228, 157, 159, 158,
	144, 276, 297, 153, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 445, 443, 0, 0, 312, 446,
	272, 271, 0, 192, 0, 451, 425, 259, 453, 198,
	137, 0, 320, 147, 202, 294, 423, 182, 234, 166,
	0, 242, 0, 132, 255, 218, 219, 217, 220, 185,
	437, 455, 0, 257, 274, 296, 149, 288, 435, 436,
	438, 457, 265, 458, 464, 0, 212, 176, 179, 186,
	193, 0, 261, 289, 313, 0, 145, 138, 291, 306,
	154, 273, 275, 319, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	184, 0, 304, 305, 165, 321, 0, 0, 141, 0,
	0, 231, 0, 230, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 178, 188, 250, 209, 251,
	189, 226, 225, 227, 210, 0, 0, 426, 0, 286,
	0, 0, 290, 151, 0, 0, 295, 444, 256, 152,
	183, 177, 249, 229, 146, 191, 284, 201, 208, 0,
	0, 241, 264, 155, 310, 283, 174, 601, 611, 607,
	609, 608, 605, 606, 604, 603, 602, 613, 592, 593,
	594, 595, 596, 0, 0, 0, 598, 0, 536, 537,
	0, 0, 0, 161, 521, 522, 523, 524, 525, 528,
	529, 530, 531, 534, 533, 532, 535, 538, 540, 539,
	541, 614, 615, 616, 617, 618, 619, 620, 621, 624,
	622, 623, 597, 134, 142, 205, 79, 258, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 169,
	0, 0, 0, 0, 143, 150, 156, 168, 175, 180,
	187, 190, 194, 195, 196, 199, 211, 213, 214, 215,
	216, 232, 233, 236, 237, 239, 240, 243, 244, 245,
	246, 247, 248, 254, 456, 260, 266, 267, 268, 269,
	270, 277, 278, 279, 280, 287, 302, 303, 315, 316,
	292, 0, 131, 0, 0, 424, 0, 0, 0, 0,
	0, 238, 136, 0, 0, 452, 454, 493, 0, 0,
	172, 490, 0, 0, 0, 0, 0, 0, 171, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 206, 0, 0, 468, 285, 223, 0, 0, 0,
	0, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 491, 514, 513, 516, 517,
	518, 519, 0, 0, 473, 515, 520, 542, 543, 0,
	0, 0, 0, 0, 488, 505, 0, 599, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 253,
	440, 0, 0, 0, 0, 502, 503, 484, 0, 0,
	0, 612, 0, 504, 0, 0, 500, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 591, 0, 0, 197, 472, 0, 0, 610, 0,
	0, 0, 0, 204, 0, 130, 0, 0, 0, 235,
	0, 0, 526, 133, 0, 0, 0, 164, 0, 263,
	0, 308, 527, 0, 262, 207, 301, 0, 0, 307,
	0, 459, 314, 318, 434, 0, 431, 282, 173, 170,
	0, 0, 0, 441, 252, 167, 200, 0, 0, 0,
	160, 0, 0, 0, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 445, 443, 0, 0, 312, 446, 272, 271, 0,
	192, 0, 451, 425, 259, 453, 198, 137, 0, 320,
	147, 202, 294, 423, 182, 234, 166, 0, 242, 0,
	132, 255, 218, 219, 217, 220, 185, 437, 455, 0,
	257, 274, 296, 149, 288, 435, 436, 438, 457, 265,
	458, 464, 0, 212, 176, 179, 186, 193, 0, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 184, 0, 304,
	305, 165, 321, 0, 0, 141, 0, 0, 231, 0,
	230, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 0, 0, 426, 0, 286, 0, 0, 290,
	151, 0, 0, 295, 444, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 0, 0, 241, 264,
	155, 310, 283, 174, 601, 611, 607, 609, 608, 605,
	606, 604, 603, 602, 613, 592, 593, 594, 595, 596,
	0, 0, 0, 598, 0, 536, 537, 0, 0, 0,
	161, 521, 522, 523, 524, 525, 528, 529, 530, 531,
	534, 533, 532, 535, 538, 540, 539, 541, 614, 615,
	616, 617, 618, 619, 620, 621, 624, 622, 623, 597,
	134, 142, 205, 0, 258, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 169, 0, 0, 0,
	0, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 456, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 292, 0, 131,
	0, 0, 424, 0, 0, 0, 0, 0, 238, 136,
	0, 0, 452, 454, 493, 0, 0, 172, 490, 0,
	0, 0, 0, 0, 0, 171, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 206, 0,
	0, 468, 285, 223, 0, 0, 0, 0, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	1128, 0, 491, 514, 513, 516, 517, 518, 519, 0,
	0, 473, 515, 520, 542, 543, 0, 0, 0, 0,
	0, 488, 505, 0, 599, 0, 0, 0, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 253, 440, 0, 0,
	0, 0, 502, 503, 0, 0, 0, 0, 612, 0,
	504, 0, 0, 500, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 506, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 591, 0,
	0, 197, 472, 0, 0, 610, 0, 0, 0, 0,
	204, 0, 130, 0, 0, 0, 235, 0, 0, 526,
	133, 0, 0, 0, 164, 0, 263, 0, 308, 527,
	0, 262, 207, 301, 0, 0, 307, 0, 459, 314,
	318, 434, 0, 431, 282, 173, 170, 0, 0, 0,
	441, 252, 167, 200, 0, 0, 0, 160, 0, 0,
	0, 281, 298, 135, 221, 299, 317, 148, 293, 222,
	228, 157, 159, 158, 144, 276, 297, 153, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 445, 443,
	0, 0, 312, 446, 272, 271, 0, 192, 0, 451,
	425, 259, 453, 198, 137, 0, 320, 147, 202, 294,
	423, 182, 234, 166, 0, 242, 0, 132, 255, 218,
	219, 217, 220, 185, 437, 455, 0, 257, 274, 296,
	149, 288, 435, 436, 438, 457, 265, 458, 464, 0,
	212, 176, 179, 186, 193, 0, 261, 289, 313, 0,
	145, 138, 291, 306, 154, 273, 275, 319, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 184, 0, 304, 305, 165, 321,
	0, 0, 141, 0, 0, 231, 0, 230, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 178,
	188, 250, 209, 251, 189, 226, 225, 227, 210, 0,
	0, 426, 0, 286, 0, 0, 290, 151, 0, 0,
	295, 444, 256, 152, 183, 177, 249, 229, 146, 191,
	284, 201, 208, 0, 0, 241, 264, 155, 310, 283,
	174, 601, 611, 607, 609, 608, 605, 606, 604, 603,
	602, 613, 592, 593, 594, 595, 596, 0, 0, 0,
	598, 0, 536, 537, 0, 0, 0, 161, 521, 522,
	523, 524, 525, 528, 529, 530, 531, 534, 533, 532,
	535, 538, 540, 539, 541, 614, 615, 616, 617, 618,
	619, 620, 621, 624, 622, 623, 597, 134, 142, 205,
	0, 258, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 169, 0, 0, 0, 0, 143, 150,
	156, 168, 175, 180, 187, 190, 194, 195, 196, 199,
	211, 213, 214, 215, 216, 232, 233, 236, 237, 239,
	240, 243, 244, 245, 246, 247, 248, 254, 456, 260,
	266, 267, 268, 269, 270, 277, 278, 279, 280, 287,
	302, 303, 315, 316, 292, 0, 131, 0, 0, 424,
	0, 0, 0, 0, 0, 238, 136, 0, 0, 452,
	454, 493, 0, 0, 172, 490, 0, 0, 0, 0,
	0, 0, 171, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 206, 0, 0, 468, 285,
	223, 0, 0, 0, 0, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 491,
	514, 513, 516, 517, 518, 519, 0, 0, 473, 515,
	520, 542, 543, 0, 0, 0, 0, 0, 488, 505,
	0, 599, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	0, 0, 0, 253, 440, 0, 0, 0, 0, 502,
	503, 1581, 0, 0, 0, 612, 0, 504, 0, 0,
	500, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 591, 0, 0, 197, 472,
	0, 0, 610, 0, 0, 0, 0, 204, 0, 130,
	0, 0, 0, 235, 0, 0, 526, 133, 0, 0,
	0, 164, 0, 263, 0, 308, 527, 0, 262, 207,
	301, 0, 0, 307, 0, 459, 314, 318, 434, 0,
	431, 282, 173, 170, 0, 0, 0, 441, 252, 167,
	200, 0, 0, 0, 160, 0, 0, 0, 281, 298,
	135, 221, 299, 317, 148, 293, 222, 228, 157, 159,
	158, 144, 276, 297, 153, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 445, 443, 0, 0, 312,
	446, 272, 271, 0, 192, 0, 451, 425, 259, 453,
	198, 137, 0, 320, 147, 202, 294, 423, 182, 234,
	166, 0, 242, 0, 132, 255, 218, 219, 217, 220,
	185, 437, 455, 0, 257, 274, 296, 149, 288, 435,
	436, 438, 457, 265, 458, 464, 0, 212, 176, 179,
	186, 193, 0, 261, 289, 313, 0, 145, 138, 291,
	306, 154, 273, 275, 319, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 0, 0, 0, 0,
	0, 184, 0, 304, 305, 165, 321, 0, 0, 141,
	0, 0, 231, 0, 230, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 178, 188, 250, 209,
	251, 189, 226, 225, 227, 210, 0, 0, 426, 0,
	286, 0, 0, 290, 151, 0, 0, 295, 444, 256,
	152, 183, 177, 249, 229, 146, 191, 284, 201, 208,
	0, 0, 241, 264, 155, 310, 283, 174, 601, 611,
	607, 609, 608, 605, 606, 604, 603, 602, 613, 592,
	593, 594, 595, 596, 0, 0, 0, 598, 0, 536,
	537, 0, 0, 0, 161, 521, 522, 523, 524, 525,
	528, 529, 530, 531, 534, 533, 532, 535, 538, 540,
	539, 541, 614, 615, 616, 617, 618, 619, 620, 621,
	624, 622, 623, 597, 134, 142, 205, 0, 258, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	169, 0, 0, 0, 0, 143, 150, 156, 168, 175,
	180, 187, 190, 194, 195, 196, 199, 211, 213, 214,
	215, 216, 232, 233, 236, 237, 239, 240, 243, 244,
	245, 246, 247, 248, 254, 456, 260, 266, 267, 268,
	269, 270, 277, 278, 279, 280, 287, 302, 303, 315,
	316, 292, 0, 131, 0, 0, 424, 0, 0, 0,
	0, 0, 238, 136, 0, 0, 452, 454, 493, 0,
	0, 172, 490, 0, 0, 0, 0, 0, 0, 171,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 206, 0, 0, 468, 285, 223, 0, 0,
	0, 0, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 491, 514, 1617, 516,
	517, 518, 519, 0, 0, 473, 515, 520, 542, 543,
	0, 0, 0, 0, 0, 488, 505, 0, 599, 0,
	0, 0, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	253, 440, 0, 0, 0, 0, 502, 503, 1581, 0,
	0, 0, 612, 0, 504, 0, 0, 500, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 591, 0, 0, 197, 472, 0, 0, 610,
	0, 0, 0, 0, 204, 0, 130, 0, 0, 0,
	235, 0, 0, 526, 133, 0, 0, 0, 164, 0,
	263, 0, 308, 527, 0, 262, 207, 301, 0, 0,
	307, 0, 459, 314, 318, 434, 0, 431, 282, 173,
	170, 0, 0, 0, 441, 252, 167, 200, 0, 0,
	0, 160, 0, 0, 0, 281, 298, 135, 221, 299,
	317, 148, 293, 222, 228, 157, 159, 158, 144, 276,
	297, 153, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 445, 443, 0, 0, 312, 446, 272, 271,
	0, 192, 0, 451, 425, 259, 453, 198, 137, 0,
	320, 147, 202, 294, 423, 182, 234, 166, 0, 242,
	0, 132, 255, 218, 219, 217, 220, 185, 437, 455,
	0, 257, 274, 296, 149, 288, 435, 436, 438, 457,
	265, 458, 464, 0, 212, 176, 179, 186, 193, 0,
	261, 289, 313, 0, 145, 138, 291, 306, 154, 273,
	275, 319, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 184, 0,
	304, 305, 165, 321, 0, 0, 141, 0, 0, 231,
	0, 230, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 178, 188, 250, 209, 251, 189, 226,
	225, 227, 210, 0, 0, 426, 0, 286, 0, 0,
	290, 151, 0, 0, 295, 444, 256, 152, 183, 177,
	249, 229, 146, 191, 284, 201, 208, 0, 0, 241,
	264, 155, 310, 283, 174, 601, 611, 607, 609, 608,
	605, 606, 604, 603, 602, 613, 592, 593, 594, 595,
	596, 0, 0, 0, 598, 0, 536, 537, 0, 0,
	0, 161, 521, 522, 523, 524, 525, 528, 529, 530,
	531, 534, 533, 532, 535, 538, 540, 539, 541, 614,
	615, 616, 617, 618, 619, 620, 621, 624, 622, 623,
	597, 134, 142, 205, 0, 258, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 169, 0, 0,
	0, 0, 143, 150, 156, 168, 175, 180, 187, 190,
	194, 195, 196, 199, 211, 213, 214, 215, 216, 232,
	233, 236, 237, 239, 240, 243, 244, 245, 246, 247,
	248, 254, 456, 260, 266, 267, 268, 269, 270, 277,
	278, 279, 280, 287, 302, 303, 315, 316, 292, 0,
	131, 0, 0, 424, 0, 0, 0, 0, 0, 238,
	136, 0, 0, 452, 454, 493, 0, 0, 172, 490,
	0, 0, 0, 0, 0, 0, 171, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 206,
	0, 0, 468, 285, 223, 0, 0, 0, 0, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 491, 514, 1614, 516, 517, 518, 519,
	0, 0, 473, 515, 520, 542, 543, 0, 0, 0,
	0, 0, 488, 505, 0, 599, 0, 0, 0, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 253, 440, 0,
	0, 0, 0, 502, 503, 1581, 0, 0, 0, 612,
	0, 504, 0, 0, 500, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 591,
	0, 0, 197, 472, 0, 0, 610, 0, 0, 0,
	0, 204, 0, 130, 0, 0, 0, 235, 0, 0,
	526, 133, 0, 0, 0, 164, 0, 263, 0, 308,
	527, 0, 262, 207, 301, 0, 0, 307, 0, 459,
	314, 318, 434, 0, 431, 282, 173, 170, 0, 0,
	0, 441, 252, 167, 200, 0, 0, 0, 160, 0,
	0, 0, 281, 298, 135, 221, 299, 317, 148, 293,
	222, 228, 157, 159, 158, 144, 276, 297, 153, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 445,
	443, 0, 0, 312, 446, 272, 271, 0, 192, 0,
	451, 425, 259, 453, 198, 137, 0, 320, 147, 202,
	294, 423, 182, 234, 166, 0, 242, 0, 132, 255,
	218, 219, 217, 220, 185, 437, 455, 0, 257, 274,
	296, 149, 288, 435, 436, 438, 457, 265, 458, 464,
	0, 212, 176, 179, 186, 193, 0, 261, 289, 313,
	0, 145, 138, 291, 306, 154, 273, 275, 319, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 184, 0, 304, 305, 165,
	321, 0, 0, 141, 0, 0, 231, 0, 230, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	178, 188, 250, 209, 251, 189, 226, 225, 227, 210,
	0, 0, 426, 0, 286, 0, 0, 290, 151, 0,
	0, 295, 444, 256, 152, 183, 177, 249, 229, 146,
	191, 284, 201, 208, 0, 0, 241, 264, 155, 310,
	283, 174, 601, 611, 607, 609, 608, 605, 606, 604,
	603, 602, 613, 592, 593, 594, 595, 596, 0, 0,
	0, 598, 0, 536, 537, 0, 0, 0, 161, 521,
	522, 523, 524, 525, 528, 529, 530, 531, 534, 533,
	532, 535, 538, 540, 539, 541, 614, 615, 616, 617,
	618, 619, 620, 621, 624, 622, 623, 597, 134, 142,
	205, 0, 258, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 169, 0, 0, 0, 0, 143,
	150, 156, 168, 175, 180, 187, 190, 194, 195, 196,
	199, 211, 213, 214, 215, 216, 232, 233, 236, 237,
	239, 240, 243, 244, 245, 246, 247, 248, 254, 456,
	260, 266, 267, 268, 269, 270, 277, 278, 279, 280,
	287, 302, 303, 315, 316, 292, 0, 131, 0, 0,
	424, 0, 0, 0, 0, 0, 238, 136, 0, 0,
	452, 454, 493, 0, 0, 172, 490, 0, 0, 0,
	0, 0, 0, 171, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 600, 206, 0, 0, 468,
	285, 223, 0, 0, 0, 0, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 1459, 0,
	491, 514, 513, 516, 517, 518, 519, 0, 0, 473,
	515, 520, 542, 543, 0, 0, 0, 0, 0, 488,
	505, 0, 599, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 253, 440, 0, 0, 0, 0,
	502, 503, 0, 0, 0, 0, 612, 0, 504, 0,
	0, 500, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 591, 0, 0, 197,
	472, 0, 0, 610, 0, 0, 0, 0, 204, 0,
	130, 0, 0, 0, 235, 0, 0, 526, 133, 0,
	0, 0, 164, 0, 263, 0, 308, 527, 0, 262,
	207, 301, 0, 0, 307, 0, 459, 314, 318, 434,
	0, 431, 282, 173, 170, 0, 0, 0, 441, 252,
	167, 200, 0, 0, 0, 160, 0, 0, 0, 281,
	298, 135, 221, 299, 317, 148, 293, 222, 228, 157,
	159, 158, 144, 276, 297, 153, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 445, 443, 0, 0,
	312, 446, 272, 271, 0, 192, 0, 451, 425, 259,
	453, 198, 137, 0, 320, 147, 202, 294, 423, 182,
	234, 166, 0, 242, 0, 132, 255, 218, 219, 217,
	220, 185, 437, 455, 0, 257, 274, 296, 149, 288,
	435, 436, 438, 457, 265, 458, 464, 0, 212, 176,
	179, 186, 193, 0, 261, 289, 313, 0, 145, 138,
	291, 306, 154, 273, 275, 319, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 184, 0, 304, 305, 165, 321, 0, 0,
	141, 0, 0, 231, 0, 230, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 178, 188, 250,
	209, 251, 189, 226, 225, 227, 210, 0, 0, 426,
	0, 286, 0, 0, 290, 151, 0, 0, 295, 444,
	256, 152, 183, 177, 249, 229, 146, 191, 284, 201,
	208, 0, 0, 241, 264, 155, 310, 283, 174, 601,
	611, 607, 609, 608, 605, 606, 604, 603, 602, 613,
	592, 593, 594, 595, 596, 0, 0, 0, 598, 0,
	536, 537, 0, 0, 0, 161, 521, 522, 523, 524,
	525, 528, 529, 530, 531, 534, 533, 532, 535, 538,
	540, 539, 541, 614, 615, 616, 617, 618, 619, 620,
	621, 624, 622, 623, 597, 134, 142, 205, 0, 258,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 169, 0, 0, 0, 0, 143, 150, 156, 168,
	175, 180, 187, 190, 194, 195, 196, 199, 211, 213,
	214, 215, 216, 232, 233, 236, 237, 239, 240, 243,
	244, 245, 246, 247, 248, 254, 456, 260, 266, 267,
	268, 269, 270, 277, 278, 279, 280, 287, 302, 303,
	315, 316, 292, 0, 131, 0, 0, 424, 0, 0,
	0, 0, 0, 238, 136, 0, 0, 452, 454, 493,
	0, 0, 172, 490, 0, 0, 0, 0, 0, 0,
	171, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 206, 0, 0, 468, 285, 223, 0,
	0, 0, 0, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 491, 514, 513,
	516, 517, 518, 519, 0, 0, 473, 515, 520, 542,
	543, 0, 0, 0, 0, 0, 488, 505, 0, 599,
	0, 0, 0, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 253, 440, 0, 0, 0, 0, 502, 503, 0,
	0, 0, 0, 612, 0, 504, 0, 0, 500, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 591, 0, 0, 197, 472, 0, 0,
	610, 0, 0, 0, 0, 204, 0, 130, 0, 0,
	0, 235, 0, 0, 526, 133, 0, 0, 0, 164,
	0, 263, 0, 308, 527, 0, 262, 207, 301, 0,
	0, 307, 0, 459, 314, 318, 434, 0, 431, 282,
	173, 170, 0, 0, 0, 441, 252, 167, 200, 0,
	0, 0, 160, 0, 0, 0, 281, 298, 135, 221,
	299, 317, 148, 293, 222, 228, 157, 159, 158, 144,
	276, 297, 153, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 445, 443, 0, 0, 312, 446, 272,
	271, 0, 192, 0, 451, 425, 259, 453, 198, 137,
	0, 320, 147, 202, 294, 423, 182, 234, 166, 0,
	242, 0, 132, 255, 218, 219, 217, 220, 185, 437,
	455, 0, 257, 274, 296, 149, 288, 435, 436, 438,
	457, 265, 458, 464, 0, 212, 176, 179, 186, 193,
	0, 261, 289, 313, 0, 145, 138, 291, 306, 154,
	273, 275, 319, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 184,
	0, 304, 305, 165, 321, 0, 0, 141, 0, 0,
	231, 0, 230, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 178, 188, 250, 209, 251, 189,
	226, 225, 227, 210, 0, 0, 426, 0, 286, 0,
	0, 290, 151, 0, 0, 295, 444, 256, 152, 183,
	177, 249, 229, 146, 191, 284, 201, 208, 0, 0,
	241, 264, 155, 310, 283, 174, 601, 611, 607, 609,
	608, 605, 606, 604, 603, 602, 613, 592, 593, 594,
	595, 596, 0, 0, 0, 598, 0, 536, 537, 0,
	0, 0, 161, 521, 522, 523, 524, 525, 528, 529,
	530, 531, 534, 533, 532, 535, 538, 540, 539, 541,
	614, 615, 616, 617, 618, 619, 620, 621, 624, 622,
	623, 597, 134, 142, 205, 0, 258, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 169, 0,
	0, 0, 0, 143, 150, 156, 168, 175, 180, 187,
	190, 194, 195, 196, 199, 211, 213, 214, 215, 216,
	232, 233, 236, 237, 239, 240, 243, 244, 245, 246,
	247, 248, 254, 456, 260, 266, 267, 268, 269, 270,
	277, 278, 279, 280, 287, 302, 303, 315, 316, 292,
	0, 131, 0, 0, 424, 0, 0, 0, 0, 0,
	238, 136, 0, 0, 452, 454, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 171, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 600,
	206, 0, 0, 468, 285, 223, 0, 0, 0, 0,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 491, 514, 513, 516, 517, 518,
	519, 0, 0, 473, 515, 520, 542, 543, 0, 0,
	0, 0, 0, 0, 505, 0, 599, 0, 0, 0,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 253, 440,
	0, 0, 0, 0, 502, 503, 0, 0, 0, 0,
	612, 0, 504, 0, 0, 500, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	591, 0, 0, 197, 472, 0, 0, 610, 0, 0,
	0, 0, 204, 0, 130, 0, 0, 0, 235, 0,
	0, 526, 133, 0, 0, 0, 164, 0, 263, 0,
	308, 527, 0, 262, 207, 301, 0, 0, 307, 0,
	459, 314, 318, 434, 0, 431, 282, 173, 170, 0,
	0, 0, 441, 252, 167, 200, 0, 0, 0, 160,
	0, 0, 0, 281, 298, 135, 221, 299, 317, 148,
	293, 222, 228, 157, 159, 158, 144, 276, 297, 153,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	445, 443, 0, 0, 312, 446, 272, 271, 0, 192,
	0, 451, 425, 259, 453, 198, 137, 0, 320, 147,
	202, 294, 423, 182, 234, 166, 0, 242, 0, 132,
	255, 218, 219, 217, 220, 185, 437, 455, 0, 257,
	274, 296, 149, 288, 435, 436, 438, 457, 265, 458,
	464, 0, 212, 176, 179, 186, 193, 0, 261, 289,
	313, 0, 145, 138, 291, 306, 154, 273, 275, 319,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 184, 0, 304, 305,
	165, 321, 0, 0, 141, 0, 0, 231, 0, 230,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 178, 188, 250, 209, 251, 189, 226, 225, 227,
	210, 0, 0, 426, 0, 286, 0, 0, 290, 151,
	0, 0, 295, 444, 256, 152, 183, 177, 249, 229,
	146, 191, 284, 201, 208, 0, 0, 241, 264, 155,
	310, 283, 174, 601, 611, 607, 609, 608, 605, 606,
	604, 603, 602, 613, 592, 593, 594, 595, 596, 1620,
	1621, 1622, 598, 0, 536, 537, 0, 0, 0, 161,
	521, 522, 523, 524, 525, 528, 529, 530, 531, 534,
	533, 532, 535, 538, 540, 539, 541, 614, 615, 616,
	617, 618, 619, 620, 621, 624, 622, 623, 597, 134,
	142, 205, 0, 258, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 169, 0, 0, 0, 0,
	143, 150, 156, 168, 175, 180, 187, 190, 194, 195,
	196, 199, 211, 213, 214, 215, 216, 232, 233, 236,
	237, 239, 240, 243, 244, 245, 246, 247, 248, 254,
	456, 260, 266, 267, 268, 269, 270, 277, 278, 279,
	280, 287, 302, 303, 315, 316, 292, 0, 131, 0,
	0, 424, 0, 0, 0, 0, 0, 238, 136, 0,
	0, 452, 454, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 171, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 206, 0, 0,
	468, 285, 223, 0, 0, 0, 0, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 491, 514, 513, 516, 517, 518, 519, 0, 0,
	473, 515, 520, 542, 543, 0, 0, 0, 0, 0,
	0, 505, 0, 599, 0, 0, 0, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 253, 440, 0, 0, 0,
	0, 502, 503, 0, 0, 0, 0, 612, 0, 504,
	0, 0, 500, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 591, 0, 0,
	197, 472, 0, 0, 610, 0, 0, 0, 0, 204,
	0, 130, 0, 0, 0, 235, 0, 0, 526, 133,
	0, 0, 0, 164, 0, 263, 0, 308, 527, 3005,
	262, 207, 301, 0, 0, 307, 0, 459, 314, 318,
	434, 0, 431, 282, 173, 170, 0, 0, 0, 441,
	252, 167, 200, 0, 0, 0, 160, 0, 0, 0,
	281, 298, 135, 221, 299, 317, 148, 293, 222, 228,
	157, 159, 158, 144, 276, 297, 153, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 445, 443, 0,
	0, 312, 446, 272, 271, 0, 192, 0, 451, 425,
	259, 453, 198, 137, 0, 320, 147, 202, 294, 423,
	182, 234, 166, 0, 242, 0, 132, 255, 218, 219,
	217, 220, 185, 437, 455, 0, 257, 274, 296, 149,
	288, 435, 436, 438, 457, 265, 458, 464, 0, 212,
	176, 179, 186, 193, 0, 261, 289, 313, 0, 145,
	138, 291, 306, 154, 273, 275, 319, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 184, 0, 304, 305, 165, 321, 0,
	0, 141, 0, 0, 231, 0, 230, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 178, 188,
	250, 209, 251, 189, 226, 225, 227, 210, 0, 0,
	426, 0, 286, 0, 0, 290, 151, 0, 0, 295,
	444, 256, 152, 183, 177, 249, 229, 146, 191, 284,
	201, 208, 0, 0, 241, 264, 155, 310, 283, 174,
	601, 611, 607, 609, 608, 605, 606, 604, 603, 602,
	613, 592, 593, 594, 595, 596, 0, 0, 0, 598,
	0, 536, 537, 0, 0, 0, 161, 521, 522, 523,
	524, 525, 528, 529, 530, 531, 534, 533, 532, 535,
	538, 540, 539, 541, 614, 615, 616, 617, 618, 619,
	620, 621, 624, 622, 623, 597, 134, 142, 205, 0,
	258, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 169, 0, 0, 0, 0, 143, 150, 156,
	168, 175, 180, 187, 190, 194, 195, 196, 199, 211,
	213, 214, 215, 216, 232, 233, 236, 237, 239, 240,
	243, 244, 245, 246, 247, 248, 254, 456, 260, 266,
	267, 268, 269, 270, 277, 278, 279, 280, 287, 302,
	303, 315, 316, 292, 0, 131, 0, 0, 424, 0,
	0, 0, 0, 0, 238, 136, 0, 0, 452, 454,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 171, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 206, 0, 0, 468, 285, 223,
	0, 0, 0, 0, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 1128, 0, 491, 514,
	513, 516, 517, 518, 519, 0, 0, 473, 515, 520,
	542, 543, 0, 0, 0, 0, 0, 0, 505, 0,
	599, 0, 0, 0, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 253, 440, 0, 0, 0, 0, 502, 503,
	0, 0, 0, 0, 612, 0, 504, 0, 0, 500,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 591, 0, 0, 197, 472, 0,
	0, 610, 0, 0, 0, 0, 204, 0, 130, 0,
	0, 0, 235, 0, 0, 526, 133, 0, 0, 0,
	164, 0, 263, 0, 308, 527, 0, 262, 207, 301,
	0, 0, 307, 0, 459, 314, 318, 434, 0, 431,
	282, 173, 170, 0, 0, 0, 441, 252, 167, 200,
	0, 0, 0, 160, 0, 0, 0, 281, 298, 135,
	221, 299, 317, 148, 293, 222, 228, 157, 159, 158,
	144, 276, 297, 153, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 445, 443, 0, 0, 312, 446,
	272, 271, 0, 192, 0, 451, 425, 259, 453, 198,
	137, 0, 320, 147, 202, 294, 423, 182, 234, 166,
	0, 242, 0, 132, 255, 218, 219, 217, 220, 185,
	437, 455, 0, 257, 274, 296, 149, 288, 435, 436,
	438, 457, 265, 458, 464, 0, 212, 176, 179, 186,
	193, 0, 261, 289, 313, 0, 145, 138, 291, 306,
	154, 273, 275, 319, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	184, 0, 304, 305, 165, 321, 0, 0, 141, 0,
	0, 231, 0, 230, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 178, 188, 250, 209, 251,
	189, 226, 225, 227, 210, 0, 0, 426, 0, 286,
	0, 0, 290, 151, 0, 0, 295, 444, 256, 152,
	183, 177, 249, 229, 146, 191, 284, 201, 208, 0,
	0, 241, 264, 155, 310, 283, 174, 601, 611, 607,
	609, 608, 605, 606, 604, 603, 602, 613, 592, 593,
	594, 595, 596, 0, 0, 0, 598, 0, 536, 537,
	0, 0, 0, 161, 521, 522, 523, 524, 525, 528,
	529, 530, 531, 534, 533, 532, 535, 538, 540, 539,
	541, 614, 615, 616, 617, 618, 619, 620, 621, 624,
	622, 623, 597, 134, 142, 205, 0, 258, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 169,
	0, 0, 0, 0, 143, 150, 156, 168, 175, 180,
	187, 190, 194, 195, 196, 199, 211, 213, 214, 215,
	216, 232, 233, 236, 237, 239, 240, 243, 244, 245,
	246, 247, 248, 254, 456, 260, 266, 267, 268, 269,
	270, 277, 278, 279, 280, 287, 302, 303, 315, 316,
	292, 0, 131, 0, 0, 424, 0, 0, 0, 0,
	0, 238, 136, 0, 0, 452, 454, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 171, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 206, 0, 0, 468, 285, 223, 0, 0, 0,
	0, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 491, 514, 513, 516, 517,
	518, 519, 0, 0, 473, 515, 520, 542, 543, 0,
	0, 0, 0, 0, 0, 505, 0, 599, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 253,
	440, 0, 0, 0, 0, 502, 503, 0, 0, 0,
	0, 612, 0, 504, 0, 0, 500, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 591, 0, 0, 197, 472, 0, 0, 610, 0,
	0, 0, 0, 204, 0, 130, 0, 0, 0, 235,
	0, 0, 526, 133, 0, 0, 0, 164, 0, 263,
	0, 308, 527, 0, 262, 207, 301, 0, 0, 307,
	0, 459, 314, 318, 434, 0, 431, 282, 173, 170,
	0, 0, 0, 441, 252, 167, 200, 0, 0, 0,
	160, 0, 0, 0, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 445, 443, 0, 0, 312, 446, 272, 271, 0,
	192, 0, 451, 425, 259, 453, 198, 137, 0, 320,
	147, 202, 294, 423, 182, 234, 166, 0, 242, 0,
	132, 255, 218, 219, 217, 220, 185, 437, 455, 0,
	257, 274, 296, 149, 288, 435, 436, 438, 457, 265,
	458, 464, 0, 212, 176, 179, 186, 193, 0, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 184, 0, 304,
	305, 165, 321, 0, 0, 141, 0, 0, 231, 0,
	230, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 0, 0, 426, 0, 286, 0, 0, 290,
	151, 0, 0, 295, 444, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 0, 0, 241, 264,
	155, 310, 283, 174, 601, 611, 607, 609, 608, 605,
	606, 604, 603, 602, 613, 592, 593, 594, 595, 596,
	0, 0, 0, 598, 0, 536, 537, 0, 0, 0,
	161, 521, 522, 523, 524, 525, 528, 529, 530, 531,
	534, 533, 532, 535, 538, 540, 539, 541, 614, 615,
	616, 617, 618, 619, 620, 621, 624, 622, 623, 597,
	134, 142, 205, 0, 258, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 169, 0, 0, 0,
	0, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 456, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 0, 0, 131,
	292, 0, 424, 0, 0, 0, 0, 0, 0, 136,
	0, 238, 452, 454, 0, 0, 1671, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 171, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 468, 285, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 1675, 0,
	0, 0, 0, 0, 0, 128, 0, 422, 0, 0,
	0, 0, 0, 0, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 1669, 0, 0, 0, 253,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 197, 472, 0, 1674, 0, 0,
	0, 0, 0, 204, 0, 130, 0, 0, 0, 235,
	0, 0, 439, 133, 0, 0, 0, 164, 0, 263,
	0, 308, 442, 0, 262, 207, 301, 0, 0, 307,
	0, 459, 314, 318, 434, 0, 431, 282, 173, 170,
	0, 0, 0, 441, 252, 167, 200, 0, 0, 0,
	160, 0, 0, 0, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 445, 443, 0, 0, 312, 446, 272, 271, 0,
	192, 0, 451, 425, 259, 453, 198, 137, 0, 320,
	147, 202, 294, 423, 182, 234, 166, 0, 242, 0,
	132, 255, 218, 219, 217, 220, 185, 437, 455, 0,
	257, 274, 296, 149, 288, 435, 436, 438, 457, 265,
	458, 464, 0, 212, 176, 179, 186, 193, 0, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 184, 0, 304,
	305, 165, 321, 0, 0, 141, 0, 0, 231, 0,
	230, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 0, 0, 426, 0, 286, 0, 0, 290,
	151, 0, 0, 295, 444, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 0, 0, 241, 264,
	155, 310, 283, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 0, 0, 0,
	161, 427, 428, 429, 430, 432, 447, 448, 449, 450,
	462, 461, 460, 463, 467, 470, 469, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 142, 205, 0, 258, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 169, 0, 0, 0,
	0, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 456, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 0, 0, 131,
	292, 0, 424, 0, 0, 0, 0, 0, 0, 136,
	0, 238, 452, 454, 0, 0, 1151, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 171, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 468, 285, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1152, 0, 1155, 0, 0,
	0, 0, 0, 0, 473, 0, 0, 0, 0, 0,
	0, 1147, 1148, 1146, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	1149, 0, 0, 0, 309, 0, 0, 0, 0, 253,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 197, 472, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 130, 0, 0, 0, 235,
	0, 0, 439, 133, 0, 0, 0, 164, 0, 263,
	0, 308, 442, 0, 262, 207, 301, 0, 0, 307,
	0, 459, 314, 318, 434, 0, 431, 282, 173, 170,
	0, 0, 0, 441, 252, 167, 200, 0, 0, 0,
	160, 0, 0, 0, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 445, 443, 0, 0, 312, 446, 272, 271, 0,
	192, 0, 451, 425, 259, 453, 198, 137, 0, 320,
	147, 202, 294, 423, 182, 234, 166, 0, 242, 0,
	132, 255, 218, 219, 217, 220, 185, 437, 455, 0,
	257, 274, 296, 149, 288, 435, 436, 438, 457, 265,
	458, 464, 0, 212, 176, 179, 186, 193, 0, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 184, 0, 304,
	305, 165, 321, 0, 0, 141, 0, 0, 231, 0,
	230, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 0, 0, 426, 0, 286, 0, 0, 290,
	151, 0, 0, 295, 444, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 0, 0, 241, 264,
	155, 310, 283, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 0, 0, 0,
	161, 427, 428, 429, 430, 432, 447, 448, 449, 450,
	462, 461, 460, 463, 467, 470, 469, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 142, 205, 0, 258, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 169, 0, 0, 0,
	0, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 456, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 0, 0, 131,
	292, 0, 424, 0, 0, 0, 0, 0, 0, 136,
	0, 238, 452, 454, 0, 0, 1671, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 171, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 468, 285, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 1675, 0,
	0, 0, 0, 0, 0, 128, 0, 422, 0, 0,
	0, 0, 0, 0, 473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 253,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 197, 472, 0, 1674, 0, 0,
	0, 0, 0, 204, 0, 130, 0, 0, 0, 235,
	0, 0, 439, 133, 0, 0, 0, 164, 0, 263,
	0, 308, 442, 0, 262, 207, 301, 0, 0, 307,
	0, 459, 314, 318, 434, 0, 431, 282, 173, 170,
	0, 0, 0, 441, 252, 167, 200, 0, 0, 0,
	160, 0, 0, 0, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 445, 443, 0, 0, 312, 446, 272, 271, 0,
	192, 0, 451, 425, 259, 453, 198, 137, 0, 320,
	147, 202, 294, 423, 182, 234, 166, 0, 242, 0,
	132, 255, 218, 219, 217, 220, 185, 437, 455, 0,
	257, 274, 296, 149, 288, 435, 436, 438, 457, 265,
	458, 464, 0, 212, 176, 179, 186, 193, 0, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 184, 0, 304,
	305, 165, 321, 0, 0, 141, 0, 0, 231, 0,
	230, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 0, 0, 426, 0, 286, 0, 0, 290,
	151, 0, 0, 295, 444, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 0, 0, 241, 264,
	155, 310, 283, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 0, 0, 0,
	161, 427, 428, 429, 430, 432, 447, 448, 449, 450,
	462, 461, 460, 463, 467, 470, 469, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 142, 205, 0, 258, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 169, 0, 0, 0,
	0, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 456, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 292, 0, 131,
	0, 0, 424, 0, 0, 0, 0, 0, 238, 136,
	0, 0, 452, 454, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 171, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 468, 285, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 0, 422, 0, 0, 0, 0, 0,
	0, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 253, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 197, 472, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 130, 0, 0, 0, 235, 0, 0, 439,
	133, 0, 0, 0, 164, 0, 263, 0, 308, 442,
	0, 262, 207, 301, 0, 0, 307, 0, 459, 314,
	318, 434, 0, 431, 282, 173, 170, 0, 0, 0,
	441, 252, 167, 200, 0, 0, 0, 160, 0, 0,
	0, 281, 298, 135, 221, 299, 317, 148, 293, 222,
	228, 157, 159, 158, 144, 276, 297, 153, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 445, 443,
	0, 0, 312, 446, 272, 271, 0, 192, 0, 451,
	425, 259, 453, 198, 137, 0, 320, 147, 202, 294,
	423, 182, 234, 166, 0, 242, 0, 132, 255, 218,
	219, 217, 220, 185, 437, 455, 0, 257, 274, 296,
	149, 288, 435, 436, 438, 457, 265, 458, 464, 0,
	212, 176, 179, 186, 193, 0, 261, 289, 313, 0,
	145, 138, 291, 306, 154, 273, 275, 319, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 184, 0, 304, 305, 165, 321,
	0, 0, 141, 0, 0, 231, 0, 230, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 178,
	188, 250, 209, 251, 189, 226, 225, 227, 210, 0,
	0, 426, 0, 286, 0, 0, 290, 151, 0, 0,
	295, 444, 256, 152, 183, 177, 249, 229, 146, 191,
	284, 201, 208, 0, 0, 241, 264, 155, 310, 283,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 0, 0, 0, 161, 427, 428,
	429, 430, 432, 447, 448, 449, 450, 462, 461, 460,
	463, 467, 470, 469, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 142, 205,
	0, 258, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 169, 0, 0, 0, 417, 143, 150,
	156, 168, 175, 180, 187, 190, 194, 195, 196, 199,
	211, 213, 214, 215, 216, 232, 233, 236, 237, 239,
	240, 243, 244, 245, 246, 247, 248, 254, 456, 260,
	266, 267, 268, 269, 270, 277, 278, 279, 280, 287,
	302, 303, 315, 316, 292, 0, 131, 0, 0, 424,
	0, 0, 0, 0, 0, 238, 136, 0, 0, 452,
	454, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	1991, 0, 171, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 468, 285,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 422, 0, 0, 0, 0, 0, 0, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	0, 0, 0, 253, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 197, 472,
	0, 0, 0, 0, 0, 0, 0, 204, 0, 130,
	0, 0, 0, 235, 0, 0, 439, 133, 0, 0,
	0, 164, 0, 263, 0, 308, 442, 0, 262, 207,
	301, 0, 0, 307, 0, 459, 314, 318, 434, 0,
	431, 282, 173, 170, 0, 0, 0, 441, 252, 167,
	200, 0, 0, 0, 160, 0, 0, 0, 281, 298,
	135, 221, 299, 317, 148, 293, 222, 228, 157, 159,
	158, 144, 276, 297, 153, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 445, 443, 0, 0, 312,
	446, 272, 271, 0, 192, 0, 451, 425, 259, 453,
	198, 137, 0, 320, 147, 202, 294, 423, 182, 234,
	166, 0, 242, 0, 132, 255, 218, 219, 217, 220,
	185, 437, 455, 0, 257, 274, 296, 149, 288, 435,
	436, 438, 457, 265, 458, 464, 0, 212, 176, 179,
	186, 193, 0, 261, 289, 313, 0, 145, 138, 291,
	306, 154, 273, 275, 319, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 0, 0, 0, 0,
	0, 184, 0, 304, 305, 165, 321, 0, 0, 141,
	0, 0, 231, 0, 230, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 178, 188, 250, 209,
	251, 189, 226, 225, 227, 210, 0, 0, 426, 0,
	286, 0, 0, 290, 151, 0, 0, 295, 444, 256,
	152, 183, 177, 249, 229, 146, 191, 284, 201, 208,
	0, 0, 241, 264, 155, 310, 283, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 0, 0, 0, 161, 427, 428, 429, 430, 432,
	447, 448, 449, 450, 462, 461, 460, 463, 467, 470,
	469, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 142, 205, 0, 258, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	169, 0, 0, 0, 0, 143, 150, 156, 168, 175,
	180, 187, 190, 194, 195, 196, 199, 211, 213, 214,
	215, 216, 232, 233, 236, 237, 239, 240, 243, 244,
	245, 246, 247, 248, 254, 456, 260, 266, 267, 268,
	269, 270, 277, 278, 279, 280, 287, 302, 303, 315,
	316, 292, 0, 131, 0, 0, 424, 0, 0, 0,
	0, 0, 238, 136, 0, 0, 452, 454, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 0, 0, 171,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 468, 285, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 422, 0,
	0, 0, 0, 0, 0, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	253, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 197, 472, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 130, 0, 0, 0,
	235, 0, 0, 439, 133, 0, 0, 0, 164, 0,
	263, 0, 308, 442, 0, 262, 207, 301, 0, 0,
	307, 0, 459, 314, 318, 434, 0, 431, 282, 173,
	170, 0, 0, 0, 441, 252, 167, 200, 0, 0,
	0, 160, 0, 0, 0, 281, 298, 135, 221, 299,
	317, 148, 293, 222, 228, 157, 159, 158, 144, 276,
	297, 153, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 445, 443, 0, 0, 312, 446, 272, 271,
	0, 192, 0, 451, 425, 259, 453, 198, 137, 0,
	320, 147, 202, 294, 423, 182, 234, 166, 0, 242,
	0, 132, 255, 218, 219, 217, 220, 185, 437, 455,
	0, 257, 274, 296, 149, 288, 435, 436, 438, 457,
	265, 458, 464, 0, 212, 176, 179, 186, 193, 0,
	261, 289, 313, 0, 145, 138, 291, 306, 154, 273,
	275, 319, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 184, 0,
	304, 305, 165, 321, 0, 0, 141, 0, 0, 231,
	0, 230, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 178, 188, 250, 209, 251, 189, 226,
	225, 227, 210, 0, 0, 426, 0, 286, 0, 0,
	290, 151, 0, 0, 295, 444, 256, 152, 183, 177,
	249, 229, 146, 191, 284, 201, 208, 0, 0, 241,
	264, 155, 310, 283, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 0, 0,
	0, 161, 427, 428, 429, 430, 432, 447, 448, 449,
	450, 462, 461, 460, 463, 467, 470, 469, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 142, 205, 0, 258, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 169, 0, 0,
	0, 0, 143, 150, 156, 168, 175, 180, 187, 190,
	194, 195, 196, 199, 211, 213, 214, 215, 216, 232,
	233, 236, 237, 239, 240, 243, 244, 245, 246, 247,
	248, 254, 456, 260, 266, 267, 268, 269, 270, 277,
	278, 279, 280, 287, 302, 303, 315, 316, 292, 0,
	131, 0, 0, 424, 0, 0, 0, 0, 0, 238,
	136, 0, 0, 452, 454, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 171, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 468, 285, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1152, 0, 1155, 0, 0, 0, 0,
	0, 0, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 253, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 197, 472, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 130, 0, 0, 0, 235, 0, 0,
	439, 133, 0, 0, 0, 164, 0, 263, 0, 308,
	442, 0, 262, 207, 301, 0, 0, 307, 0, 459,
	314, 318, 434, 0, 431, 282, 173, 170, 0, 0,
	0, 441, 252, 167, 200, 0, 0, 0, 160, 0,
	0, 0, 281, 298, 135, 221, 299, 317, 148, 293,
	222, 228, 157, 159, 158, 144, 276, 297, 153, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 445,
	443, 0, 0, 312, 446, 272, 271, 0, 192, 0,
	451, 425, 259, 453, 198, 137, 0, 320, 147, 202,
	294, 423, 182, 234, 166, 0, 242, 0, 132, 255,
	218, 219, 217, 220, 185, 437, 455, 0, 257, 274,
	296, 149, 288, 435, 436, 438, 457, 265, 458, 464,
	0, 212, 176, 179, 186, 193, 0, 261, 289, 313,
	0, 145, 138, 291, 306, 154, 273, 275, 319, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 184, 0, 304, 305, 165,
	321, 0, 0, 141, 0, 0, 231, 0, 230, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	178, 188, 250, 209, 251, 189, 226, 225, 227, 210,
	0, 0, 426, 0, 286, 0, 0, 290, 151, 0,
	0, 295, 444, 256, 152, 183, 177, 249, 229, 146,
	191, 284, 201, 208, 0, 0, 241, 264, 155, 310,
	283, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 466, 0, 0, 0, 161, 427,
	428, 429, 430, 432, 447, 448, 449, 450, 462, 461,
	460, 463, 467, 470, 469, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 142,
	205, 0, 258, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 169, 0, 0, 0, 0, 143,
	150, 156, 168, 175, 180, 187, 190, 194, 195, 196,
	199, 211, 213, 214, 215, 216, 232, 233, 236, 237,
	239, 240, 243, 244, 245, 246, 247, 248, 254, 456,
	260, 266, 267, 268, 269, 270, 277, 278, 279, 280,
	287, 302, 303, 315, 316, 292, 0, 131, 0, 0,
	424, 0, 0, 0, 0, 0, 238, 136, 0, 0,
	452, 454, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 171, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 468,
	285, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 253, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 197,
	472, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	130, 0, 0, 0, 235, 0, 0, 439, 133, 0,
	0, 0, 164, 0, 263, 0, 308, 442, 0, 262,
	207, 301, 0, 0, 307, 0, 459, 314, 318, 434,
	0, 431, 282, 173, 170, 0, 0, 0, 441, 252,
	167, 200, 0, 0, 0, 160, 0, 0, 0, 281,
	298, 135, 221, 299, 317, 148, 293, 222, 228, 157,
	159, 158, 144, 276, 297, 153, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 445, 443, 0, 0,
	312, 446, 272, 271, 0, 192, 0, 451, 425, 259,
	453, 198, 137, 0, 320, 147, 202, 294, 423, 182,
	234, 166, 0, 242, 0, 132, 255, 218, 219, 217,
	220, 185, 437, 455, 0, 257, 274, 296, 149, 288,
	435, 436, 438, 457, 265, 458, 464, 0, 212, 176,
	179, 186, 193, 0, 261, 289, 313, 0, 145, 138,
	291, 306, 154, 273, 275, 319, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 184, 0, 304, 305, 165, 321, 0, 0,
	141, 0, 0, 231, 0, 230, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 178, 188, 250,
	209, 251, 189, 226, 225, 227, 210, 0, 0, 426,
	0, 286, 0, 0, 290, 151, 0, 0, 295, 444,
	256, 152, 183, 177, 249, 229, 146, 191, 284, 201,
	208, 0, 0, 241, 264, 155, 310, 283, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 466, 0, 0, 0, 161, 427, 428, 429, 430,
	432, 447, 448, 449, 450, 462, 461, 460, 463, 467,
	470, 469, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 142, 205, 0, 258,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 169, 0, 0, 0, 0, 143, 150, 156, 168,
	175, 180, 187, 190, 194, 195, 196, 199, 211, 213,
	214, 215, 216, 232, 233, 236, 237, 239, 240, 243,
	244, 245, 246, 247, 248, 254, 456, 260, 266, 267,
	268, 269, 270, 277, 278, 279, 280, 287, 302, 303,
	315, 316, 0, 0, 131, 0, 0, 424, 391, 292,
	385, 396, 379, 0, 136, 0, 0, 452, 454, 0,
	238, 0, 0, 371, 0, 0, 0, 0, 0, 172,
	0, 0, 386, 0, 0, 0, 0, 171, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 285, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 400, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 378, 377, 380, 0, 0, 0, 224, 0,
	0, 0, 384, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 130, 0, 0, 0, 235, 388,
	0, 0, 133, 392, 0, 0, 164, 0, 263, 0,
	308, 0, 0, 262, 207, 301, 0, 395, 307, 0,
	0, 314, 318, 0, 0, 0, 282, 173, 170, 0,
	0, 0, 0, 252, 167, 200, 0, 0, 0, 160,
	0, 0, 0, 281, 298, 135, 221, 299, 317, 148,
	293, 222, 228, 157, 159, 158, 144, 276, 297, 153,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 272, 271, 0, 192,
	0, 0, 0, 259, 0, 198, 137, 0, 320, 147,
	202, 294, 0, 182, 234, 166, 0, 242, 0, 132,
	255, 218, 219, 217, 220, 185, 0, 0, 0, 374,
	274, 296, 149, 288, 381, 382, 383, 389, 390, 393,
	394, 397, 212, 176, 179, 186, 193, 0, 261, 289,
	313, 0, 145, 138, 291, 306, 154, 273, 275, 319,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 184, 0, 304, 305,
	165, 321, 0, 0, 141, 0, 0, 231, 0, 230,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 178, 188, 250, 209, 251, 189, 226, 225, 227,
	210, 0, 0, 0, 0, 286, 0, 0, 290, 151,
	0, 0, 295, 0, 256, 152, 183, 177, 249, 229,
	146, 191, 284, 201, 208, 0, 0, 241, 264, 155,
	310, 283, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	142, 205, 0, 258, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 169, 0, 0, 0, 0,
	143, 150, 156, 168, 175, 180, 187, 190, 194, 195,
	196, 199, 211, 213, 214, 215, 216, 232, 233, 236,
	237, 239, 240, 243, 244, 245, 246, 247, 248, 254,
	387, 260, 266, 267, 268, 269, 270, 277, 278, 279,
	280, 287, 302, 303, 315, 316, 292, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 136, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 171, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 285, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 253, 0, 1165, 1164, 1174,
	1175, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1166, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 130, 0, 0, 0, 235, 0, 0, 0, 133,
	0, 0, 0, 164, 0, 263, 0, 308, 0, 0,
	262, 207, 301, 0, 0, 307, 0, 0, 314, 318,
	0, 0, 0, 282, 173, 170, 0, 0, 0, 0,
	252, 167, 200, 0, 0, 0, 160, 0, 0, 0,
	281, 298, 135, 221, 299, 317, 148, 293, 222, 228,
	157, 159, 158, 144, 276, 297, 153, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 272, 271, 0, 192, 0, 0, 0,
	259, 0, 198, 137, 0, 320, 147, 202, 294, 0,
	182, 234, 166, 0, 242, 0, 132, 255, 218, 219,
	217, 220, 185, 0, 0, 0, 257, 274, 296, 149,
	288, 0, 0, 0, 0, 265, 0, 0, 0, 212,
	176, 179, 186, 193, 0, 261, 289, 313, 0, 145,
	138, 291, 306, 154, 273, 275, 319, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 184, 0, 304, 305, 165, 321, 0,
	0, 141, 0, 0, 231, 0, 230, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 178, 188,
	250, 209, 251, 189, 226, 225, 227, 210, 0, 0,
	0, 0, 286, 0, 0, 290, 151, 0, 0, 295,
	0, 256, 152, 183, 177, 249, 229, 146, 191, 284,
	201, 208, 0, 0, 241, 264, 155, 310, 283, 174,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 2919, 0, 0, 0, 0, 0,
	172, 2917, 0, 0, 0, 0, 161, 0, 171, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 0, 0, 285, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 142, 205, 0,
	258, 181, 0, 0, 0, 400, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 0, 0, 0, 253,
	0, 311, 169, 0, 0, 0, 0, 143, 150, 156,
	168, 175, 180, 187, 190, 194, 195, 196, 199, 211,
	213, 214, 215, 216, 232, 233, 236, 237, 239, 240,
	243, 244, 245, 246, 247, 248, 254, 0, 260, 266,
	267, 268, 269, 270, 277, 278, 279, 280, 287, 302,
	303, 315, 316, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 136, 0, 0, 0, 224,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 130, 0, 0, 0, 235,
	0, 0, 0, 133, 0, 0, 0, 164, 0, 263,
	0, 308, 0, 0, 262, 207, 301, 0, 0, 307,
	0, 0, 314, 318, 0, 0, 0, 282, 173, 170,
	0, 0, 0, 0, 252, 167, 200, 0, 0, 0,
	160, 0, 0, 0, 281, 298, 135, 221, 299, 317,
	148, 293, 222, 228, 157, 159, 158, 144, 276, 297,
	153, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 272, 271, 0,
	192, 0, 2918, 0, 259, 0, 198, 137, 0, 320,
	147, 202, 294, 0, 182, 234, 166, 0, 242, 0,
	132, 255, 218, 219, 217, 220, 185, 0, 0, 0,
	257, 274, 296, 149, 288, 0, 0, 0, 0, 265,
	0, 0, 0, 212, 176, 179, 186, 193, 0, 261,
	289, 313, 0, 145, 138, 291, 306, 154, 273, 275,
	319, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 184, 0, 304,
	305, 165, 321, 0, 0, 141, 0, 0, 231, 0,
	230, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 178, 188, 250, 209, 251, 189, 226, 225,
	227, 210, 0, 0, 0, 0, 286, 0, 0, 290,
	151, 0, 0, 295, 0, 256, 152, 183, 177, 249,
	229, 146, 191, 284, 201, 208, 0, 0, 241, 264,
	155, 310, 283, 174, 36, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	161, 0, 0, 171, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1666, 206, 0, 0, 0,
	285, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 142, 205, 0, 258, 181, 81, 0, 0, 0,
	1281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 253, 311, 169, 0, 0, 0,
	0, 143, 150, 156, 168, 175, 180, 187, 190, 194,
	195, 196, 199, 211, 213, 214, 215, 216, 232, 233,
	236, 237, 239, 240, 243, 244, 245, 246, 247, 248,
	254, 0, 260, 266, 267, 268, 269, 270, 277, 278,
	279, 280, 287, 302, 303, 315, 316, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	130, 0, 0, 0, 235, 0, 0, 0, 133, 0,
	0, 0, 164, 0, 263, 0, 308, 0, 0, 262,
	207, 301, 0, 0, 307, 0, 0, 314, 318, 0,
	0, 0, 282, 173, 170, 0, 0, 0, 0, 252,
	167, 200, 0, 0, 0, 160, 0, 0, 0, 281,
	298, 135, 221, 299, 317, 148, 293, 222, 228, 157,
	159, 158, 144, 276, 297, 153, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 272, 271, 0, 192, 0, 0, 0, 259,
	0, 198, 137, 0, 320, 147, 202, 294, 0, 182,
	234, 166, 0, 242, 0, 132, 255, 218, 219, 217,
	220, 185, 0, 0, 0, 257, 274, 296, 149, 288,
	0, 0, 0, 0, 265, 0, 0, 0, 212, 176,
	179, 186, 193, 0, 261, 289, 313, 0, 145, 138,
	291, 306, 154, 273, 275, 319, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 184, 0, 304, 305, 165, 321, 0, 0,
	141, 0, 0, 231, 0, 230, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 178, 188, 250,
	209, 251, 189, 226, 225, 227, 210, 0, 0, 0,
	0, 286, 0, 0, 290, 151, 0, 0, 295, 0,
	256, 152, 183, 177, 249, 229, 146, 191, 284, 201,
	208, 0, 0, 241, 264, 155, 310, 283, 174, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 161, 0, 171, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 285, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 142, 205, 79, 258,
	181, 0, 0, 0, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2100, 309, 0, 0, 0, 0, 253, 0,
	311, 169, 0, 0, 0, 0, 143, 150, 156, 168,
	175, 180, 187, 190, 194, 195, 196, 199, 211, 213,
	214, 215, 216, 232, 233, 236, 237, 239, 240, 243,
	244, 245, 246, 247, 248, 254, 0, 260, 266, 267,
	268, 269, 270, 277, 278, 279, 280, 287, 302, 303,
	315, 316, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 224, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 130, 0, 0, 0, 235, 0,
	0, 0, 133, 0, 0, 0, 164, 0, 263, 0,
	308, 0, 0, 262, 207, 301, 0, 0, 307, 0,
	0, 314, 318, 0, 0, 0, 282, 173, 170, 0,
	0, 0, 0, 252, 167, 200, 2101, 2102, 0, 160,
	0, 0, 0, 281, 298, 135, 221, 299, 317, 148,
	293, 222, 228, 157, 159, 158, 144, 276, 297, 153,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 272, 271, 0, 192,
	0, 0, 0, 259, 0, 198, 137, 0, 320, 147,
	202, 294, 0, 182, 234, 166, 0, 242, 0, 132,
	255, 218, 219, 217, 220, 185, 0, 0, 0, 257,
	274, 296, 149, 288, 0, 0, 0, 0, 265, 0,
	0, 0, 212, 176, 179, 186, 193, 0, 261, 289,
	313, 0, 145, 138, 291, 306, 154, 273, 275, 319,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 184, 0, 304, 305,
	165, 321, 0, 0, 141, 0, 0, 231, 0, 230,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 178, 188, 250, 209, 251, 189, 226, 225, 227,
	210, 0, 0, 0, 0, 286, 0, 0, 290, 151,
	0, 0, 295, 0, 256, 152, 183, 177, 249, 229,
	146, 191, 284, 201, 208, 0, 0, 241, 264, 155,
	310, 283, 174, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 161,
	0, 171, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 285, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	142, 205, 0, 258, 181, 0, 0, 0, 400, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 253, 0, 311, 169, 0, 0, 0, 0,
	143, 150, 156, 168, 175, 180, 187, 190, 194, 195,
	196, 199, 211, 213, 214, 215, 216, 232, 233, 236,
	237, 239, 240, 243, 244, 245, 246, 247, 248, 254,
	0, 260, 266, 267, 268, 269, 270, 277, 278, 279,
	280, 287, 302, 303, 315, 316, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 224, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 130, 0,
	0, 0, 235, 0, 0, 0, 133, 0, 0, 0,
	164, 0, 263, 0, 308, 0, 0, 262, 207, 301,
	0, 0, 307, 0, 0, 314, 318, 0, 0, 0,
	282, 173, 170, 0, 0, 0, 0, 252, 167, 200,
	0, 0, 0, 160, 0, 0, 0, 281, 298, 135,
	221, 299, 317, 148, 293, 222, 228, 157, 159, 158,
	144, 276, 297, 153, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	272, 271, 0, 192, 0, 0, 0, 259, 0, 198,
	137, 0, 320, 147, 202, 294, 0, 182, 234, 166,
	0, 242, 0, 132, 255, 218, 219, 217, 220, 185,
	0, 0, 0, 257, 274, 296, 149, 288, 0, 0,
	0, 0, 265, 0, 0, 0, 212, 176, 179, 186,
	193, 0, 261, 289, 313, 0, 145, 138, 291, 306,
	154, 273, 275, 319, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	184, 0, 304, 305, 165, 321, 0, 0, 141, 0,
	0, 231, 0, 230, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 178, 188, 250, 209, 251,
	189, 226, 225, 227, 210, 0, 0, 0, 0, 286,
	0, 0, 290, 151, 0, 0, 295, 0, 256, 152,
	183, 177, 249, 229, 146, 191, 284, 201, 208, 0,
	0, 241, 264, 155, 310, 283, 174, 292, 0, 0,
	1444, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 1302, 0,
	0, 0, 0, 161, 0, 171, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 285, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 142, 205, 0, 258, 181, 0,
	0, 0, 664, 0, 1301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 253, 0, 311, 169,
	0, 0, 0, 0, 143, 150, 156, 168, 175, 180,
	187, 190, 194, 195, 196, 199, 211, 213, 214, 215,
	216, 232, 233, 236, 237, 239, 240, 243, 244, 245,
	246, 247, 248, 254, 0, 260, 266, 267, 268, 269,
	270, 277, 278, 279, 280, 287, 302, 303, 315, 316,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 224, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 130, 0, 0, 0, 235, 0, 0, 0,
	133, 0, 0, 0, 164, 0, 263, 0, 308, 0,
	0, 262, 207, 301, 0, 0, 307, 0, 0, 314,
	318, 0, 0, 0, 282, 173, 170, 0, 0, 0,
	0, 252, 167, 200, 0, 0, 0, 160, 0, 0,
	0, 281, 298, 135, 221, 299, 317, 148, 293, 222,
	228, 157, 159, 158, 144, 276, 297, 153, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 272, 271, 0, 192, 0, 0,
	0, 259, 0, 198, 137, 0, 320, 147, 202, 294,
	0, 182, 234, 166, 0, 242, 0, 132, 255, 218,
	219, 217, 220, 185, 0, 0, 0, 257, 274, 296,
	149, 288, 0, 0, 0, 0, 265, 0, 0, 0,
	212, 176, 179, 186, 193, 0, 261, 289, 313, 0,
	145, 138, 291, 306, 154, 273, 275, 319, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 184, 0, 304, 305, 165, 321,
	0, 0, 141, 0, 0, 231, 0, 230, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 178,
	188, 250, 209, 251, 189, 226, 225, 227, 210, 0,
	0, 0, 0, 286, 0, 0, 290, 151, 0, 0,
	295, 0, 256, 152, 183, 177, 249, 229, 146, 191,
	284, 201, 208, 0, 0, 241, 264, 155, 310, 283,
	174, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 161, 0, 171,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 285, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 142, 205,
	0, 258, 181, 0, 0, 0, 400, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	253, 0, 311, 169, 0, 0, 0, 0, 143, 150,
	156, 168, 175, 180, 187, 190, 194, 195, 196, 199,
	211, 213, 214, 215, 216, 232, 233, 236, 237, 239,
	240, 243, 244, 245, 246, 247, 248, 254, 0, 260,
	266, 267, 268, 269, 270, 277, 278, 279, 280, 287,
	302, 303, 315, 316, 0, 0, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	224, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 130, 0, 0, 0,
	235, 0, 0, 0, 133, 0, 0, 0, 164, 0,
	263, 0, 308, 0, 0, 262, 207, 301, 0, 0,
	307, 0, 0, 314, 318, 0, 0, 0, 282, 173,
	170, 0, 0, 0, 0, 252, 167, 200, 0, 0,
	0, 160, 0, 0, 0, 281, 298, 135, 221, 299,
	317, 148, 293, 222, 228, 157, 159, 158, 144, 276,
	297, 153, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 272, 271,
	0, 192, 0, 0, 0, 259, 0, 198, 137, 0,
	320, 147, 202, 294, 0, 182, 234, 166, 0, 242,
	0, 132, 255, 218, 219, 217, 220, 185, 0, 0,
	0, 257, 274, 296, 149, 288, 0, 0, 0, 0,
	265, 0, 0, 0, 212, 176, 179, 186, 193, 0,
	261, 289, 313, 0, 145, 138, 291, 306, 154, 273,
	275, 319, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 184, 0,
	304, 305, 165, 321, 0, 0, 141, 0, 0, 231,
	0, 230, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 178, 188, 250, 209, 251, 189, 226,
	225, 227, 210, 0, 0, 0, 0, 286, 0, 0,
	290, 151, 0, 0, 295, 0, 256, 152, 183, 177,
	249, 229, 146, 191, 284, 201, 208, 0, 0, 241,
	264, 155, 310, 283, 174, 0, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 161, 0, 0, 171, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 285, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 142, 205, 0, 258, 181, 81, 0, 0,
	0, 1281, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 0, 0, 0, 253, 311, 169, 0, 0,
	0, 0, 143, 150, 156, 168, 175, 180, 187, 190,
	194, 195, 196, 199, 211, 213, 214, 215, 216, 232,
	233, 236, 237, 239, 240, 243, 244, 245, 246, 247,
	248, 254, 0, 260, 266, 267, 268, 269, 270, 277,
	278, 279, 280, 287, 302, 303, 315, 316, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	0, 130, 0, 0, 0, 235, 0, 0, 0, 133,
	0, 0, 0, 164, 0, 263, 0, 308, 0, 0,
	262, 207, 301, 0, 0, 307, 0, 0, 314, 318,
	0, 0, 0, 282, 173, 170, 0, 0, 0, 0,
	252, 167, 200, 0, 0, 0, 160, 0, 0, 0,
	281, 298, 135, 221, 299, 317, 148, 293, 222, 228,
	157, 159, 158, 144, 276, 297, 153, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 272, 271, 0, 192, 0, 0, 0,
	259, 0, 198, 137, 0, 320, 147, 202, 294, 0,
	182, 234, 166, 0, 242, 0, 132, 255, 218, 219,
	217, 220, 185, 0, 0, 0, 257, 274, 296, 149,
	288, 0, 0, 0, 0, 265, 0, 0, 0, 212,
	176, 179, 186, 193, 0, 261, 289, 313, 0, 145,
	138, 291, 306, 154, 273, 275, 319, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 184, 0, 304, 305, 165, 321, 0,
	0, 141, 0, 0, 231, 0, 230, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 178, 188,
	250, 209, 251, 189, 226, 225, 227, 210, 0, 0,
	0, 0, 286, 0, 0, 290, 151, 0, 0, 295,
	0, 256, 152, 183, 177, 249, 229, 146, 191, 284,
	201, 208, 0, 0, 241, 264, 155, 310, 283, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 36, 161, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 41, 0,
	0, 0, 0, 0, 0, 0, 134, 142, 205, 0,
	258, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 3002, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 169, 2811, 0, 0, 0, 143, 150, 156,
	168, 175, 180, 187, 190, 194, 195, 196, 199, 211,
	213, 214, 215, 216, 232, 233, 236, 237, 239, 240,
	243, 244, 245, 246, 247, 248, 254, 0, 260, 266,
	267, 268, 269, 270, 277, 278, 279, 280, 287, 302,
	303, 315, 316, 292, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 136, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 171, 163, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 206, 0, 0, 0, 285, 223,
	0, 0, 0, 0, 2812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	2373, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 130, 0,
	2814, 75, 235, 53, 54, 61, 133, 62, 0, 0,
	164, 0, 263, 0, 308, 0, 0, 262, 207, 301,
	0, 0, 307, 0, 0, 314, 318, 0, 0, 0,
	282, 173, 170, 0, 0, 0, 0, 252, 167, 200,
	0, 0, 0, 160, 0, 0, 0, 281, 298, 135,
	221, 299, 317, 148, 293, 222, 228, 157, 159, 158,
	144, 276, 297, 153, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	272, 271, 0, 192, 0, 0, 0, 259, 0, 198,
	137, 0, 320, 147, 202, 294, 0, 182, 234, 166,
	73, 242, 0, 132, 255, 218, 219, 217, 220, 185,
	0, 0, 0, 257, 274, 296, 149, 288, 0, 0,
	0, 0, 265, 0, 0, 0, 212, 176, 179, 186,
	193, 0, 261, 289, 313, 0, 145, 138, 291, 306,
	154, 273, 275, 319, 0, 140, 0, 0, 0, 79,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	184, 0, 304, 305, 165, 321, 0, 0, 141, 0,
	0, 231, 0, 230, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 178, 188, 250, 209, 251,
	189, 226, 225, 227, 210, 0, 0, 0, 0, 286,
	0, 0, 290, 151, 0, 0, 295, 0, 256, 152,
	183, 177, 249, 229, 146, 191, 284, 201, 208, 0,
	0, 241, 264, 155, 310, 283, 174, 0, 292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 161, 0, 0, 171, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 285, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 142, 205, 0, 258, 181, 81,
	0, 0, 0, 664, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 0, 0, 0, 0, 253, 311, 169,
	0, 0, 0, 0, 143, 150, 156, 168, 175, 180,
	187, 190, 194, 195, 196, 199, 211, 213, 214, 215,
	216, 232, 233, 236, 237, 239, 240, 243, 244, 245,
	246, 247, 248, 254, 0, 260, 266, 267, 268, 269,
	270, 277, 278, 279, 280, 287, 302, 303, 315, 316,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 224, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 204, 0, 130, 0, 0, 0, 235, 0, 0,
	0, 133, 0, 0, 0, 164, 0, 263, 0, 308,
	0, 0, 262, 207, 301, 0, 0, 307, 0, 0,
	314, 318, 0, 0, 0, 282, 173, 170, 0, 0,
	0, 0, 252, 167, 200, 0, 0, 0, 160, 0,
	0, 0, 281, 298, 135, 221, 299, 317, 148, 293,
	222, 228, 157, 159, 158, 144, 276, 297, 153, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 272, 271, 0, 192, 0,
	0, 0, 259, 0, 198, 137, 0, 320, 147, 202,
	294, 0, 182, 234, 166, 0, 242, 0, 132, 255,
	218, 219, 217, 220, 185, 0, 0, 0, 257, 274,
	296, 149, 288, 0, 0, 0, 0, 265, 0, 0,
	0, 212, 176, 179, 186, 193, 0, 261, 289, 313,
	0, 145, 138, 291, 306, 154, 273, 275, 319, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 0, 184, 0, 304, 305, 165,
	321, 0, 0, 141, 0, 0, 231, 0, 230, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	178, 188, 250, 209, 251, 189, 226, 225, 227, 210,
	0, 0, 0, 0, 286, 0, 0, 290, 151, 0,
	0, 295, 0, 256, 152, 183, 177, 249, 229, 146,
	191, 284, 201, 208, 0, 0, 241, 264, 155, 310,
	283, 174, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 161, 1870,
	1871, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 285, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 142,
	205, 0, 258, 181, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 0, 0,
	0, 253, 0, 311, 169, 0, 0, 0, 0, 143,
	150, 156, 168, 175, 180, 187, 190, 194, 195, 196,
	199, 211, 213, 214, 215, 216, 232, 233, 236, 237,
	239, 240, 243, 244, 245, 246, 247, 248, 254, 0,
	260, 266, 267, 268, 269, 270, 277, 278, 279, 280,
	287, 302, 303, 315, 316, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 136, 0, 0,
	0, 224, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 204, 0, 130, 0, 0,
	0, 235, 0, 0, 0, 133, 0, 0, 0, 164,
	0, 263, 0, 308, 0, 0, 262, 207, 301, 0,
	0, 307, 0, 0, 314, 318, 0, 0, 0, 282,
	173, 170, 0, 0, 0, 0, 252, 167, 200, 0,
	0, 0, 160, 0, 0, 0, 281, 298, 135, 221,
	299, 317, 148, 293, 222, 228, 157, 159, 158, 144,
	276, 297, 153, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 272,
	271, 0, 192, 0, 0, 0, 259, 0, 198, 137,
	0, 320, 147, 202, 294, 0, 182, 234, 166, 0,
	242, 0, 132, 255, 218, 219, 217, 220, 185, 0,
	0, 0, 257, 274, 296, 149, 288, 0, 0, 0,
	0, 265, 0, 0, 0, 212, 176, 179, 186, 193,
	0, 261, 289, 313, 0, 145, 138, 291, 306, 154,
	273, 275, 319, 0, 140, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 184,
	0, 304, 305, 165, 321, 0, 0, 141, 0, 0,
	231, 0, 230, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 178, 188, 250, 209, 251, 189,
	226, 225, 227, 210, 0, 0, 0, 0, 286, 0,
	0, 290, 151, 0, 0, 295, 0, 256, 152, 183,
	177, 249, 229, 146, 191, 284, 201, 208, 0, 0,
	241, 264, 155, 310, 283, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 161, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 41, 0, 0, 0, 0, 0,
	0, 0, 134, 142, 205, 0, 258, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 169, 2811,
	0, 0, 0, 143, 150, 156, 168, 175, 180, 187,
	190, 194, 195, 196, 199, 211, 213, 214, 215, 216,
	232, 233, 236, 237, 239, 240, 243, 244, 245, 246,
	247, 248, 254, 0, 260, 266, 267, 268, 269, 270,
	277, 278, 279, 280, 287, 302, 303, 315, 316, 292,
	0, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 136, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 0, 171, 163, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	206, 0, 0, 0, 285, 223, 0, 0, 0, 0,
	2812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 57, 58, 0, 2813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 130, 0, 2814, 75, 235, 53,
	54, 61, 133, 62, 0, 0, 164, 0, 263, 0,
	308, 0, 0, 262, 207, 301, 0, 0, 307, 0,
	0, 314, 318, 0, 0, 0, 282, 173, 170, 0,
	0, 0, 0, 252, 167, 200, 0, 0, 0, 160,
	0, 0, 0, 281, 298, 135, 221, 299, 317, 148,
	293, 222, 228, 157, 159, 158, 144, 276, 297, 153,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 272, 271, 0, 192,
	0, 0, 0, 259, 0, 198, 137, 0, 320, 147,
	202, 294, 0, 182, 234, 166, 73, 242, 0, 132,
	255, 218, 219, 217, 220, 185, 0, 0, 0, 257,
	274, 296, 149, 288, 0, 0, 0, 0, 265, 0,
	0, 0, 212, 176, 179, 186, 193, 0, 261, 289,
	313, 0, 145, 138, 291, 306, 154, 273, 275, 319,
	0, 140, 0, 0, 0, 79, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 184, 0, 304, 305,
	165, 321, 0, 0, 141, 0, 0, 231, 0, 230,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 178, 188, 250, 209, 251, 189, 226, 225, 227,
	210, 0, 0, 0, 0, 286, 0, 0, 290, 151,
	0, 0, 295, 0, 256, 152, 183, 177, 249, 229,
	146, 191, 284, 201, 208, 0, 0, 241, 264, 155,
	310, 283, 174, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 161,
	0, 171, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 285, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	142, 205, 0, 258, 181, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 253, 0, 311, 169, 0, 0, 0, 0,
	143, 150, 156, 168, 175, 180, 187, 190, 194, 195,
	196, 199, 211, 213, 214, 215, 216, 232, 233, 236,
	237, 239, 240, 243, 244, 245, 246, 247, 248, 254,
	0, 260, 266, 267, 268, 269, 270, 277, 278, 279,
	280, 287, 302, 303, 315, 316, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 224, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 130, 0,
	0, 0, 235, 0, 0, 0, 133, 0, 0, 0,
	164, 0, 263, 0, 308, 0, 0, 262, 207, 301,
	0, 0, 307, 0, 0, 314, 318, 0, 0, 0,
	282, 173, 170, 0, 0, 0, 0, 252, 167, 200,
	0, 0, 0, 160, 0, 0, 0, 281, 298, 135,
	221, 299, 317, 148, 293, 222, 228, 157, 159, 158,
	144, 276, 297, 153, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	272, 271, 0, 192, 0, 0, 0, 259, 0, 198,
	137, 0, 320, 147, 202, 294, 0, 182, 234, 166,
	0, 242, 0, 132, 255, 218, 219, 217, 220, 185,
	0, 0, 0, 257, 274, 296, 149, 288, 0, 0,
	0, 0, 265, 0, 0, 0, 212, 176, 179, 186,
	193, 0, 261, 289, 313, 0, 145, 138, 291, 306,
	154, 273, 275, 319, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	184, 0, 304, 305, 165, 321, 0, 0, 141, 647,
	0, 231, 0, 230, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 178, 188, 250, 209, 251,
	189, 226, 225, 227, 643, 0, 0, 0, 0, 286,
	0, 0, 290, 151, 0, 0, 295, 0, 256, 152,
	183, 177, 249, 648, 646, 637, 638, 201, 208, 0,
	0, 241, 264, 155, 310, 283, 174, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 161, 0, 171, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 285, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 142, 205, 0, 258, 181, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 253, 0, 311, 169,
	0, 0, 0, 0, 143, 150, 156, 168, 175, 180,
	187, 190, 194, 195, 196, 199, 211, 213, 214, 215,
	216, 232, 233, 236, 237, 239, 240, 243, 244, 245,
	246, 644, 645, 254, 0, 260, 266, 267, 268, 269,
	270, 277, 278, 279, 280, 287, 302, 303, 315, 316,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 224, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 130, 0, 0, 0, 235, 0, 0, 0,
	133, 0, 0, 0, 164, 0, 263, 0, 308, 0,
	0, 262, 207, 301, 0, 0, 307, 0, 0, 314,
	318, 0, 0, 0, 282, 173, 170, 0, 0, 0,
	0, 252, 167, 200, 0, 0, 0, 160, 0, 0,
	0, 281, 298, 135, 221, 299, 317, 148, 293, 222,
	228, 157, 159, 158, 144, 276, 297, 153, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 272, 271, 0, 192, 0, 0,
	0, 259, 0, 198, 137, 0, 320, 147, 202, 294,
	0, 182, 234, 166, 0, 242, 0, 132, 255, 218,
	219, 217, 220, 185, 0, 0, 0, 257, 274, 296,
	149, 288, 0, 0, 0, 0, 265, 0, 0, 0,
	212, 176, 179, 186, 193, 0, 261, 289, 313, 0,
	145, 138, 291, 306, 154, 273, 275, 319, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 184, 0, 304, 305, 165, 321,
	0, 0, 141, 0, 0, 231, 0, 230, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 178,
	188, 250, 209, 251, 189, 226, 225, 227, 210, 0,
	0, 0, 0, 286, 0, 0, 290, 151, 0, 0,
	295, 0, 256, 152, 183, 177, 249, 229, 146, 191,
	284, 201, 208, 0, 0, 241, 264, 155, 310, 283,
	174, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 161, 0, 171,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 285, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 142, 205,
	0, 258, 181, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	253, 0, 311, 169, 0, 0, 0, 0, 143, 150,
	156, 168, 175, 180, 187, 190, 194, 195, 196, 199,
	211, 213, 214, 215, 216, 232, 233, 236, 237, 239,
	240, 243, 244, 245, 246, 247, 248, 254, 0, 260,
	266, 267, 268, 269, 270, 277, 278, 279, 280, 287,
	302, 303, 315, 316, 0, 0, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	224, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 130, 0, 0, 0,
	235, 0, 0, 0, 133, 0, 0, 0, 164, 0,
	263, 0, 308, 0, 0, 262, 207, 301, 0, 0,
	307, 0, 0, 314, 318, 0, 0, 0, 282, 173,
	170, 0, 0, 0, 0, 252, 167, 200, 0, 0,
	0, 160, 0, 0, 0, 281, 298, 135, 221, 299,
	317, 148, 293, 222, 228, 157, 159, 158, 144, 276,
	297, 153, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 272, 271,
	0, 192, 0, 0, 0, 259, 0, 198, 137, 0,
	320, 147, 202, 294, 0, 182, 234, 166, 0, 242,
	0, 132, 255, 218, 219, 217, 220, 185, 0, 0,
	0, 257, 274, 296, 149, 288, 0, 0, 0, 0,
	265, 0, 0, 0, 212, 176, 179, 186, 193, 0,
	261, 289, 313, 0, 145, 138, 291, 634, 154, 273,
	275, 319, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 184, 0,
	304, 305, 165, 321, 0, 0, 141, 647, 0, 231,
	0, 230, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 178, 188, 250, 209, 251, 189, 226,
	225, 227, 643, 0, 0, 0, 0, 286, 0, 0,
	290, 151, 0, 0, 295, 0, 256, 152, 183, 177,
	249, 648, 646, 637, 638, 201, 208, 0, 0, 241,
	264, 155, 310, 283, 174, 292, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 161, 0, 171, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	285, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 142, 205, 0, 258, 181, 0, 0, 0,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 253, 0, 311, 169, 0, 0,
	0, 0, 143, 150, 156, 168, 175, 180, 187, 190,
	194, 195, 196, 199, 211, 213, 214, 215, 216, 232,
	233, 236, 237, 239, 240, 243, 244, 245, 246, 644,
	645, 254, 0, 260, 266, 267, 268, 269, 270, 277,
	278, 279, 280, 287, 302, 303, 315, 316, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 224, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	130, 0, 0, 0, 235, 0, 0, 0, 133, 0,
	0, 0, 164, 0, 263, 0, 308, 0, 0, 262,
	207, 301, 0, 0, 307, 0, 0, 314, 318, 0,
	0, 0, 282, 173, 170, 0, 0, 0, 0, 252,
	167, 200, 0, 0, 0, 160, 0, 0, 0, 281,
	298, 135, 221, 299, 317, 148, 293, 222, 228, 157,
	159, 158, 144, 276, 297, 153, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 272, 271, 0, 192, 0, 0, 0, 259,
	0, 198, 137, 0, 320, 147, 202, 294, 0, 182,
	234, 166, 0, 242, 0, 132, 255, 218, 219, 217,
	220, 185, 0, 0, 0, 257, 274, 296, 149, 288,
	0, 0, 0, 0, 265, 0, 0, 0, 212, 176,
	179, 186, 193, 0, 261, 289, 313, 0, 145, 138,
	291, 306, 154, 273, 275, 319, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 184, 0, 304, 305, 165, 321, 0, 0,
	141, 0, 0, 231, 0, 230, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 178, 188, 250,
	209, 251, 189, 226, 225, 227, 210, 0, 0, 0,
	0, 286, 0, 0, 290, 151, 0, 0, 295, 0,
	256, 152, 183, 177, 249, 229, 146, 191, 284, 201,
	208, 0, 0, 241, 264, 155, 310, 283, 174, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 0, 161, 0, 171, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 285, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 142, 205, 0, 258,
	181, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 0, 0, 0, 0, 253, 0,
	311, 169, 0, 0, 0, 0, 143, 150, 156, 168,
	175, 180, 187, 190, 194, 195, 196, 199, 211, 213,
	214, 215, 216, 232, 233, 236, 237, 239, 240, 243,
	244, 245, 246, 247, 248, 254, 0, 260, 266, 267,
	268, 269, 270, 277, 278, 279, 280, 287, 302, 303,
	315, 316, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 0, 0, 0, 224, 0,
	0, 125, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 130, 0, 0, 0, 235, 0,
	0, 0, 133, 0, 0, 0, 164, 0, 263, 0,
	308, 0, 0, 262, 207, 301, 0, 0, 307, 0,
	0, 314, 318, 0, 0, 0, 282, 173, 170, 0,
	0, 0, 0, 252, 167, 200, 0, 0, 0, 160,
	0, 0, 0, 281, 298, 135, 221, 299, 317, 148,
	293, 222, 228, 157, 159, 158, 144, 276, 297, 153,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 272, 271, 0, 192,
	0, 0, 0, 259, 0, 198, 137, 0, 320, 147,
	202, 294, 0, 182, 234, 166, 0, 242, 0, 132,
	255, 218, 219, 217, 220, 185, 0, 0, 0, 257,
	274, 296, 149, 288, 0, 0, 0, 0, 265, 0,
	0, 0, 212, 176, 179, 186, 193, 0, 261, 289,
	313, 0, 145, 138, 291, 306, 154, 273, 275, 319,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 139,
	0, 0, 0, 0, 0, 0, 184, 0, 304, 305,
	165, 321, 0, 0, 141, 0, 0, 231, 0, 230,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 178, 188, 250, 209, 251, 189, 226, 225, 227,
	210, 0, 0, 0, 0, 286, 0, 0, 290, 151,
	0, 0, 295, 0, 256, 152, 183, 177, 249, 229,
	146, 191, 284, 201, 208, 0, 0, 241, 264, 155,
	310, 283, 174, 292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 161,
	0, 171, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 285, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	142, 205, 0, 258, 181, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 0, 0,
	0, 0, 253, 0, 311, 169, 0, 0, 0, 0,
	143, 150, 156, 168, 175, 180, 187, 190, 194, 195,
	196, 199, 211, 213, 214, 215, 216, 232, 233, 236,
	237, 239, 240, 243, 244, 245, 246, 247, 248, 254,
	0, 260, 266, 267, 268, 269, 270, 277, 278, 279,
	280, 287, 302, 303, 315, 316, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 0, 224, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 130, 0,
	0, 0, 235, 0, 0, 0, 133, 0, 0, 0,
	164, 0, 263, 0, 308, 0, 0, 262, 207, 301,
	0, 0, 307, 0, 0, 314, 318, 0, 0, 0,
	282, 173, 170, 0, 0, 0, 0, 252, 167, 200,
	0, 0, 0, 160, 0, 0, 0, 281, 298, 135,
	221, 299, 317, 148, 293, 222, 228, 157, 159, 158,
	144, 276, 297, 153, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 0,
	272, 271, 0, 192, 0, 0, 0, 259, 0, 198,
	137, 0, 320, 147, 202, 294, 0, 182, 234, 166,
	0, 242, 0, 132, 255, 218, 219, 217, 220, 185,
	0, 0, 0, 257, 274, 296, 149, 288, 0, 0,
	0, 0, 265, 0, 0, 0, 212, 176, 179, 186,
	193, 0, 261, 289, 313, 0, 145, 138, 291, 306,
	154, 273, 275, 319, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	184, 0, 304, 305, 165, 321, 0, 0, 141, 0,
	0, 231, 0, 230, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 178, 188, 250, 209, 251,
	189, 226, 225, 227, 210, 0, 0, 0, 0, 286,
	0, 0, 290, 151, 0, 0, 295, 0, 256, 152,
	183, 177, 249, 229, 146, 191, 284, 201, 208, 0,
	0, 241, 264, 155, 310, 283, 174, 292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 0, 161, 0, 171, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 285, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 142, 205, 0, 258, 181, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 0, 0, 0, 253, 0, 311, 169,
	0, 0, 0, 0, 143, 150, 156, 168, 175, 180,
	187, 190, 194, 195, 196, 199, 211, 213, 214, 215,
	216, 232, 233, 236, 237, 239, 240, 243, 244, 245,
	246, 247, 248, 254, 0, 260, 266, 267, 268, 269,
	270, 277, 278, 279, 280, 287, 302, 303, 315, 316,
	0, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 0, 224, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	204, 0, 130, 0, 0, 0, 235, 0, 0, 0,
	133, 0, 0, 0, 164, 0, 263, 0, 308, 0,
	0, 262, 207, 301, 0, 0, 307, 0, 0, 314,
	318, 0, 0, 0, 282, 173, 170, 0, 0, 0,
	0, 252, 167, 200, 0, 0, 0, 160, 0, 0,
	0, 281, 298, 135, 221, 299, 317, 148, 293, 222,
	228, 157, 159, 158, 144, 276, 297, 153, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 0, 272, 271, 0, 192, 0, 0,
	0, 259, 0, 198, 137, 0, 320, 147, 202, 294,
	0, 182, 234, 166, 0, 242, 0, 132, 255, 218,
	219, 217, 220, 185, 0, 0, 0, 257, 274, 296,
	149, 288, 0, 0, 0, 0, 265, 0, 0, 0,
	212, 176, 179, 186, 193, 0, 261, 289, 313, 0,
	145, 138, 291, 306, 154, 273, 275, 319, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 184, 0, 304, 305, 165, 321,
	0, 0, 141, 0, 0, 231, 0, 230, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 178,
	188, 250, 209, 251, 189, 226, 225, 227, 210, 0,
	0, 0, 0, 286, 0, 0, 290, 151, 0, 0,
	295, 0, 256, 152, 183, 177, 249, 229, 146, 191,
	284, 201, 208, 0, 0, 241, 264, 155, 310, 283,
	174, 292, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 161, 0, 171,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 285, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 142, 205,
	0, 258, 181, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 0, 0, 0,
	253, 0, 311, 169, 0, 0, 0, 0, 143, 150,
	156, 168, 175, 180, 187, 190, 194, 195, 196, 199,
	211, 213, 214, 215, 216, 232, 233, 236, 237, 239,
	240, 243, 244, 245, 246, 247, 248, 254, 0, 260,
	266, 267, 268, 269, 270, 277, 278, 279, 280, 287,
	302, 303, 315, 316, 0, 0, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 0,
	224, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 130, 0, 0, 0,
	235, 0, 0, 0, 133, 0, 0, 0, 164, 0,
	263, 0, 308, 0, 0, 262, 207, 301, 0, 0,
	307, 0, 0, 314, 318, 0, 0, 0, 282, 173,
	170, 0, 0, 0, 0, 252, 167, 200, 0, 0,
	0, 160, 0, 0, 0, 281, 298, 135, 221, 299,
	317, 148, 293, 222, 228, 157, 159, 158, 144, 276,
	297, 153, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 0, 272, 271,
	0, 192, 0, 0, 0, 259, 0, 198, 137, 0,
	320, 147, 202, 294, 0, 182, 234, 166, 0, 242,
	0, 132, 255, 218, 219, 217, 220, 185, 0, 0,
	0, 257, 274, 296, 149, 288, 0, 0, 0, 0,
	265, 0, 0, 0, 212, 176, 179, 186, 193, 0,
	261, 289, 313, 0, 145, 138, 291, 306, 154, 273,
	275, 319, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 184, 0,
	304, 305, 165, 321, 0, 0, 141, 0, 0, 231,
	0, 230, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 178, 188, 250, 209, 251, 189, 226,
	225, 227, 210, 0, 0, 0, 0, 286, 0, 0,
	290, 151, 0, 0, 295, 0, 256, 152, 183, 177,
	249, 229, 146, 191, 284, 201, 208, 0, 0, 241,
	264, 155, 310, 283, 174, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 161, 0, 171, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	285, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 142, 205, 0, 258, 181, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 0, 0, 0, 253, 0, 311, 169, 0, 0,
	0, 0, 143, 150, 156, 168, 175, 180, 187, 190,
	194, 195, 196, 199, 211, 213, 214, 215, 216, 232,
	233, 236, 237, 239, 240, 243, 244, 245, 246, 247,
	248, 254, 0, 260, 266, 267, 268, 269, 270, 277,
	278, 279, 280, 287, 302, 303, 315, 316, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	136, 0, 0, 0, 224, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	130, 0, 0, 0, 235, 0, 0, 0, 133, 0,
	0, 0, 164, 0, 263, 0, 308, 0, 0, 262,
	207, 301, 0, 0, 307, 0, 0, 314, 318, 0,
	0, 0, 282, 173, 170, 0, 0, 0, 0, 252,
	167, 200, 0, 0, 0, 160, 0, 0, 0, 281,
	298, 135, 221, 299, 317, 148, 293, 222, 228, 157,
	159, 158, 144, 276, 297, 153, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 272, 271, 0, 192, 0, 0, 0, 259,
	0, 198, 137, 0, 320, 147, 202, 294, 0, 182,
	234, 166, 0, 242, 0, 132, 255, 218, 219, 217,
	220, 185, 0, 0, 0, 257, 274, 296, 149, 288,
	0, 0, 0, 0, 265, 0, 0, 0, 212, 176,
	179, 186, 193, 0, 261, 289, 313, 0, 145, 138,
	291, 1296, 154, 273, 275, 319, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 184, 0, 304, 305, 165, 321, 0, 0,
	141, 0, 0, 231, 0, 230, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 178, 188, 250,
	209, 251, 189, 226, 225, 227, 210, 0, 0, 0,
	0, 286, 0, 0, 290, 151, 0, 0, 295, 0,
	256, 152, 183, 177, 249, 229, 146, 191, 284, 201,
	208, 0, 0, 241, 264, 155, 310, 283, 174, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2386, 0, 0, 161, 2388, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 433, 0, 134, 142, 205, 0, 258,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 169, 0, 0, 0, 0, 143, 150, 156, 168,
	175, 180, 187, 190, 194, 195, 196, 199, 211, 213,
	214, 215, 216, 232, 233, 236, 237, 239, 240, 243,
	244, 245, 246, 247, 248, 254, 472, 260, 266, 267,
	268, 269, 270, 277, 278, 279, 280, 287, 302, 303,
	315, 316, 0, 439, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 136, 0, 0, 0, 0, 0,
	0, 0, 459, 0, 0, 434, 0, 431, 0, 0,
	0, 0, 0, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2018,
	0, 0, 445, 443, 0, 0, 0, 446, 473, 0,
	0, 0, 0, 451, 425, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 423, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 437, 455,
	0, 0, 0, 0, 440, 0, 435, 436, 438, 457,
	0, 458, 464, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	0, 0, 0, 0, 0, 426, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 444, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 459, 0, 0, 434, 0,
	431, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 0, 0,
	0, 468, 427, 428, 429, 430, 432, 447, 448, 449,
	450, 462, 461, 460, 463, 467, 470, 469, 471, 0,
	0, 0, 1370, 0, 0, 445, 443, 0, 0, 0,
	446, 473, 0, 0, 0, 0, 451, 425, 0, 453,
	0, 0, 0, 0, 0, 0, 0, 423, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 437, 455, 0, 0, 0, 0, 440, 0, 435,
	436, 438, 457, 0, 458, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 424, 0, 0, 0, 0, 426, 0,
	0, 1312, 0, 452, 454, 0, 0, 0, 444, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 0,
	0, 434, 0, 431, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	466, 468, 0, 0, 0, 427, 428, 429, 430, 432,
	447, 448, 449, 450, 462, 461, 460, 463, 467, 470,
	469, 471, 2388, 0, 0, 0, 0, 0, 445, 443,
	0, 473, 0, 446, 0, 0, 0, 0, 0, 451,
	425, 0, 453, 0, 0, 0, 0, 0, 0, 433,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 455, 0, 440, 0, 0,
	0, 0, 435, 436, 438, 457, 0, 458, 464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 472, 0, 0, 0, 424, 0, 0, 0,
	0, 426, 0, 0, 0, 0, 452, 454, 0, 439,
	0, 444, 0, 0, 0, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 459, 0,
	0, 434, 0, 431, 0, 0, 0, 0, 0, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 468, 0, 0, 0, 427, 428,
	429, 430, 432, 447, 448, 449, 450, 462, 461, 460,
	463, 467, 470, 469, 471, 2397, 0, 0, 445, 443,
	0, 0, 0, 446, 473, 0, 0, 0, 0, 451,
	425, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 437, 455, 0, 0, 0, 0,
	440, 0, 435, 436, 438, 457, 0, 458, 464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 0, 0, 0, 424,
	0, 426, 0, 0, 0, 0, 0, 0, 0, 452,
	454, 444, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 459, 0, 0, 434, 0, 431, 0, 0, 0,
	0, 0, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 466, 468, 0, 0, 0, 427, 428,
	429, 430, 432, 447, 448, 449, 450, 462, 461, 460,
	463, 467, 470, 469, 471, 2395, 0, 0, 0, 0,
	0, 445, 443, 0, 473, 0, 446, 0, 0, 0,
	0, 0, 451, 425, 0, 453, 0, 0, 0, 0,
	0, 0, 433, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 455, 0,
	440, 0, 0, 0, 0, 435, 436, 438, 457, 0,
	458, 464, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 472, 0, 0, 0, 424,
	0, 0, 0, 0, 426, 0, 0, 81, 0, 452,
	454, 0, 439, 0, 444, 0, 0, 0, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 459, 0, 2811, 434, 0, 431, 0, 3027, 0,
	0, 0, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 466, 0, 0, 0,
	0, 427, 428, 429, 430, 432, 447, 448, 449, 450,
	462, 461, 460, 463, 467, 470, 469, 471, 0, 0,
	0, 445, 443, 0, 0, 0, 446, 0, 0, 0,
	0, 0, 451, 425, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 455, 43,
	74, 46, 45, 48, 0, 435, 436, 438, 457, 0,
	458, 464, 0, 0, 2812, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	49, 77, 76, 0, 0, 78, 0, 47, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 424, 0, 426, 0, 0, 0, 57, 58,
	0, 2813, 452, 454, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 2811, 0, 66, 0, 67, 3013, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 465, 466, 0, 0, 0,
	0, 427, 428, 429, 430, 432, 447, 448, 449, 450,
	462, 461, 460, 463, 467, 470, 469, 471, 0, 0,
	2814, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 2812, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 41, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	73, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2813, 424, 2811, 0, 0, 0, 0, 2944, 0,
	0, 0, 452, 454, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2814, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2814, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	3719, -1000, -410, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1903, -1000, -1000, -1000, -1000,
	-1000, -1000, 1049, 617, -1000, 295, 157, 34412, 632, 280,
	35260, -1000, -1000, -1000, 201, 451, 35260, 430, 479, 1325,
	1775, 1324, 37, -73, -89, 135, 26712, 5043, 9, -1000,
	1945, 1948, -1000, -1000, 551, 41, -1000, -1000, -1000, 23770,
	219, -1000, -1000, 1891, 1901, 1665, -1000, 15543, 551, 551,
	33988, 33564, -1000, 1926, 35260, 13769, -1000, 628, 610, -193,
	541, 541, 337, 541, 541, 631, -1000, 301, 989, -1000,
	-1000, -1000, -1000, 966, 35260, 29844, 545, 34836, 545, 545,
	545, 545, 545, 545, 545, 35260, -1000, 675, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 35260, 1323, 1817, 1055, 204, -1000, -1000, -1000,
	1034, -1000, 346, 342, 416, 335, 103, 1061, 1887, -1000,
	1548, 1891, 1891, -1000, -1000, -1000, -1000, -1000, -1000, 761,
	325, 607, 232, 219, 948, 1854, 1816, 1815, 1273, 1814,
	503, 1810, 1596, -42, -1000, 1322, 35260, -1000, -1000, 1240,
	1238, 1628, 1487, 678, 1627, -1000, -1000, 357, 646, 1578,
	400, 1578, 1578, 1578, 1578, 1578, -103, 1578, 1578, 1578,
	89, 1578, 152, 1578, 1578, 1578, 1578, 1578, 1355, -1000,
	-1000, -1000, 358, 1475, 1540, 1624, 584, -1000, -1000, -1000,
	-1000, 1613, 1868, 630, -1000, -132, 1524, 24944, -1000, 1548,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1353, -1000, 1812, 1188, 19065, 1723,
	-1000, -1000, 1105, 1932, -1000, 22593, 673, -1000, 19065, 1661,
	1548, -1000, -1000, 1548, -1000, -1000, -1000, 650, -1000, -1000,
	21413, 21413, 21413, 21413, 21413, 21413, 21413, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, -1000, -1000, 1548, -1000, 14956, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 19065,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548, 1548,
	1548, 1548, 1548, 1548, 1548, 33140, 30269, 35260, 1469, 1463,
	-1000, -1000, 672, 1546, -171, 36108, -1000, -1000, -1000, -1000,
	35684, 29420, 944, -1000, -1000, -1000, -1000, 1809, -1000, -1000,
	671, -1000, 1903, -1000, -1000, 1434, 540, -1000, 4275, 36900,
	-1000, -1000, -1000, 1594, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34836, 35260, 248,
	1321, 1040, 1320, 35684, 35684, -1000, 242, 29844, 29844, 541,
	294, 29844, 265, 1545, 605, 1544, 587, 1342, 35260, 1838,
	1623, 35260, 1318, 1317, 35684, 35684, 29844, 29844, -1000, 13163,
	1543, -1000, 1055, -1000, 4662, 19065, 541, 541, 35260, 35260,
	35260, 35260, 35260, -1000, -1000, 1055, 1055, 1055, 1055, 1030,
	1931, 1030, -1000, 1030, -1000, -1000, 19065, -1000, 21413, 28996,
	831, -1000, -1000, 35260, -1000, 1316, 300, -1000, -1000, -1000,
	-1000, -1000, -1000, 1315, -1000, 1783, 503, 503, -1000, 1283,
	503, 1518, -1000, 940, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 503, -1000, 18478, -390,
	-1000, -1000, 1542, -1000, 233, -1000, -1000, 508, 508, 256,
	29844, 29844, 29844, -1000, 1578, 34836, -1000, 1578, 1578, 1578,
	-106, 1578, 1578, -1000, -1000, 1578, -1000, -1000, -1000, -1000,
	-1000, 1578, -1000, -1000, -1000, 1578, 1578, -1000, 1578, 1578,
	-1000, -1000, -1000, -1000, -1000, 29844, 508, 193, 1541, 508,
	29844, 29844, -1000, 78, 75, 68, 65, -1000, -1000, -1000,
	-1000, 57, 56, -1000, -1000, 1665, -1000, -1000, 219, -1000,
	-1000, 35260, -97, 24944, 1524, 1865, 11345, -1000, -1000, 1077,
	1941, 882, 1511, -1000, -1000, 1523, -1000, 1083, 670, 1230,
	1678, -1000, -1000, -1000, 35260, -1000, 19065, 19065, 19065, 1116,
	-1000, 25531, -1000, -1000, -1000, -1000, 10739, 906, 21413, 1192,
	993, 21413, 21413, 21413, 21413, 21413, 21413, 21413, 21413, 21413,
	21413, 21413, 21413, 21413, 21413, 21413, 1227, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1313, -1000, 219, 1333, 1333,
	729, 729, 729, 729, 729, 729, 27299, 1864, 16717, 16717,
	16717, 1864, 16717, 16717, 16717, 16717, 1864, 1864, 16717, 16717,
	16717, 16717, 34836, 34836, 1864, 16717, 16717, 16717, 1864, 1353,
	1430, 980, 14956, 16717, 16717, 1353, 19065, 19065, 17891, 17304,
	19652, 16717, 1864, 1015, 980, 35684, -1000, -1000, 20826, -1000,
	-1000, -1000, -1000, -1000, 1353, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 16717, 16717, 16717, 16717, 1353, 1353, 16717,
	16717, 16717, 16717, 16717, 1353, 1353, 1353, 1353, 867, 35260,
	-1000, 1486, 1574, -1000, -1000, -1000, 1860, 28148, -1000, 22003,
	-1000, 1548, 867, 1470, 30269, 35260, -1000, -1000, 30269, 35260,
	10133, 32716, 1510, -1000, -124, -115, -171, -1000, -1000, 731,
	-1000, -1000, -1000, 14362, -1000, 11951, 1891, 1665, 7103, 12557,
	-1000, 36900, 1594, -1000, -53, -1000, -1000, -1000, 1559, -1000,
	1559, 291, 7, 1559, 1559, 1559, 1559, 1559, -12, -12,
	-12, -12, -6, -1000, -1000, -1000, -1000, -1000, 1591, 1583,
	-1000, 1559, 1559, 1559, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1572, 311, 1570, 1570, 1570, 1570, 1570,
	464, 464, -1000, 19065, 1598, 1857, 585, 294, 1824, 1835,
	1824, 336, -1000, 669, 1579, -1000, 668, 316, 1480, -1000,
	205, 1440, 35260, -1000, -1000, -1000, -1000, -1000, 35260, 35260,
	29844, 29844, 29844, 573, -1000, 35260, 1521, -1000, -1000, -1000,
	-1000, -1000, 1494, -1000, 1440, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1282, 980, 1312, 1311, 1854, -1000, -1000, -1000,
	1032, -1000, -1000, -1000, -1000, 1055, 35260, 35260, 35260, 1854,
	1055, 980, 822, 1599, 1548, 1353, -1000, -1000, -1000, 1310,
	-1000, 21413, 1518, 1518, -1000, 1518, 503, 1333, 1518, -1000,
	1425, 1074, 1278, 35260, -1000, 24944, -46, -1000, -166, 32292,
	-1000, -1000, -1000, 32292, -1000, 89, 151, -1000, 580, -1000,
	1423, -1000, -1000, -1000, -1000, 1578, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 32292, 127, 180, 32292, 1494,
	1930, -1000, -1000, -1000, -1000, 1884, -1000, 1864, 1353, 153,
	-1000, -1000, -1000, 1548, 1397, 667, -1000, 31705, -1000, 1673,
	1188, 1188, 19065, -1000, -1000, -1000, 11951, 1880, -1000, 1692,
	1690, 1642, -1000, -1000, 906, 1007, 957, -1000, -1000, 1158,
	-1000, -1000, -1000, -1000, 664, 1548, -1000, 3261, -1000, -1000,
	-1000, -1000, 1192, 21413, 21413, 21413, 822, 3261, 3567, 1127,
	3473, 729, 846, 846, 797, 797, 797, 797, 797, 780,
	780, -1000, -1000, -1000, 1353, -1000, -1000, -1000, 16717, 1419,
	-1000, -1000, 980, 662, 1419, 1419, 16717, 1419, 1419, 1419,
	1419, 16717, 16717, 1419, 1419, 1419, 1419, 1515, 1514, 16717,
	1419, 1419, 1419, 16717, -1000, 19065, -1000, 1353, 1419, 1419,
	-1000, 1023, 1204, 824, 1929, 1419, 821, 1928, 1419, 956,
	21413, 21413, 21413, 1419, 16717, 1009, -1000, 19065, 1353, -1000,
	2171, 1419, 1353, 1513, 1419, 1419, -208, -208, 1353, 1419,
	1353, 1419, 1419, -208, -208, -208, -208, 220, 1548, -1000,
	11951, 30269, 30269, 30269, 30269, 30269, -1000, 1657, 1656, -1000,
	1653, 1641, 1659, 24944, 1421, 1353, 348, 28148, -1000, 1548,
	-1000, 24357, 648, 621, 614, 613, 16717, 1911, 30269, 1432,
	-1000, 1432, -1000, 660, -1000, -1000, 35684, -171, -134, -1000,
	-1000, 1510, -1000, 1235, -1000, -1000, 980, -1000, 659, 1812,
	1864, 1509, 6497, -1000, -1000, -1000, -1000, 540, -1000, -1000,
	-1000, 1576, 36697, -1000, 1733, 769, 769, 768, 1294, 1715,
	-1000, -1000, 170, -62, -1000, -1000, -1000, 1231, -12, -12,
	1559, 1559, 289, 1559, -1000, -12, -1000, -1000, -1000, 884,
	1808, 875, 873, 856, 853, -12, 1276, 1276, -1000, -1000,
	-1000, -1000, 1229, -1000, 1572, -1000, 1225, -1000, -1000, -1000,
	-1000, -1000, -1000, 1207, 1617, 34836, -1000, 35260, -1000, 1824,
	-1000, -1000, -1000, 274, -1000, -1000, -1000, 1918, -1000, -1000,
	34836, 28572, 34836, -1000, -1000, 95, 29844, 202, 361, 203,
	-1000, 579, -1000, 562, -1000, -1000, -1000, -1000, -1000, -1000,
	35260, 29844, -1000, -1000, -1000, -1000, 1911, 1309, 1307, -1000,
	-1000, -1000, 1030, 1055, -1000, -1000, 21413, 29844, -1000, 398,
	-1000, 3261, -1000, -1000, -1000, 867, 618, -1000, -1000, -100,
	-1000, -1000, 559, 656, 654, 558, -1000, 107, 29844, -1000,
	34836, -1000, 1925, 1924, 119, 1923, 29844, -1000, 45, 1678,
	-1000, 1508, -1000, 663, 661, 734, 455, 455, -1000, 920,
	455, 1796, 1794, 857, -1000, 238, -1000, 11345, 11345, 1507,
	1275, 1274, -1000, 1671, -1000, -1000, -1000, 35260, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 9527, 16717, -1000,
	822, 3261, 3542, -1000, 21413, -1000, 1419, 16717, -208, 8921,
	-208, -208, 1419, -1000, -1000, -208, -208, 1419, 1419, -208,
	-208, -208, -208, 21413, 21413, 1419, -208, -208, -208, 1353,
	980, -1000, -1000, -1000, 350, 1227, 350, 21413, 21413, -1000,
	21413, 21413, -1000, -1000, 21413, 3445, 3420, 3070, -254, 1492,
	1001, -1000, 19065, 1180, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 31281, -1000, -208, -208, -208, -208, -208, -1000, -1000,
	-1000, -1000, 1614, 11951, 1548, 7709, -1000, 34836, 1485, -1000,
	939, 938, 1574, 1575, 1611, 1460, -1000, -1000, -1000, -1000,
	1647, -1000, 1645, -1000, -1000, 1554, -1000, -1000, 1504, 1548,
	34836, 21413, 648, -1000, 1548, 1548, 1548, 1353, 1903, 19065,
	1432, -1000, -1000, 789, -1000, -1000, -160, -131, -1000, -1000,
	-1000, 11345, -1000, 7103, -1000, 7103, -1000, 26118, 525, 1724,
	526, 1294, 1294, -1000, -1000, 1294, -1000, 1294, -1000, -1000,
	-1000, 1571, -1000, 1082, -1000, -1000, -1000, -1000, -1000, 1548,
	-402, 1215, 21413, 1940, -1000, 1731, -1000, 1730, 1729, 1272,
	-1000, -1000, 1402, 850, 830, -12, -1000, -1000, 1559, -1000,
	778, -1000, -1000, 881, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 744, 1416, -1000, 1414, 1501, -1000, 1409, 116,
	35260, -1000, -1000, 1855, -1000, -1000, -1000, 1801, 920, 920,
	920, 1608, -1000, -1000, -1000, -1000, 1398, 1497, -1000, 4275,
	34836, 34836, 34836, -1000, -266, 158, -1000, 29844, 146, 205,
	391, 1305, 35260, 29844, -1000, -1000, -1000, -1000, -1000, 1854,
	-1000, 3261, 1440, -1000, -1000, -12, 35260, -1000, 29844, 766,
	30856, 29844, 117, 148, -1000, 29844, 29844, 1922, 29844, 1494,
	1271, 1642, 153, 36494, 1294, 611, -1000, -1000, 481, -1000,
	3419, 1715, 1303, 37503, 37303, 34836, 1714, 1708, 1302, 35260,
	34836, -1000, -1000, 37100, 1299, 19065, -1000, 34836, -1000, -1000,
	34836, 653, -1000, 34836, -1000, -1000, -1000, -1000, 1081, 15543,
	-1000, -1000, 1353, -1000, 21413, 3261, -208, -1000, -1000, -1000,
	-1000, 649, -1000, -1000, -208, -1000, -1000, -208, -208, -1000,
	-1000, -1000, -1000, 3227, 3048, -208, -1000, -1000, -1000, -1000,
	1353, 1559, 1559, -1000, 1559, 1570, -1000, 1559, 17, 1559,
	16, 1353, 1353, 3166, 3097, 3012, 2652, 2171, 21413, 21413,
	21413, 1548, -204, -1000, 980, 19065, -1000, -1000, 1298, -1000,
	-1000, -1000, -1000, -1000, -1000, 1834, 1455, 1490, -1000, -1000,
	16130, 1353, 1683, 1397, -1000, 23770, 1395, -1000, 1903, 11951,
	19065, 19065, -1000, -1000, 19065, 1561, -1000, 19065, -1000, -1000,
	-1000, -1000, 34836, 330, -1000, 19065, 1395, 933, -1000, 34836,
	34836, 34836, -1000, 1891, 980, -1000, -1000, -1000, -1000, 6497,
	-1000, 1382, -1000, 1559, 1559, 1705, -1000, 769, -1000, -1000,
	-1000, -1000, -1000, 34836, -1000, 21413, 1852, -1000, 3261, -120,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 742,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -12, 1270, -12,
	1211, -1000, 1209, -1000, -1000, -344, 1557, 219, -1000, 920,
	860, 851, 1266, 35260, 154, 28572, -1000, 4275, 4275, 4275,
	134, 133, -1000, 1058, -1000, -1000, -1000, 1263, 1260, 1259,
	1440, 206, 1057, 167, -1000, 1858, -1000, -1000, 1055, -83,
	-1000, 148, -1000, -1000, -1000, 148, -1000, -1000, 178, 1494,
	1494, 29844, 1494, -1000, -1000, -1000, 37100, 440, 4275, 4275,
	1598, 769, 1697, 526, -1000, -1000, -1000, -1000, -1000, -1000,
	1297, -1000, 759, -1000, 553, 440, 37100, 980, 795, 1066,
	11345, -1000, 1913, -1000, -1000, -1000, 3261, -1000, 8315, -1000,
	-1000, -1000, 21413, 21413, -1000, -1000, -1000, 290, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21413, 21413, 21413, 21413,
	-1000, 2171, 2171, 2171, 21413, 1353, 1258, 980, 854, -1000,
	1696, -1000, 1548, -1000, -1000, 1548, 212, -1000, 34836, 1891,
	-1000, 980, 980, 980, 34836, 980, 1380, -1000, 1548, 23183,
	-1000, 24944, 1373, 1373, 1373, -1000, 725, 26118, 1832, 1832,
	1294, 1294, 1370, 2171, 1548, -1000, 1548, 1548, -1000, -1000,
	740, -1000, 723, 1386, 1377, -1000, 26118, -1000, -1000, 828,
	-1000, -1000, -1000, -1000, -1000, 1883, -1000, 154, -1000, 1256,
	264, 260, -1000, 262, 259, 255, 250, 241, -1000, -1000,
	-1000, -1000, 396, 134, -1000, -79, 1189, 921, 1787, 133,
	-1000, 1183, 1169, 1157, 1151, 177, -1000, -1000, -1000, -1000,
	200, 205, -1000, 388, 1255, -1000, 1761, 1758, 1849, 1849,
	114, 1494, 1465, 1360, -1000, -1000, 1295, -1000, -1000, 1556,
	1294, 1294, -1000, 1293, -1000, -1000, 34836, -1000, 440, 1823,
	1821, 1548, -1000, 1911, 30269, 15543, -1000, -1000, 2171, 2171,
	-1000, -1000, 2171, 2171, 2171, 2171, -1000, -1000, -1000, 150,
	-1000, -1000, 1903, 1900, 1939, -1000, 1490, 1548, -1000, 219,
	-1000, -1000, 1367, -1000, 34836, -1000, -1000, 648, -1000, -1000,
	-1000, 725, -1000, 1292, 920, 1253, -1000, -1000, -1000, -1000,
	-1000, 444, -405, 21413, -1000, -1000, -1000, -1000, -1000, -1000,
	1359, -1000, 219, -1000, -1000, 312, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1768, 1766, 313, -1000, 1252, 1246, -1000,
	454, 1244, 647, -223, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 387, 1291, -1000, 166, -1000,
	-1000, 509, 1748, 1752, 1899, -1000, 29844, -1000, -1000, 30269,
	-1000, -1000, 170, 170, 26118, 1598, 1555, -1000, -1000, -1000,
	21413, -1000, 848, 1909, 1493, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1353, 176, -278, 917, 19065, 11951, 1490, 1353,
	-1000, -1000, -1000, -1000, -1000, 1133, -1000, 35260, -1000, -1000,
	-1000, 2171, 725, -1000, 328, 32155, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1120, -1000, -1000, 1142, 402, 160,
	-1000, 1841, -1000, 1554, 1114, 1758, 1898, 1756, 1754, -1000,
	1242, -267, 1432, 1352, 1553, 26118, 3261, 1350, -1000, 34836,
	1907, 1896, -1000, -1000, 1670, -257, -281, 1353, 215, 215,
	1488, 1478, -1000, -1000, 1552, -405, -1000, 725, -1000, 332,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19065, 19065, 5891, 32155, 132, -1000, 130, -1000, -1000,
	-1000, 1205, -1000, 919, -1000, 1193, -1000, 1895, 1893, -1000,
	196, 1909, 725, 26118, 1348, -1000, 848, 1682, -212, 19065,
	19065, -1000, 1669, -1000, -1000, -1000, 182, -1000, 912, 314,
	902, -1000, 1333, -1000, 34836, -1000, -1000, 1290, 1286, -1000,
	1086, 1132, 222, 207, 3762, -1000, -1000, -1000, -1000, -411,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1156, 1128, 27723,
	1907, -1000, 1335, 725, -1000, 411, -1000, 34836, -1000, 980,
	1473, -1000, 980, -269, 1051, -1000, -1000, -1000, -1000, -1000,
	34836, 1329, -1000, -1000, -1000, 1097, -1000, 19065, 32155, 1879,
	1877, 1873, 1820, 11345, 38009, -1000, -1000, -1000, -1000, 111,
	1440, -212, 725, -1000, 408, 1464, -1000, 1840, 19065, -279,
	182, -1000, 1607, 293, 1024, 32155, -1000, 1090, -412, 423,
	219, 478, 21413, -1000, -1000, -1000, 29844, -1000, -1000, 1548,
	34836, 1548, -1000, -283, -1000, 1601, 1577, 1921, -1000, -1000,
	-1000, -1000, -1000, -1000, 32155, -1000, -414, 32155, 3242, -1000,
	-1000, -1000, 30719, -1000, -1000, -1000, -1000, 208, -1000, -1000,
	3261, 1440, 20239, -1000, -1000, -1000, -1000, 1936, -1000, 1934,
	619, 619, -1000, -415, 37829, -416, 534, 32155, 937, -1000,
	19065, -1000, 478, -1000, 2171, 1353, -1000, -1000, -1000, 435,
	1155, -1000, 37639, 1021, 32155, -1000, -417, 529, 32155, -1000,
	1036, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4675,
	-1000, -419, 32155, 524, 4667, -420, -1000, 488, 32155, -1000,
}

var yyPgo = [...]int{
	0, 2354, 2353, 10, 2352, 325, 2351, 2349, 68, 2345,
	37, 23, 20, 40, 2344, 2070, 2063, 2058, 2056, 2035,
	2343, 7, 2342, 2340, 2032, 2339, 2331, 2030, 2028, 2026,
	2024, 2329, 2328, 2326, 2020, 2016, 2012, 19, 2325, 28,
	2324, 4, 160, 178, 2323, 2, 2320, 2319, 8, 2311,
	2302, 2005, 2301, 2287, 2286, 105, 2285, 2003, 1982, 2284,
	1969, 1967, 2282, 2279, 1962, 1960, 1954, 2275, 189, 2274,
	2273, 2269, 153, 109, 167, 2268, 2267, 2266, 119, 93,
	1897, 130, 55, 116, 254, 2265, 14, 54, 305, 2264,
	2262, 151, 2261, 156, 2260, 174, 2259, 155, 168, 114,
	2258, 2257, 180, 2256, 2255, 2253, 145, 2252, 2247, 183,
	2215, 2246, 2245, 172, 2244, 71, 184, 59, 46, 2242,
	2240, 2238, 2237, 2231, 29, 432, 2225, 108, 170, 2224,
	2221, 95, 2220, 2218, 190, 2217, 2216, 2214, 157, 50,
	2213, 2212, 51, 2211, 97, 84, 2210, 44, 2209, 146,
	2208, 2207, 31, 22, 2205, 62, 2202, 65, 2201, 152,
	111, 182, 2199, 18, 12, 15, 2196, 35, 13, 16,
	48, 27, 82, 73, 141, 110, 2195, 52, 43, 131,
	107, 2194, 101, 103, 45, 2191, 164, 2190, 98, 171,
	142, 144, 166, 2189, 2187, 2185, 1145, 2184, 133, 94,
	2183, 124, 1091, 179, 122, 2181, 104, 2177, 2176, 2175,
	2174, 2173, 96, 120, 2172, 2166, 186, 185, 188, 47,
	32, 79, 2086, 25, 173, 2165, 49, 2162, 2160, 2158,
	3317, 118, 74, 113, 177, 2157, 115, 36, 56, 2156,
	2155, 2154, 2153, 2152, 2151, 1747, 2150, 2144, 2143, 2142,
	375, 125, 2141, 137, 135, 134, 2139, 162, 33, 2138,
	2137, 140, 143, 2132, 2131, 2130, 2129, 139, 72, 163,
	2128, 126, 117, 138, 2127, 92, 2126, 2124, 255, 58,
	2123, 2122, 2119, 106, 102, 2116, 70, 34, 42, 75,
	26, 2115, 2114, 87, 88, 2112, 30, 2110, 5, 3,
	6, 2103, 2102, 2096, 2091, 2085, 2082, 2081, 86, 2080,
	2079, 69, 2078, 2077, 2075, 39, 2074, 2073, 2072, 154,
	129, 53, 175, 90, 17, 2060, 2051, 9, 2049, 132,
	2045, 60, 2043, 57, 2041, 2038, 64, 2022, 2007, 63,
	2001, 1999, 176, 1672, 499, 1989, 165, 161, 61, 78,
	1979, 1964, 0, 1050, 187, 181, 1958, 1956,
}

var yyR1 = [...]int{
	0, 351, 351, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 182, 182, 182,
	182, 181, 181, 90, 90, 88, 88, 95, 6, 6,
	7, 7, 10, 10, 71, 71, 11, 12, 12, 12,
	12, 354, 354, 104, 104, 102, 102, 103, 103, 179,
	179, 13, 13, 13, 186, 186, 191, 191, 191, 194,
	194, 194, 194, 169, 170, 171, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 325, 325,
	334, 334, 334, 335, 335, 333, 333, 333, 333, 333,
	337, 337, 338, 338, 336, 336, 336, 336, 340, 340,
	341, 341, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 328, 328, 328, 34,
	34, 34, 34, 35, 35, 35, 35, 35, 35, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	343, 343, 344, 344, 345, 345, 346, 346, 346, 346,
	347, 347, 347, 347, 347, 348, 348, 348, 348, 348,
	348, 348, 349, 349, 350, 350, 2, 306, 306, 307,
	307, 308, 308, 308, 308, 309, 309, 310, 310, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 25,
	218, 218, 215, 215, 215, 216, 216, 217, 217, 217,
	327, 327, 327, 321, 321, 321, 323, 323, 322, 322,
	322, 324, 324, 329, 329, 329, 329, 329, 331, 331,
	331, 331, 331, 331, 332, 332, 332, 330, 330, 49,
	49, 50, 50, 50, 158, 158, 158, 14, 14, 14,
	14, 14, 20, 22, 22, 38, 38, 39, 23, 23,
	23, 23, 40, 40, 41, 26, 26, 26, 26, 26,
	26, 47, 47, 47, 46, 46, 45, 45, 45, 45,
	45, 45, 24, 24, 24, 24, 48, 48, 43, 43,
	42, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 27, 27, 27, 27, 27, 27, 19,
	305, 305, 305, 37, 37, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 53, 280, 281, 281, 281,
	281, 281, 281, 281, 281, 268, 268, 269, 258, 258,
	258, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 237, 237, 237, 237, 241, 241, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 240, 240,
	240, 240, 240, 240, 240, 240, 242, 242, 242, 242,
	242, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 244, 244,
	244, 244, 244, 244, 244, 244, 267, 267, 245, 245,
	261, 261, 262, 262, 262, 259, 259, 259, 260, 260,
	248, 249, 263, 250, 250, 250, 251, 251, 251, 252,
	252, 257, 257, 256, 256, 256, 256, 256, 256, 253,
	253, 253, 253, 254, 254, 255, 266, 266, 266, 266,
	266, 246, 36, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 292, 292, 208, 208, 209,
	209, 270, 270, 290, 290, 289, 289, 288, 288, 288,
	279, 279, 285, 285, 285, 285, 285, 285, 285, 285,
	274, 274, 274, 273, 273, 275, 275, 278, 278, 287,
	287, 286, 286, 271, 271, 271, 293, 293, 293, 293,
	293, 272, 272, 272, 272, 294, 276, 276, 277, 277,
	277, 299, 300, 298, 298, 298, 298, 298, 121, 121,
	121, 282, 282, 282, 283, 283, 283, 284, 284, 284,
	303, 303, 302, 302, 51, 52, 56, 56, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 157, 157, 157, 213, 213, 297,
	295, 295, 296, 296, 16, 16, 54, 54, 326, 326,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 301,
	301, 301, 18, 18, 57, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	85, 200, 200, 199, 199, 198, 198, 198, 201, 201,
	201, 201, 235, 235, 235, 59, 59, 59, 63, 63,
	66, 66, 66, 64, 65, 28, 29, 29, 29, 29,
	30, 214, 214, 61, 61, 62, 62, 62, 62, 77,
	77, 356, 356, 60, 357, 68, 69, 69, 70, 70,
	70, 204, 204, 74, 74, 74, 72, 72, 72, 73,
	73, 79, 79, 83, 83, 83, 83, 82, 82, 82,
	82, 160, 160, 165, 227, 227, 141, 141, 161, 161,
	166, 166, 166, 167, 167, 168, 168, 168, 168, 168,
	163, 163, 162, 162, 164, 129, 129, 225, 225, 225,
	224, 224, 224, 224, 87, 87, 91, 91, 93, 93,
	93, 93, 93, 96, 143, 143, 114, 114, 115, 115,
	115, 115, 115, 127, 127, 178, 178, 177, 177, 180,
	180, 92, 94, 94, 94, 94, 99, 99, 100, 100,
	101, 101, 212, 212, 232, 232, 232, 105, 105, 105,
	107, 106, 106, 106, 106, 108, 108, 109, 109, 111,
	112, 112, 110, 110, 116, 116, 113, 117, 117, 117,
	117, 118, 118, 84, 84, 84, 84, 84, 84, 84,
	84, 197, 197, 120, 120, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 137, 137, 137, 137, 137,
	137, 122, 122, 122, 122, 122, 122, 122, 78, 78,
	138, 138, 138, 98, 97, 97, 81, 81, 80, 80,
	139, 139, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 132, 132, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 355, 355, 134, 133, 133, 133,
	133, 133, 133, 75, 75, 75, 75, 75, 233, 233,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 150, 150, 76, 76, 148,
	148, 149, 151, 151, 147, 147, 147, 124, 124, 124,
	124, 124, 124, 124, 124, 126, 126, 126, 152, 152,
	140, 140, 86, 153, 153, 154, 155, 155, 156, 156,
	159, 172, 172, 172, 173, 173, 173, 173, 128, 128,
	174, 174, 174, 123, 123, 123, 123, 123, 123, 123,
	176, 176, 175, 175, 175, 175, 183, 183, 142, 142,
	145, 145, 144, 146, 184, 184, 188, 188, 185, 185,
	189, 189, 189, 189, 192, 192, 193, 193, 193, 190,
	190, 190, 187, 187, 187, 229, 229, 229, 195, 195,
	205, 205, 202, 202, 203, 203, 196, 196, 247, 247,
	247, 211, 211, 210, 210, 210, 206, 206, 206, 207,
	207, 226, 226, 222, 222, 228, 228, 223, 223, 230,
	230, 231, 231, 304, 304, 264, 264, 314, 314, 265,
	265, 315, 315, 317, 317, 312, 312, 313, 313, 316,
	316, 31, 318, 318, 319, 319, 320, 320, 320, 320,
	32, 33, 33, 33, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	352, 353,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 1, 3, 4, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 0, 2, 3, 3, 11,
	9, 11, 5, 5, 16, 12, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 4, 3,
	3, 6, 5, 5, 4, 3, 5, 1, 3, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 4, 5, 8, 1, 2, 5, 7, 10,
	8, 11, 1, 2, 5, 5, 5, 5, 6, 3,
	5, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 2, 4, 2, 4, 2, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 3,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 5, 4, 1, 1, 2,
	3, 4, 3, 3, 3, 3, 3, 3, 0, 1,
	1, 0, 2, 3, 2, 2, 2, 2, 2, 6,
	8, 3, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 3, 3, 2, 4, 5, 2, 3,
	4, 2, 2, 3, 3, 3, 3, 3, 4, 1,
	1, 1, 1, 1, 6, 6, 4, 4, 4, 5,
	3, 3, 3, 3, 3, 4, 6, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	2, 3, 1, 0, 3, 3, 0, 2, 2, 0,
	1, 0, 1, 1, 1, 1, 2, 2, 2, 5,
	5, 4, 4, 4, 4, 4, 2, 1, 2, 1,
	2, 2, 3, 2, 2, 2, 2, 1, 1, 1,
	1, 3, 2, 1, 1, 0, 3, 1, 1, 0,
	1, 5, 4, 0, 1, 1, 2, 2, 3, 2,
	0, 1, 3, 5, 3, 3, 5, 3, 2, 2,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 1, 10, 11, 11, 12,
	12, 3, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	0, 2, 0, 2, 1, 5, 1, 3, 5, 4,
	3, 5, 3, 8, 10, 3, 3, 3, 3, 3,
	5, 4, 5, 1, 2, 2, 4, 3, 6, 5,
	3, 9, 2, 2, 0, 1, 2, 0, 1, 7,
	1, 3, 8, 8, 3, 3, 3, 5, 3, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 0,
	1, 1, 3, 2, 3, 3, 4, 3, 5, 5,
	5, 4, 4, 4, 2, 2, 2, 6, 2, 4,
	4, 4, 5, 8, 6, 3, 5, 4, 2, 4,
	3, 2, 4, 5, 6, 2, 6, 6, 3, 3,
	3, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	3, 2, 0, 1, 1, 2, 4, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 2, 6, 0, 1, 0, 3, 0, 1,
	0, 2, 2, 4, 1, 2, 2, 2, 2, 2,
	0, 2, 1, 3, 3, 1, 3, 0, 1, 2,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 1, 2, 2, 4, 2, 6, 1, 4,
	6, 3, 2, 0, 3, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 1, 3, 3,
	2, 1, 1, 3, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 3,
	6, 6, 6, 8, 8, 8, 8, 4, 6, 7,
	7, 7, 9, 4, 7, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	1, 3, 1, 0, 2, 1, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 1, 1,
	0, 2, 4, 2, 4, 1, 3, 5, 4, 6,
	0, 3, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	3, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	3, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -351, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -71, 9,
	10, 29, -53, 180, -52, 183, 182, 218, 184, 211,
	64, 341, -66, 344, 345, -356, -214, 269, 270, 20,
	37, 346, 348, 30, 31, 232, 286, 288, 313, -5,
	-90, -6, 8, 441, 181, 342, 213, 212, 26, 490,
	-352, 68, 611, -155, 15, -68, -357, -68, -68, -68,
	-68, -68, -280, -212, 108, 68, 23, -207, -218, 88,
	432, 188, -216, 282, 284, -205, -206, -215, 242, 252,
	44, 199, 198, 253, 189, 282, 189, 190, 192, 432,
	188, 225, 224, 282, 284, 189, -110, -230, 72, -220,
	202, 596, 307, 210, 487, 253, 606, 294, 341, 357,
	349, 372, 488, 548, 264, 340, 418, 297, 257, 320,
	549, 407, 413, 267, 344, 427, 550, 261, 263, 262,
	247, 457, 268, 36, 214, 368, 303, 242, 551, 543,
	236, 35, 27, 235, 430, 552, 331, 415, 389, 332,
	553, 492, 301, 414, 364, 313, 333, 554, 390, 394,
	555, 419, 287, 334, 556, 557, 558, 191, 293, 559,
	243, 421, 298, 388, 200, 489, 48, 222, 422, 392,
	398, 560, 330, 561, 562, 563, 564, 311, 309, 310,
	312, 254, 259, 53, 186, 396, 395, 397, 260, 417,
	377, 375, 565, 566, 302, 206, 567, 568, 18, 569,
	570, 425, 305, 571, 572, 573, 574, 575, 576, 416,
	391, 393, 241, 116, 577, 308, 412, 317, 491, 291,
	579, 336, 221, 216, 426, 326, 580, 581, 582, 583,
	584, 285, 284, 345, 318, 346, 265, 585, 586, 587,
	588, 251, 234, 429, 420, 52, 403, 589, 321, 337,
	406, 342, 7, 258, 299, 410, 319, 266, 252, 255,
	379, 223, 590, 591, 366, 367, 343, 226, 218, 111,
	428, 542, 282, 338, 229, 592, 593, 256, 230, 347,
	296, 369, 189, 133, 373, 418, 180, 408, 409, 415,
	-274, 416, 224, 227, -235, 189, -200, 407, 287, 308,
	462, 230, 231, 190, 191, 32, 420, 419, 411, -230,
	193, 347, -77, 184, 219, -110, -48, 72, 271, -48,
	29, 72, 72, 36, 72, 346, 410, 410, 75, 491,
	233, 21, -343, -324, 317, -342, -322, 181, 180, 10,
	182, 322, 323, 324, 190, 8, 30, 578, 207, 325,
	326, 6, 211, 327, 328, 225, 9, 329, -327, 74,
	72, -220, 21, -343, -324, 317, -209, -208, 339, 398,
	6, -70, 5, -196, 194, 343, -88, 547, -95, -232,
	-230, -221, 74, 300, 599, 290, 401, 458, 459, 460,
	461, 233, 462, 99, 231, 322, 323, 314, 324, 209,
	117, 240, 219, 279, 411, 278, 283, 463, 464, 465,
	466, 289, 609, 292, 610, 315, 578, 325, 327, 228,
	469, 468, 467, 470, 328, 452, 453, 471, 51, 473,
	472, 474, 192, 81, -8, -3, -173, 17, 16, -74,
	54, 55, -69, -82, 124, -84, -230, -119, 91, -125,
	28, 72, -220, 24, -124, -221, -120, -147, -146, -98,
	133, -234, 122, 123, 130, 92, 176, -132, -130, -131,
	-133, -135, -136, 74, 73, 82, 75, 76, 77, 78,
	83, 458, 459, 460, 461, 462, 209, 219, 463, 464,
	465, 466, 469, 468, 467, 470, 452, 453, 471, 473,
	472, 474, 84, 85, -222, -144, -352, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 58,
	59, 188, 442, 443, 444, 445, 446, 486, 450, 94,
	47, 431, 440, 439, 438, 436, 437, 433, 435, 434,
	195, 432, 128, 441, 475, 476, 477, 478, 479, 480,
	481, 482, 484, 485, 483, -196, -196, 11, -102, -103,
	-110, -113, -230, -185, 343, -192, -189, 419, 420, -190,
	-193, -187, -147, 398, 575, 576, 418, 373, 417, -222,
	-230, -2, -5, 6, -110, -281, -269, -272, -223, 204,
	-294, -222, -219, 201, 72, -220, 493, 300, 185, 181,
	184, 90, 599, 23, 25, 494, 290, 401, 458, 239,
	93, 355, 133, 459, 460, 461, 384, 449, 16, 20,
	203, 94, 187, 370, 373, 132, 81, 442, 233, 462,
	180, 62, 495, 433, 435, 431, 432, 408, 496, 497,
	498, 361, 272, 28, 500, 10, 26, 212, 246, 22,
	501, 126, 359, 182, 237, 97, 98, 503, 99, 231,
	322, 306, 323, 24, 213, 314, 85, 504, 324, 209,
	360, 505, 506, 117, 240, 19, 65, 205, 219, 279,
	11, 411, 199, 227, 605, 507, 286, 13, 456, 115,
	278, 14, 508, 509, 510, 511, 283, 195, 194, 110,
	190, 60, 244, 8, 512, 353, 513, 514, 515, 516,
	517, 354, 176, 87, 518, 519, 107, 520, 56, 463,
	464, 544, 45, 32, 232, 545, 521, 522, 38, 37,
	387, 382, 523, 399, 58, 108, 17, 436, 437, 30,
	524, 525, 486, 465, 220, 386, 352, 381, 546, 526,
	466, 527, 128, 249, 63, 50, 289, 91, 83, 362,
	609, 33, 86, 66, 217, 335, 304, 42, 88, 15,
	245, 61, 454, 112, 292, 610, 315, 484, 365, 196,
	224, 578, 529, 423, 248, 530, 113, 485, 358, 547,
	207, 109, 348, 325, 183, 531, 441, 316, 270, 208,
	532, 288, 59, 533, 114, 188, 409, 534, 6, 535,
	451, 29, 211, 327, 269, 351, 198, 536, 250, 271,
	537, 538, 295, 43, 228, 469, 468, 467, 470, 607,
	57, 444, 445, 471, 328, 594, 189, 96, 452, 453,
	385, 350, 380, 193, 225, 84, 5, 44, 31, 404,
	9, 329, 64, 67, 438, 439, 440, 47, 51, 374,
	371, 539, 473, 378, 472, 474, 192, 608, 95, 12,
	540, 455, 490, 424, 89, 541, 405, 190, 192, 441,
	-203, 195, -203, 225, 224, -217, 250, -203, -203, 189,
	-216, 100, 100, -54, -110, -326, -321, -327, -202, 195,
	-222, -202, -202, -202, -202, -202, -202, -202, -110, 177,
	-102, 72, 29, -201, 108, 12, 432, 188, 189, 224,
	225, 192, -276, 11, 110, 228, 228, 228, 229, 228,
	-199, 410, 412, 226, 413, 414, 12, -85, 108, 19,
	-352, -173, -173, 125, 72, 346, 193, -62, -3, -12,
	-10, -11, -8, 100, -127, 23, 29, 29, 74, 51,
	29, -43, -42, -44, 257, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 29, -305, 68, -264,
	398, 72, -318, -319, -110, 75, 75, 66, 66, 69,
	193, 69, 66, -344, 318, 68, -344, 284, 318, 319,
	252, 282, 192, -344, -344, 284, -344, -344, -344, -344,
	-344, 410, -344, -344, -344, 320, 321, -344, 408, 192,
	-344, -344, -344, -344, -344, 71, 66, 69, 308, 66,
	11, 66, -291, 133, 331, 332, 333, 334, 330, 308,
	335, 336, 337, 228, 338, -68, -7, -5, -352, 21,
	22, 189, 423, 69, -88, -176, -352, -353, 70, -174,
	19, 30, -128, 75, 78, -156, -159, -84, -230, 50,
	-72, 21, 22, 80, 11, -225, 90, 88, 89, 107,
	-224, 23, 72, -220, -221, 74, 177, -84, -122, 110,
	91, 108, 109, 93, 119, 118, 129, 122, 123, 124,
	125, 126, 127, 128, 120, 121, 132, 100, 101, 102,
	103, 104, 105, 106, -197, -352, -98, -352, 178, 179,
	-125, -125, -125, -125, -125, -125, -125, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -8,
	-139, -84, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -150, -84, -352, -355, -134, -352, -355,
	-134, -355, -134, -355, -352, -355, -134, -355, -134, -355,
	-355, -134, -355, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -112, 87,
	-110, -87, -91, -93, -94, -114, -97, -352, -92, -110,
	-98, 72, -110, -102, -354, 69, 11, 67, -354, 69,
	177, 69, -186, -191, 421, 423, 343, -190, -190, -229,
	-222, 74, 28, 100, 29, 177, -155, -68, 70, 69,
	-272, 204, 201, -237, -241, -243, -242, -244, -239, -240,
	370, 373, 377, 375, 371, 376, 133, 374, 379, 380,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 29,
	214, 366, 367, 368, 369, 390, 391, 392, 393, 394,
	395, 396, 397, 349, 372, 488, 350, 351, 352, 353,
	354, 355, 357, 358, 359, 360, 361, 362, 363, 364,
	72, -221, -294, 68, -222, -110, -218, -216, 72, 91,
	72, -109, -222, -230, -116, -222, -230, 251, -330, -329,
	-321, -324, -203, -217, -321, 256, 254, 255, 69, 193,
	69, 193, 71, -102, 24, 66, -104, -110, 72, 72,
	-109, -116, -323, -321, -324, -231, -230, -219, 201, 204,
	-201, 74, -234, -84, -203, -203, -110, -110, -110, -110,
	-110, -201, -201, -201, -201, -198, 11, 110, 11, -198,
	-198, -84, -125, -321, 434, 124, -230, 72, 72, 346,
	72, 33, -43, -43, 74, -43, 69, 100, -43, 70,
	-139, -304, 595, 69, -320, 23, 423, 424, 399, -346,
	189, 227, 224, -346, -342, 326, -323, -322, -321, -344,
	-345, -222, -344, -344, -344, 410, -344, -344, -344, -344,
	-344, -344, -344, -344, -327, -346, 286, 69, -346, -323,
	-321, 330, 330, 330, 330, 330, 330, -74, -8, -110,
	424, 425, -95, 23, -175, -223, -182, 87, 9, 110,
	69, 18, 69, -172, 25, 26, 177, -126, 51, 75,
	78, -204, 49, -110, -84, -84, -84, -137, 83, 91,
	84, 85, -224, 124, -231, -223, -219, -125, -138, -144,
	-98, 79, 110, 108, 109, 93, -125, -125, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -233, 72, 74, 72, -124, -124, -222, -72, -80,
	-83, 124, -84, -230, -80, -80, -72, -80, -80, -80,
	-80, -72, -72, -80, -80, -80, -80, -222, -222, -72,
	-80, -80, -80, -72, -353, 69, -353, -8, -80, -80,
	-353, -84, -84, -147, 74, -80, -147, 74, -80, -125,
	447, 448, 449, -80, -72, -148, -149, 95, -147, -353,
	-125, -80, -81, -80, -80, -80, -353, -353, -83, -80,
	-83, -80, -80, -353, -353, -353, -353, -179, 112, -110,
	29, 69, -105, -107, -106, -108, 56, 60, 62, 57,
	58, 59, 63, -212, -87, -96, 47, -352, -115, 112,
	-117, 23, -232, 64, 194, 65, -352, -179, 67, -87,
	-110, -87, -113, -230, 124, -189, -192, 69, 422, 424,
	425, -186, -251, 132, 66, 86, -84, -223, -231, -173,
	-74, -282, -283, -284, -223, 74, 75, -269, -270, -271,
	-272, -285, 204, -293, 196, 198, 199, 44, -273, 205,
	190, 45, -238, -259, 403, 404, -245, 68, -245, -245,
	378, 370, 373, 371, -245, -245, -245, -245, -245, -250,
	373, -250, -250, -250, -250, 371, 68, 68, -245, -245,
	-245, -261, 68, -261, 365, -262, 68, -262, -262, -262,
	-262, -294, -294, -84, -226, 67, 23, 192, -257, -256,
	-253, -254, -255, -252, 28, 24, -257, -49, 239, 210,
	177, 68, 177, 242, 243, -325, 69, 28, -331, 283,
	-110, -110, -110, -321, -321, -327, -301, 208, 203, -110,
	69, 69, 74, 72, 72, -127, -277, 11, 110, -201,
	-230, -230, -110, -127, -201, -78, 215, 67, -355, -353,
	72, -125, -42, -124, 70, -111, 87, 74, -319, -232,
	398, 424, -347, 124, -222, -347, -350, 490, 193, 70,
	69, -344, -347, 304, 286, -347, 11, -292, 19, -72,
	-353, -56, -55, 185, 182, 183, 186, 187, -297, 401,
	181, 236, 235, 221, -97, -352, -353, 69, 177, -181,
	34, 35, -222, 52, -128, -128, -159, -195, 19, 11,
	47, 47, -73, 57, 83, 84, 85, 177, -352, -138,
	-125, -125, -125, -78, 90, -353, -80, 69, -353, 177,
	-353, -353, -80, -353, -353, -353, -353, -80, -80, -353,
	-353, -353, -353, 69, 69, -80, -353, -353, -353, -81,
	-84, -353, -353, -353, 69, 67, 23, 11, 11, -353,
	11, 11, -353, -353, 11, -125, -125, -125, -353, -80,
	-151, -149, 97, -84, -353, -353, -353, -353, -353, -353,
	-160, 454, -160, -353, -353, -353, -353, -353, -160, -160,
	-160, -160, -123, 29, 47, -352, -8, -352, -184, -188,
	-147, -219, -91, -93, -93, -91, -93, 56, 56, 56,
	61, 56, 61, 56, -106, -232, -353, -353, -143, 238,
	-352, 33, -232, -117, 190, 190, 190, -81, -118, 12,
	-87, -118, -118, 177, -191, -194, 426, 423, 429, 72,
	74, 177, -174, 69, -284, 100, -272, 68, 72, -278,
	-221, 45, -273, 190, 45, -275, -273, -273, -278, 72,
	-278, 45, 83, 91, -248, -249, -263, -266, -246, 23,
	605, 406, 28, 66, 401, 196, 45, 44, 199, 81,
	-260, 405, 75, -250, -250, -245, -245, -245, 378, -245,
	-250, -251, 133, 29, -251, 133, -251, 133, -251, 133,
	-251, 133, -250, -267, 74, -267, 75, -261, 75, 70,
	66, -222, -169, -110, -254, -253, -255, 373, 418, 132,
	430, -50, 8, 9, 10, -222, -306, -307, -308, -222,
	110, 244, 245, -222, -334, 316, -329, 284, 293, 90,
	16, 490, 193, 193, -110, -321, -118, 72, 72, -198,
	-201, -125, -324, 230, 231, -179, 189, -320, 193, 177,
	177, 193, 307, -323, -222, 11, 11, 304, 11, -323,
	340, -204, 69, -213, -273, -303, -271, -272, -302, 197,
	204, 205, -213, 204, 201, -273, 205, 196, 197, -210,
	-273, 193, 23, -213, -213, -279, 100, -213, 32, 32,
	112, -223, -223, 69, 74, 74, 53, -110, -79, -170,
	124, -223, -81, -78, 90, -125, -353, -83, -161, -160,
	124, -231, -161, -161, -353, -161, -161, -353, -353, -161,
	-161, -161, -161, -125, -125, -353, -161, -161, -161, -353,
	-236, 133, 370, 214, 368, 361, 388, 375, 403, 366,
	404, -233, -236, -125, -125, -125, -125, -125, 11, 11,
	11, 487, -155, 99, -84, 96, -222, -165, -352, -160,
	-160, -160, -160, -160, -183, 66, -184, -142, -145, -144,
	-352, -8, -353, -175, 6, 490, -180, -222, -118, 69,
	100, 100, -100, -99, 66, 67, -101, 66, -99, 56,
	56, -178, 68, 69, -144, -352, -180, -125, -117, -352,
	-352, -352, -353, -155, -84, -118, 423, 427, 428, -283,
	-284, -287, -286, -222, -221, 196, -293, 44, -293, -278,
	-278, -278, -278, 68, 83, -352, 606, 75, -125, 9,
	45, 45, 45, 74, 70, -251, 133, -251, 133, -250,
	-245, -251, 133, 72, 133, -251, 133, 70, 69, 70,
	69, 70, 69, -121, 552, 91, -110, -171, 23, 29,
	-279, -279, -279, 66, 70, 69, -237, -222, -222, -222,
	-337, 490, 289, -335, -333, 295, 296, 297, 298, 299,
	-324, 294, -331, 291, 74, 72, -110, -321, -127, -250,
	-110, -323, 124, 124, -222, -323, 304, -349, 490, -323,
	-323, 11, -323, 74, -73, -55, 68, -268, 72, -221,
	-278, -206, 196, 72, 72, 72, -221, 72, -221, -222,
	45, 45, 72, -110, -222, -268, 72, -84, -222, -222,
	177, -222, -182, 69, -82, -353, -125, -161, 177, -161,
	-161, -161, 69, 69, -161, -353, -245, -245, -245, -262,
	-245, 354, -245, 354, -353, -353, 19, 19, 19, 19,
	-353, -125, -125, -125, -352, -76, 451, -84, -227, 72,
	27, -183, 69, -353, -353, 47, -353, -353, 69, -155,
	-188, -84, -84, -84, 68, -84, -177, -222, 238, -353,
	-117, -212, -177, -177, -177, -173, 70, 69, -245, -245,
	45, -275, -177, -125, 23, -131, 452, 453, -251, 133,
	-250, 74, -250, 75, 75, 552, 68, -8, -169, -279,
	72, 133, 72, 133, 74, -110, -309, -310, -311, 81,
	489, 91, 246, 247, 206, 248, 249, 250, -308, -237,
	-237, -237, -340, -341, -339, 292, 314, 315, 300, -338,
	-336, 309, 310, 311, 312, 90, 74, 74, 74, -332,
	283, 90, 292, 16, 23, -201, -312, -199, -349, -349,
	286, -323, -79, -268, -157, 209, 210, -237, -237, -226,
	-275, 45, 72, -211, 193, 23, 193, -157, -268, 29,
	182, 87, -223, -89, 11, -170, -170, 124, -125, -125,
	-250, 72, -125, -125, -125, -125, -353, -353, -353, -125,
	-353, 74, -141, 112, 45, -145, -142, 47, -8, -352,
	-222, -173, -177, 70, 69, -144, -115, -232, -353, -353,
	-353, -289, -288, 67, 200, 81, -286, -172, -172, -278,
	-278, 70, -353, -352, -251, 133, -251, 133, 70, 70,
	-287, -169, -171, 72, 133, 19, -170, -311, 74, 250,
	246, 250, 250, 250, 250, 251, -328, 81, 290, -339,
	301, 557, 285, 316, 75, 75, 111, 30, 31, -336,
	75, 75, 75, 75, -333, 16, 490, -331, 291, 74,
	74, -313, 38, -315, 39, -348, 23, -348, 304, 11,
	70, 72, -238, -238, 68, -278, -278, 72, -222, -157,
	28, 28, -352, -118, -87, -82, -353, -353, -353, -353,
	-353, -353, -75, 110, 490, -155, 16, 9, -142, -8,
	70, -222, -117, -288, 72, -279, 74, 207, -258, 608,
	607, -125, 70, -8, 237, -171, 36, 36, 242, 243,
	74, 74, 28, 302, 176, 28, 75, 176, 457, 291,
	74, 72, 292, -247, 194, -316, 43, -314, -265, 42,
	16, -321, -87, -287, -226, 68, -125, -295, -296, 112,
	-152, 13, -170, -353, 488, 63, 491, -166, 114, 113,
	-139, -184, -353, 75, -110, -353, -290, -289, -169, 238,
	-21, -3, -10, -11, -12, -13, -15, -51, -16, -17,
	-22, -23, -18, -57, -58, -66, -64, -65, -61, -60,
	-26, -24, -27, -19, -28, -29, -30, -34, -35, -25,
	-36, 94, 195, 272, 341, 75, 28, 75, 28, 305,
	292, 23, -178, 75, -315, 16, -317, 40, 41, 74,
	490, -118, 70, 68, -287, -353, 69, -222, -153, 14,
	16, 53, 489, 492, -353, -167, 93, -168, 111, 457,
	-129, 75, 176, -167, 68, -258, -158, 240, 241, -169,
	-84, -84, 72, -47, -228, 275, 276, 277, -223, -37,
	-21, 303, 303, 74, 38, 114, 74, 16, 16, 284,
	-152, -290, -287, 70, -296, 47, -163, 455, -154, -84,
	-140, -86, -84, 53, -168, 116, 117, 238, 116, 117,
	-124, -177, -169, 72, 72, -38, -39, 95, 96, 273,
	274, 278, -237, 69, 611, 74, 74, 28, 289, 21,
	-324, -153, 70, -290, 222, -162, -164, -222, 69, 490,
	90, -222, 70, -171, 99, 97, -39, -84, -37, 19,
	19, 19, 28, -223, 99, -21, 306, -163, -290, 223,
	69, 23, -86, 491, -168, -299, -300, 66, -14, -20,
	-13, -10, -11, -12, 341, 94, -37, 96, 611, -48,
	75, -8, -46, -45, 75, -48, 280, 91, 281, 72,
	-125, -324, -352, -164, -165, 492, -300, 66, -299, 66,
	10, 9, -169, -37, 611, -37, 99, 97, -40, -41,
	98, -21, 69, 279, -125, 220, -298, 208, 203, 206,
	29, -298, 611, 99, 611, 195, -37, 99, 97, -41,
	-84, -45, -353, -353, 202, 28, 83, 99, 94, 611,
	195, -37, 96, 99, 611, -37, 195, 99, 611, 195,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 764, 764, 764, 764,
	764, 764, 862, -2, 624, 0, 0, 0, 0, -2,
	737, 738, 739, 743, 744, 759, 761, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 41,
	0, 0, 64, 65, 1216, 0, 762, 751, 752, 0,
	0, 1800, 2, 1154, 0, 773, 766, 0, 1216, 1216,
	0, 0, 96, 0, 0, 0, 863, 0, 0, 0,
	1214, 1214, 247, 1214, 1214, 0, 1230, 245, 0, 1211,
	1226, 1227, 1228, 0, 0, 0, 1212, 0, 1212, 1212,
	1212, 1212, 1212, 1212, 1212, 0, 683, 882, 1239, 1240,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 0, 0, 0, 728, 0, 694, 695, 696,
	0, 698, 0, 0, 0, 0, 0, 708, 711, 715,
	0, 1154, 1154, 570, 571, 572, 733, 734, 722, 735,
	0, 0, 0, 0, 0, 843, 322, 324, 0, 344,
	0, 347, 350, 1245, 745, 0, 0, 1270, 1271, 0,
	0, 0, 0, 0, 1684, 190, 261, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 0, 192, 192, 192,
	1692, 192, 0, 192, 192, 192, 192, 192, 260, 250,
	251, 252, 0, 0, 0, 1684, 0, 550, 547, 548,
	764, 0, 768, 0, 1217, 740, 53, 0, 55, 1170,
	864, 865, 866, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 0, 39, 1160, 0, 0, 776,
	774, 775, 765, 0, 787, 817, 0, 893, 0, 899,
	901, -2, -2, 0, 942, 943, 944, 945, 946, 947,
	0, 0, 0, 0, 0, 0, 0, 970, 971, 972,
	973, 974, 975, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1753, 1754, 1755, 1756, 1758, 1765, 1768, 1773, 1774,
	1775, 1776, 1786, 1787, 1788, 1789, 1791, 1792, 1793, 1795,
	1796, 1797, 903, 904, 1124, 1183, 0, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 77, 882, 81, 1733, 0, 1188, -2, -2, 1190,
	0, 0, 0, -2, -2, -2, -2, 0, -2, 1124,
	0, 97, 1146, 764, 98, 0, 387, 388, 0, 1306,
	594, 1237, 1238, 1303, 1233, 1234, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1304, 1305, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 1556, 0, 0, 245,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 1214,
	247, 0, 0, 664, 0, 665, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 682, 0,
	684, 685, 728, 687, 0, 0, 1214, 1214, 0, 0,
	0, 0, 0, 596, 597, 728, 728, 728, 728, 725,
	0, 725, 705, 725, 723, 724, 0, 710, 0, 0,
	0, 718, 719, 0, 746, 0, 0, 753, 755, 756,
	757, 758, 754, 0, 763, 0, 0, 0, 326, 0,
	0, 346, 328, 0, 331, 332, 333, 334, 335, 336,
	337, 338, 339, 340, 341, 342, 0, 349, 0, 1243,
	1246, 750, 1261, 1262, 0, 1272, 1273, 196, 196, 0,
	0, 0, 0, 159, 192, 0, 161, 192, 192, 192,
	0, 192, 192, 168, 169, 192, 171, 172, 173, 174,
	175, 192, 177, 178, 179, 192, 192, 182, 192, 192,
	185, 186, 187, 188, 189, 259, 196, 0, 0, 196,
	0, 0, 532, 0, 0, 0, 0, 537, 538, 539,
	540, 0, 0, 543, 544, 773, 43, 60, 0, 769,
	770, 0, 0, 0, 54, 0, 0, 59, 1801, 47,
	0, 0, 1155, 1158, 1159, 1147, 1148, 1151, 0, 0,
	771, 777, 778, 767, 0, 788, 0, 0, 0, 0,
	818, 0, 820, 821, 822, 823, 0, 897, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 921, 922, 923,
	924, 925, 926, 927, 900, 0, 914, 0, 0, 0,
	963, 964, 965, 966, 967, 968, 0, 776, 0, 0,
	0, 776, 0, 0, 0, 0, 776, 776, 0, 0,
	0, 0, 0, 0, 776, 0, 0, 0, 776, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 1116, 0, 1027, 1036, 0, 1028,
	1037, 1029, 1038, 1030, 0, 1031, 1039, 1032, 1040, 1033,
	1034, 1041, 1035, 0, 936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	881, 0, 824, 826, 827, 828, -2, 0, 832, 887,
	934, 1239, -2, 0, 0, 0, 71, 72, 0, 0,
	0, 0, 82, 84, 0, 0, 1733, 1191, 1192, 506,
	1205, 1206, 1207, 0, 1203, 0, 1154, 773, 611, 0,
	389, 0, 0, 401, 495, 413, 414, 415, 488, 417,
	488, 488, 0, 488, 488, 488, 488, 488, 503, 503,
	503, 503, 503, 459, 460, 461, 462, 463, 0, 0,
	436, 488, 488, 488, 440, 478, 479, 480, 481, 482,
	483, 484, 485, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 490, 490, 492, 492, 492, 492, 492,
	0, 0, 593, 0, 1231, 0, 0, 247, -2, 0,
	-2, 0, 877, 0, 0, 884, 0, 0, 108, 277,
	263, 107, 0, 241, 246, 242, 243, 244, 0, 0,
	0, 0, 254, 679, 1213, 0, 672, 73, 673, 674,
	675, 676, 677, 256, 678, 883, 1241, 1242, 1303, 1306,
	686, 729, 0, 731, 0, 0, 843, 691, 692, 693,
	598, 699, 700, 701, 707, 728, 0, 0, 0, 843,
	728, 709, 928, 712, 1044, 0, 736, 748, 747, 0,
	760, 0, 323, 325, 327, 345, 0, 0, 348, 351,
	0, 0, 0, 0, 1264, 0, 1266, 1268, 0, 0,
	197, 198, 199, 0, 191, 0, 214, 262, 0, 160,
	0, 194, 162, 163, 164, 192, 166, 167, 170, 176,
	180, 181, 183, 184, 258, 0, 0, 0, 0, 157,
	0, 533, 534, 535, 536, 545, 542, 776, 0, 0,
	741, 742, 56, 0, 0, 1172, 37, 0, 1161, 0,
	0, 0, 0, 1150, 1152, 1153, 0, 0, 1135, 0,
	0, 779, 772, 40, 894, 895, 896, 898, 915, 0,
	917, 919, 819, 789, 0, 1125, -2, 905, 906, 930,
	931, 932, 0, 0, 0, 0, 928, 910, 0, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 962, 1058, 1059, 0, 960, 961, 969, 0, 0,
	938, 783, 784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 936, 933, 0, 1182, 0, 0, 0,
	1009, 0, 0, 945, 1127, 0, 945, 1127, 0, 0,
	0, 0, 0, 0, 0, 1122, 1119, 0, 0, 1045,
	0, 0, 0, 937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 880,
	0, 0, 0, 0, 0, 0, 867, 0, 0, 870,
	0, 0, 0, 0, 0, 0, 0, 0, 836, 0,
	838, 0, 887, 0, 0, 0, 936, 891, 0, 891,
	76, 891, 78, 0, 886, 1189, 0, 0, 0, 87,
	88, 83, 1193, 0, 1199, 1200, 1201, 1125, 0, 1160,
	776, 386, 612, 614, 617, 618, 619, 390, 392, 393,
	394, 0, -2, 585, 1459, 1496, -2, -2, 577, 1357,
	-2, -2, 397, 498, 496, 497, 416, 0, 503, 503,
	488, 488, 488, 488, 445, 503, 448, 451, 452, 506,
	0, 506, 506, 506, 506, 503, 0, 0, 437, 438,
	439, 428, 0, 429, 490, 431, 0, 432, 433, 434,
	435, 591, 592, 0, 0, 0, 93, 0, 102, -2,
	513, 514, 515, 0, 510, 1215, 103, 0, 279, 280,
	0, 217, 0, 248, 249, 110, 0, 0, 264, 0,
	385, 0, 666, 0, 668, 253, 670, 680, 681, 671,
	0, 0, 730, 688, 689, 690, 891, 0, 0, 702,
	726, 727, 725, 728, 706, 720, 0, 0, 713, 0,
	749, 844, 329, 330, 352, 79, 0, 1244, 1263, 0,
	1267, 1269, 0, 200, 202, 0, 151, 0, 0, 193,
	0, 165, 0, 0, 0, 0, 0, 541, 0, 771,
	61, 625, 626, -2, 657, 1223, 657, 657, 643, 560,
	657, 0, 0, 0, 57, 0, 1171, 0, 0, 48,
	0, 1598, 51, 0, 1156, 1157, 1149, 0, 1208, 1209,
	1136, 1137, 94, 780, 916, 918, 920, 0, 936, 907,
	928, 911, 0, 908, 0, 902, 0, 0, 798, 0,
	798, 798, 0, 1023, 1008, 798, 798, 0, 0, 798,
	798, 798, 798, 0, 0, 0, 798, 798, 798, 0,
	941, -2, 1006, 1007, 0, 0, 0, 0, 0, 1051,
	0, 0, 1052, 1017, 0, 0, 0, 0, 0, 1146,
	0, 1120, 0, 0, 1026, 1046, 1047, 1048, 1049, 1050,
	995, 0, 996, 0, 0, 0, 0, 0, 1002, 1003,
	1004, 1005, 1176, 0, 0, 0, 1165, 0, 891, 1184,
	0, 0, 825, 858, 860, 0, 855, 868, 869, 871,
	0, 873, 0, 875, 876, 845, 831, 935, 833, 0,
	0, 0, 887, 842, 0, 0, 0, 0, 1146, 0,
	891, 69, 70, 0, 85, 86, 0, 0, 92, 507,
	508, 0, 216, 0, 615, 0, 391, 0, 578, 0,
	0, 577, 577, 573, 574, 577, 576, 577, 568, 578,
	569, 0, 402, 0, 404, 405, 406, 407, 408, 0,
	0, 0, 0, 0, 502, 0, 527, 529, 0, 0,
	412, 499, 0, 506, 506, 503, 443, 444, 488, 449,
	506, 453, 470, 0, 454, 471, 455, 472, 456, 473,
	457, 474, 506, 0, 486, 0, 0, 430, 0, 608,
	0, 1232, 95, 0, 516, 517, 518, 0, 560, 560,
	560, 0, 281, 282, 283, 878, 0, 218, 219, 0,
	0, 0, 0, 885, 120, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 74, 257, 697, 599, 600, 843,
	704, 929, 714, 716, 717, 503, 0, 1265, 0, 0,
	0, 0, 0, 212, 195, 0, 0, 0, 0, 158,
	0, 779, 0, 0, 577, 0, 644, 645, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1224, 1225, 0, 0, 0, 561, 0, 652, 653,
	0, 1174, 1173, 0, 49, 50, 1162, 38, 47, 0,
	790, 1126, 0, 909, 0, 912, 798, 939, 980, 799,
	785, 0, 981, 982, 798, 984, 985, 798, 798, 989,
	988, 987, 990, 0, 0, 798, 993, 992, 994, 976,
	0, 488, 488, 1105, 488, 492, 1108, 488, 1110, 488,
	1113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1117, 1025, 1123, 0, 791, 792, 794, 997,
	998, 999, 1000, 1001, 62, 0, 1176, 1163, 1178, 1180,
	0, 0, 0, 0, -2, 1552, 0, 849, 1146, 0,
	0, 0, 852, 859, 0, 0, 853, 0, 854, 872,
	874, 829, 0, 0, 834, 0, 0, -2, 841, 0,
	0, 0, 851, 1154, 892, 68, 89, 90, 91, 613,
	616, 0, 579, 488, 488, 0, 583, 575, 584, 562,
	564, 565, 567, 0, 403, 0, 0, 411, 500, 0,
	526, 528, 530, 531, 489, 441, 466, 442, 467, 506,
	450, 446, 468, 504, 505, 458, 475, 503, 0, 503,
	0, 493, 0, 595, 609, 0, 0, 0, 93, 560,
	0, 0, 0, 0, 225, 0, 221, 0, 0, 0,
	128, 0, 111, 112, 113, 115, 116, 0, 0, 0,
	109, 0, 266, 0, 269, 270, 667, 669, 728, 1255,
	879, 212, 201, 203, 204, 212, 215, 152, 0, 153,
	155, 0, 154, 546, 94, 627, 0, 654, 0, 0,
	1231, 575, 0, -2, 630, 635, 636, 637, 638, 639,
	0, 650, 0, 632, 0, 654, 0, 647, 0, 0,
	0, 52, 45, 94, 94, 977, 913, 979, 0, 983,
	978, 986, 0, 0, 991, 1010, 1102, 503, 1106, 1107,
	1109, 1111, 1112, 1114, 1012, 1011, 0, 0, 0, 0,
	1018, 0, 0, 0, 0, 0, 0, 1121, 796, 795,
	0, 63, 0, 1181, -2, 0, 0, 80, 0, 1154,
	1185, 1186, 1187, 856, 0, 861, 0, 847, 0, 887,
	839, 0, 0, 0, 0, 67, 552, 0, 1151, 1151,
	577, 577, 0, 0, 0, 501, 0, 0, 447, 469,
	506, 487, 506, 0, 0, 610, 0, 93, 95, 0,
	521, 522, 523, 524, 525, 0, 94, 226, 227, 0,
	0, 0, 232, 0, 0, 0, 0, 0, 220, 222,
	223, 224, 146, 129, 130, 0, 0, 0, 0, 121,
	122, 0, 0, 0, 0, 0, 117, 118, 119, 265,
	0, 0, 268, 0, 0, 703, 1257, 1251, 205, 205,
	0, 156, 0, 0, 629, 655, 0, 401, 401, 0,
	577, 577, 646, 0, 1221, 1222, 0, 641, 654, 0,
	0, 0, 1175, 891, 0, 0, 781, 786, 0, 0,
	1103, 1104, 0, 0, 0, 0, 1019, 1020, 1021, 1053,
	1024, 1118, 1146, 0, 0, 1179, 1164, 0, 1168, 0,
	850, 66, 0, 846, 0, 835, 837, 887, 888, 889,
	890, 551, 555, 0, 560, 0, 580, 581, 582, 563,
	566, 0, 398, 0, 464, 476, 465, 477, 491, 494,
	0, 100, 0, 519, 520, 0, 95, 228, 229, 230,
	231, 233, 234, 0, 0, 0, 106, 0, 0, 131,
	0, 0, 0, 0, 141, 142, 143, 144, 145, 123,
	124, 125, 126, 127, 114, 0, 0, 267, 0, 272,
	273, 1218, 1259, -2, 0, 149, 0, 150, 213, 0,
	628, 656, 395, 396, 0, 1231, 0, 631, 640, 642,
	0, 649, 0, 1138, 46, 94, 1042, 1043, 1013, 1015,
	1014, 1016, 0, 0, 0, 800, 0, 0, 1167, 0,
	857, 848, 840, 556, 557, 0, 559, 0, 409, 399,
	400, 0, 553, 93, 0, 0, 235, 236, 237, 238,
	147, 148, 132, 133, 0, 135, 136, 0, 0, 0,
	275, 0, 271, 845, 0, 1251, 0, 1253, 0, 1250,
	0, 206, 891, 0, 0, 0, 648, 0, 660, 0,
	1143, 0, 782, 1022, 0, 0, 0, 0, 0, 0,
	797, 1177, -2, 558, 0, 398, 99, 554, 101, 284,
	93, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 0, 0, 0, 0, 0, 137, 0, 139, 140,
	274, 0, 36, 0, 1258, 0, 1256, 0, 0, 1252,
	0, 1138, 553, 0, 0, 659, 0, 0, 810, 0,
	0, 1054, 0, 1057, 793, 801, 0, 804, 0, 0,
	0, 815, 0, 802, 0, 410, 93, 0, 0, 105,
	0, 0, 1233, 0, 0, 311, 312, 313, 1235, 0,
	353, 134, 138, 276, 1219, 1220, 1260, 0, 0, 0,
	1143, 633, 0, 553, 661, 0, 44, 0, 1144, 1145,
	1139, 1140, 1142, 1055, 0, 805, 806, 807, 808, 809,
	0, 0, 95, 285, 286, 0, 295, 0, 0, 0,
	0, 0, 309, 0, 0, 1254, 1248, 207, 208, 209,
	211, 810, 553, 651, 0, 811, 812, 0, 0, 0,
	0, 816, 586, 0, 0, 0, 296, 0, 0, 0,
	0, 0, 0, 1236, 239, 354, 0, 42, 634, 0,
	0, 0, 1141, 0, 803, 587, 588, 0, 93, 287,
	288, 289, 290, 291, 0, 293, 0, 0, 0, 305,
	306, 307, 0, 314, 316, 317, 318, 0, 320, 321,
	310, 210, 0, 813, 814, 1056, 589, 0, 590, 0,
	0, 0, 104, 0, 0, 0, 0, 0, 0, 302,
	0, 308, 0, 319, 0, 0, 601, 603, 604, 0,
	0, 602, 0, 0, 297, 298, 0, 0, 0, 303,
	0, 315, 662, 663, 605, 606, 607, 292, 294, 0,
	300, 0, 0, 0, 0, 0, 299, 0, 304, 301,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 611,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:538
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:542
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:584
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:590
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:596
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:623
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:634
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:641
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:647
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:655
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:672
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:686
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:716
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:744
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:750
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 63:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:762
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
			yyVAL.str = InsertStr
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.str = ReplaceStr
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:784
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:790
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:794
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:798
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:802
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:807
		{
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:812
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:816
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:841
		{
			yyVAL.partitions = nil
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:845
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:855
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:862
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:881
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:885
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:889
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:895
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:899
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:903
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:907
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:912
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:917
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:922
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:937
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:942
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:947
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 100:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:951
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:957
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:963
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:971
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 104:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:979
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 105:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:983
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:987
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1006
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1015
		{
			yyVAL.accountNames = nil
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1024
		{
			yyVAL.tlsOptionItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.tlsOptionItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1032
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1038
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1042
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1048
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1052
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1060
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1069
		{
			yyVAL.accountLimitItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1079
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1106
		{
			yyVAL.passLockItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1130
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1134
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1146
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1150
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1154
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1158
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1162
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1174
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1183
		{
			yyVAL.str = ""
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1198
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1203
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1207
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1211
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1217
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1222
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1226
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1230
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1238
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1252
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1268
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1272
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1280
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1284
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1292
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1360
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1370
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1374
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1379
		{
			yyVAL.strs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1383
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1398
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1437
		{
			yyVAL.grantAssumption = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1441
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1445
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1449
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1453
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1457
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1461
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1466
		{
			yyVAL.boolean = false
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1470
		{
			yyVAL.boolean = true
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1475
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1479
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1486
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1498
		{
			yyVAL.procedureParams = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1518
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1530
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1535
		{
			yyVAL.characteristics = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1545
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1549
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1555
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1559
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1575
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1587
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1597
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1607
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1663
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1671
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1691
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1699
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1735
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1739
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1743
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1749
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1761
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1769
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1775
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1779
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1783
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1793
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = BeforeStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.str = AfterStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = InsertStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = UpdateStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = DeleteStr
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1822
		{
			yyVAL.triggerOrder = nil
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1852
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1856
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1866
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1872
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1878
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 299:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1883
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1888
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1894
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1912
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1918
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1922
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1926
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 308:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1930
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1938
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1999
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2003
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2007
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2027
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &Resignal{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2097
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2109
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2120
		{
			yyVAL.exprs = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.exprs = nil
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2179
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2195
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2212
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2222
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2231
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2268
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2281
		{
			yyVAL.columnType = ColumnType{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2330
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2348
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2357
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2366
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2525
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2533
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2537
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2549
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2553
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2557
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2561
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2569
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2708
		{
			yyVAL.sqlVal = nil
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2717
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2721
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2729
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2739
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2747
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2760
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2776
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2787
		{
			yyVAL.str = ""
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2791
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2800
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2813
		{
			yyVAL.boolean = false
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.boolean = true
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2822
		{
			yyVAL.charsetCollates = nil
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2858
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2862
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2866
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2870
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2876
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2880
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2886
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2892
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.colKeyOpt = colKey
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2908
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2920
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2946
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2966
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2975
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2986
		{
			yyVAL.str = ""
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = yyDollar[1].str
		}
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2992
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2996
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3001
		{
			yyVAL.indexOptions = nil
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3025
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3030
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3036
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3052
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3056
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3060
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3064
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3077
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3081
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3087
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3095
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3110
		{
			yyVAL.str = ""
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			yyVAL.str = yyDollar[1].str
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3119
		{
			yyVAL.str = ""
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3139
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3149
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3153
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3157
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 586:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3163
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 587:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3167
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 588:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3171
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 589:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3175
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 590:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3179
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3185
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3193
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3203
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3252
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3256
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3260
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3265
		{
			yyVAL.boolean = true
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3269
		{
			yyVAL.boolean = true
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.boolean = false
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3278
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.str = yyDollar[1].str
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3298
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3330
		{
			yyVAL.str = string("")
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3334
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3343
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3360
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3366
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3373
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3384
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3388
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 633:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3393
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 634:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3397
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3401
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3411
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3416
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3421
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3425
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3429
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3436
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3446
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3452
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3458
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 648:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3467
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3471
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 651:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3481
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3487
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3491
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3496
		{
			yyVAL.columnOrder = nil
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3504
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3509
		{
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3511
		{
		}
	case 659:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3515
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3521
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3525
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 662:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3531
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 663:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3535
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3541
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3545
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3555
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3567
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3573
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3581
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3585
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3593
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3601
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3609
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3617
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3625
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3633
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3642
		{

		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3660
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3672
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3677
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3681
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3685
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3689
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3693
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3698
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3702
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3706
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3710
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3714
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3722
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3726
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3730
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3734
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3738
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3742
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 703:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3746
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3751
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3760
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3764
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3772
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3778
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3790
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3795
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3799
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3808
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3812
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3820
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3826
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			yyVAL.boolean = false
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.boolean = true
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3852
		{
			yyVAL.str = ""
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3856
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3866
		{
			yyVAL.showFilter = nil
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3870
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3874
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3878
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = SessionStr
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.str = GlobalStr
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3898
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3902
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.statement = &Begin{}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3922
		{
			yyVAL.statement = &Begin{}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3926
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3930
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.statement = &Commit{}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.statement = &Rollback{}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3954
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3958
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3962
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3966
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3972
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3977
		{
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3982
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3986
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = ""
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4021
		{
			setAllowComments(yylex, true)
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4031
		{
			yyVAL.bytes2 = nil
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = UnionStr
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = UnionAllStr
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = UnionDistinctStr
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4054
		{
			yyVAL.byt = 0
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.byt = 1
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.str = SQLCacheStr
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4076
		{
			yyVAL.str = ""
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4080
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.str = DistinctStr
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4089
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.str = StraightJoinHint
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4107
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4126
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4130
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4144
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4148
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 793:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4164
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4169
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4177
		{
			yyVAL.exprs = nil
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4181
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4186
		{
			yyVAL.over = nil
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.over = yyDollar[1].over
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4195
		{
			yyVAL.frame = nil
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4203
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4210
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4248
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4256
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4275
		{
			yyVAL.window = nil
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.window = yyDollar[2].window
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4287
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4293
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4306
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4311
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4319
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4325
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4333
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4361
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4377
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4384
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4390
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4394
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 837:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4405
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4420
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 840:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4424
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4432
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4443
		{
			yyVAL.expr = nil
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4452
		{
			yyVAL.columns = nil
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4462
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4466
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4482
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4495
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4499
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4503
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4507
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4513
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4515
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4525
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4527
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4530
		{
			yyVAL.empty = struct{}{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.empty = struct{}{}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4541
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = JoinStr
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = JoinStr
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = JoinStr
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.str = StraightJoinStr
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4567
		{
			yyVAL.str = LeftJoinStr
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yyVAL.str = LeftJoinStr
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = RightJoinStr
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = RightJoinStr
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = NaturalJoinStr
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4589
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4609
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4615
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4629
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4645
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4650
		{
			yyVAL.indexHints = nil
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4654
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4658
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 890:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4662
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4667
		{
			yyVAL.expr = nil
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4671
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4681
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4689
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4693
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4697
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4701
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4705
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4715
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4731
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4735
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4739
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4743
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4747
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4755
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4759
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4773
		{
			yyVAL.str = IsNullStr
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4777
		{
			yyVAL.str = IsNotNullStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4781
		{
			yyVAL.str = IsTrueStr
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4785
		{
			yyVAL.str = IsNotTrueStr
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.str = IsFalseStr
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{
			yyVAL.str = IsNotFalseStr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.str = EqualStr
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.str = LessThanStr
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.str = GreaterThanStr
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = LessEqualStr
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = GreaterEqualStr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = NotEqualStr
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = nil
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4858
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4868
		{
			yyVAL.selectExprs = nil
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4885
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4895
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4899
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4903
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4915
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4919
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4931
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4935
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4987
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4995
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5009
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5013
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5017
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5037
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5041
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5051
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 979:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5055
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5059
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5063
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 986:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5124
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5132
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5136
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5140
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5144
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5148
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5152
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5156
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5160
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5164
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5175
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5179
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5183
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5187
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1011:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5195
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1012:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5199
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1013:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5203
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1015:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1016:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5215
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5219
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5227
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5231
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1021:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5235
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1022:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5239
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5243
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1024:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5251
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5255
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5265
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5269
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5273
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5278
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5283
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5288
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5294
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5299
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5303
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5308
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5312
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5316
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5321
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5326
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5331
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5335
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5339
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5350
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5360
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5372
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5376
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5380
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = ""
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = BooleanModeStr
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5394
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5398
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5402
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5408
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5412
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
			yyVAL.str = Armscii8Str
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.str = AsciiStr
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = Big5Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = UBinaryStr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = Cp1250Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = Cp1251Str
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = Cp1256Str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = Cp1257Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = Cp850Str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5454
		{
			yyVAL.str = Cp852Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5458
		{
			yyVAL.str = Cp866Str
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = Cp932Str
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = Dec8Str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			yyVAL.str = EucjpmsStr
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = EuckrStr
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = Gb18030Str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = Gb2312Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = GbkStr
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.str = Geostd8Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = GreekStr
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = HebrewStr
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = Hp8Str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5506
		{
			yyVAL.str = Keybcs2Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5510
		{
			yyVAL.str = Koi8rStr
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
			yyVAL.str = Koi8uStr
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5518
		{
			yyVAL.str = Latin1Str
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5522
		{
			yyVAL.str = Latin2Str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5526
		{
			yyVAL.str = Latin5Str
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5530
		{
			yyVAL.str = Latin7Str
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5534
		{
			yyVAL.str = MacceStr
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5538
		{
			yyVAL.str = MacromanStr
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5542
		{
			yyVAL.str = SjisStr
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5546
		{
			yyVAL.str = Swe7Str
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.str = Tis620Str
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5554
		{
			yyVAL.str = Ucs2Str
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.str = UjisStr
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5562
		{
			yyVAL.str = Utf16Str
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5566
		{
			yyVAL.str = Utf16leStr
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5570
		{
			yyVAL.str = Utf32Str
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5574
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5582
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5588
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5592
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5596
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5604
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5608
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5614
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5618
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5626
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5630
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5638
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5643
		{
			yyVAL.expr = nil
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5647
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = string("")
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5666
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5672
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5677
		{
			yyVAL.expr = nil
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5681
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5687
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5691
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5695
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5701
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5705
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5709
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5713
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5725
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			yyVAL.expr = &NullVal{}
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5735
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5739
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5743
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5748
		{
			yyVAL.exprs = nil
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5752
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5758
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5762
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5768
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5773
		{
			yyVAL.expr = nil
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5777
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5783
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5788
		{
			yyVAL.orderBy = nil
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5792
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5798
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5802
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5808
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5813
		{
			yyVAL.str = AscScr
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.str = AscScr
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5821
		{
			yyVAL.str = DescScr
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5826
		{
			yyVAL.limit = nil
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5830
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5834
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5838
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5844
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5848
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5853
		{
			yyVAL.str = ""
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5857
		{
			yyVAL.str = ForUpdateStr
		}
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5861
		{
			yyVAL.str = ShareModeStr
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5874
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5878
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5882
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5886
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5891
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5895
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5899
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5905
		{
			yyVAL.columns = nil
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5909
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5915
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5919
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5923
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5927
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5932
		{
			yyVAL.assignExprs = nil
		}
	case 1177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5936
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5946
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5952
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5956
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5968
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5978
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5982
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5988
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5991
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6001
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6007
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6018
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6031
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6044
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6050
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6054
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6060
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6064
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6068
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6074
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6078
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6082
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6089
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6096
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6100
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6104
		{
			yyVAL.expr = &Default{}
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6113
		{
			yyVAL.byt = 0
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6115
		{
			yyVAL.byt = 1
		}
	case 1212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6118
		{
			yyVAL.byt = 0
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6120
		{
			yyVAL.byt = 1
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6123
		{
			yyVAL.byt = 0
		}
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6125
		{
			yyVAL.byt = 1
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6128
		{
			yyVAL.str = ""
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = IgnoreStr
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6133
		{
			yyVAL.sqlVal = nil
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6137
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6141
		{
			yyVAL.empty = struct{}{}
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6143
		{
			yyVAL.empty = struct{}{}
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6146
		{
			yyVAL.empty = struct{}{}
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6148
		{
			yyVAL.empty = struct{}{}
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6150
		{
			yyVAL.empty = struct{}{}
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6154
		{
			yyVAL.str = UniqueStr
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = FulltextStr
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6158
		{
			yyVAL.str = SpatialStr
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6161
		{
			yyVAL.str = ""
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6166
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6168
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6172
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6176
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6182
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6186
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6193
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6199
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6203
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6215
		{
			yyVAL.str = string("")
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6217
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6220
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6225
		{
			yyVAL.EnclosedBy = nil
		}
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6229
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6234
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6238
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6243
		{
			yyVAL.sqlVal = nil
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6247
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6252
		{
			yyVAL.sqlVal = nil
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6256
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6261
		{
			yyVAL.Fields = nil
		}
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6265
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6270
		{
			yyVAL.Lines = nil
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6274
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6279
		{
			yyVAL.sqlVal = nil
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6283
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6289
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6295
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6299
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6305
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6309
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6315
		{
			yyVAL.lockType = LockRead
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6319
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6323
		{
			yyVAL.lockType = LockWrite
		}
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6327
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6333
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6339
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6343
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6347
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6912
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6921
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
