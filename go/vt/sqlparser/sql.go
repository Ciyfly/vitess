// Code generated by goyacc -v y.output -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const JSON_TABLE = 57810
const PATH = 57811
const MATCH = 57812
const AGAINST = 57813
const BOOLEAN = 57814
const LANGUAGE = 57815
const WITH = 57816
const QUERY = 57817
const EXPANSION = 57818
const UNUSED = 57819
const ARRAY = 57820
const DESCRIPTION = 57821
const EMPTY = 57822
const LATERAL = 57823
const MEMBER = 57824
const RECURSIVE = 57825
const ACTIVE = 57826
const BUCKETS = 57827
const CLONE = 57828
const COMPONENT = 57829
const DEFINITION = 57830
const ENFORCED = 57831
const EXCLUDE = 57832
const GEOMCOLLECTION = 57833
const GET_MASTER_PUBLIC_KEY = 57834
const HISTOGRAM = 57835
const HISTORY = 57836
const INACTIVE = 57837
const INVISIBLE = 57838
const LOCKED = 57839
const MASTER_COMPRESSION_ALGORITHMS = 57840
const MASTER_PUBLIC_KEY_PATH = 57841
const MASTER_TLS_CIPHERSUITES = 57842
const MASTER_ZSTD_COMPRESSION_LEVEL = 57843
const NESTED = 57844
const NETWORK_NAMESPACE = 57845
const NOWAIT = 57846
const NULLS = 57847
const OJ = 57848
const OLD = 57849
const ORDINALITY = 57850
const ORGANIZATION = 57851
const OTHERS = 57852
const PERSIST = 57853
const PERSIST_ONLY = 57854
const PRIVILEGE_CHECKS_USER = 57855
const PROCESS = 57856
const REFERENCE = 57857
const REQUIRE_ROW_FORMAT = 57858
const RESOURCE = 57859
const RESPECT = 57860
const RESTART = 57861
const RETAIN = 57862
const SECONDARY = 57863
const SECONDARY_ENGINE = 57864
const SECONDARY_LOAD = 57865
const SECONDARY_UNLOAD = 57866
const SKIP = 57867
const THREAD_PRIORITY = 57868
const TIES = 57869
const VCPU = 57870
const VISIBLE = 57871
const SYSTEM = 57872
const INFILE = 57873
const GENERATED = 57874
const ALWAYS = 57875
const STORED = 57876
const VIRTUAL = 57877
const NVAR = 57878
const PASSWORD_LOCK = 57879

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	556, 35,
	-2, 55,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 60,
	-2, 1158,
	-1, 41,
	189, 1222,
	190, 1241,
	-2, 247,
	-1, 47,
	228, 735,
	229, 735,
	-2, 724,
	-1, 558,
	177, 1251,
	-2, 1245,
	-1, 559,
	177, 1252,
	-2, 1246,
	-1, 699,
	100, 1540,
	177, 1540,
	-2, 1206,
	-1, 700,
	100, 1659,
	177, 1659,
	-2, 1207,
	-1, 705,
	100, 1564,
	177, 1564,
	-2, 1208,
	-1, 706,
	100, 1612,
	177, 1612,
	-2, 1209,
	-1, 707,
	100, 1613,
	177, 1613,
	-2, 1210,
	-1, 708,
	100, 1485,
	177, 1485,
	-2, 1214,
	-1, 710,
	100, 1589,
	177, 1589,
	-2, 1216,
	-1, 1321,
	1, 514,
	556, 514,
	-2, 512,
	-1, 1323,
	1, 514,
	556, 514,
	-2, 512,
	-1, 1488,
	177, 1254,
	-2, 1250,
	-1, 1598,
	1, 834,
	5, 834,
	12, 834,
	13, 834,
	14, 834,
	15, 834,
	17, 834,
	19, 834,
	29, 834,
	30, 834,
	56, 834,
	57, 834,
	58, 834,
	59, 834,
	60, 834,
	62, 834,
	63, 834,
	66, 834,
	67, 834,
	69, 834,
	70, 834,
	87, 834,
	455, 834,
	556, 834,
	-2, 866,
	-1, 1605,
	67, 77,
	69, 77,
	-2, 81,
	-1, 1640,
	44, 580,
	-2, 1497,
	-1, 1644,
	68, 578,
	72, 578,
	-2, 1534,
	-1, 1645,
	68, 580,
	-2, 1442,
	-1, 1648,
	68, 576,
	72, 576,
	-2, 1359,
	-1, 1649,
	68, 577,
	72, 577,
	-2, 1369,
	-1, 1697,
	1, 515,
	556, 515,
	-2, 512,
	-1, 1782,
	44, 623,
	196, 625,
	198, 623,
	199, 623,
	-2, 660,
	-1, 1862,
	5, 61,
	-2, 945,
	-1, 2322,
	196, 626,
	-2, 624,
	-1, 2389,
	69, 1416,
	70, 1416,
	177, 1416,
	-2, 767,
	-1, 2413,
	1, 899,
	5, 899,
	12, 899,
	13, 899,
	14, 899,
	15, 899,
	17, 899,
	19, 899,
	29, 899,
	30, 899,
	56, 899,
	57, 899,
	58, 899,
	59, 899,
	60, 899,
	62, 899,
	63, 899,
	66, 899,
	67, 899,
	69, 899,
	70, 899,
	87, 899,
	455, 899,
	556, 899,
	-2, 866,
	-1, 2544,
	5, 61,
	-2, 1178,
	-1, 2629,
	41, 1261,
	-2, 1259,
	-1, 2827,
	5, 61,
	-2, 1181,
	-1, 3010,
	95, 299,
	97, 299,
	99, 299,
	-2, 55,
	-1, 3037,
	97, 306,
	98, 306,
	99, 306,
	-2, 55,
}

const yyPrivate = 57344

const yyLast = 39470

var yyAct = [...]int{
	624, 76, 2962, 2993, 3002, 2943, 428, 2123, 2944, 2008,
	2846, 2906, 2847, 925, 2756, 7, 2868, 2753, 3, 2816,
	474, 2755, 6, 2886, 2964, 2863, 2829, 2754, 5, 2810,
	1256, 562, 2265, 2427, 2686, 2757, 8, 561, 2726, 2748,
	2567, 2728, 2406, 2218, 2629, 564, 2814, 2106, 2177, 1692,
	2042, 623, 2382, 1913, 1915, 1190, 1908, 2092, 543, 2383,
	2631, 550, 1650, 2282, 2500, 1189, 2476, 1716, 2470, 2454,
	1620, 559, 459, 1465, 2379, 79, 2219, 76, 453, 453,
	411, 414, 2749, 1641, 722, 2178, 1355, 91, 2105, 2316,
	959, 1950, 2391, 2306, 541, 2398, 2024, 576, 1456, 983,
	104, 724, 1631, 1458, 1632, 1594, 1781, 476, 1811, 1630,
	1898, 1513, 719, 1585, 2145, 942, 1744, 127, 1406, 1683,
	127, 1637, 1593, 1522, 2070, 1891, 127, 1473, 1332, 1700,
	1358, 1356, 1699, 1698, 1999, 704, 456, 456, 1088, 701,
	1377, 1679, 540, 1236, 1579, 1232, 1490, 127, 1095, 1012,
	1598, 991, 718, 1099, 1696, 1091, 1761, 546, 1951, 697,
	1235, 1607, 1206, 1109, 127, 727, 698, 473, 566, 1411,
	431, 1667, 938, 990, 568, 1524, 430, 1327, 913, 1324,
	100, 96, 81, 468, 127, 456, 1964, 727, 1207, 908,
	3037, 1968, 3033, 3027, 3010, 127, 3008, 2988, 720, 2957,
	2894, 78, 2688, 2687, 2233, 1404, 2263, 1973, 1972, 446,
	2608, 440, 451, 434, 2441, 3031, 3020, 423, 2974, 2825,
	83, 2455, 89, 36, 2939, 36, 2606, 2738, 36, 1969,
	39, 2457, 2621, 441, 1729, 2911, 2036, 1729, 1944, 2802,
	2279, 2609, 36, 2824, 1975, 924, 1957, 2116, 2172, 68,
	2166, 2737, 2916, 2942, 1958, 67, 2706, 2864, 1833, 552,
	2377, 471, 2661, 907, 2666, 2015, 2173, 692, 693, 694,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 1760, 1910, 1135, 77, 918, 77, 2213, 910,
	77, 915, 916, 679, 1081, 685, 687, 686, 683, 684,
	682, 681, 680, 1616, 77, 87, 85, 86, 1410, 108,
	2214, 2215, 2820, 962, 2432, 2433, 2820, 1932, 946, 947,
	1931, 2674, 950, 1933, 1427, 1407, 542, 118, 114, 115,
	2815, 116, 1408, 1409, 1617, 1618, 1452, 1453, 1237, 1040,
	1238, 963, 964, 422, 421, 1977, 2460, 714, 2817, 1048,
	1652, 1653, 2817, 97, 948, 949, 463, 1759, 1009, 1971,
	2529, 1668, 1974, 120, 119, 1789, 1783, 1784, 1680, 1782,
	1785, 1786, 2364, 1659, 1661, 425, 1660, 1673, 2362, 1668,
	405, 1390, 973, 433, 432, 435, 2458, 2459, 2461, 2462,
	2463, 420, 1655, 439, 1655, 470, 969, 2067, 1448, 1447,
	1446, 1445, 1444, 1443, 1024, 1792, 1044, 1045, 76, 76,
	443, 2031, 2059, 2821, 447, 464, 2471, 2821, 2931, 1791,
	1790, 121, 978, 122, 2474, 977, 541, 2634, 450, 980,
	2477, 2478, 2479, 2480, 2849, 979, 2305, 2607, 2472, 2473,
	2790, 2064, 1772, 2289, 2848, 2792, 2035, 2710, 2488, 127,
	2708, 2856, 2496, 99, 2603, 970, 971, 556, 1055, 2033,
	1773, 1056, 2280, 110, 109, 1438, 1717, 1077, 2283, 2284,
	2285, 2286, 2287, 2700, 981, 1085, 2283, 2284, 2285, 2286,
	2287, 2486, 2625, 112, 2997, 2891, 2889, 2890, 2292, 2601,
	1024, 106, 2600, 127, 1339, 1340, 1338, 960, 415, 961,
	963, 964, 111, 1330, 476, 2599, 2013, 106, 2598, 912,
	911, 2597, 2595, 914, 2596, 106, 1022, 107, 111, 2873,
	412, 1707, 2959, 1024, 2751, 436, 437, 438, 444, 1417,
	448, 449, 452, 2557, 406, 914, 2198, 2968, 2696, 2697,
	2963, 416, 2952, 2692, 127, 1711, 1712, 101, 1412, 102,
	1706, 2014, 2146, 2834, 2835, 958, 2966, 1062, 1144, 2050,
	2051, 1146, 945, 2016, 1970, 1047, 956, 957, 955, 1966,
	954, 117, 2934, 2904, 2501, 2502, 113, 2684, 1255, 2076,
	3022, 1255, 2078, 1414, 1113, 1788, 1413, 108, 3038, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 2702, 2262, 1188, 1112, 1192, 2321, 408, 2712, 2222,
	1361, 2456, 1949, 2148, 1255, 424, 1255, 3035, 2078, 1254,
	1918, 1920, 541, 469, 2662, 2568, 3028, 1031, 1074, 2034,
	1967, 3006, 1072, 3011, 1023, 1391, 974, 2307, 542, 2570,
	1766, 1668, 409, 2604, 2511, 1682, 909, 2707, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 2736, 1205,
	1208, 1208, 1208, 1214, 1208, 1208, 1214, 1208, 1214, 1223,
	1224, 1225, 1226, 75, 2818, 927, 1020, 98, 2818, 2624,
	1057, 1410, 1984, 2512, 1658, 2291, 1034, 1029, 2622, 75,
	36, 75, 2037, 1965, 75, 2915, 2058, 2791, 413, 413,
	2055, 1096, 1076, 2039, 57, 1408, 1409, 2038, 75, 1145,
	74, 1116, 1068, 39, 1083, 442, 413, 1030, 88, 1026,
	413, 110, 109, 704, 1695, 2965, 2967, 2701, 704, 1767,
	1344, 1342, 975, 1314, 1067, 1063, 1064, 1065, 1066, 1069,
	1070, 1071, 1073, 906, 1726, 2206, 127, 1949, 1949, 1725,
	1919, 2089, 77, 1027, 1028, 727, 2205, 1948, 2569, 2204,
	2150, 905, 2053, 2084, 2076, 2154, 1080, 2149, 2081, 2147,
	1249, 2080, 2083, 1949, 2152, 917, 377, 2347, 2783, 1949,
	1191, 2991, 2994, 2990, 1871, 2515, 1315, 2151, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1019, 2339, 2153, 2155, 2212, 3004, 1954, 1868, 3005, 2057,
	3003, 1253, 1147, 1148, 2510, 2056, 1936, 1240, 1828, 1816,
	1797, 1710, 1241, 1209, 1211, 1213, 1215, 1217, 1219, 1220,
	1222, 1708, 1612, 1204, 1468, 1248, 1115, 937, 2705, 1135,
	1128, 1129, 1130, 1131, 1132, 1125, 1621, 1230, 1135, 1210,
	1212, 2589, 1216, 1218, 542, 1221, 1227, 1228, 1621, 2583,
	1125, 1621, 2581, 1135, 41, 70, 44, 43, 46, 1621,
	2435, 1621, 2254, 1621, 2250, 1621, 2246, 972, 1250, 2784,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 1948, 1948, 1135, 47, 73, 72, 1621, 2244,
	2076, 1928, 45, 1334, 1255, 2727, 2301, 2077, 2078, 1387,
	453, 2525, 2590, 1621, 1997, 2448, 1621, 1995, 1948, 2446,
	2851, 2088, 1357, 2251, 1948, 2085, 1621, 1993, 2097, 453,
	1025, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 2516, 1041,
	1042, 1043, 926, 1046, 1892, 1049, 1050, 1051, 1052, 1053,
	1378, 1147, 1148, 55, 56, 1736, 2785, 727, 127, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 456, 456, 1135,
	64, 456, 65, 1461, 1147, 1148, 2449, 1745, 127, 2611,
	2447, 127, 1621, 1991, 2252, 952, 456, 456, 1108, 127,
	1621, 1988, 2874, 2875, 2871, 2872, 2852, 66, 2093, 127,
	127, 127, 127, 127, 2168, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 2733, 2732, 453, 2612, 2396, 2395, 1497, 1360,
	456, 1106, 1107, 1105, 127, 2786, 71, 1333, 51, 52,
	59, 1337, 60, 1495, 1496, 1494, 1399, 1362, 1466, 1467,
	1108, 1246, 944, 1402, 1580, 965, 982, 920, 1436, 1379,
	1373, 1374, 1375, 1376, 1737, 919, 1107, 1105, 76, 929,
	930, 931, 932, 933, 934, 935, 3026, 2954, 1320, 1319,
	1322, 456, 456, 456, 1108, 541, 727, 1336, 1105, 1346,
	1385, 1381, 2909, 1382, 953, 2487, 1418, 1335, 3014, 2994,
	3013, 1354, 1353, 2481, 476, 1108, 2342, 1580, 1364, 1883,
	1365, 1106, 1107, 1105, 2517, 1755, 456, 1866, 1459, 1865,
	2795, 456, 456, 94, 1459, 1366, 1367, 1106, 1107, 1105,
	1108, 1383, 1113, 1450, 2231, 3030, 1441, 76, 1106, 1107,
	1105, 77, 127, 1420, 127, 1102, 1108, 727, 943, 1394,
	1395, 967, 1493, 1397, 541, 2787, 94, 1108, 3023, 2887,
	1491, 2920, 1867, 2919, 1092, 127, 2978, 1093, 93, 1400,
	2745, 2619, 1112, 1191, 2618, 1517, 1518, 1415, 1582, 2617,
	1457, 1419, 1442, 1192, 2616, 1416, 75, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 1918, 1920, 1135,
	541, 1106, 1107, 1105, 1106, 1107, 1105, 1488, 92, 2956,
	1487, 2979, 2888, 3024, 2941, 1437, 2788, 727, 1440, 1599,
	1108, 2977, 1449, 1108, 1106, 1107, 1105, 1106, 1107, 1105,
	2610, 2887, 2115, 2440, 1566, 1569, 1486, 1813, 1814, 1815,
	1454, 1581, 2439, 1108, 727, 727, 1108, 2234, 1560, 2004,
	2002, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1125, 2789, 1484, 1135, 1106, 1107, 1105, 1978,
	704, 1476, 1477, 1478, 2170, 1592, 1314, 1492, 1532, 2703,
	1480, 1482, 1483, 1537, 1470, 1108, 1015, 2005, 1481, 127,
	127, 127, 581, 580, 583, 584, 585, 586, 1627, 1014,
	1520, 582, 587, 2896, 1528, 1106, 1107, 1105, 1471, 2895,
	1514, 1472, 1515, 727, 727, 1539, 1540, 542, 1934, 988,
	1935, 2853, 2850, 2801, 1108, 2884, 2704, 1919, 1552, 1315,
	2699, 2698, 1556, 2683, 2626, 2594, 2558, 2539, 2484, 2483,
	1488, 2482, 987, 1625, 2450, 2437, 1577, 720, 2312, 1723,
	1900, 1903, 1904, 1905, 1901, 1638, 1902, 1906, 1191, 2241,
	2399, 2400, 1564, 1565, 2235, 2199, 2102, 2101, 77, 1626,
	2000, 1756, 1731, 1396, 2883, 2709, 2681, 1214, 2643, 1954,
	2637, 2508, 2350, 1610, 1614, 2335, 542, 1603, 1689, 1690,
	1619, 1613, 1606, 2331, 2323, 1635, 1875, 127, 1628, 2293,
	2045, 1646, 2044, 127, 127, 456, 456, 456, 1749, 1733,
	127, 1732, 1624, 1516, 1392, 1384, 1389, 1352, 1758, 1685,
	1686, 1687, 1688, 127, 1351, 1323, 1321, 1752, 1010, 476,
	940, 419, 542, 417, 1669, 1670, 1671, 1672, 1345, 1681,
	127, 127, 127, 2577, 2917, 1087, 1794, 2422, 2902, 2879,
	1087, 2422, 2860, 2808, 1087, 1087, 2422, 2804, 1734, 2577,
	2742, 2422, 2690, 2577, 1087, 1721, 1722, 127, 1704, 127,
	1608, 1742, 1054, 727, 2577, 2672, 2636, 727, 1817, 2577,
	2576, 2585, 1691, 1738, 2548, 1087, 1796, 1087, 1743, 2422,
	2421, 2260, 2259, 2256, 2257, 2256, 2255, 1895, 1087, 727,
	1826, 1087, 727, 1124, 1123, 1133, 1134, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1125, 1769, 1768, 1135, 1558, 1753,
	2584, 727, 1558, 1087, 1252, 1251, 1609, 2635, 1611, 2380,
	1421, 2043, 2394, 1424, 1425, 1426, 1491, 1428, 1429, 1747,
	1751, 1430, 2043, 2272, 1608, 1757, 2242, 1431, 1059, 1020,
	80, 1432, 1433, 1715, 1434, 1435, 1923, 1894, 1361, 1463,
	1488, 1058, 1764, 1487, 1018, 1489, 2935, 2908, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 3021, 1771, 2342, 2831, 1774, 1895, 1626,
	1911, 2394, 1912, 1778, 1714, 1921, 1793, 1895, 1599, 2394,
	1609, 1599, 1361, 1805, 1826, 1822, 1020, 541, 1803, 1804,
	1462, 2542, 1017, 1917, 1603, 1018, 1558, 1895, 1729, 2411,
	2408, 2273, 2258, 2100, 476, 2069, 1938, 1615, 715, 1087,
	1096, 1818, 1826, 1855, 1854, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 1398, 1572, 1135,
	704, 1728, 127, 1492, 1924, 1464, 1583, 1925, 1082, 1439,
	1860, 127, 1945, 1405, 127, 1361, 1343, 1341, 1234, 127,
	2805, 2407, 127, 127, 127, 2723, 1907, 1124, 1123, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 2640,
	77, 1135, 727, 1123, 1133, 1134, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1125, 1360, 2554, 1135, 2442, 1655, 2399,
	2400, 3000, 1684, 1882, 2230, 1315, 1680, 1942, 1024, 1086,
	1709, 1922, 1675, 1939, 1861, 1674, 1316, 1007, 1987, 1693,
	1990, 1992, 1994, 1996, 1746, 2983, 2981, 2945, 1941, 2402,
	2380, 2271, 2006, 2049, 1240, 1348, 1884, 1926, 1060, 1929,
	453, 1021, 1016, 1812, 2190, 727, 1937, 127, 1603, 2191,
	427, 2192, 2405, 1904, 1905, 2404, 1603, 1832, 1834, 1603,
	727, 727, 727, 2188, 2187, 2186, 456, 2877, 2189, 1654,
	1846, 1847, 1848, 1849, 2823, 76, 547, 548, 2103, 1802,
	127, 456, 1947, 1474, 1952, 2862, 2545, 1810, 1100, 1101,
	2001, 1809, 541, 1900, 1903, 1904, 1905, 1901, 456, 1902,
	1906, 2663, 2507, 2425, 2003, 2330, 2329, 2012, 1979, 1980,
	2010, 2011, 2714, 1956, 2124, 1986, 458, 1098, 2240, 456,
	2239, 727, 2238, 2032, 1946, 1998, 1333, 456, 2224, 542,
	2717, 1750, 2800, 2799, 2060, 2630, 2628, 2695, 2047, 2694,
	418, 2041, 2066, 1393, 2613, 2614, 2267, 2096, 727, 727,
	2095, 1989, 1089, 1247, 1005, 989, 986, 2054, 127, 985,
	2052, 941, 2046, 1090, 1953, 1955, 2927, 2647, 727, 2646,
	1702, 2540, 2174, 2176, 1703, 2074, 1599, 1599, 1599, 1599,
	1599, 2098, 2099, 1347, 2073, 727, 2068, 2940, 2079, 541,
	2090, 2091, 1911, 2489, 2094, 2200, 1466, 1467, 2936, 2793,
	2490, 2108, 2632, 2430, 1599, 984, 2266, 94, 2194, 541,
	1488, 2109, 1694, 1487, 1100, 1101, 2110, 2202, 1455, 476,
	2179, 2071, 2082, 2087, 1770, 1078, 1079, 2926, 476, 2925,
	2114, 2924, 1808, 1819, 1820, 1821, 2167, 2175, 2591, 2118,
	1807, 1777, 968, 544, 2855, 2232, 2854, 127, 127, 127,
	127, 127, 2203, 2208, 2221, 2210, 2211, 1560, 2156, 127,
	2209, 2812, 2157, 127, 2797, 2718, 2653, 545, 127, 80,
	2811, 2729, 2043, 2985, 2984, 127, 2180, 2018, 2019, 2020,
	2985, 2520, 2182, 2183, 2310, 2185, 2065, 2063, 727, 2062,
	727, 1872, 727, 1869, 727, 1775, 1380, 2193, 2181, 1103,
	2984, 2184, 2739, 2237, 1460, 465, 1586, 2223, 1689, 2225,
	1690, 1876, 1877, 1878, 715, 2207, 467, 2767, 50, 82,
	2288, 2108, 53, 2217, 542, 2769, 19, 453, 2216, 1,
	2243, 2245, 2768, 18, 2770, 20, 2274, 2249, 1765, 2169,
	2771, 21, 2766, 15, 1603, 1603, 1603, 1603, 1603, 2253,
	2765, 14, 2268, 2269, 2270, 2759, 10, 1422, 127, 2469,
	1603, 2782, 34, 2468, 2125, 2780, 33, 2475, 2128, 2129,
	2130, 2278, 1603, 2133, 2779, 32, 2778, 28, 727, 727,
	727, 2281, 2318, 2290, 2030, 456, 2777, 27, 2485, 1945,
	127, 456, 2325, 2327, 2776, 26, 2774, 23, 2773, 22,
	2775, 24, 2318, 2764, 13, 127, 1331, 456, 2602, 727,
	456, 2761, 12, 923, 456, 456, 1713, 456, 2760, 11,
	1011, 542, 2300, 2758, 9, 2304, 2297, 2798, 2713, 2308,
	2309, 2715, 2311, 2247, 727, 2627, 2492, 2453, 127, 727,
	2452, 542, 1315, 2023, 2022, 1006, 727, 2375, 2343, 727,
	1403, 2295, 727, 2320, 2385, 76, 2314, 2313, 2072, 2075,
	2334, 1724, 1787, 2725, 1776, 2226, 2227, 1061, 1639, 2228,
	1629, 2229, 541, 2828, 717, 90, 1735, 951, 385, 2410,
	1636, 1962, 2716, 2048, 1008, 2415, 2416, 2417, 1961, 2341,
	1976, 1651, 1697, 1701, 1960, 1959, 2711, 1963, 2179, 2296,
	1260, 2381, 1258, 1259, 2298, 2384, 1257, 1262, 2393, 1261,
	2976, 2914, 389, 1242, 2841, 2349, 1104, 105, 54, 2509,
	2386, 2086, 461, 462, 95, 103, 727, 391, 727, 1143,
	2409, 1806, 1930, 702, 703, 695, 1798, 2414, 1084, 2731,
	2420, 2905, 2833, 1094, 2865, 1881, 76, 1203, 2336, 1578,
	2360, 565, 727, 2388, 2180, 2197, 2444, 2524, 2867, 1457,
	2403, 2112, 552, 541, 2419, 1479, 579, 578, 727, 577,
	574, 575, 2819, 2412, 1469, 2171, 1117, 2261, 563, 554,
	1597, 1589, 727, 1754, 1899, 1897, 2465, 2466, 2467, 1896,
	2319, 1349, 2138, 2139, 1231, 2401, 2426, 2397, 2434, 1939,
	1909, 1596, 1595, 1600, 38, 2445, 2158, 2159, 2519, 2160,
	2161, 2443, 966, 2162, 407, 2431, 2376, 2660, 84, 466,
	549, 25, 17, 127, 976, 727, 2378, 2318, 2503, 2504,
	1529, 1530, 16, 1780, 921, 40, 42, 2017, 1705, 2840,
	2961, 992, 2992, 1542, 1543, 1544, 1545, 2318, 2885, 2505,
	2464, 31, 30, 29, 2772, 2781, 2763, 2762, 1557, 1559,
	2947, 2946, 456, 4, 1563, 1075, 69, 35, 713, 2493,
	2521, 2522, 2, 0, 2494, 0, 0, 2497, 2495, 2513,
	0, 0, 2498, 0, 0, 2499, 2223, 1689, 0, 0,
	0, 727, 2506, 2491, 0, 0, 0, 0, 0, 727,
	0, 0, 476, 0, 542, 2514, 2236, 2436, 0, 2438,
	0, 2579, 0, 1182, 1183, 0, 0, 0, 0, 0,
	2179, 2556, 0, 0, 2518, 0, 0, 0, 0, 2562,
	2563, 2564, 2108, 2587, 2221, 0, 2541, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 2560, 2549,
	0, 0, 0, 0, 2221, 0, 0, 2588, 2565, 727,
	2550, 0, 0, 0, 0, 0, 2586, 727, 727, 727,
	0, 0, 0, 0, 727, 0, 2180, 2572, 2573, 2571,
	2592, 2561, 0, 0, 2566, 0, 0, 2580, 0, 2582,
	0, 0, 0, 0, 727, 542, 0, 0, 2648, 0,
	0, 1599, 0, 2593, 0, 0, 0, 0, 0, 0,
	2528, 0, 0, 0, 0, 0, 0, 0, 2605, 0,
	0, 0, 2615, 2385, 0, 2620, 2385, 2668, 0, 0,
	0, 0, 0, 0, 0, 2623, 2633, 0, 2410, 0,
	0, 1191, 0, 0, 541, 0, 2638, 2639, 0, 2345,
	2649, 2551, 2552, 0, 0, 2553, 1748, 2650, 2555, 2645,
	1917, 0, 2676, 2651, 727, 0, 1191, 622, 2671, 76,
	0, 476, 127, 476, 2384, 0, 0, 2384, 2665, 0,
	2652, 0, 2664, 0, 0, 0, 541, 2680, 2670, 2673,
	0, 0, 2667, 2675, 0, 0, 0, 0, 0, 0,
	727, 2372, 2373, 2374, 0, 2693, 727, 2682, 0, 0,
	0, 127, 0, 127, 0, 0, 1599, 0, 0, 1779,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 727,
	0, 0, 0, 0, 2691, 0, 0, 0, 0, 2413,
	0, 0, 0, 0, 2574, 2575, 0, 2385, 0, 76,
	0, 0, 2221, 0, 0, 2743, 0, 711, 0, 0,
	0, 723, 0, 0, 2721, 0, 541, 0, 0, 1603,
	2429, 2722, 2720, 0, 76, 0, 0, 552, 0, 2730,
	0, 2750, 0, 928, 456, 1824, 2752, 127, 0, 2734,
	1827, 0, 727, 0, 0, 1829, 1830, 0, 2384, 2740,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 0, 1097,
	1845, 2744, 0, 0, 2741, 1850, 1851, 1852, 1853, 0,
	0, 0, 1857, 1858, 1859, 2641, 2642, 0, 0, 1862,
	1863, 1864, 0, 0, 2794, 2221, 127, 1870, 2796, 0,
	1873, 1874, 2836, 0, 2719, 1879, 0, 2806, 0, 0,
	1885, 2803, 1886, 1887, 1888, 125, 1889, 1890, 404, 0,
	2822, 0, 2832, 0, 125, 2179, 0, 76, 2826, 0,
	2680, 0, 0, 0, 0, 727, 542, 0, 0, 727,
	0, 0, 0, 0, 1603, 475, 0, 0, 0, 0,
	0, 2526, 2527, 553, 0, 727, 0, 0, 0, 712,
	0, 0, 125, 0, 0, 2530, 2531, 2532, 2533, 1191,
	0, 0, 0, 2537, 0, 2870, 0, 2221, 542, 0,
	0, 2180, 125, 2882, 2858, 2857, 0, 2861, 2830, 2859,
	0, 0, 0, 125, 0, 0, 0, 727, 0, 2876,
	0, 2880, 0, 2900, 0, 2881, 0, 0, 0, 0,
	453, 0, 2892, 0, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2901, 0, 76,
	2845, 0, 0, 0, 0, 76, 0, 0, 0, 2923,
	2903, 0, 0, 727, 0, 0, 2913, 2930, 0, 2921,
	0, 0, 0, 0, 0, 2918, 0, 0, 542, 0,
	0, 76, 0, 0, 0, 2937, 76, 2932, 456, 2938,
	0, 2955, 0, 2951, 0, 2971, 727, 2124, 2970, 0,
	2950, 0, 2933, 541, 2973, 453, 2949, 2972, 727, 2958,
	2982, 727, 2980, 76, 2948, 0, 2986, 76, 76, 2837,
	2838, 2975, 76, 2987, 0, 727, 0, 2989, 0, 0,
	2930, 0, 476, 0, 2995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2830, 0, 0, 2866, 2869, 76,
	3007, 2960, 76, 0, 0, 0, 3015, 0, 2928, 3017,
	0, 2930, 3012, 456, 0, 0, 0, 727, 0, 76,
	2370, 76, 127, 0, 2113, 76, 0, 0, 0, 0,
	2121, 2930, 0, 2930, 0, 3029, 0, 0, 76, 0,
	0, 76, 2131, 2132, 76, 0, 0, 2689, 76, 0,
	2930, 3034, 0, 0, 0, 2140, 2930, 0, 0, 2144,
	2930, 0, 0, 1656, 1657, 0, 1662, 1663, 1664, 1665,
	1666, 0, 0, 2922, 0, 0, 0, 0, 0, 0,
	0, 0, 2119, 2120, 1676, 1677, 1678, 0, 0, 0,
	0, 2126, 2127, 0, 2869, 0, 1602, 0, 0, 0,
	0, 0, 0, 2134, 2135, 2136, 2137, 2195, 2196, 0,
	2141, 2142, 2143, 0, 2724, 0, 0, 125, 0, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 0, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 36, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 125, 0, 0, 0, 0, 74, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 2953, 0,
	3016, 0, 0, 2369, 0, 542, 0, 0, 0, 716,
	0, 0, 0, 0, 1521, 1526, 1527, 0, 0, 0,
	1531, 0, 1533, 1534, 1535, 1536, 0, 1538, 77, 922,
	1541, 0, 475, 0, 0, 1546, 1547, 1548, 1549, 0,
	936, 0, 1553, 1554, 1555, 0, 0, 0, 0, 0,
	1561, 1562, 0, 0, 2783, 1568, 1571, 0, 1576, 3036,
	1119, 0, 1122, 0, 0, 0, 0, 0, 0, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 0, 1120, 1121, 1118,
	1584, 0, 1587, 1588, 0, 0, 0, 1124, 1123, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0,
	0, 1135, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1125, 0, 711, 1135, 0, 0, 0,
	711, 1243, 0, 0, 0, 0, 0, 0, 2344, 0,
	0, 0, 0, 0, 2368, 0, 0, 0, 0, 0,
	41, 70, 44, 43, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2784, 0, 0, 0, 0,
	0, 0, 0, 0, 2356, 0, 0, 0, 0, 0,
	0, 47, 73, 72, 0, 2365, 2366, 0, 45, 0,
	0, 2371, 0, 2367, 0, 0, 2346, 0, 0, 0,
	0, 0, 0, 2387, 2348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2351, 2352, 0, 0, 0, 0,
	0, 0, 0, 2355, 0, 2969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2418, 0, 0, 55,
	56, 0, 2785, 1124, 1123, 1133, 1134, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1125, 0, 64, 1135, 65, 36,
	0, 0, 0, 0, 1233, 0, 0, 712, 0, 2998,
	0, 0, 712, 57, 0, 0, 3001, 0, 0, 74,
	0, 0, 39, 66, 0, 0, 0, 0, 1981, 1982,
	1983, 1985, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1125, 939, 0, 1135, 0, 0, 0,
	0, 2786, 71, 2354, 51, 52, 59, 0, 60, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1317, 0, 0, 0, 0, 0, 1325,
	1328, 0, 0, 0, 0, 0, 0, 2783, 1013, 0,
	0, 0, 3032, 0, 0, 0, 0, 0, 0, 0,
	1325, 1328, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1125, 0, 0, 1135, 2165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 2534, 2535, 2536, 0, 2538, 1843, 1844, 0, 0,
	0, 0, 0, 0, 2543, 2544, 0, 2546, 0, 1856,
	2547, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 41, 70, 44, 43, 46, 0, 0,
	0, 2559, 0, 0, 1880, 0, 0, 0, 2784, 0,
	0, 0, 1423, 0, 0, 0, 0, 0, 2578, 0,
	2164, 0, 75, 0, 47, 73, 72, 0, 0, 0,
	0, 45, 0, 0, 0, 0, 125, 2353, 0, 0,
	0, 1326, 1329, 0, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 125, 0, 1135, 125,
	0, 0, 1326, 1329, 0, 0, 0, 1359, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 125, 125, 125,
	125, 125, 55, 56, 0, 2785, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 64,
	1135, 65, 1388, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2654, 2655, 0, 0, 2656,
	2657, 2658, 2659, 0, 0, 0, 66, 1124, 1123, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0,
	0, 1135, 0, 1519, 2163, 0, 0, 0, 0, 0,
	0, 2677, 2678, 2679, 2786, 71, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 2111, 0, 0, 0,
	1550, 1551, 0, 0, 2248, 0, 0, 0, 0, 0,
	0, 939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 711, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 0, 0, 1135, 0,
	125, 0, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 723, 0, 1823, 723,
	723, 0, 0, 0, 0, 1359, 0, 0, 0, 2735,
	400, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1125, 0, 0, 1135, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 2747, 0,
	1135, 0, 0, 0, 0, 0, 0, 1525, 1525, 1525,
	0, 0, 0, 1525, 1525, 1525, 1525, 1525, 1525, 1525,
	1525, 0, 0, 1525, 0, 75, 0, 0, 1525, 1525,
	1525, 1525, 0, 0, 2807, 1525, 1525, 1525, 0, 0,
	2813, 0, 0, 1525, 1525, 0, 0, 0, 1525, 1525,
	2827, 1525, 0, 0, 0, 712, 2357, 2358, 0, 2359,
	0, 0, 2361, 0, 2363, 0, 0, 0, 0, 0,
	0, 378, 0, 1525, 1525, 1525, 1525, 125, 125, 125,
	0, 0, 0, 0, 712, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 1359, 1135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 381, 1763,
	0, 0, 0, 1763, 0, 0, 0, 390, 398, 399,
	2423, 2424, 0, 939, 0, 0, 1350, 2878, 0, 0,
	0, 0, 0, 0, 0, 1763, 0, 0, 1763, 0,
	0, 0, 0, 0, 1368, 1369, 1370, 1371, 1372, 36,
	37, 0, 387, 0, 0, 388, 0, 1801, 396, 397,
	0, 0, 0, 57, 0, 0, 723, 0, 0, 74,
	0, 0, 39, 61, 62, 125, 0, 2912, 0, 0,
	58, 125, 125, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 48, 0, 0,
	0, 77, 0, 0, 0, 393, 0, 0, 1739, 1740,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3018, 3019, 0,
	1475, 379, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 41, 70, 44, 43, 46, 723, 0,
	0, 0, 0, 0, 0, 392, 382, 383, 0, 403,
	0, 0, 0, 384, 386, 0, 380, 402, 401, 1282,
	0, 0, 0, 0, 47, 73, 72, 0, 0, 0,
	1525, 45, 0, 0, 0, 0, 0, 0, 1525, 0,
	0, 0, 0, 0, 0, 63, 0, 0, 0, 1525,
	1525, 0, 0, 0, 0, 0, 0, 0, 0, 2893,
	395, 2007, 1525, 0, 0, 0, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2021, 2025, 2029, 0,
	0, 0, 55, 56, 0, 0, 0, 1525, 0, 0,
	0, 0, 0, 0, 1591, 0, 1605, 0, 0, 64,
	125, 65, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 475, 0, 0, 0, 0, 125, 0, 0,
	125, 1927, 1359, 1269, 712, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 71, 0, 51, 52, 59,
	0, 60, 0, 0, 723, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 0, 0, 0,
	0, 2122, 1718, 0, 1283, 125, 0, 0, 1719, 1720,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1013, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 75, 723, 0, 723, 0,
	2220, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1525, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 1359, 1296,
	1299, 1300, 1301, 1302, 1303, 1304, 0, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 0, 1284, 1285, 1286, 1287,
	1263, 1267, 1297, 1264, 1270, 1266, 1268, 1265, 0, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 0, 0,
	0, 0, 0, 0, 2275, 2276, 2277, 0, 0, 0,
	0, 0, 0, 0, 712, 125, 125, 125, 125, 125,
	0, 0, 0, 0, 0, 0, 0, 475, 0, 0,
	0, 125, 0, 0, 0, 2303, 475, 0, 0, 0,
	0, 1525, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2328, 0, 0, 0, 0, 2333, 0, 1893, 0, 0,
	0, 0, 2337, 0, 0, 2338, 0, 0, 2340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	711, 0, 723, 0, 2392, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	0, 0, 2009, 125, 0, 0, 0, 0, 2392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2322, 0, 0, 0, 723, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 0, 2040, 125, 0, 2428, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 0, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	538, 0, 0, 0, 0, 0, 0, 723, 0, 1255,
	0, 0, 0, 0, 0, 723, 0, 496, 479, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 0, 0, 491,
	0, 486, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2428, 0, 0, 0, 0,
	0, 125, 0, 2428, 2428, 2428, 503, 501, 0, 0,
	2220, 504, 0, 0, 0, 0, 0, 512, 480, 0,
	516, 0, 0, 0, 0, 0, 0, 0, 478, 0,
	2220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	36, 0, 494, 518, 0, 0, 0, 0, 0, 0,
	492, 493, 495, 522, 57, 524, 530, 0, 0, 0,
	74, 0, 0, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 36, 0, 0,
	0, 0, 0, 2264, 0, 0, 0, 0, 0, 0,
	2644, 57, 77, 0, 0, 0, 0, 74, 0, 0,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	475, 0, 0, 0, 712, 2294, 0, 0, 2783, 481,
	0, 0, 0, 3025, 0, 0, 2669, 0, 0, 502,
	2299, 0, 2428, 0, 0, 0, 0, 0, 0, 77,
	2996, 0, 0, 0, 1282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2685, 0, 0, 0, 0,
	0, 0, 0, 2332, 0, 2783, 0, 0, 0, 0,
	531, 532, 0, 0, 0, 0, 482, 483, 484, 485,
	487, 505, 506, 510, 511, 528, 527, 526, 529, 533,
	536, 535, 537, 488, 489, 497, 507, 508, 509, 513,
	514, 523, 519, 521, 41, 70, 44, 43, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2220, 2784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 47, 73, 72, 0, 0,
	125, 553, 45, 0, 0, 0, 0, 0, 1269, 0,
	520, 41, 70, 44, 43, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2784, 0, 0, 0,
	0, 0, 515, 517, 0, 0, 0, 0, 0, 475,
	0, 475, 47, 73, 72, 0, 0, 0, 0, 45,
	0, 0, 0, 55, 56, 0, 2785, 0, 0, 0,
	0, 2220, 0, 0, 0, 2809, 0, 0, 0, 0,
	64, 0, 65, 0, 0, 0, 0, 711, 0, 0,
	0, 723, 0, 0, 0, 0, 0, 0, 0, 1283,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 0,
	55, 56, 0, 2785, 0, 0, 0, 0, 2451, 0,
	0, 0, 0, 0, 0, 125, 0, 64, 0, 65,
	0, 0, 0, 723, 0, 2786, 71, 0, 51, 52,
	59, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2220, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 2428,
	0, 0, 2786, 71, 0, 51, 52, 59, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2907, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2910, 0, 0, 723, 0, 712,
	0, 0, 0, 0, 1296, 1299, 1300, 1301, 1302, 1303,
	1304, 723, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	0, 1284, 1285, 1286, 1287, 1263, 1267, 1297, 1264, 1270,
	1266, 1268, 1265, 0, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 2907, 0, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 883, 858,
	338, 803, 886, 760, 786, 901, 791, 795, 838, 744,
	816, 264, 782, 745, 0, 764, 734, 774, 735, 761,
	181, 759, 860, 819, 885, 220, 833, 0, 180, 169,
	228, 226, 0, 75, 0, 271, 337, 884, 811, 0,
	893, 223, 0, 828, 894, 325, 248, 0, 0, 807,
	870, 814, 856, 802, 840, 753, 827, 888, 783, 835,
	889, 0, 0, 0, 0, 2839, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 1298, 831, 882, 777, 834,
	805, 837, 904, 732, 830, 0, 739, 746, 900, 877,
	767, 768, 769, 0, 0, 0, 0, 0, 0, 0,
	806, 815, 850, 799, 358, 275, 292, 313, 793, 283,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	0, 825, 0, 0, 0, 747, 740, 0, 0, 0,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 752, 731, 766, 852, 0, 729, 249,
	146, 857, 876, 801, 211, 898, 880, 798, 797, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	849, 307, 779, 730, 861, 762, 775, 170, 771, 299,
	268, 357, 784, 822, 298, 224, 347, 845, 881, 356,
	788, 864, 366, 371, 770, 812, 750, 322, 183, 178,
	182, 2746, 135, 781, 282, 175, 216, 800, 839, 763,
	166, 847, 826, 863, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 2842, 2843,
	2844, 794, 785, 0, 0, 362, 796, 310, 309, 790,
	206, 855, 829, 736, 291, 842, 212, 134, 335, 374,
	152, 218, 340, 728, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 776, 844, 854,
	289, 312, 342, 154, 329, 772, 773, 778, 851, 301,
	862, 874, 887, 231, 186, 189, 200, 207, 836, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 737, 0, 327, 360, 376, 334,
	156, 758, 315, 341, 787, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 756, 757, 754, 0, 755, 817,
	818, 890, 891, 892, 853, 749, 0, 871, 872, 0,
	0, 0, 0, 0, 859, 878, 879, 841, 902, 792,
	167, 738, 741, 742, 743, 751, 808, 809, 821, 824,
	867, 866, 865, 868, 873, 896, 895, 897, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	276, 820, 131, 142, 222, 903, 290, 192, 361, 733,
	177, 0, 813, 823, 848, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 277, 278, 286, 846, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 875, 0, 789, 133, 869, 899, 832, 843, 883,
	858, 338, 803, 886, 760, 786, 901, 791, 795, 838,
	744, 816, 264, 782, 745, 0, 764, 734, 774, 735,
	761, 181, 759, 860, 819, 885, 220, 833, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 884, 811,
	0, 893, 223, 0, 828, 894, 325, 248, 0, 0,
	807, 870, 814, 856, 802, 840, 753, 827, 888, 783,
	835, 889, 0, 0, 0, 0, 726, 0, 1633, 1634,
	0, 0, 0, 0, 0, 748, 0, 831, 882, 777,
	834, 805, 837, 904, 732, 830, 0, 739, 746, 900,
	877, 767, 768, 769, 1940, 0, 0, 0, 0, 0,
	0, 806, 815, 850, 799, 358, 275, 292, 313, 793,
	283, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	765, 0, 825, 0, 0, 0, 747, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 0, 0, 752, 731, 766, 852, 0, 729,
	249, 146, 857, 876, 801, 211, 898, 880, 798, 797,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 849, 307, 779, 730, 861, 762, 775, 170, 771,
	299, 268, 357, 784, 822, 298, 224, 347, 845, 881,
	356, 788, 864, 366, 371, 770, 812, 750, 322, 183,
	178, 182, 0, 135, 781, 282, 175, 216, 800, 839,
	763, 166, 847, 826, 863, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 794, 785, 0, 0, 362, 796, 310, 309,
	790, 206, 855, 829, 736, 291, 842, 212, 134, 335,
	374, 152, 218, 340, 728, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 776, 844,
	854, 289, 312, 342, 154, 329, 772, 773, 778, 851,
	301, 862, 874, 887, 231, 186, 189, 200, 207, 836,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 737, 0, 327, 360, 376,
	334, 156, 758, 315, 341, 787, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 756, 757, 754, 0, 755,
	817, 818, 890, 891, 892, 853, 749, 0, 871, 872,
	0, 0, 0, 0, 0, 859, 878, 879, 841, 902,
	792, 167, 738, 741, 742, 743, 751, 808, 809, 821,
	824, 867, 866, 865, 868, 873, 896, 895, 897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	810, 276, 820, 131, 142, 222, 903, 290, 192, 361,
	733, 177, 0, 813, 823, 848, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 277, 278, 286, 846, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 875, 0, 789, 133, 869, 899, 832, 843,
	883, 2389, 338, 803, 886, 760, 786, 901, 791, 795,
	838, 744, 816, 264, 782, 745, 0, 764, 734, 774,
	735, 761, 181, 759, 860, 819, 885, 220, 833, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 884,
	811, 0, 893, 223, 0, 828, 894, 325, 248, 0,
	0, 807, 870, 814, 856, 802, 840, 753, 827, 888,
	783, 835, 889, 77, 0, 1087, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 831, 882,
	777, 834, 805, 837, 904, 732, 830, 0, 739, 746,
	900, 877, 767, 768, 769, 0, 0, 0, 0, 0,
	0, 0, 806, 815, 850, 799, 358, 275, 292, 313,
	793, 283, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 825, 0, 0, 0, 747, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 0, 0, 0, 752, 731, 766, 852, 0,
	729, 249, 146, 857, 876, 801, 211, 898, 880, 798,
	797, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 849, 307, 779, 730, 861, 762, 775, 170,
	771, 299, 268, 357, 784, 822, 298, 224, 347, 845,
	881, 356, 788, 864, 366, 371, 770, 812, 750, 322,
	183, 178, 182, 0, 135, 781, 282, 175, 216, 800,
	839, 763, 166, 847, 826, 863, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 794, 785, 0, 0, 362, 796, 310,
	309, 790, 206, 855, 829, 736, 291, 842, 212, 134,
	335, 374, 152, 218, 340, 728, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 776,
	844, 854, 289, 312, 342, 154, 329, 772, 773, 778,
	851, 301, 862, 874, 887, 231, 186, 189, 200, 207,
	836, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 737, 0, 327, 360,
	376, 334, 156, 758, 315, 341, 787, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 756, 757, 754, 0,
	755, 817, 818, 890, 891, 892, 853, 749, 0, 871,
	872, 0, 0, 0, 0, 0, 859, 878, 879, 841,
	902, 792, 167, 738, 741, 742, 743, 751, 808, 809,
	821, 824, 867, 866, 865, 868, 873, 896, 895, 897,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 276, 820, 131, 142, 222, 2390, 290, 192,
	361, 733, 177, 0, 813, 823, 848, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 277, 278, 286, 846, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 875, 0, 789, 133, 869, 899, 832,
	843, 883, 858, 338, 803, 886, 760, 786, 901, 791,
	795, 838, 744, 816, 264, 782, 745, 0, 764, 734,
	774, 735, 761, 181, 759, 860, 819, 885, 220, 833,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	884, 811, 0, 893, 223, 0, 828, 894, 325, 248,
	0, 0, 807, 870, 814, 856, 802, 840, 753, 827,
	888, 783, 835, 889, 0, 0, 0, 0, 726, 0,
	1633, 1634, 0, 0, 0, 0, 0, 748, 0, 831,
	882, 777, 834, 805, 837, 904, 732, 830, 0, 739,
	746, 900, 877, 767, 768, 769, 0, 0, 0, 0,
	0, 0, 0, 806, 815, 850, 799, 358, 275, 292,
	313, 793, 283, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 765, 0, 825, 0, 0, 0, 747, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 0, 0, 0, 752, 731, 766, 852,
	0, 729, 249, 146, 857, 876, 801, 211, 898, 880,
	798, 797, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 849, 307, 779, 730, 861, 762, 775,
	170, 771, 299, 268, 357, 784, 822, 298, 224, 347,
	845, 881, 356, 788, 864, 366, 371, 770, 812, 750,
	322, 183, 178, 182, 0, 135, 781, 282, 175, 216,
	800, 839, 763, 166, 847, 826, 863, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 794, 785, 0, 0, 362, 796,
	310, 309, 790, 206, 855, 829, 736, 291, 842, 212,
	134, 335, 374, 152, 218, 340, 728, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	776, 844, 854, 289, 312, 342, 154, 329, 772, 773,
	778, 851, 301, 862, 874, 887, 231, 186, 189, 200,
	207, 836, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 737, 0, 327,
	360, 376, 334, 156, 758, 315, 341, 787, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 756, 757, 754,
	0, 755, 817, 818, 890, 891, 892, 853, 749, 0,
	871, 872, 0, 0, 0, 0, 0, 859, 878, 879,
	841, 902, 792, 167, 738, 741, 742, 743, 751, 808,
	809, 821, 824, 867, 866, 865, 868, 873, 896, 895,
	897, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 810, 276, 820, 131, 142, 222, 903, 290,
	192, 361, 733, 177, 0, 813, 823, 848, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 277, 278, 286, 846, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 875, 0, 789, 133, 869, 899,
	832, 843, 883, 858, 338, 803, 886, 760, 786, 901,
	791, 795, 838, 744, 816, 264, 782, 745, 0, 764,
	734, 774, 735, 761, 181, 759, 860, 819, 885, 220,
	833, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 884, 811, 0, 893, 223, 0, 828, 894, 325,
	248, 0, 0, 807, 870, 814, 856, 802, 840, 753,
	827, 888, 783, 835, 889, 0, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	831, 882, 777, 834, 805, 837, 904, 732, 830, 0,
	739, 746, 900, 877, 767, 768, 769, 0, 0, 0,
	0, 0, 0, 0, 806, 815, 850, 799, 358, 275,
	292, 313, 793, 283, 780, 0, 0, 0, 0, 0,
	0, 2523, 0, 765, 0, 825, 0, 0, 0, 747,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 804, 0, 0, 0, 752, 731, 766,
	852, 0, 729, 249, 146, 857, 876, 801, 211, 898,
	880, 798, 797, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 849, 307, 779, 730, 861, 762,
	775, 170, 771, 299, 268, 357, 784, 822, 298, 224,
	347, 845, 881, 356, 788, 864, 366, 371, 770, 812,
	750, 322, 183, 178, 182, 0, 135, 781, 282, 175,
	216, 800, 839, 763, 166, 847, 826, 863, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 794, 785, 0, 0, 362,
	796, 310, 309, 790, 206, 855, 829, 736, 291, 842,
	212, 134, 335, 374, 152, 218, 340, 728, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 776, 844, 854, 289, 312, 342, 154, 329, 772,
	773, 778, 851, 301, 862, 874, 887, 231, 186, 189,
	200, 207, 836, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 737, 0,
	327, 360, 376, 334, 156, 758, 315, 341, 787, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 756, 757,
	754, 0, 755, 817, 818, 890, 891, 892, 853, 749,
	0, 871, 872, 0, 0, 0, 0, 0, 859, 878,
	879, 841, 902, 792, 167, 738, 741, 742, 743, 751,
	808, 809, 821, 824, 867, 866, 865, 868, 873, 896,
	895, 897, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 276, 820, 131, 142, 222, 903,
	290, 192, 361, 733, 177, 0, 813, 823, 848, 129,
	143, 155, 161, 176, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 277, 278, 286, 846,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 875, 0, 789, 133, 869,
	899, 832, 843, 883, 858, 338, 803, 886, 760, 786,
	901, 791, 795, 838, 744, 816, 264, 782, 745, 0,
	764, 734, 774, 735, 761, 181, 759, 860, 819, 885,
	220, 833, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 884, 811, 0, 893, 223, 0, 828, 894,
	325, 248, 0, 0, 807, 870, 814, 856, 802, 840,
	753, 827, 888, 783, 835, 889, 0, 0, 0, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 748,
	0, 831, 882, 777, 834, 805, 837, 904, 732, 830,
	0, 739, 746, 900, 877, 767, 768, 769, 0, 0,
	0, 0, 0, 0, 0, 806, 815, 850, 799, 358,
	275, 292, 313, 793, 283, 780, 0, 0, 0, 0,
	0, 0, 2117, 0, 765, 0, 825, 0, 0, 0,
	747, 740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 0, 0, 752, 731,
	766, 852, 0, 729, 249, 146, 857, 876, 801, 211,
	898, 880, 798, 797, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 849, 307, 779, 730, 861,
	762, 775, 170, 771, 299, 268, 357, 784, 822, 298,
	224, 347, 845, 881, 356, 788, 864, 366, 371, 770,
	812, 750, 322, 183, 178, 182, 0, 135, 781, 282,
	175, 216, 800, 839, 763, 166, 847, 826, 863, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 794, 785, 0, 0,
	362, 796, 310, 309, 790, 206, 855, 829, 736, 291,
	842, 212, 134, 335, 374, 152, 218, 340, 728, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 776, 844, 854, 289, 312, 342, 154, 329,
	772, 773, 778, 851, 301, 862, 874, 887, 231, 186,
	189, 200, 207, 836, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 737,
	0, 327, 360, 376, 334, 156, 758, 315, 341, 787,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 756,
	757, 754, 0, 755, 817, 818, 890, 891, 892, 853,
	749, 0, 871, 872, 0, 0, 0, 0, 0, 859,
	878, 879, 841, 902, 792, 167, 738, 741, 742, 743,
	751, 808, 809, 821, 824, 867, 866, 865, 868, 873,
	896, 895, 897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 810, 276, 820, 131, 142, 222,
	903, 290, 192, 361, 733, 177, 0, 813, 823, 848,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 277, 278, 286,
	846, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 875, 0, 789, 133,
	869, 899, 832, 843, 883, 858, 338, 803, 886, 760,
	786, 901, 791, 795, 838, 744, 816, 264, 782, 745,
	0, 764, 734, 774, 735, 761, 181, 759, 860, 819,
	885, 220, 833, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 884, 811, 0, 893, 223, 0, 828,
	894, 325, 248, 0, 0, 807, 870, 814, 856, 802,
	840, 753, 827, 888, 783, 835, 889, 0, 0, 0,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	748, 0, 831, 882, 777, 834, 805, 837, 904, 732,
	830, 0, 739, 746, 900, 877, 767, 768, 769, 0,
	0, 0, 0, 0, 0, 0, 806, 815, 850, 799,
	358, 275, 292, 313, 793, 283, 780, 0, 0, 0,
	0, 0, 0, 2107, 0, 765, 0, 825, 0, 0,
	0, 747, 740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 0, 0, 752,
	731, 766, 852, 0, 729, 249, 146, 857, 876, 801,
	211, 898, 880, 798, 797, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 849, 307, 779, 730,
	861, 762, 775, 170, 771, 299, 268, 357, 784, 822,
	298, 224, 347, 845, 881, 356, 788, 864, 366, 371,
	770, 812, 750, 322, 183, 178, 182, 0, 135, 781,
	282, 175, 216, 800, 839, 763, 166, 847, 826, 863,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 794, 785, 0,
	0, 362, 796, 310, 309, 790, 206, 855, 829, 736,
	291, 842, 212, 134, 335, 374, 152, 218, 340, 728,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 776, 844, 854, 289, 312, 342, 154,
	329, 772, 773, 778, 851, 301, 862, 874, 887, 231,
	186, 189, 200, 207, 836, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	737, 0, 327, 360, 376, 334, 156, 758, 315, 341,
	787, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	756, 757, 754, 0, 755, 817, 818, 890, 891, 892,
	853, 749, 0, 871, 872, 0, 0, 0, 0, 0,
	859, 878, 879, 841, 902, 792, 167, 738, 741, 742,
	743, 751, 808, 809, 821, 824, 867, 866, 865, 868,
	873, 896, 895, 897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 276, 820, 131, 142,
	222, 903, 290, 192, 361, 733, 177, 0, 813, 823,
	848, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 277, 278,
	286, 846, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 875, 0, 789,
	133, 869, 899, 832, 843, 883, 858, 338, 803, 886,
	760, 786, 901, 791, 795, 838, 744, 816, 264, 782,
	745, 0, 764, 734, 774, 735, 761, 181, 759, 860,
	819, 885, 220, 833, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 884, 811, 0, 893, 223, 0,
	828, 894, 325, 248, 0, 0, 807, 870, 814, 856,
	802, 840, 753, 827, 888, 783, 835, 889, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 831, 882, 777, 834, 805, 837, 904,
	732, 830, 0, 739, 746, 900, 877, 767, 768, 769,
	0, 0, 0, 0, 0, 0, 0, 806, 815, 850,
	799, 358, 275, 292, 313, 793, 283, 780, 0, 0,
	0, 0, 0, 0, 1928, 0, 765, 0, 825, 0,
	0, 0, 747, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 804, 0, 0, 0,
	752, 731, 766, 852, 0, 729, 249, 146, 857, 876,
	801, 211, 898, 880, 798, 797, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 849, 307, 779,
	730, 861, 762, 775, 170, 771, 299, 268, 357, 784,
	822, 298, 224, 347, 845, 881, 356, 788, 864, 366,
	371, 770, 812, 750, 322, 183, 178, 182, 0, 135,
	781, 282, 175, 216, 800, 839, 763, 166, 847, 826,
	863, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 794, 785,
	0, 0, 362, 796, 310, 309, 790, 206, 855, 829,
	736, 291, 842, 212, 134, 335, 374, 152, 218, 340,
	728, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 776, 844, 854, 289, 312, 342,
	154, 329, 772, 773, 778, 851, 301, 862, 874, 887,
	231, 186, 189, 200, 207, 836, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 737, 0, 327, 360, 376, 334, 156, 758, 315,
	341, 787, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 756, 757, 754, 0, 755, 817, 818, 890, 891,
	892, 853, 749, 0, 871, 872, 0, 0, 0, 0,
	0, 859, 878, 879, 841, 902, 792, 167, 738, 741,
	742, 743, 751, 808, 809, 821, 824, 867, 866, 865,
	868, 873, 896, 895, 897, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 276, 820, 131,
	142, 222, 903, 290, 192, 361, 733, 177, 0, 813,
	823, 848, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 277,
	278, 286, 846, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 875, 0,
	789, 133, 869, 899, 832, 843, 883, 858, 338, 803,
	886, 760, 786, 901, 791, 795, 838, 744, 816, 264,
	782, 745, 0, 764, 734, 774, 735, 761, 181, 759,
	860, 819, 885, 220, 833, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 884, 811, 0, 893, 223,
	0, 828, 894, 325, 248, 0, 0, 807, 870, 814,
	856, 802, 840, 753, 827, 888, 783, 835, 889, 0,
	0, 0, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 748, 0, 831, 882, 777, 834, 805, 837,
	904, 732, 830, 0, 739, 746, 900, 877, 767, 768,
	769, 0, 0, 0, 0, 0, 0, 0, 806, 815,
	850, 799, 358, 275, 292, 313, 793, 283, 780, 0,
	0, 0, 0, 0, 0, 1485, 0, 765, 0, 825,
	0, 0, 0, 747, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 804, 0, 0,
	0, 752, 731, 766, 852, 0, 729, 249, 146, 857,
	876, 801, 211, 898, 880, 798, 797, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 849, 307,
	779, 730, 861, 762, 775, 170, 771, 299, 268, 357,
	784, 822, 298, 224, 347, 845, 881, 356, 788, 864,
	366, 371, 770, 812, 750, 322, 183, 178, 182, 0,
	135, 781, 282, 175, 216, 800, 839, 763, 166, 847,
	826, 863, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 794,
	785, 0, 0, 362, 796, 310, 309, 790, 206, 855,
	829, 736, 291, 842, 212, 134, 335, 374, 152, 218,
	340, 728, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 776, 844, 854, 289, 312,
	342, 154, 329, 772, 773, 778, 851, 301, 862, 874,
	887, 231, 186, 189, 200, 207, 836, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 737, 0, 327, 360, 376, 334, 156, 758,
	315, 341, 787, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 756, 757, 754, 0, 755, 817, 818, 890,
	891, 892, 853, 749, 0, 871, 872, 0, 0, 0,
	0, 0, 859, 878, 879, 841, 902, 792, 167, 738,
	741, 742, 743, 751, 808, 809, 821, 824, 867, 866,
	865, 868, 873, 896, 895, 897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 276, 820,
	131, 142, 222, 903, 290, 192, 361, 733, 177, 0,
	813, 823, 848, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	277, 278, 286, 846, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 875,
	0, 789, 133, 869, 899, 832, 843, 883, 858, 338,
	803, 886, 760, 786, 901, 791, 795, 838, 744, 816,
	264, 782, 745, 0, 764, 734, 774, 735, 761, 181,
	759, 860, 819, 885, 220, 833, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 884, 811, 0, 893,
	223, 0, 828, 894, 325, 248, 0, 0, 807, 870,
	814, 856, 802, 840, 753, 827, 888, 783, 835, 889,
	0, 0, 0, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 748, 0, 831, 882, 777, 834, 805,
	837, 904, 732, 830, 0, 739, 746, 900, 877, 767,
	768, 769, 0, 0, 0, 0, 0, 0, 0, 806,
	815, 850, 799, 358, 275, 292, 313, 793, 283, 780,
	0, 0, 0, 0, 0, 0, 0, 0, 765, 0,
	825, 0, 0, 0, 747, 740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 0,
	0, 0, 752, 731, 766, 852, 0, 729, 249, 146,
	857, 876, 801, 211, 898, 880, 798, 797, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 849,
	307, 779, 730, 861, 762, 775, 170, 771, 299, 268,
	357, 784, 822, 298, 224, 347, 845, 881, 356, 788,
	864, 366, 371, 770, 812, 750, 322, 183, 178, 182,
	0, 135, 781, 282, 175, 216, 800, 839, 763, 166,
	847, 826, 863, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	794, 785, 0, 0, 362, 796, 310, 309, 790, 206,
	855, 829, 736, 291, 842, 212, 134, 335, 374, 152,
	218, 340, 728, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 776, 844, 854, 289,
	312, 342, 154, 329, 772, 773, 778, 851, 301, 862,
	874, 887, 231, 186, 189, 200, 207, 836, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 737, 0, 327, 360, 376, 334, 156,
	758, 315, 341, 787, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 756, 757, 754, 0, 755, 817, 818,
	890, 891, 892, 853, 749, 0, 871, 872, 0, 0,
	0, 0, 0, 859, 878, 879, 841, 902, 792, 167,
	738, 741, 742, 743, 751, 808, 809, 821, 824, 867,
	866, 865, 868, 873, 896, 895, 897, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 276,
	820, 131, 142, 222, 903, 290, 192, 361, 733, 177,
	0, 813, 823, 848, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 277, 278, 286, 846, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	875, 0, 789, 133, 869, 899, 832, 843, 883, 858,
	338, 803, 886, 760, 786, 901, 791, 795, 838, 744,
	816, 264, 782, 745, 0, 764, 734, 774, 735, 761,
	181, 759, 860, 819, 885, 220, 833, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 884, 811, 0,
	893, 223, 0, 828, 894, 325, 248, 0, 0, 807,
	870, 814, 856, 802, 840, 753, 827, 888, 783, 835,
	889, 0, 0, 0, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 831, 882, 777, 834,
	805, 837, 904, 732, 830, 0, 739, 746, 900, 877,
	767, 768, 769, 0, 0, 0, 0, 0, 0, 0,
	806, 815, 850, 799, 358, 275, 292, 313, 793, 283,
	780, 0, 0, 0, 0, 0, 0, 0, 0, 765,
	0, 825, 0, 0, 0, 747, 740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 752, 731, 766, 852, 0, 729, 249,
	146, 857, 876, 801, 211, 898, 880, 798, 797, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	849, 307, 779, 730, 861, 762, 775, 170, 771, 299,
	268, 357, 784, 822, 298, 224, 347, 845, 881, 356,
	788, 864, 366, 371, 770, 812, 750, 322, 183, 178,
	182, 0, 135, 781, 282, 175, 216, 800, 839, 763,
	166, 847, 826, 863, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 794, 785, 0, 0, 362, 796, 310, 309, 790,
	206, 855, 829, 736, 291, 842, 212, 134, 335, 374,
	152, 218, 340, 728, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 776, 844, 854,
	289, 312, 342, 154, 329, 772, 773, 778, 851, 301,
	862, 874, 887, 231, 186, 189, 200, 207, 836, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 737, 0, 327, 360, 376, 334,
	156, 758, 315, 341, 787, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 756, 757, 754, 0, 755, 817,
	818, 890, 891, 892, 853, 749, 0, 871, 872, 0,
	0, 0, 0, 0, 859, 878, 879, 841, 902, 792,
	167, 738, 741, 742, 743, 751, 808, 809, 821, 824,
	867, 866, 865, 868, 873, 896, 895, 897, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	276, 820, 131, 142, 222, 903, 290, 192, 361, 733,
	177, 0, 813, 823, 848, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 277, 278, 286, 846, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 875, 0, 789, 133, 869, 899, 832, 843, 883,
	858, 338, 803, 886, 760, 786, 901, 791, 795, 838,
	744, 816, 264, 782, 745, 0, 764, 734, 774, 735,
	761, 181, 759, 860, 819, 885, 220, 833, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 1645, 1649,
	0, 893, 223, 0, 828, 894, 325, 248, 0, 0,
	807, 870, 814, 856, 802, 840, 753, 827, 888, 783,
	835, 889, 0, 0, 0, 0, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 831, 882, 777,
	834, 805, 837, 904, 732, 830, 0, 739, 746, 900,
	877, 767, 768, 769, 0, 0, 0, 0, 0, 0,
	0, 806, 815, 850, 799, 358, 275, 292, 313, 793,
	283, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	765, 0, 825, 0, 0, 0, 747, 740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	804, 0, 0, 0, 752, 731, 766, 852, 0, 729,
	249, 146, 857, 876, 1648, 211, 898, 880, 798, 797,
	1642, 0, 1643, 1644, 221, 725, 128, 144, 1640, 1647,
	260, 849, 307, 779, 730, 861, 762, 775, 170, 771,
	299, 268, 357, 784, 822, 298, 224, 347, 845, 881,
	356, 788, 864, 366, 371, 770, 812, 750, 322, 183,
	178, 182, 0, 135, 781, 282, 175, 216, 800, 839,
	763, 166, 847, 826, 863, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 794, 785, 0, 0, 362, 796, 310, 309,
	790, 206, 855, 829, 736, 291, 842, 212, 134, 335,
	374, 152, 218, 340, 728, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 776, 844,
	854, 289, 312, 342, 154, 329, 772, 773, 778, 851,
	301, 862, 874, 887, 231, 186, 189, 200, 207, 836,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 737, 0, 327, 360, 376,
	334, 156, 758, 315, 341, 787, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 756, 757, 754, 0, 755,
	817, 818, 890, 891, 892, 853, 749, 0, 871, 872,
	0, 0, 0, 0, 0, 859, 878, 879, 841, 902,
	792, 167, 738, 741, 742, 743, 751, 808, 809, 821,
	824, 867, 866, 865, 868, 873, 896, 895, 897, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	810, 276, 820, 131, 142, 222, 903, 290, 192, 361,
	733, 177, 0, 813, 823, 848, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 277, 278, 286, 846, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 875, 0, 789, 133, 869, 899, 832, 843,
	883, 858, 338, 803, 886, 760, 786, 901, 791, 795,
	838, 744, 816, 264, 782, 745, 0, 764, 734, 774,
	735, 761, 181, 759, 860, 819, 885, 220, 833, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 884,
	811, 0, 893, 223, 0, 828, 894, 325, 248, 0,
	0, 807, 870, 814, 856, 802, 840, 753, 827, 888,
	783, 835, 889, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 831, 882,
	777, 834, 805, 837, 904, 732, 830, 0, 739, 746,
	900, 877, 767, 768, 769, 0, 0, 0, 0, 0,
	0, 0, 806, 815, 850, 799, 358, 275, 292, 313,
	793, 283, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 825, 0, 0, 0, 747, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 0, 0, 0, 752, 731, 766, 852, 0,
	729, 249, 146, 857, 876, 801, 211, 898, 880, 798,
	797, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 849, 307, 779, 730, 861, 762, 775, 170,
	771, 299, 268, 357, 784, 822, 298, 224, 347, 845,
	881, 356, 788, 864, 366, 371, 770, 812, 750, 322,
	183, 178, 182, 0, 135, 781, 282, 175, 216, 800,
	839, 763, 166, 847, 826, 863, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 794, 785, 0, 0, 362, 796, 310,
	309, 790, 206, 855, 829, 736, 291, 842, 212, 134,
	335, 374, 152, 218, 340, 728, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 776,
	844, 854, 289, 312, 342, 154, 329, 772, 773, 778,
	851, 301, 862, 874, 887, 231, 186, 189, 200, 207,
	836, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 737, 0, 327, 360,
	376, 334, 156, 758, 315, 341, 787, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 756, 757, 754, 0,
	755, 817, 818, 890, 891, 892, 853, 749, 0, 871,
	872, 0, 0, 0, 0, 0, 859, 878, 879, 841,
	902, 792, 167, 738, 741, 742, 743, 751, 808, 809,
	821, 824, 867, 866, 865, 868, 873, 896, 895, 897,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 276, 820, 131, 142, 222, 903, 290, 192,
	361, 733, 177, 0, 813, 823, 848, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 277, 278, 286, 846, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 875, 0, 789, 133, 869, 899, 832,
	843, 883, 858, 338, 803, 886, 760, 786, 901, 791,
	795, 838, 744, 816, 264, 782, 745, 0, 764, 734,
	774, 735, 761, 181, 759, 860, 819, 885, 220, 833,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	884, 811, 0, 893, 223, 0, 828, 894, 325, 248,
	0, 0, 807, 870, 814, 856, 802, 840, 753, 827,
	888, 783, 835, 889, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 831,
	882, 777, 834, 805, 837, 904, 732, 830, 0, 739,
	746, 900, 877, 767, 768, 769, 0, 0, 0, 0,
	0, 0, 0, 806, 815, 850, 799, 358, 275, 292,
	313, 793, 283, 780, 0, 0, 0, 0, 0, 0,
	0, 0, 765, 0, 825, 0, 0, 0, 747, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 804, 0, 0, 0, 752, 731, 766, 852,
	0, 729, 249, 146, 857, 876, 801, 211, 898, 880,
	798, 797, 285, 0, 332, 199, 221, 725, 128, 144,
	721, 198, 260, 849, 307, 779, 730, 861, 762, 775,
	170, 771, 299, 268, 357, 784, 822, 298, 224, 347,
	845, 881, 356, 788, 864, 366, 371, 770, 812, 750,
	322, 183, 178, 182, 0, 135, 781, 282, 175, 216,
	800, 839, 763, 166, 847, 826, 863, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 794, 785, 0, 0, 362, 796,
	310, 309, 790, 206, 855, 829, 736, 291, 842, 212,
	134, 335, 374, 152, 218, 340, 728, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	776, 844, 854, 289, 312, 342, 154, 329, 772, 773,
	778, 851, 301, 862, 874, 887, 231, 186, 189, 200,
	207, 836, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 737, 0, 327,
	360, 376, 334, 156, 758, 315, 341, 787, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 756, 757, 754,
	0, 755, 817, 818, 890, 891, 892, 853, 749, 0,
	871, 872, 0, 0, 0, 0, 0, 859, 878, 879,
	841, 902, 792, 167, 738, 741, 742, 743, 751, 808,
	809, 821, 824, 867, 866, 865, 868, 873, 896, 895,
	897, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 810, 276, 820, 131, 142, 222, 903, 290,
	192, 361, 733, 177, 0, 813, 823, 848, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 277, 278, 286, 846, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 875, 338, 789, 133, 869, 899,
	832, 843, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 560, 0, 0, 181, 557, 0, 0, 0,
	220, 0, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 678, 223, 0, 0, 534,
	325, 248, 0, 0, 0, 0, 667, 668, 0, 0,
	0, 0, 0, 0, 1622, 0, 77, 0, 0, 0,
	558, 581, 580, 583, 584, 585, 586, 0, 0, 539,
	582, 587, 620, 621, 1623, 0, 0, 0, 0, 555,
	572, 0, 677, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 498, 0, 0, 0, 0,
	569, 570, 0, 0, 0, 0, 690, 0, 571, 0,
	0, 567, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 146, 669, 0, 0, 211,
	538, 0, 0, 688, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 0, 307, 595, 479, 0,
	0, 0, 170, 0, 299, 268, 357, 597, 0, 298,
	224, 347, 0, 0, 356, 0, 525, 366, 371, 491,
	0, 486, 322, 183, 178, 182, 0, 135, 499, 282,
	175, 216, 0, 0, 0, 166, 0, 0, 0, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 503, 501, 0, 0,
	362, 504, 310, 309, 0, 206, 0, 512, 480, 291,
	516, 212, 134, 335, 374, 152, 218, 340, 478, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 494, 518, 0, 289, 312, 342, 154, 329,
	492, 493, 495, 522, 301, 524, 530, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 481,
	0, 327, 360, 376, 334, 156, 0, 315, 341, 502,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 679,
	689, 685, 687, 686, 683, 684, 682, 681, 680, 691,
	670, 671, 672, 673, 674, 0, 0, 0, 676, 0,
	614, 615, 0, 0, 0, 167, 588, 589, 590, 591,
	592, 598, 599, 603, 604, 612, 611, 610, 613, 616,
	618, 617, 619, 593, 594, 596, 600, 601, 602, 605,
	606, 609, 607, 608, 0, 276, 675, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 277, 278, 286,
	520, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 36, 338, 0, 133,
	0, 0, 515, 517, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 560, 0, 0, 181, 557, 0,
	0, 0, 220, 0, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 678, 223, 0,
	0, 534, 325, 248, 0, 0, 0, 0, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 558, 581, 580, 583, 584, 585, 586, 0,
	0, 539, 582, 587, 620, 621, 0, 0, 0, 0,
	0, 555, 572, 0, 677, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 498, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 146, 669, 0,
	0, 211, 538, 0, 0, 688, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 0, 307, 595,
	479, 0, 0, 0, 170, 0, 299, 268, 357, 597,
	0, 298, 224, 347, 0, 0, 356, 0, 525, 366,
	371, 491, 0, 486, 322, 183, 178, 182, 0, 135,
	499, 282, 175, 216, 0, 0, 0, 166, 0, 0,
	0, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 503, 501,
	0, 0, 362, 504, 310, 309, 0, 206, 0, 512,
	480, 291, 516, 212, 134, 335, 374, 152, 218, 340,
	478, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 494, 518, 0, 289, 312, 342,
	154, 329, 492, 493, 495, 522, 301, 524, 530, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 481, 0, 327, 360, 376, 334, 156, 0, 315,
	341, 502, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 679, 689, 685, 687, 686, 683, 684, 682, 681,
	680, 691, 670, 671, 672, 673, 674, 0, 0, 0,
	676, 0, 614, 615, 0, 0, 0, 167, 588, 589,
	590, 591, 592, 598, 599, 603, 604, 612, 611, 610,
	613, 616, 618, 617, 619, 593, 594, 596, 600, 601,
	602, 605, 606, 609, 607, 608, 0, 276, 675, 131,
	142, 222, 75, 290, 192, 361, 0, 177, 0, 0,
	0, 0, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 277,
	278, 286, 520, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 338, 0,
	0, 133, 0, 0, 515, 517, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 560, 0, 0, 181, 557,
	0, 0, 0, 220, 0, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 678, 223,
	0, 0, 534, 325, 248, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 539, 582, 587, 620, 621, 0, 0, 0,
	0, 0, 555, 572, 0, 677, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 498, 0,
	0, 0, 0, 569, 570, 551, 0, 0, 0, 690,
	0, 571, 0, 0, 567, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 146, 669,
	0, 0, 211, 538, 0, 0, 688, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 0, 307,
	595, 479, 0, 0, 0, 170, 0, 299, 268, 357,
	597, 0, 298, 224, 347, 0, 0, 356, 0, 525,
	366, 371, 491, 0, 486, 322, 183, 178, 182, 0,
	135, 499, 282, 175, 216, 0, 0, 0, 166, 0,
	0, 0, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 503,
	501, 0, 0, 362, 504, 310, 309, 0, 206, 0,
	512, 480, 291, 516, 212, 134, 335, 374, 152, 218,
	340, 478, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 494, 518, 0, 289, 312,
	342, 154, 329, 492, 493, 495, 522, 301, 524, 530,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 481, 0, 327, 360, 376, 334, 156, 0,
	315, 341, 502, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 679, 689, 685, 687, 686, 683, 684, 682,
	681, 680, 691, 670, 671, 672, 673, 674, 0, 0,
	0, 676, 0, 614, 615, 0, 0, 0, 167, 588,
	589, 590, 591, 592, 598, 599, 603, 604, 612, 611,
	610, 613, 616, 618, 617, 619, 593, 594, 596, 600,
	601, 602, 605, 606, 609, 607, 608, 0, 276, 675,
	131, 142, 222, 0, 290, 192, 361, 0, 177, 0,
	0, 0, 0, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	277, 278, 286, 520, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 338,
	0, 0, 133, 0, 0, 515, 517, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 560, 0, 0, 181,
	557, 0, 0, 0, 220, 0, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 678,
	223, 0, 0, 534, 325, 248, 0, 0, 0, 0,
	667, 668, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 1087, 0, 558, 581, 580, 583, 584, 585,
	586, 0, 0, 539, 582, 587, 620, 621, 0, 0,
	0, 0, 0, 555, 572, 0, 677, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 498,
	0, 0, 0, 0, 569, 570, 0, 0, 0, 0,
	690, 0, 571, 0, 0, 567, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 146,
	669, 0, 0, 211, 538, 0, 0, 688, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 0,
	307, 595, 479, 0, 0, 0, 170, 0, 299, 268,
	357, 597, 0, 298, 224, 347, 0, 0, 356, 0,
	525, 366, 371, 491, 0, 486, 322, 183, 178, 182,
	0, 135, 499, 282, 175, 216, 0, 0, 0, 166,
	0, 0, 0, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	503, 501, 0, 0, 362, 504, 310, 309, 0, 206,
	0, 512, 480, 291, 516, 212, 134, 335, 374, 152,
	218, 340, 478, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 494, 518, 0, 289,
	312, 342, 154, 329, 492, 493, 495, 522, 301, 524,
	530, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 481, 0, 327, 360, 376, 334, 156,
	0, 315, 341, 502, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 679, 689, 685, 687, 686, 683, 684,
	682, 681, 680, 691, 670, 671, 672, 673, 674, 0,
	0, 0, 676, 0, 614, 615, 0, 0, 0, 167,
	588, 589, 590, 591, 592, 598, 599, 603, 604, 612,
	611, 610, 613, 616, 618, 617, 619, 593, 594, 596,
	600, 601, 602, 605, 606, 609, 607, 608, 0, 276,
	675, 131, 142, 222, 0, 290, 192, 361, 0, 177,
	0, 0, 0, 0, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 277, 278, 286, 520, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	338, 0, 0, 133, 0, 0, 515, 517, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 560, 0, 0,
	181, 557, 0, 0, 0, 220, 0, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	678, 223, 0, 0, 534, 325, 248, 0, 0, 0,
	0, 667, 668, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 558, 581, 580, 583, 584,
	585, 586, 0, 0, 539, 582, 587, 620, 621, 0,
	0, 0, 0, 0, 555, 572, 0, 677, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	498, 0, 0, 0, 0, 569, 570, 1523, 0, 0,
	0, 690, 0, 571, 0, 0, 567, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 573,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	146, 669, 0, 0, 211, 538, 0, 0, 688, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	0, 307, 595, 479, 0, 0, 0, 170, 0, 299,
	268, 357, 597, 0, 298, 224, 347, 0, 0, 356,
	0, 525, 366, 371, 491, 0, 486, 322, 183, 178,
	182, 0, 135, 499, 282, 175, 216, 0, 0, 0,
	166, 0, 0, 0, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 503, 501, 0, 0, 362, 504, 310, 309, 0,
	206, 0, 512, 480, 291, 516, 212, 134, 335, 374,
	152, 218, 340, 478, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 494, 518, 0,
	289, 312, 342, 154, 329, 492, 493, 495, 522, 301,
	524, 530, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 481, 0, 327, 360, 376, 334,
	156, 0, 315, 341, 502, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 679, 689, 685, 687, 686, 683,
	684, 682, 681, 680, 691, 670, 671, 672, 673, 674,
	0, 0, 0, 676, 0, 614, 615, 0, 0, 0,
	167, 588, 589, 590, 591, 592, 598, 599, 603, 604,
	612, 611, 610, 613, 616, 618, 617, 619, 593, 594,
	596, 600, 601, 602, 605, 606, 609, 607, 608, 0,
	276, 675, 131, 142, 222, 0, 290, 192, 361, 0,
	177, 0, 0, 0, 0, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 277, 278, 286, 520, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 338, 0, 0, 133, 0, 0, 515, 517, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 560, 0,
	0, 181, 557, 0, 0, 0, 220, 0, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 678, 223, 0, 0, 534, 325, 248, 0, 0,
	0, 0, 667, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 558, 581, 1570, 583,
	584, 585, 586, 0, 0, 539, 582, 587, 620, 621,
	0, 0, 0, 0, 0, 555, 572, 0, 677, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 498, 0, 0, 0, 0, 569, 570, 1523, 0,
	0, 0, 690, 0, 571, 0, 0, 567, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 146, 669, 0, 0, 211, 538, 0, 0, 688,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 0, 307, 595, 479, 0, 0, 0, 170, 0,
	299, 268, 357, 597, 0, 298, 224, 347, 0, 0,
	356, 0, 525, 366, 371, 491, 0, 486, 322, 183,
	178, 182, 0, 135, 499, 282, 175, 216, 0, 0,
	0, 166, 0, 0, 0, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 503, 501, 0, 0, 362, 504, 310, 309,
	0, 206, 0, 512, 480, 291, 516, 212, 134, 335,
	374, 152, 218, 340, 478, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 494, 518,
	0, 289, 312, 342, 154, 329, 492, 493, 495, 522,
	301, 524, 530, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 481, 0, 327, 360, 376,
	334, 156, 0, 315, 341, 502, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 679, 689, 685, 687, 686,
	683, 684, 682, 681, 680, 691, 670, 671, 672, 673,
	674, 0, 0, 0, 676, 0, 614, 615, 0, 0,
	0, 167, 588, 589, 590, 591, 592, 598, 599, 603,
	604, 612, 611, 610, 613, 616, 618, 617, 619, 593,
	594, 596, 600, 601, 602, 605, 606, 609, 607, 608,
	0, 276, 675, 131, 142, 222, 0, 290, 192, 361,
	0, 177, 0, 0, 0, 0, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 277, 278, 286, 520, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 338, 0, 0, 133, 0, 0, 515, 517,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 560,
	0, 0, 181, 557, 0, 0, 0, 220, 0, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 678, 223, 0, 0, 534, 325, 248, 0,
	0, 0, 0, 667, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 558, 581, 1567,
	583, 584, 585, 586, 0, 0, 539, 582, 587, 620,
	621, 0, 0, 0, 0, 0, 555, 572, 0, 677,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 498, 0, 0, 0, 0, 569, 570, 1523,
	0, 0, 0, 690, 0, 571, 0, 0, 567, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 573, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 146, 669, 0, 0, 211, 538, 0, 0,
	688, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 0, 307, 595, 479, 0, 0, 0, 170,
	0, 299, 268, 357, 597, 0, 298, 224, 347, 0,
	0, 356, 0, 525, 366, 371, 491, 0, 486, 322,
	183, 178, 182, 0, 135, 499, 282, 175, 216, 0,
	0, 0, 166, 0, 0, 0, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 362, 504, 310,
	309, 0, 206, 0, 512, 480, 291, 516, 212, 134,
	335, 374, 152, 218, 340, 478, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 494,
	518, 0, 289, 312, 342, 154, 329, 492, 493, 495,
	522, 301, 524, 530, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 481, 0, 327, 360,
	376, 334, 156, 0, 315, 341, 502, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 679, 689, 685, 687,
	686, 683, 684, 682, 681, 680, 691, 670, 671, 672,
	673, 674, 0, 0, 0, 676, 0, 614, 615, 0,
	0, 0, 167, 588, 589, 590, 591, 592, 598, 599,
	603, 604, 612, 611, 610, 613, 616, 618, 617, 619,
	593, 594, 596, 600, 601, 602, 605, 606, 609, 607,
	608, 0, 276, 675, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 0, 0, 0, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 277, 278, 286, 520, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 338, 0, 0, 133, 0, 0, 515,
	517, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	560, 0, 0, 181, 557, 0, 0, 0, 220, 0,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 678, 223, 0, 0, 534, 325, 248,
	0, 0, 0, 0, 667, 668, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 1401, 0, 558, 581,
	580, 583, 584, 585, 586, 0, 0, 539, 582, 587,
	620, 621, 0, 0, 0, 0, 0, 555, 572, 0,
	677, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 498, 0, 0, 0, 0, 569, 570,
	0, 0, 0, 0, 690, 0, 571, 0, 0, 567,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 146, 669, 0, 0, 211, 538, 0,
	0, 688, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 0, 307, 595, 479, 0, 0, 0,
	170, 0, 299, 268, 357, 597, 0, 298, 224, 347,
	0, 0, 356, 0, 525, 366, 371, 491, 0, 486,
	322, 183, 178, 182, 0, 135, 499, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 503, 501, 0, 0, 362, 504,
	310, 309, 0, 206, 0, 512, 480, 291, 516, 212,
	134, 335, 374, 152, 218, 340, 478, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	494, 518, 0, 289, 312, 342, 154, 329, 492, 493,
	495, 522, 301, 524, 530, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 481, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 502, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 679, 689, 685,
	687, 686, 683, 684, 682, 681, 680, 691, 670, 671,
	672, 673, 674, 0, 0, 0, 676, 0, 614, 615,
	0, 0, 0, 167, 588, 589, 590, 591, 592, 598,
	599, 603, 604, 612, 611, 610, 613, 616, 618, 617,
	619, 593, 594, 596, 600, 601, 602, 605, 606, 609,
	607, 608, 0, 276, 675, 131, 142, 222, 0, 290,
	192, 361, 0, 177, 0, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 277, 278, 286, 520, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 338, 0, 0, 133, 0, 0,
	515, 517, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 560, 0, 0, 181, 557, 0, 0, 0, 220,
	0, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 678, 223, 0, 0, 534, 325,
	248, 0, 0, 0, 0, 667, 668, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 558,
	581, 580, 583, 584, 585, 586, 0, 0, 539, 582,
	587, 620, 621, 0, 0, 0, 0, 0, 555, 572,
	0, 677, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 498, 0, 0, 0, 0, 569,
	570, 0, 0, 0, 0, 690, 0, 571, 0, 0,
	567, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 573, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 146, 669, 0, 0, 211, 538,
	0, 0, 688, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 0, 307, 595, 479, 0, 0,
	0, 170, 0, 299, 268, 357, 597, 0, 298, 224,
	347, 0, 0, 356, 0, 525, 366, 371, 491, 0,
	486, 322, 183, 178, 182, 0, 135, 499, 282, 175,
	216, 0, 0, 0, 166, 0, 0, 0, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 503, 501, 0, 0, 362,
	504, 310, 309, 0, 206, 0, 512, 480, 291, 516,
	212, 134, 335, 374, 152, 218, 340, 478, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 494, 518, 0, 289, 312, 342, 154, 329, 492,
	493, 495, 522, 301, 524, 530, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 481, 0,
	327, 360, 376, 334, 156, 0, 315, 341, 502, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 679, 689,
	685, 687, 686, 683, 684, 682, 681, 680, 691, 670,
	671, 672, 673, 674, 0, 0, 0, 676, 0, 614,
	615, 0, 0, 0, 167, 588, 589, 590, 591, 592,
	598, 599, 603, 604, 612, 611, 610, 613, 616, 618,
	617, 619, 593, 594, 596, 600, 601, 602, 605, 606,
	609, 607, 608, 0, 276, 675, 131, 142, 222, 0,
	290, 192, 361, 0, 177, 0, 0, 0, 0, 129,
	143, 155, 161, 176, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 277, 278, 286, 520,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 338, 0, 0, 133, 0,
	0, 515, 517, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 678, 223, 0, 0, 534,
	325, 248, 0, 0, 0, 0, 667, 668, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	558, 581, 580, 583, 584, 585, 586, 0, 0, 539,
	582, 587, 620, 621, 0, 0, 0, 0, 0, 0,
	572, 0, 677, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 498, 0, 0, 0, 0,
	569, 570, 0, 0, 0, 0, 690, 0, 571, 0,
	0, 567, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 146, 669, 0, 0, 211,
	538, 0, 0, 688, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 0, 307, 595, 479, 0,
	0, 0, 170, 0, 299, 268, 357, 597, 0, 298,
	224, 347, 0, 0, 356, 0, 525, 366, 371, 491,
	0, 486, 322, 183, 178, 182, 0, 135, 499, 282,
	175, 216, 0, 0, 0, 166, 0, 0, 0, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 503, 501, 0, 0,
	362, 504, 310, 309, 0, 206, 0, 512, 480, 291,
	516, 212, 134, 335, 374, 152, 218, 340, 478, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 494, 518, 0, 289, 312, 342, 154, 329,
	492, 493, 495, 522, 301, 524, 530, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 481,
	0, 327, 360, 376, 334, 156, 0, 315, 341, 502,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 679,
	689, 685, 687, 686, 683, 684, 682, 681, 680, 691,
	670, 671, 672, 673, 674, 1573, 1574, 1575, 676, 0,
	614, 615, 0, 0, 0, 167, 588, 589, 590, 591,
	592, 598, 599, 603, 604, 612, 611, 610, 613, 616,
	618, 617, 619, 593, 594, 596, 600, 601, 602, 605,
	606, 609, 607, 608, 0, 276, 675, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 277, 278, 286,
	520, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 338, 0, 0, 133,
	0, 0, 515, 517, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 678, 223, 0, 0,
	534, 325, 248, 0, 0, 0, 0, 667, 668, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 558, 581, 580, 583, 584, 585, 586, 0, 0,
	539, 582, 587, 620, 621, 0, 0, 0, 0, 0,
	0, 572, 0, 677, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 498, 0, 0, 0,
	0, 569, 570, 0, 0, 0, 0, 690, 0, 571,
	0, 0, 567, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 146, 669, 0, 0,
	211, 538, 0, 0, 688, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 0, 307, 595, 479,
	0, 0, 0, 170, 0, 299, 268, 357, 597, 2999,
	298, 224, 347, 0, 0, 356, 0, 525, 366, 371,
	491, 0, 486, 322, 183, 178, 182, 0, 135, 499,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 503, 501, 0,
	0, 362, 504, 310, 309, 0, 206, 0, 512, 480,
	291, 516, 212, 134, 335, 374, 152, 218, 340, 478,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 494, 518, 0, 289, 312, 342, 154,
	329, 492, 493, 495, 522, 301, 524, 530, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	481, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	502, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 167, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 0, 276, 675, 131, 142,
	222, 0, 290, 192, 361, 0, 177, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 277, 278,
	286, 520, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 338, 0, 0,
	133, 0, 0, 515, 517, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 678, 223, 0,
	0, 534, 325, 248, 0, 0, 0, 0, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	1087, 0, 558, 581, 580, 583, 584, 585, 586, 0,
	0, 539, 582, 587, 620, 621, 0, 0, 0, 0,
	0, 0, 572, 0, 677, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 498, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 146, 669, 0,
	0, 211, 538, 0, 0, 688, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 0, 307, 595,
	479, 0, 0, 0, 170, 0, 299, 268, 357, 597,
	0, 298, 224, 347, 0, 0, 356, 0, 525, 366,
	371, 491, 0, 486, 322, 183, 178, 182, 0, 135,
	499, 282, 175, 216, 0, 0, 0, 166, 0, 0,
	0, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 503, 501,
	0, 0, 362, 504, 310, 309, 0, 206, 0, 512,
	480, 291, 516, 212, 134, 335, 374, 152, 218, 340,
	478, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 494, 518, 0, 289, 312, 342,
	154, 329, 492, 493, 495, 522, 301, 524, 530, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 481, 0, 327, 360, 376, 334, 156, 0, 315,
	341, 502, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 679, 689, 685, 687, 686, 683, 684, 682, 681,
	680, 691, 670, 671, 672, 673, 674, 0, 0, 0,
	676, 0, 614, 615, 0, 0, 0, 167, 588, 589,
	590, 591, 592, 598, 599, 603, 604, 612, 611, 610,
	613, 616, 618, 617, 619, 593, 594, 596, 600, 601,
	602, 605, 606, 609, 607, 608, 0, 276, 675, 131,
	142, 222, 0, 290, 192, 361, 0, 177, 0, 0,
	0, 0, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 277,
	278, 286, 520, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 338, 0,
	0, 133, 0, 0, 515, 517, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 678, 223,
	0, 0, 534, 325, 248, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 539, 582, 587, 620, 621, 0, 0, 0,
	0, 0, 0, 572, 0, 677, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 498, 0,
	0, 0, 0, 569, 570, 0, 0, 0, 0, 690,
	0, 571, 0, 0, 567, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 146, 669,
	0, 0, 211, 538, 0, 0, 688, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 0, 307,
	595, 479, 0, 0, 0, 170, 0, 299, 268, 357,
	597, 0, 298, 224, 347, 0, 0, 356, 0, 525,
	366, 371, 491, 0, 486, 322, 183, 178, 182, 0,
	135, 499, 282, 175, 216, 0, 0, 0, 166, 0,
	0, 0, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 503,
	501, 0, 0, 362, 504, 310, 309, 0, 206, 0,
	512, 480, 291, 516, 212, 134, 335, 374, 152, 218,
	340, 478, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 494, 518, 0, 289, 312,
	342, 154, 329, 492, 493, 495, 522, 301, 524, 530,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 481, 0, 327, 360, 376, 334, 156, 0,
	315, 341, 502, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 679, 689, 685, 687, 686, 683, 684, 682,
	681, 680, 691, 670, 671, 672, 673, 674, 0, 0,
	0, 676, 0, 614, 615, 0, 0, 0, 167, 588,
	589, 590, 591, 592, 598, 599, 603, 604, 612, 611,
	610, 613, 616, 618, 617, 619, 593, 594, 596, 600,
	601, 602, 605, 606, 609, 607, 608, 0, 276, 675,
	131, 142, 222, 0, 290, 192, 361, 0, 177, 0,
	0, 0, 0, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	277, 278, 286, 520, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 338,
	0, 0, 133, 0, 0, 515, 517, 0, 0, 0,
	264, 0, 0, 0, 0, 1110, 0, 0, 0, 181,
	0, 0, 0, 0, 220, 0, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 0,
	223, 0, 0, 534, 325, 248, 0, 0, 0, 0,
	1363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1111, 0, 1114, 0, 0, 0,
	0, 0, 0, 539, 0, 0, 0, 0, 0, 0,
	1106, 1107, 1105, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 498,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 146,
	0, 0, 0, 211, 538, 0, 0, 0, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 0,
	307, 496, 479, 0, 0, 0, 170, 0, 299, 268,
	357, 500, 0, 298, 224, 347, 0, 0, 356, 0,
	525, 366, 371, 491, 0, 486, 322, 183, 178, 182,
	0, 135, 499, 282, 175, 216, 0, 0, 0, 166,
	0, 0, 0, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	503, 501, 0, 0, 362, 504, 310, 309, 0, 206,
	0, 512, 480, 291, 516, 212, 134, 335, 374, 152,
	218, 340, 478, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 494, 518, 0, 289,
	312, 342, 154, 329, 492, 493, 495, 522, 301, 524,
	530, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 481, 0, 327, 360, 376, 334, 156,
	0, 315, 341, 502, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 0, 0, 0, 167,
	482, 483, 484, 485, 487, 505, 506, 510, 511, 528,
	527, 526, 529, 533, 536, 535, 537, 488, 489, 497,
	507, 508, 509, 513, 514, 523, 519, 521, 0, 276,
	0, 131, 142, 222, 0, 290, 192, 361, 0, 177,
	0, 0, 0, 0, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 277, 278, 286, 520, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	338, 0, 0, 133, 0, 0, 515, 517, 0, 0,
	0, 264, 0, 0, 0, 0, 1916, 0, 0, 0,
	181, 0, 0, 0, 0, 220, 0, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	0, 223, 0, 0, 534, 325, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1918, 1920, 0,
	0, 0, 0, 0, 0, 126, 0, 477, 0, 0,
	0, 0, 0, 0, 539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	146, 0, 0, 0, 211, 538, 0, 1919, 0, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	0, 307, 496, 479, 0, 0, 0, 170, 0, 299,
	268, 357, 500, 0, 298, 224, 347, 0, 0, 356,
	0, 525, 366, 371, 491, 0, 486, 322, 183, 178,
	182, 0, 135, 499, 282, 175, 216, 0, 0, 0,
	166, 0, 0, 0, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 503, 501, 0, 0, 362, 504, 310, 309, 0,
	206, 0, 512, 480, 291, 516, 212, 134, 335, 374,
	152, 218, 340, 478, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 494, 518, 0,
	289, 312, 342, 154, 329, 492, 493, 495, 522, 301,
	524, 530, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 481, 0, 327, 360, 376, 334,
	156, 0, 315, 341, 502, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 0, 0, 0,
	167, 482, 483, 484, 485, 487, 505, 506, 510, 511,
	528, 527, 526, 529, 533, 536, 535, 537, 488, 489,
	497, 507, 508, 509, 513, 514, 523, 519, 521, 0,
	276, 0, 131, 142, 222, 0, 290, 192, 361, 0,
	177, 0, 0, 0, 0, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 277, 278, 286, 520, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 338, 0, 0, 133, 0, 0, 515, 517, 0,
	0, 0, 264, 0, 0, 0, 0, 1916, 0, 0,
	0, 181, 0, 0, 0, 0, 220, 0, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 0, 223, 0, 0, 534, 325, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1918, 1920,
	0, 0, 0, 0, 0, 0, 126, 0, 477, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 1914, 292, 313, 0,
	283, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 146, 0, 0, 0, 211, 538, 0, 1919, 0,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 0, 307, 496, 479, 0, 0, 0, 170, 0,
	299, 268, 357, 500, 0, 298, 224, 347, 0, 0,
	356, 0, 525, 366, 371, 491, 0, 486, 322, 183,
	178, 182, 0, 135, 499, 282, 175, 216, 0, 0,
	0, 166, 0, 0, 0, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 503, 501, 0, 0, 362, 504, 310, 309,
	0, 206, 0, 512, 480, 291, 516, 212, 134, 335,
	374, 152, 218, 340, 478, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 494, 518,
	0, 289, 312, 342, 154, 329, 492, 493, 495, 522,
	301, 524, 530, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 481, 0, 327, 360, 376,
	334, 156, 0, 315, 341, 502, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 167, 482, 483, 484, 485, 487, 505, 506, 510,
	511, 528, 527, 526, 529, 533, 536, 535, 537, 488,
	489, 497, 507, 508, 509, 513, 514, 523, 519, 521,
	0, 276, 0, 131, 142, 222, 0, 290, 192, 361,
	0, 177, 0, 0, 0, 0, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 277, 278, 286, 520, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 338, 0, 0, 133, 0, 0, 515, 517,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 220, 0, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 534, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 477,
	0, 0, 0, 0, 0, 0, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 146, 0, 0, 0, 211, 538, 0, 0,
	0, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 0, 307, 496, 479, 0, 0, 0, 170,
	0, 299, 268, 357, 500, 0, 298, 224, 347, 0,
	0, 356, 0, 525, 366, 371, 491, 0, 486, 322,
	183, 178, 182, 0, 135, 499, 282, 175, 216, 0,
	0, 0, 166, 0, 0, 0, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 503, 501, 0, 0, 362, 504, 310,
	309, 0, 206, 0, 512, 480, 291, 516, 212, 134,
	335, 374, 152, 218, 340, 478, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 494,
	518, 0, 289, 312, 342, 154, 329, 492, 493, 495,
	522, 301, 524, 530, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 481, 0, 327, 360,
	376, 334, 156, 0, 315, 341, 502, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 0,
	0, 0, 167, 482, 483, 484, 485, 487, 505, 506,
	510, 511, 528, 527, 526, 529, 533, 536, 535, 537,
	488, 489, 497, 507, 508, 509, 513, 514, 523, 519,
	521, 0, 276, 0, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 0, 0, 472, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 277, 278, 286, 520, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 338, 0, 0, 133, 0, 0, 515,
	517, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 2201,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 534, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	477, 0, 0, 0, 0, 0, 0, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 146, 0, 0, 0, 211, 538, 0,
	0, 0, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 0, 307, 496, 479, 0, 0, 0,
	170, 0, 299, 268, 357, 500, 0, 298, 224, 347,
	0, 0, 356, 0, 525, 366, 371, 491, 0, 486,
	322, 183, 178, 182, 0, 135, 499, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 503, 501, 0, 0, 362, 504,
	310, 309, 0, 206, 0, 512, 480, 291, 516, 212,
	134, 335, 374, 152, 218, 340, 478, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	494, 518, 0, 289, 312, 342, 154, 329, 492, 493,
	495, 522, 301, 524, 530, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 481, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 502, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	0, 0, 0, 167, 482, 483, 484, 485, 487, 505,
	506, 510, 511, 528, 527, 526, 529, 533, 536, 535,
	537, 488, 489, 497, 507, 508, 509, 513, 514, 523,
	519, 521, 0, 276, 0, 131, 142, 222, 0, 290,
	192, 361, 0, 177, 0, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 277, 278, 286, 520, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 338, 0, 0, 133, 0, 0,
	515, 517, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 220,
	0, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 534, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 477, 0, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 146, 0, 0, 0, 211, 538,
	0, 0, 0, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 0, 307, 496, 479, 0, 0,
	0, 170, 0, 299, 268, 357, 500, 0, 298, 224,
	347, 0, 0, 356, 0, 525, 366, 371, 491, 0,
	486, 322, 183, 178, 182, 0, 135, 499, 282, 175,
	216, 0, 0, 0, 166, 0, 0, 0, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 503, 501, 0, 0, 362,
	504, 310, 309, 0, 206, 0, 512, 480, 291, 516,
	212, 134, 335, 374, 152, 218, 340, 478, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 494, 518, 0, 289, 312, 342, 154, 329, 492,
	493, 495, 522, 301, 524, 530, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 481, 0,
	327, 360, 376, 334, 156, 0, 315, 341, 502, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 0, 0, 0, 167, 482, 483, 484, 485, 487,
	505, 506, 510, 511, 528, 527, 526, 529, 533, 536,
	535, 537, 488, 489, 497, 507, 508, 509, 513, 514,
	523, 519, 521, 0, 276, 0, 131, 142, 222, 0,
	290, 192, 361, 0, 177, 0, 0, 0, 0, 129,
	143, 155, 161, 176, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 277, 278, 286, 520,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 338, 0, 0, 133, 0,
	0, 515, 517, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 0, 223, 0, 0, 534,
	325, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1111, 0, 1114, 0, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 146, 0, 0, 0, 211,
	538, 0, 0, 0, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 0, 307, 496, 479, 0,
	0, 0, 170, 0, 299, 268, 357, 500, 0, 298,
	224, 347, 0, 0, 356, 0, 525, 366, 371, 491,
	0, 486, 322, 183, 178, 182, 0, 135, 499, 282,
	175, 216, 0, 0, 0, 166, 0, 0, 0, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 503, 501, 0, 0,
	362, 504, 310, 309, 0, 206, 0, 512, 480, 291,
	516, 212, 134, 335, 374, 152, 218, 340, 478, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 494, 518, 0, 289, 312, 342, 154, 329,
	492, 493, 495, 522, 301, 524, 530, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 481,
	0, 327, 360, 376, 334, 156, 0, 315, 341, 502,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 0, 0, 0, 167, 482, 483, 484, 485,
	487, 505, 506, 510, 511, 528, 527, 526, 529, 533,
	536, 535, 537, 488, 489, 497, 507, 508, 509, 513,
	514, 523, 519, 521, 0, 276, 0, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 277, 278, 286,
	520, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 338, 0, 0, 133,
	0, 0, 515, 517, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 0, 223, 0, 0,
	534, 325, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 146, 0, 0, 0,
	211, 538, 0, 0, 0, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 0, 307, 496, 479,
	0, 0, 0, 170, 0, 299, 268, 357, 500, 0,
	298, 224, 347, 0, 0, 356, 0, 525, 366, 371,
	491, 0, 486, 322, 183, 178, 182, 0, 135, 499,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 503, 501, 0,
	0, 362, 504, 310, 309, 0, 206, 0, 512, 480,
	291, 516, 212, 134, 335, 374, 152, 218, 340, 478,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 494, 518, 0, 289, 312, 342, 154,
	329, 492, 493, 495, 522, 301, 524, 530, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	481, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	502, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 167, 482, 483, 484,
	485, 487, 505, 506, 510, 511, 528, 527, 526, 529,
	533, 536, 535, 537, 488, 489, 497, 507, 508, 509,
	513, 514, 523, 519, 521, 0, 276, 0, 131, 142,
	222, 0, 290, 192, 361, 0, 177, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 277, 278,
	286, 520, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 0, 0, 0,
	133, 0, 0, 515, 517, 446, 338, 440, 451, 434,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	457, 0, 0, 0, 0, 0, 181, 0, 0, 441,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 0, 223, 0, 0,
	0, 325, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 433,
	432, 435, 0, 0, 0, 249, 146, 0, 0, 439,
	211, 0, 0, 0, 0, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 443, 307, 0, 0,
	447, 0, 0, 170, 0, 299, 268, 357, 0, 0,
	298, 224, 347, 0, 450, 356, 0, 0, 366, 371,
	0, 0, 0, 322, 183, 178, 182, 0, 135, 0,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 310, 309, 0, 206, 0, 0, 0,
	291, 0, 212, 134, 335, 374, 152, 218, 340, 0,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 0, 0, 0, 460, 312, 342, 154,
	329, 436, 437, 438, 444, 445, 448, 449, 452, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	0, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	0, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 131, 142,
	222, 0, 290, 192, 361, 0, 177, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 277, 278,
	286, 442, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 0, 0, 0,
	133, 446, 338, 440, 451, 434, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 426, 0, 0, 0,
	0, 0, 181, 0, 0, 441, 0, 220, 0, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 0, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 433, 432, 435, 0, 0,
	0, 249, 146, 0, 0, 439, 211, 0, 0, 0,
	0, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 443, 307, 0, 0, 447, 0, 0, 170,
	0, 299, 268, 357, 0, 0, 298, 224, 347, 0,
	450, 356, 0, 0, 366, 371, 0, 0, 0, 322,
	183, 178, 182, 0, 135, 0, 282, 175, 216, 0,
	0, 0, 166, 0, 0, 0, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 310,
	309, 0, 206, 0, 0, 0, 291, 0, 212, 134,
	335, 374, 152, 218, 340, 0, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 0,
	0, 0, 429, 312, 342, 154, 329, 436, 437, 438,
	444, 445, 448, 449, 452, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 0, 0, 327, 360,
	376, 334, 156, 0, 315, 341, 0, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 0, 0, 0, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 277, 278, 286, 442, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 338, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 0,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 0, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 0, 1124, 1123, 1133, 1134, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1125, 0, 0, 1135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 146, 0, 0, 0, 211, 0, 0,
	0, 0, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 0, 307, 0, 0, 0, 0, 0,
	170, 0, 299, 268, 357, 0, 0, 298, 224, 347,
	0, 0, 356, 0, 0, 366, 371, 0, 0, 0,
	322, 183, 178, 182, 0, 135, 0, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	310, 309, 0, 206, 0, 0, 0, 291, 0, 212,
	134, 335, 374, 152, 218, 340, 0, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	0, 0, 0, 289, 312, 342, 154, 329, 0, 0,
	0, 0, 301, 0, 0, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 0, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 0, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 131, 142, 222, 0, 290,
	192, 361, 0, 177, 0, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 277, 278, 286, 0, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 36, 338, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 1910, 223, 0, 0, 0,
	325, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 146, 0, 0, 0, 211,
	0, 0, 0, 0, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 0, 307, 0, 0, 0,
	0, 0, 170, 0, 299, 268, 357, 0, 0, 298,
	224, 347, 0, 0, 356, 0, 0, 366, 371, 0,
	0, 0, 322, 183, 178, 182, 0, 135, 0, 282,
	175, 216, 0, 0, 0, 166, 0, 0, 0, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 310, 309, 0, 206, 0, 0, 0, 291,
	0, 212, 134, 335, 374, 152, 218, 340, 0, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 0, 0, 0, 289, 312, 342, 154, 329,
	0, 0, 0, 0, 301, 0, 0, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 0,
	0, 327, 360, 376, 334, 156, 0, 315, 341, 0,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 276, 0, 131, 142, 222,
	75, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 277, 278, 286,
	0, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 338, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	2899, 0, 0, 0, 0, 0, 181, 2897, 0, 0,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 0, 223, 0, 0,
	0, 325, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 0, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 146, 0, 0, 0,
	211, 0, 0, 0, 0, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 0, 307, 0, 0,
	0, 0, 0, 170, 0, 299, 268, 357, 0, 0,
	298, 224, 347, 0, 0, 356, 0, 0, 366, 371,
	0, 0, 0, 322, 183, 178, 182, 0, 135, 0,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 310, 309, 0, 206, 0, 2898, 0,
	291, 0, 212, 134, 335, 374, 152, 218, 340, 0,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 0, 0, 0, 289, 312, 342, 154,
	329, 0, 0, 0, 0, 301, 0, 0, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	0, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	0, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 131, 142,
	222, 0, 290, 192, 361, 0, 177, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 277, 278,
	286, 0, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 338, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 0, 223, 0,
	0, 0, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 358, 275, 292, 313, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 146, 0, 0,
	0, 211, 0, 0, 0, 0, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 0, 307, 0,
	0, 0, 0, 0, 170, 0, 299, 268, 357, 0,
	0, 298, 224, 347, 0, 0, 356, 0, 0, 366,
	371, 0, 0, 0, 322, 183, 178, 182, 0, 135,
	0, 282, 175, 216, 2027, 2028, 0, 166, 0, 0,
	0, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 310, 309, 0, 206, 0, 0,
	0, 291, 0, 212, 134, 335, 374, 152, 218, 340,
	0, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 0, 0, 0, 289, 312, 342,
	154, 329, 0, 0, 0, 0, 301, 0, 0, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 0, 0, 327, 360, 376, 334, 156, 0, 315,
	341, 0, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 131,
	142, 222, 0, 290, 192, 361, 0, 177, 0, 0,
	0, 0, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 277,
	278, 286, 0, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 338, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 0, 223,
	0, 0, 0, 325, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 1604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 146, 0,
	0, 0, 211, 0, 0, 0, 0, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 0, 307,
	0, 0, 0, 0, 0, 170, 0, 299, 268, 357,
	0, 0, 298, 224, 347, 0, 0, 356, 0, 0,
	366, 371, 0, 0, 0, 322, 183, 178, 182, 0,
	135, 0, 282, 175, 216, 0, 0, 0, 166, 0,
	0, 0, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 310, 309, 0, 206, 0,
	0, 0, 291, 0, 212, 134, 335, 374, 152, 218,
	340, 0, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 0, 0, 0, 289, 312,
	342, 154, 329, 0, 0, 0, 0, 301, 0, 0,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 0, 0, 327, 360, 376, 334, 156, 0,
	315, 341, 0, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 276, 0,
	131, 142, 222, 0, 290, 192, 361, 0, 177, 0,
	0, 0, 0, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	277, 278, 286, 0, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 338,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 220, 0, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 0,
	223, 0, 0, 0, 325, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 455, 0, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 146,
	0, 0, 0, 211, 0, 0, 0, 0, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 0,
	307, 0, 0, 0, 0, 0, 170, 0, 299, 268,
	357, 0, 0, 298, 224, 347, 0, 0, 356, 0,
	0, 366, 371, 0, 0, 0, 322, 183, 178, 182,
	0, 135, 0, 282, 175, 216, 0, 0, 0, 166,
	0, 0, 0, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 310, 309, 0, 206,
	0, 0, 0, 291, 0, 212, 134, 335, 374, 152,
	218, 340, 0, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 0, 0, 0, 289,
	312, 342, 154, 329, 0, 0, 0, 0, 301, 0,
	0, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 0, 0, 327, 360, 376, 334, 156,
	0, 315, 341, 0, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 0, 0, 0, 1386, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 131, 142, 222, 0, 290, 192, 361, 0, 177,
	0, 0, 0, 0, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 277, 278, 286, 0, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	338, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 1245, 0, 0, 0, 220, 0, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	0, 223, 0, 0, 0, 325, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 0, 1244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	146, 0, 0, 0, 211, 0, 0, 0, 0, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	0, 307, 0, 0, 0, 0, 0, 170, 0, 299,
	268, 357, 0, 0, 298, 224, 347, 0, 0, 356,
	0, 0, 366, 371, 0, 0, 0, 322, 183, 178,
	182, 0, 135, 0, 282, 175, 216, 0, 0, 0,
	166, 0, 0, 0, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 310, 309, 0,
	206, 0, 0, 0, 291, 0, 212, 134, 335, 374,
	152, 218, 340, 0, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 0, 0, 0,
	289, 312, 342, 154, 329, 0, 0, 0, 0, 301,
	0, 0, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 0, 0, 327, 360, 376, 334,
	156, 0, 315, 341, 0, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 131, 142, 222, 0, 290, 192, 361, 0,
	177, 0, 0, 0, 0, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 277, 278, 286, 0, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 338, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 220, 0, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 0, 223, 0, 0, 0, 325, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 455, 0, 454, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 146, 0, 0, 0, 211, 0, 0, 0, 0,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 0, 307, 0, 0, 0, 0, 0, 170, 0,
	299, 268, 357, 0, 0, 298, 224, 347, 0, 0,
	356, 0, 0, 366, 371, 0, 0, 0, 322, 183,
	178, 182, 0, 135, 0, 282, 175, 216, 0, 0,
	0, 166, 0, 0, 0, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 310, 309,
	0, 206, 0, 0, 0, 291, 0, 212, 134, 335,
	374, 152, 218, 340, 0, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 0, 0,
	0, 289, 312, 342, 154, 329, 0, 0, 0, 0,
	301, 0, 0, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 0, 0, 327, 360, 376,
	334, 156, 0, 315, 341, 0, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 131, 142, 222, 0, 290, 192, 361,
	0, 177, 0, 0, 0, 0, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 277, 278, 286, 0, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 338, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 220, 0, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 0, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 2302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 146, 0, 0, 0, 211, 0, 0, 0,
	0, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 0, 307, 0, 0, 0, 0, 0, 170,
	0, 299, 268, 357, 0, 0, 298, 224, 347, 0,
	0, 356, 0, 0, 366, 371, 0, 0, 0, 322,
	183, 178, 182, 0, 135, 0, 282, 175, 216, 0,
	0, 0, 166, 0, 0, 0, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 310,
	309, 0, 206, 0, 0, 0, 291, 0, 212, 134,
	335, 374, 152, 218, 340, 0, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 0,
	0, 0, 289, 312, 342, 154, 329, 0, 0, 0,
	0, 301, 0, 0, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 0, 0, 327, 360,
	376, 334, 156, 0, 315, 341, 0, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 0, 0, 0, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 277, 278, 286, 0, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 338, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 0,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 0, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 1604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 146, 0, 0, 0, 211, 0, 0,
	0, 0, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 0, 307, 0, 0, 0, 0, 0,
	170, 0, 299, 268, 357, 0, 0, 298, 224, 347,
	0, 0, 356, 0, 0, 366, 371, 0, 0, 0,
	322, 183, 178, 182, 0, 135, 0, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	310, 309, 0, 206, 0, 0, 0, 291, 0, 212,
	134, 335, 374, 152, 218, 340, 0, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	0, 0, 0, 289, 312, 342, 154, 329, 0, 0,
	0, 0, 301, 0, 0, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 149,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 229, 234, 0, 0, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 0, 288, 157,
	194, 187, 279, 254, 150, 205, 324, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 131, 142, 222, 0, 290,
	192, 361, 0, 177, 0, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 277, 278, 286, 0, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 338, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 220,
	0, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 0, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 146, 0, 0, 0, 211, 0,
	0, 0, 0, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 0, 307, 0, 0, 0, 0,
	0, 170, 0, 299, 268, 357, 0, 0, 298, 224,
	347, 0, 0, 356, 0, 0, 366, 371, 0, 0,
	0, 322, 183, 178, 182, 0, 135, 0, 282, 175,
	216, 0, 0, 0, 166, 0, 0, 0, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 310, 309, 0, 206, 0, 0, 0, 291, 0,
	212, 134, 335, 374, 152, 218, 340, 0, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 0, 0, 0, 289, 312, 342, 154, 329, 0,
	0, 0, 0, 301, 0, 0, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 147, 136, 336,
	355, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 0, 0,
	327, 360, 376, 334, 156, 0, 315, 341, 0, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 131, 142, 222, 0,
	290, 192, 361, 0, 177, 0, 0, 0, 0, 129,
	143, 155, 161, 176, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 277, 278, 286, 0,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 338, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 1799, 1800, 169, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 0, 223, 0, 0, 0,
	325, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 146, 0, 0, 0, 211,
	0, 0, 0, 0, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 0, 307, 0, 0, 0,
	0, 0, 170, 0, 299, 268, 357, 0, 0, 298,
	224, 347, 0, 0, 356, 0, 0, 366, 371, 0,
	0, 0, 322, 183, 178, 182, 0, 135, 0, 282,
	175, 216, 0, 0, 0, 166, 0, 0, 0, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 310, 309, 0, 206, 0, 0, 0, 291,
	0, 212, 134, 335, 374, 152, 218, 340, 0, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 0, 0, 0, 289, 312, 342, 154, 329,
	0, 0, 0, 0, 301, 0, 0, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 147, 136,
	336, 355, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 149, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 229, 234, 0, 0,
	0, 327, 360, 376, 334, 156, 0, 315, 341, 0,
	288, 157, 194, 187, 279, 254, 150, 205, 324, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 0, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 277, 278, 286,
	0, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 338, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 220, 0, 0, 180, 169, 228, 226, 0, 0,
	0, 271, 337, 0, 0, 0, 0, 223, 0, 0,
	0, 325, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 275, 292, 313, 0, 283, 0, 0, 0, 0,
	0, 0, 0, 1762, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 146, 0, 0, 0,
	211, 0, 0, 0, 0, 285, 0, 332, 199, 221,
	151, 128, 144, 162, 198, 260, 0, 307, 0, 0,
	0, 0, 0, 170, 0, 299, 268, 357, 0, 0,
	298, 224, 347, 0, 0, 356, 0, 0, 366, 371,
	0, 0, 0, 322, 183, 178, 182, 0, 135, 0,
	282, 175, 216, 0, 0, 0, 166, 0, 0, 0,
	321, 344, 132, 246, 345, 370, 153, 339, 247, 253,
	163, 165, 164, 145, 316, 343, 158, 168, 326, 303,
	333, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 362, 0, 310, 309, 0, 206, 0, 0, 0,
	291, 0, 212, 134, 335, 374, 152, 218, 340, 0,
	193, 259, 172, 269, 270, 190, 130, 287, 240, 241,
	239, 242, 197, 0, 0, 0, 289, 312, 342, 154,
	329, 0, 0, 0, 0, 301, 0, 0, 0, 231,
	186, 189, 200, 207, 0, 296, 330, 363, 0, 147,
	136, 336, 355, 159, 311, 314, 372, 297, 139, 353,
	331, 244, 213, 214, 137, 0, 138, 294, 179, 196,
	173, 263, 0, 195, 284, 350, 351, 171, 375, 148,
	365, 141, 149, 364, 256, 0, 255, 367, 346, 354,
	245, 233, 0, 140, 352, 243, 232, 219, 188, 202,
	280, 227, 281, 203, 251, 250, 252, 229, 234, 0,
	0, 0, 327, 360, 376, 334, 156, 0, 315, 341,
	0, 288, 157, 194, 187, 279, 254, 150, 205, 324,
	217, 225, 293, 373, 267, 300, 160, 359, 323, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 131, 142,
	222, 0, 290, 192, 361, 0, 177, 0, 0, 0,
	0, 129, 143, 155, 161, 176, 185, 191, 201, 204,
	208, 209, 210, 215, 230, 235, 236, 237, 238, 257,
	258, 261, 262, 265, 266, 272, 273, 274, 277, 278,
	286, 0, 295, 302, 304, 305, 306, 308, 317, 318,
	319, 320, 328, 348, 349, 368, 369, 338, 0, 0,
	133, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	0, 0, 220, 0, 0, 180, 169, 228, 226, 0,
	0, 0, 271, 337, 0, 0, 0, 0, 223, 0,
	0, 0, 325, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1590, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 275, 292, 313, 0, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 146, 0, 0,
	0, 211, 0, 0, 0, 0, 285, 0, 332, 199,
	221, 151, 128, 144, 162, 198, 260, 0, 307, 0,
	0, 0, 0, 0, 170, 0, 299, 268, 357, 0,
	0, 298, 224, 347, 0, 0, 356, 0, 0, 366,
	371, 0, 0, 0, 322, 183, 178, 182, 0, 135,
	0, 282, 175, 216, 0, 0, 0, 166, 0, 0,
	0, 321, 344, 132, 246, 345, 370, 153, 339, 247,
	253, 163, 165, 164, 145, 316, 343, 158, 168, 326,
	303, 333, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 362, 0, 310, 309, 0, 206, 0, 0,
	0, 291, 0, 212, 134, 335, 374, 152, 218, 340,
	0, 193, 259, 172, 269, 270, 190, 130, 287, 240,
	241, 239, 242, 197, 0, 0, 0, 289, 312, 342,
	154, 329, 0, 0, 0, 0, 301, 0, 0, 0,
	231, 186, 189, 200, 207, 0, 296, 330, 363, 0,
	147, 136, 336, 355, 159, 311, 314, 372, 297, 139,
	353, 331, 244, 213, 214, 137, 0, 138, 294, 179,
	196, 173, 263, 0, 195, 284, 350, 351, 171, 375,
	148, 365, 141, 149, 364, 256, 0, 255, 367, 346,
	354, 245, 233, 0, 140, 352, 243, 232, 219, 188,
	202, 280, 227, 281, 203, 251, 250, 252, 229, 234,
	0, 0, 0, 327, 360, 376, 334, 156, 0, 315,
	341, 0, 288, 157, 194, 187, 279, 254, 150, 205,
	324, 217, 225, 293, 373, 267, 300, 160, 359, 323,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 131,
	142, 222, 0, 290, 192, 361, 0, 177, 0, 0,
	0, 0, 129, 143, 155, 161, 176, 185, 191, 201,
	204, 208, 209, 210, 215, 230, 235, 236, 237, 238,
	257, 258, 261, 262, 265, 266, 272, 273, 274, 277,
	278, 286, 0, 295, 302, 304, 305, 306, 308, 317,
	318, 319, 320, 328, 348, 349, 368, 369, 338, 0,
	0, 133, 1229, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 220, 0, 0, 180, 169, 228, 226,
	0, 0, 0, 271, 337, 0, 0, 0, 0, 223,
	0, 0, 0, 325, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 275, 292, 313, 0, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 146, 0,
	0, 0, 211, 0, 0, 0, 0, 285, 0, 332,
	199, 221, 151, 128, 144, 162, 198, 260, 0, 307,
	0, 0, 0, 0, 0, 170, 0, 299, 268, 357,
	0, 0, 298, 224, 347, 0, 0, 356, 0, 0,
	366, 371, 0, 0, 0, 322, 183, 178, 182, 0,
	135, 0, 282, 175, 216, 0, 0, 0, 166, 0,
	0, 0, 321, 344, 132, 246, 345, 370, 153, 339,
	247, 253, 163, 165, 164, 145, 316, 343, 158, 168,
	326, 303, 333, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 310, 309, 0, 206, 0,
	0, 0, 291, 0, 212, 134, 335, 374, 152, 218,
	340, 0, 193, 259, 172, 269, 270, 190, 130, 287,
	240, 241, 239, 242, 197, 0, 0, 0, 289, 312,
	342, 154, 329, 0, 0, 0, 0, 301, 0, 0,
	0, 231, 186, 189, 200, 207, 0, 296, 330, 363,
	0, 147, 136, 336, 355, 159, 311, 314, 372, 297,
	139, 353, 331, 244, 213, 214, 137, 0, 138, 294,
	179, 196, 173, 263, 0, 195, 284, 350, 351, 171,
	375, 148, 365, 141, 149, 364, 256, 0, 255, 367,
	346, 354, 245, 233, 0, 140, 352, 243, 232, 219,
	188, 202, 280, 227, 281, 203, 251, 250, 252, 229,
	234, 0, 0, 0, 327, 360, 376, 334, 156, 0,
	315, 341, 0, 288, 157, 194, 187, 279, 254, 150,
	205, 324, 217, 225, 293, 373, 267, 300, 160, 359,
	323, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	131, 142, 222, 0, 290, 192, 361, 0, 177, 0,
	0, 0, 0, 129, 143, 155, 161, 176, 185, 191,
	201, 204, 208, 209, 210, 215, 230, 235, 236, 237,
	238, 257, 258, 261, 262, 265, 266, 272, 273, 274,
	277, 278, 286, 0, 295, 302, 304, 305, 306, 308,
	317, 318, 319, 320, 328, 348, 349, 368, 369, 338,
	0, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 220, 0, 0, 180, 169, 228,
	226, 0, 0, 0, 271, 337, 0, 0, 0, 0,
	223, 0, 0, 0, 325, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 275, 292, 313, 0, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 146,
	0, 123, 0, 211, 0, 0, 0, 0, 285, 0,
	332, 199, 221, 151, 128, 144, 162, 198, 260, 0,
	307, 0, 0, 0, 0, 0, 170, 0, 299, 268,
	357, 0, 0, 298, 224, 347, 0, 0, 356, 0,
	0, 366, 371, 0, 0, 0, 322, 183, 178, 182,
	0, 135, 0, 282, 175, 216, 0, 0, 0, 166,
	0, 0, 0, 321, 344, 132, 246, 345, 370, 153,
	339, 247, 253, 163, 165, 164, 145, 316, 343, 158,
	168, 326, 303, 333, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 362, 0, 310, 309, 0, 206,
	0, 0, 0, 291, 0, 212, 134, 335, 374, 152,
	218, 340, 0, 193, 259, 172, 269, 270, 190, 130,
	287, 240, 241, 239, 242, 197, 0, 0, 0, 289,
	312, 342, 154, 329, 0, 0, 0, 0, 301, 0,
	0, 0, 231, 186, 189, 200, 207, 0, 296, 330,
	363, 0, 147, 136, 336, 355, 159, 311, 314, 372,
	297, 139, 353, 331, 244, 213, 214, 137, 0, 138,
	294, 179, 196, 173, 263, 0, 195, 284, 350, 351,
	171, 375, 148, 365, 141, 149, 364, 256, 0, 255,
	367, 346, 354, 245, 233, 0, 140, 352, 243, 232,
	219, 188, 202, 280, 227, 281, 203, 251, 250, 252,
	229, 234, 0, 0, 0, 327, 360, 376, 334, 156,
	0, 315, 341, 0, 288, 157, 194, 187, 279, 254,
	150, 205, 324, 217, 225, 293, 373, 267, 300, 160,
	359, 323, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 131, 142, 222, 0, 290, 192, 361, 0, 177,
	0, 0, 0, 0, 129, 143, 155, 161, 176, 185,
	191, 201, 204, 208, 209, 210, 215, 230, 235, 236,
	237, 238, 257, 258, 261, 262, 265, 266, 272, 273,
	274, 277, 278, 286, 0, 295, 302, 304, 305, 306,
	308, 317, 318, 319, 320, 328, 348, 349, 368, 369,
	338, 0, 0, 133, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 220, 0, 0, 180, 169,
	228, 226, 0, 0, 0, 271, 337, 0, 0, 0,
	0, 223, 0, 0, 0, 325, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 275, 292, 313, 0, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	146, 0, 0, 0, 211, 0, 0, 0, 0, 285,
	0, 332, 199, 221, 151, 128, 144, 162, 198, 260,
	0, 307, 0, 0, 0, 0, 0, 170, 0, 299,
	268, 357, 0, 0, 298, 224, 347, 0, 0, 356,
	0, 0, 366, 371, 0, 0, 0, 322, 183, 178,
	182, 0, 135, 0, 282, 175, 216, 0, 0, 0,
	166, 0, 0, 0, 321, 344, 132, 246, 345, 370,
	153, 339, 247, 253, 163, 165, 164, 145, 316, 343,
	158, 168, 326, 303, 333, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 362, 0, 310, 309, 0,
	206, 0, 0, 0, 291, 0, 212, 134, 335, 374,
	152, 218, 340, 0, 193, 259, 172, 269, 270, 190,
	130, 287, 240, 241, 239, 242, 197, 0, 0, 0,
	289, 312, 342, 154, 329, 0, 0, 0, 0, 301,
	0, 0, 0, 231, 186, 189, 200, 207, 0, 296,
	330, 363, 0, 147, 136, 336, 355, 159, 311, 314,
	372, 297, 139, 353, 331, 244, 213, 214, 137, 0,
	138, 294, 179, 196, 173, 263, 0, 195, 284, 350,
	351, 171, 375, 148, 365, 141, 149, 364, 256, 0,
	255, 367, 346, 354, 245, 233, 0, 140, 352, 243,
	232, 219, 188, 202, 280, 227, 281, 203, 251, 250,
	252, 229, 234, 0, 0, 0, 327, 360, 376, 334,
	156, 0, 315, 341, 0, 288, 157, 194, 187, 279,
	254, 150, 205, 324, 217, 225, 293, 373, 267, 300,
	160, 359, 323, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 131, 142, 222, 0, 290, 192, 361, 0,
	177, 0, 0, 0, 0, 129, 143, 155, 161, 176,
	185, 191, 201, 204, 208, 209, 210, 215, 230, 235,
	236, 237, 238, 257, 258, 261, 262, 265, 266, 272,
	273, 274, 277, 278, 286, 0, 295, 302, 304, 305,
	306, 308, 317, 318, 319, 320, 328, 348, 349, 368,
	369, 338, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 220, 0, 0, 180,
	169, 228, 226, 0, 0, 0, 271, 337, 0, 0,
	0, 0, 223, 0, 0, 0, 325, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 275, 292, 313, 0,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 146, 0, 0, 0, 211, 0, 0, 0, 0,
	285, 0, 332, 199, 221, 151, 128, 144, 162, 198,
	260, 0, 307, 0, 0, 0, 0, 0, 170, 0,
	299, 268, 357, 0, 0, 298, 224, 347, 0, 0,
	356, 0, 0, 366, 371, 0, 0, 0, 322, 183,
	178, 182, 0, 135, 0, 282, 175, 216, 0, 0,
	0, 166, 0, 0, 0, 321, 344, 132, 246, 345,
	370, 153, 339, 247, 253, 163, 165, 164, 145, 316,
	343, 158, 168, 326, 303, 333, 174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 362, 0, 310, 309,
	0, 206, 0, 0, 0, 291, 0, 212, 134, 335,
	374, 152, 218, 340, 0, 193, 259, 172, 269, 270,
	190, 130, 287, 240, 241, 239, 242, 197, 0, 0,
	0, 289, 312, 342, 154, 329, 0, 0, 0, 0,
	301, 0, 0, 0, 231, 186, 189, 200, 207, 0,
	296, 330, 363, 0, 147, 136, 336, 355, 159, 311,
	314, 372, 297, 139, 353, 331, 244, 213, 214, 137,
	0, 138, 294, 179, 196, 173, 263, 0, 195, 284,
	350, 351, 171, 375, 148, 365, 141, 149, 364, 256,
	0, 255, 367, 346, 354, 245, 233, 0, 140, 352,
	243, 232, 219, 188, 202, 280, 227, 281, 203, 251,
	250, 252, 229, 234, 0, 0, 0, 327, 360, 376,
	334, 156, 0, 315, 341, 0, 288, 157, 194, 187,
	279, 254, 150, 205, 324, 217, 225, 293, 373, 267,
	300, 160, 359, 323, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 131, 142, 222, 0, 290, 192, 361,
	0, 177, 0, 0, 0, 0, 129, 143, 155, 161,
	176, 185, 191, 201, 204, 208, 209, 210, 215, 230,
	235, 236, 237, 238, 257, 258, 261, 262, 265, 266,
	272, 273, 274, 277, 278, 286, 0, 295, 302, 304,
	305, 306, 308, 317, 318, 319, 320, 328, 348, 349,
	368, 369, 338, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 220, 0, 0,
	180, 169, 228, 226, 0, 0, 0, 271, 337, 0,
	0, 0, 0, 223, 0, 0, 0, 325, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 275, 292, 313,
	0, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 146, 0, 0, 0, 211, 0, 0, 0,
	0, 285, 0, 332, 199, 221, 151, 128, 144, 162,
	198, 260, 0, 307, 0, 0, 0, 0, 0, 170,
	0, 299, 268, 357, 0, 0, 298, 224, 347, 0,
	0, 356, 0, 0, 366, 371, 0, 0, 0, 322,
	183, 178, 182, 0, 135, 0, 282, 175, 216, 0,
	0, 0, 166, 0, 0, 0, 321, 344, 132, 246,
	345, 370, 153, 339, 247, 253, 163, 165, 164, 145,
	316, 343, 158, 168, 326, 303, 333, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 362, 0, 310,
	309, 0, 206, 0, 0, 0, 291, 0, 212, 134,
	335, 374, 152, 218, 340, 0, 193, 259, 172, 269,
	270, 190, 130, 287, 240, 241, 239, 242, 197, 0,
	0, 0, 289, 312, 342, 154, 329, 0, 0, 0,
	0, 301, 0, 0, 0, 231, 186, 189, 200, 207,
	0, 296, 330, 363, 0, 147, 136, 336, 355, 159,
	311, 314, 372, 297, 139, 353, 331, 244, 213, 214,
	137, 0, 138, 294, 179, 196, 173, 263, 0, 195,
	284, 350, 351, 171, 375, 148, 365, 141, 149, 364,
	256, 0, 255, 367, 346, 354, 245, 233, 0, 140,
	352, 243, 232, 219, 188, 202, 280, 227, 281, 203,
	251, 250, 252, 229, 234, 0, 0, 0, 327, 360,
	376, 334, 156, 0, 315, 341, 0, 288, 157, 194,
	187, 279, 254, 150, 205, 324, 217, 225, 293, 373,
	267, 300, 160, 359, 323, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 131, 142, 222, 0, 290, 192,
	361, 0, 177, 0, 0, 0, 0, 129, 143, 155,
	161, 176, 185, 191, 201, 204, 208, 209, 210, 215,
	230, 235, 236, 237, 238, 257, 258, 261, 262, 265,
	266, 272, 273, 274, 277, 278, 286, 0, 295, 302,
	304, 305, 306, 308, 317, 318, 319, 320, 328, 348,
	349, 368, 369, 338, 0, 0, 133, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 0, 0, 0, 0, 220, 0,
	0, 180, 169, 228, 226, 0, 0, 0, 271, 337,
	0, 0, 0, 0, 223, 0, 0, 0, 325, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 275, 292,
	313, 0, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 146, 0, 0, 0, 211, 0, 0,
	0, 0, 285, 0, 332, 199, 221, 151, 128, 144,
	162, 198, 260, 0, 307, 0, 0, 0, 0, 0,
	170, 0, 299, 268, 357, 0, 0, 298, 224, 347,
	0, 0, 356, 0, 0, 366, 371, 0, 0, 0,
	322, 183, 178, 182, 0, 135, 0, 282, 175, 216,
	0, 0, 0, 166, 0, 0, 0, 321, 344, 132,
	246, 345, 370, 153, 339, 247, 253, 163, 165, 164,
	145, 316, 343, 158, 168, 326, 303, 333, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 362, 0,
	310, 309, 0, 206, 0, 0, 0, 291, 0, 212,
	134, 335, 374, 152, 218, 340, 0, 193, 259, 172,
	269, 270, 190, 130, 287, 240, 241, 239, 242, 197,
	0, 0, 0, 289, 312, 342, 154, 329, 0, 0,
	0, 0, 301, 0, 0, 0, 231, 186, 189, 200,
	207, 0, 296, 330, 363, 0, 147, 136, 336, 355,
	159, 311, 314, 372, 297, 139, 353, 331, 244, 213,
	214, 137, 0, 138, 294, 179, 196, 173, 263, 0,
	195, 284, 350, 351, 171, 375, 148, 365, 141, 709,
	364, 256, 0, 255, 367, 346, 354, 245, 233, 0,
	140, 352, 243, 232, 219, 188, 202, 280, 227, 281,
	203, 251, 250, 252, 705, 234, 0, 0, 0, 327,
	360, 376, 334, 156, 0, 315, 341, 0, 288, 157,
	194, 187, 279, 710, 708, 699, 700, 217, 225, 293,
	373, 267, 300, 160, 359, 323, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 131, 142, 222, 0, 290,
	192, 361, 0, 177, 0, 0, 0, 0, 129, 143,
	155, 161, 176, 185, 191, 201, 204, 208, 209, 210,
	215, 230, 235, 236, 237, 238, 257, 258, 261, 262,
	265, 266, 272, 273, 274, 706, 707, 286, 0, 295,
	302, 304, 305, 306, 308, 317, 318, 319, 320, 328,
	348, 349, 368, 369, 338, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 0, 0, 0, 0, 220,
	0, 0, 180, 169, 228, 226, 0, 0, 0, 271,
	337, 0, 0, 0, 0, 223, 0, 0, 0, 325,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 275,
	292, 313, 0, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 146, 0, 0, 0, 211, 0,
	0, 0, 0, 285, 0, 332, 199, 221, 151, 128,
	144, 162, 198, 260, 0, 307, 0, 0, 0, 0,
	0, 170, 0, 299, 268, 357, 0, 0, 298, 224,
	347, 0, 0, 356, 0, 0, 366, 371, 0, 0,
	0, 322, 183, 178, 182, 0, 135, 0, 282, 175,
	216, 0, 0, 0, 166, 0, 0, 0, 321, 344,
	132, 246, 345, 370, 153, 339, 247, 253, 163, 165,
	164, 145, 316, 343, 158, 168, 326, 303, 333, 174,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 362,
	0, 310, 309, 0, 206, 0, 0, 0, 291, 0,
	212, 134, 335, 374, 152, 218, 340, 0, 193, 259,
	172, 269, 270, 190, 130, 287, 240, 241, 239, 242,
	197, 0, 0, 0, 289, 312, 342, 154, 329, 0,
	0, 0, 0, 301, 0, 0, 0, 231, 186, 189,
	200, 207, 0, 296, 330, 363, 0, 147, 136, 336,
	1239, 159, 311, 314, 372, 297, 139, 353, 331, 244,
	213, 214, 137, 0, 138, 294, 179, 196, 173, 263,
	0, 195, 284, 350, 351, 171, 375, 148, 365, 141,
	149, 364, 256, 0, 255, 367, 346, 354, 245, 233,
	0, 140, 352, 243, 232, 219, 188, 202, 280, 227,
	281, 203, 251, 250, 252, 229, 234, 0, 0, 0,
	327, 360, 376, 334, 156, 0, 315, 341, 0, 288,
	157, 194, 187, 279, 254, 150, 205, 324, 217, 225,
	293, 373, 267, 300, 160, 359, 323, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 131, 142, 222, 0,
	290, 192, 361, 0, 177, 0, 0, 0, 0, 129,
	143, 155, 161, 176, 185, 191, 201, 204, 208, 209,
	210, 215, 230, 235, 236, 237, 238, 257, 258, 261,
	262, 265, 266, 272, 273, 274, 277, 278, 286, 0,
	295, 302, 304, 305, 306, 308, 317, 318, 319, 320,
	328, 348, 349, 368, 369, 338, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	220, 0, 0, 180, 169, 228, 226, 0, 0, 0,
	271, 337, 0, 0, 0, 0, 223, 0, 0, 0,
	325, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	275, 292, 313, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 146, 0, 0, 0, 211,
	0, 0, 0, 0, 285, 0, 332, 199, 221, 151,
	128, 144, 162, 198, 260, 0, 307, 0, 0, 0,
	0, 0, 170, 0, 299, 268, 357, 0, 0, 298,
	224, 347, 0, 0, 356, 0, 0, 366, 371, 0,
	0, 0, 322, 183, 178, 182, 0, 135, 0, 282,
	175, 216, 0, 0, 0, 166, 0, 0, 0, 321,
	344, 132, 246, 345, 370, 153, 339, 247, 253, 163,
	165, 164, 145, 316, 343, 158, 168, 326, 303, 333,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	362, 0, 310, 309, 0, 206, 0, 0, 0, 291,
	0, 212, 134, 335, 374, 152, 218, 340, 0, 193,
	259, 172, 269, 270, 190, 130, 287, 240, 241, 239,
	242, 197, 0, 0, 0, 289, 312, 342, 154, 329,
	0, 0, 0, 0, 301, 0, 0, 0, 231, 186,
	189, 200, 207, 0, 296, 330, 363, 0, 147, 136,
	336, 696, 159, 311, 314, 372, 297, 139, 353, 331,
	244, 213, 214, 137, 0, 138, 294, 179, 196, 173,
	263, 0, 195, 284, 350, 351, 171, 375, 148, 365,
	141, 709, 364, 256, 0, 255, 367, 346, 354, 245,
	233, 0, 140, 352, 243, 232, 219, 188, 202, 280,
	227, 281, 203, 251, 250, 252, 705, 234, 0, 0,
	0, 327, 360, 376, 334, 156, 0, 315, 341, 0,
	288, 157, 194, 187, 279, 710, 708, 699, 700, 217,
	225, 293, 373, 267, 300, 160, 359, 323, 184, 0,
	534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2315, 0, 0,
	0, 2317, 0, 0, 0, 167, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 276, 0, 131, 142, 222,
	0, 290, 192, 361, 0, 177, 498, 0, 0, 0,
	129, 143, 155, 161, 176, 185, 191, 201, 204, 208,
	209, 210, 215, 230, 235, 236, 237, 238, 257, 258,
	261, 262, 265, 266, 272, 273, 274, 706, 707, 286,
	0, 295, 302, 304, 305, 306, 308, 317, 318, 319,
	320, 328, 348, 349, 368, 369, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 538, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 525, 0, 0,
	491, 0, 486, 0, 0, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 501, 0,
	0, 0, 504, 0, 0, 1943, 0, 0, 512, 480,
	0, 516, 0, 0, 539, 0, 0, 0, 0, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 494, 518, 0, 0, 0, 0, 0,
	0, 492, 493, 495, 522, 0, 524, 530, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	481, 0, 0, 0, 0, 538, 0, 0, 0, 0,
	502, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 0, 496, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 0, 0, 491, 0, 486, 0, 0, 0,
	0, 531, 532, 499, 0, 0, 0, 482, 483, 484,
	485, 487, 505, 506, 510, 511, 528, 527, 526, 529,
	533, 536, 535, 537, 488, 489, 497, 507, 508, 509,
	513, 514, 523, 519, 521, 0, 0, 0, 0, 0,
	0, 503, 501, 0, 0, 0, 504, 0, 0, 0,
	0, 0, 512, 480, 0, 516, 0, 0, 0, 0,
	0, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 518, 0,
	0, 520, 0, 0, 0, 492, 493, 495, 522, 0,
	524, 530, 0, 0, 0, 0, 36, 0, 0, 0,
	0, 0, 0, 515, 517, 0, 0, 0, 0, 534,
	57, 0, 0, 0, 0, 0, 74, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1313, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 77, 0,
	0, 0, 0, 0, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 2783, 0, 0, 0, 0, 3009,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 0, 0, 0,
	0, 482, 483, 484, 485, 487, 505, 506, 510, 511,
	528, 527, 526, 529, 533, 536, 535, 537, 488, 489,
	497, 507, 508, 509, 513, 514, 523, 519, 521, 0,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 496, 479, 0,
	41, 70, 44, 43, 46, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 2784, 525, 0, 0, 491,
	0, 486, 0, 0, 0, 520, 0, 0, 499, 0,
	0, 47, 73, 72, 0, 0, 0, 0, 45, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 517, 0,
	0, 0, 0, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 503, 501, 0, 0,
	0, 504, 0, 0, 2317, 0, 0, 512, 480, 0,
	516, 0, 0, 539, 0, 0, 0, 0, 478, 55,
	56, 0, 2785, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 494, 518, 0, 0, 64, 0, 65, 0,
	492, 493, 495, 522, 0, 524, 530, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2786, 71, 0, 51, 52, 59, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 481,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 0, 0, 491, 0, 486, 0, 0, 0, 0,
	531, 532, 499, 0, 0, 0, 482, 483, 484, 485,
	487, 505, 506, 510, 511, 528, 527, 526, 529, 533,
	536, 535, 537, 488, 489, 497, 507, 508, 509, 513,
	514, 523, 519, 521, 0, 0, 0, 0, 0, 0,
	503, 501, 0, 0, 0, 504, 0, 0, 0, 0,
	0, 512, 480, 0, 516, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 494, 518, 0, 0,
	520, 0, 0, 0, 492, 493, 495, 522, 0, 524,
	530, 0, 0, 0, 0, 36, 0, 0, 0, 0,
	0, 0, 515, 517, 0, 0, 0, 0, 534, 57,
	0, 0, 0, 0, 0, 74, 0, 0, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2326,
	0, 0, 0, 0, 0, 0, 0, 0, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 77, 0, 0,
	0, 0, 0, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 502, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 2783, 0, 0, 0, 0, 2929, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 0, 0, 0, 0,
	482, 483, 484, 485, 487, 505, 506, 510, 511, 528,
	527, 526, 529, 533, 536, 535, 537, 488, 489, 497,
	507, 508, 509, 513, 514, 523, 519, 521, 0, 538,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 479, 0, 41,
	70, 44, 43, 46, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 2784, 525, 0, 0, 491, 0,
	486, 0, 0, 0, 520, 0, 0, 499, 0, 0,
	47, 73, 72, 0, 0, 0, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 517, 0, 0,
	0, 0, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 501, 0, 0, 0,
	504, 0, 0, 2324, 0, 0, 512, 480, 0, 516,
	0, 0, 539, 0, 0, 0, 0, 478, 55, 56,
	0, 2785, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 494, 518, 0, 0, 64, 0, 65, 0, 492,
	493, 495, 522, 0, 524, 530, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2786, 71, 0, 51, 52, 59, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 481, 0,
	0, 0, 0, 538, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 0, 491, 0, 486, 0, 0, 0, 0, 531,
	532, 499, 0, 0, 0, 482, 483, 484, 485, 487,
	505, 506, 510, 511, 528, 527, 526, 529, 533, 536,
	535, 537, 488, 489, 497, 507, 508, 509, 513, 514,
	523, 519, 521, 0, 0, 0, 0, 0, 0, 503,
	501, 0, 0, 0, 504, 0, 0, 0, 0, 0,
	512, 480, 0, 516, 0, 0, 0, 0, 0, 0,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 0, 36, 0, 494, 518, 0, 0, 520,
	0, 0, 0, 492, 493, 495, 522, 57, 524, 530,
	0, 0, 0, 74, 0, 0, 39, 0, 0, 0,
	0, 515, 517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2783, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 0, 0, 0, 0, 482,
	483, 484, 485, 487, 505, 506, 510, 511, 528, 527,
	526, 529, 533, 536, 535, 537, 488, 489, 497, 507,
	508, 509, 513, 514, 523, 519, 521, 41, 70, 44,
	43, 46, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 73,
	72, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	0, 0, 0, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 56, 0, 2785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 0, 65, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2786, 71,
	0, 51, 52, 59, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 75,
}

var yyPact = [...]int{
	4033, -1000, -355, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1974, -1000, -1000, 297, -1000,
	1110, 265, -1000, 294, 139, 33812, 607, 3818, 34894, -1000,
	-1000, -1000, 187, 443, 34894, 448, 469, 1371, 1824, 1369,
	45, -66, -67, 142, 25155, 24609, 17, -1000, 2019, 2031,
	449, 52, -1000, -1000, -1000, 21895, 222, -1000, -1000, 1946,
	1971, 1742, -1000, 14321, -1000, -1000, -1000, -1000, -1000, 37058,
	-1000, 2028, 34894, 12696, -1000, 591, 571, -178, 471, 471,
	285, 471, 471, 606, -1000, 273, 975, -1000, -1000, -1000,
	-1000, 967, 34894, 29484, 500, 34353, 500, 500, 500, 500,
	500, 500, 500, 34894, -1000, 680, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34894, 1368, 1852,
	1050, 130, -1000, -1000, -1000, 994, -1000, 342, 340, 338,
	327, 87, 1053, 1943, -1000, 1310, 1946, 1946, -1000, -1000,
	-1000, -1000, -1000, -1000, 772, 310, 559, 222, 222, 966,
	1902, 1850, 1847, 1278, 1846, 551, 1845, 1669, -40, -1000,
	1366, 34894, -1000, -1000, 1234, 1221, 1696, 1556, 627, 1695,
	-1000, -1000, 336, 455, 1660, 422, 1660, 1660, 1660, 1660,
	1660, -71, 1660, 1660, 1660, 86, 1660, 157, 1660, 1660,
	1660, 1660, 1660, 1411, -1000, -1000, -1000, 392, 1505, 1547,
	1692, 424, -1000, -1000, -1000, -1000, 1632, 1924, 597, -1000,
	-129, 1599, 22977, -1000, 1310, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1385, -1000, 2019, 1853, 1099, 17567, 1787, -1000, -1000, 1075,
	2008, -1000, 20272, 679, -1000, 17567, 3139, 1310, -1000, -1000,
	1310, -1000, -1000, -1000, 654, -1000, -1000, 19731, 19731, 19731,
	19731, 19731, 19731, 19731, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1310, 1310,
	1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310,
	1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310,
	1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310,
	-1000, -1000, 1310, -1000, 13780, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1310, 1310, 1310,
	1310, 1310, 1310, 1310, 1310, 1310, 1310, 17567, 1310, 1310,
	1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310, 1310,
	1310, 1310, 449, 449, 33271, 1609, -83, 36517, -1000, -1000,
	-1000, -1000, 35435, 28943, 961, -1000, -1000, -1000, -1000, 1844,
	-1000, -1000, 678, -1000, 1974, -1000, -1000, 1465, 435, -1000,
	5125, 37948, -1000, -1000, -1000, 1668, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 34353, 34894, 249, 1364, 999,
	1363, 35435, 35435, -1000, 252, 29484, 29484, 471, 263, 29484,
	240, 1608, 558, 1607, 557, 1377, 34894, 1879, 1689, 34894,
	1362, 1355, 35435, 35435, 29484, 29484, -1000, 12145, 1606, -1000,
	-1000, 1050, -1000, 20256, 17567, 471, 471, 34894, 34894, 34894,
	34894, 34894, -1000, -1000, 1050, 1050, 1050, 1050, 959, 2005,
	959, -1000, 959, -1000, -1000, 17567, -1000, 19731, 28402, 805,
	-1000, -1000, 34894, -1000, 1354, 309, -1000, -1000, -1000, -1000,
	-1000, -1000, 1352, -1000, 1830, 551, 551, -1000, 1309, 551,
	1588, -1000, 956, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 551, -1000, 17026, -344, -1000,
	-1000, 1604, -1000, 302, -1000, -1000, 359, 359, 203, 29484,
	29484, 29484, -1000, 1660, 34353, -1000, 1660, 1660, 1660, -86,
	1660, 1660, -1000, -1000, 1660, -1000, -1000, -1000, -1000, -1000,
	1660, -1000, -1000, -1000, 1660, 1660, -1000, 1660, 1660, -1000,
	-1000, -1000, -1000, -1000, 29484, 359, 179, 1600, 359, 29484,
	29484, -1000, 73, 72, 71, 70, -1000, -1000, -1000, -1000,
	69, 68, -1000, -1000, 1742, -1000, -1000, 222, -1000, -1000,
	34894, -88, 22977, 1599, 1915, 10492, -1000, -1000, 1041, 2015,
	883, 1551, -1000, -1000, 1596, -1000, 1033, 677, 1243, 1754,
	-1000, -1000, -1000, 34894, -1000, 17567, 17567, 17567, 1207, -1000,
	23518, -1000, -1000, -1000, -1000, 9941, 901, 19731, 1083, 945,
	19731, 19731, 19731, 19731, 19731, 19731, 19731, 19731, 19731, 19731,
	19731, 19731, 19731, 19731, 19731, 1248, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1351, -1000, 222, 1229, 1229, 727,
	727, 727, 727, 727, 727, 25696, 1913, 15403, 15403, 15403,
	1913, 1385, 1385, 15403, 15403, 15403, 15403, 15403, 15403, 15403,
	15403, 1913, 1913, 15403, 1385, 1385, 1385, 1385, 15403, 15403,
	15403, 15403, 34353, 34353, 1913, 15403, 15403, 15403, 1913, 1385,
	1463, 953, 13780, 15403, 15403, 1385, 17567, 17567, 16485, 15944,
	18108, 15403, 1913, 969, 953, 35435, -1000, -1000, 19190, -1000,
	-1000, -1000, -1000, -1000, 1385, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 15403, 15403, 15403, 15403, 32730, 27861, 34894,
	1543, 1469, -1000, 675, 35976, 1568, -1000, -119, -90, -83,
	-1000, -1000, 734, -1000, -1000, -1000, 13238, -1000, 11043, 1946,
	1742, 7186, 11594, -1000, 37948, 1668, -1000, -53, -1000, -1000,
	-1000, 1650, -1000, 1650, 326, 3, 1650, 1650, 1650, 1650,
	1650, -12, -12, -12, -12, 6, -1000, -1000, -1000, -1000,
	-1000, 1667, 1664, -1000, 1650, 1650, 1650, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1658, 300, 1654, 1654,
	1654, 1654, 1654, 380, 380, -1000, 17567, 1672, 1909, 552,
	263, 1862, 1870, 1862, 311, -1000, 674, 1662, -1000, 664,
	303, 1535, -1000, 183, 1490, 34894, -1000, -1000, -1000, -1000,
	-1000, 34894, 34894, 29484, 29484, 29484, 561, -1000, 34894, 1592,
	-1000, -1000, -1000, -1000, -1000, 1559, -1000, 1490, -1000, -1000,
	-1000, 34894, -1000, -1000, 1308, 953, 1349, 1347, 1902, -1000,
	-1000, -1000, 964, -1000, -1000, -1000, -1000, 1050, 34894, 34894,
	34894, 1902, 1050, 953, 782, 1677, 1310, 1385, -1000, -1000,
	-1000, 1346, -1000, 19731, 1588, 1588, -1000, 1588, 551, 1229,
	1588, -1000, 1459, 1038, 1307, 34894, -1000, 22977, -41, -1000,
	-142, 32189, -1000, -1000, -1000, 32189, -1000, 86, 168, -1000,
	556, -1000, 1456, -1000, -1000, -1000, -1000, 1660, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32189, 138, 174,
	32189, 1559, 2004, -1000, -1000, -1000, -1000, 1942, -1000, 1913,
	1385, 184, -1000, -1000, -1000, 1310, 1427, 663, -1000, 31648,
	-1000, 1747, 1099, 1099, 17567, -1000, -1000, -1000, 11043, 1941,
	-1000, 1764, 1760, 1706, -1000, -1000, 901, 987, 1008, -1000,
	-1000, 1164, -1000, -1000, -1000, -1000, 662, 1310, -1000, 3847,
	-1000, -1000, -1000, -1000, 1083, 19731, 19731, 19731, 782, 3847,
	3748, 1077, 1584, 727, 736, 736, 751, 751, 751, 751,
	751, 857, 857, -1000, -1000, -1000, 1385, -1000, -1000, -1000,
	15403, 1441, -1000, -1000, 953, 661, 1441, 1441, 15403, -196,
	-196, 1441, 1385, 1441, 1441, 1441, 1441, 1385, 1441, 15403,
	15403, 1441, -196, -196, -196, -196, 1441, 1441, 1441, 1441,
	1575, 1574, 15403, 1441, 1441, 1441, 15403, -1000, 17567, -1000,
	1385, 1441, 1441, -1000, 1060, 1149, 816, 2002, 1441, 793,
	2000, 1441, 1395, 19731, 19731, 19731, 1441, 15403, 1022, -1000,
	17567, 1385, -1000, 1569, 1441, 1385, 1573, 1441, 1441, 852,
	34894, -1000, 1538, 1757, -1000, -1000, -1000, -1000, 1904, 26238,
	-1000, 1310, 21354, -1000, 1310, 852, 1499, 27861, -1000, -1000,
	27861, 34894, 9390, -1000, 35435, -83, -106, -1000, -1000, 1568,
	-1000, 1256, -1000, -1000, 953, -1000, 659, 1853, 1913, 1567,
	6084, -1000, -1000, -1000, -1000, 435, -1000, -1000, -1000, 1659,
	37653, -1000, 1799, 722, 722, 754, 1317, 1788, -1000, -1000,
	163, -60, -1000, -1000, -1000, 1204, -12, -12, 1650, 1650,
	324, 1650, -1000, -12, -1000, -1000, -1000, 878, 1842, 870,
	814, 804, 801, -12, 1306, 1306, -1000, -1000, -1000, -1000,
	1185, -1000, 1658, -1000, 1184, -1000, -1000, -1000, -1000, -1000,
	-1000, 1227, 1686, 34353, -1000, 34894, -1000, 1862, -1000, -1000,
	-1000, 133, -1000, -1000, -1000, 1989, -1000, -1000, 34353, 27320,
	34353, -1000, -1000, 95, 29484, 175, 356, 220, -1000, 534,
	-1000, 530, -1000, -1000, -1000, -1000, -1000, -1000, 34894, 29484,
	-1000, -1000, -1000, -1000, -1000, 1980, 1340, 1338, -1000, -1000,
	-1000, 959, 1050, -1000, -1000, 19731, 29484, -1000, 329, -1000,
	3847, -1000, -1000, -1000, 852, 593, -1000, -1000, -91, -1000,
	-1000, 527, 658, 652, 523, -1000, 105, 29484, -1000, 34353,
	-1000, 1998, 1996, 137, 1995, 29484, -1000, 57, 1754, -1000,
	1566, -1000, 723, 587, 748, 382, 382, -1000, 918, 382,
	1838, 1835, 836, -1000, 236, -1000, 10492, 10492, 1564, 1303,
	1302, -1000, 1745, -1000, -1000, -1000, 34894, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 8839, 15403, -1000, 782,
	3847, 3676, -1000, 19731, -1000, 1441, 15403, -196, 8288, -196,
	-196, 1441, -1000, 31107, -1000, -1000, -196, -1000, -196, -196,
	-196, -196, -196, 1441, 1441, -196, -1000, -1000, -1000, -1000,
	-196, -196, -196, -196, 19731, 19731, 1441, -196, -196, -196,
	1385, 953, -1000, -1000, -1000, 419, 1248, 419, 19731, 19731,
	-1000, 19731, 19731, -1000, -1000, 19731, 3733, 3609, 3526, -239,
	1545, 925, -1000, 17567, 1188, -1000, -1000, -1000, -1000, -1000,
	-1000, 219, 1310, -1000, 11043, 27861, 30566, 30566, 27861, 30566,
	-1000, 1729, 1728, -1000, 1727, 1708, 1715, 22977, 1438, 1385,
	298, 26238, 1301, -1000, 1310, -1000, 22436, 576, 589, 586,
	575, 15403, 1980, 27861, 1529, 1529, -1000, 647, -1000, -1000,
	-1000, -135, -117, -1000, -1000, -1000, 10492, -1000, 7186, -1000,
	7186, -1000, 24059, 433, 1804, 377, 1317, 1317, -1000, -1000,
	1317, -1000, 1317, -1000, -1000, -1000, 1656, -1000, 1061, -1000,
	-1000, -1000, -1000, -1000, 1310, -347, 1182, 1300, 19731, 2014,
	-1000, 1797, -1000, 1795, 1793, 1295, -1000, -1000, 1486, 786,
	763, -12, -1000, -1000, 1650, -1000, 761, -1000, -1000, 871,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 759, 1436,
	-1000, 1434, 1563, -1000, 1432, 115, 34894, -1000, -1000, 1903,
	-1000, -1000, -1000, 1837, 918, 918, 918, 1685, -1000, -1000,
	-1000, -1000, 1483, 1562, -1000, 5125, 34353, 34353, 34353, -1000,
	-252, 173, -1000, 29484, 149, 183, 414, 1337, 34894, 29484,
	-1000, -1000, -1000, 17567, -1000, -1000, 1902, -1000, 3847, 1490,
	-1000, -1000, -12, 34894, -1000, 29484, 802, 30025, 29484, 132,
	165, -1000, 29484, 29484, 1993, 29484, 1559, 1284, 1706, 184,
	37439, 1317, 543, -1000, -1000, 430, -1000, 4728, 1788, 1332,
	38671, 38457, 34353, 1781, 1780, 1331, 34894, 34353, -1000, -1000,
	38162, 1323, 17567, -1000, 34353, -1000, -1000, 34353, 644, -1000,
	34353, -1000, -1000, -1000, -1000, 1047, 14321, -1000, -1000, 1385,
	-1000, 19731, 3847, -196, -1000, -1000, -1000, -1000, 620, -1000,
	-1000, -196, -1000, -1000, 1320, -1000, -1000, -1000, -1000, -1000,
	-1000, -196, -196, -1000, -1000, -1000, -1000, -1000, 3568, 3404,
	-196, -1000, -1000, -1000, -1000, 1385, 1650, 1650, -1000, 1650,
	1654, -1000, 1650, 24, 1650, 18, 1385, 1385, 3334, 3285,
	3154, 2991, 1569, 19731, 19731, 19731, 1310, -191, -1000, 953,
	17567, 1684, 11043, 1310, 6635, -1000, 34353, 1540, -1000, 937,
	936, 1757, 1653, 1683, 1304, -1000, -1000, -1000, -1000, 1719,
	-1000, 1716, -1000, -1000, 1613, -1000, -1000, 1561, 1310, 1560,
	34353, 19731, 576, -1000, 1310, 1310, 1310, 1385, 1974, 1529,
	-1000, -1000, 797, -1000, -1000, -1000, 6084, -1000, 1430, -1000,
	1650, 1650, 1778, -1000, 722, -1000, -1000, -1000, -1000, -1000,
	34353, -1000, 19731, 1900, -1000, -1000, 3847, -138, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 757, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -12, 1281, -12, 1177, -1000,
	1168, -1000, -1000, -293, 1649, 222, -1000, 918, 867, 863,
	1280, 34894, 140, 27320, -1000, 5125, 5125, 5125, 124, 121,
	-1000, 1023, -1000, -1000, -1000, 1277, 1275, 1274, 1490, 198,
	1015, 156, -1000, 1897, -1000, -1000, 953, 1050, -72, -1000,
	165, -1000, -1000, -1000, 165, -1000, -1000, 166, 1559, 1559,
	29484, 1559, -1000, -1000, -1000, 38162, 365, 5125, 5125, 1672,
	722, 1777, 377, -1000, -1000, -1000, -1000, -1000, -1000, 1319,
	-1000, 641, -1000, 510, 365, 38162, 953, 776, 1037, 10492,
	-1000, 1990, -1000, -1000, -1000, 3847, -1000, 7737, -1000, 819,
	-1000, -1000, -1000, 19731, 19731, -1000, -1000, -1000, 288, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19731, 19731, 19731,
	19731, -1000, 1569, 1569, 1569, 19731, 1385, 1273, 953, -1000,
	1864, 1473, 1552, -1000, -1000, 14862, 1385, 1759, 1427, -1000,
	21895, 1425, -1000, 1974, 11043, 17567, 17567, -1000, -1000, 17567,
	1647, -1000, 17567, -1000, -1000, -1000, -1000, 34353, 295, -1000,
	17567, 1272, 1425, 1143, -1000, 34353, 34353, 34353, -1000, 1946,
	-1000, 578, 24059, 1891, 1891, 1317, 1317, 1420, -1000, 1569,
	1310, -1000, 1310, 1310, -1000, -1000, 749, -1000, 746, 1460,
	1421, -1000, 24059, -1000, -1000, 799, -1000, -1000, -1000, -1000,
	-1000, 1939, -1000, 140, -1000, 1271, 262, 268, -1000, 261,
	258, 255, 242, 238, -1000, -1000, -1000, -1000, 373, 124,
	-1000, -75, 1165, 924, 1834, 121, -1000, 1119, 1114, 1109,
	1106, 181, -1000, -1000, -1000, -1000, 216, 183, -1000, 408,
	1270, -1000, 1818, 1816, 1899, 1899, 123, 1559, 1526, 1416,
	-1000, -1000, 1318, -1000, -1000, 1631, 1317, 1317, -1000, 1316,
	-1000, -1000, 34353, -1000, 365, 1861, 1859, 1310, -1000, 1980,
	27861, 14321, -1000, -1000, 1974, 1970, 1569, 1569, -1000, -1000,
	1569, 1569, 1569, 1569, -1000, -1000, -1000, 152, -1000, -1000,
	1776, -1000, 1310, -1000, -1000, 1310, 217, -1000, 34353, 1946,
	-1000, 953, 953, 953, 34353, 953, 1415, 1310, -92, 20813,
	-1000, 22977, 1404, 1404, 1404, -1000, 578, -1000, 1314, 918,
	1269, -1000, -1000, -1000, -1000, -1000, 370, 34353, -350, 19731,
	-1000, -1000, -1000, -1000, -1000, -1000, 1402, -1000, 222, -1000,
	-1000, 306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1823,
	1821, 296, -1000, 1267, 1266, -1000, 445, 1261, 682, -201,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 376, 1313, -1000, 155, -1000, -1000, 434, 1789, 1808,
	1969, -1000, 29484, -1000, -1000, 27861, -1000, -1000, 163, 163,
	24059, 1672, 1617, -1000, -1000, -1000, 19731, -1000, 813, 1978,
	1558, -1000, 919, 17567, -1000, -1000, -1000, -1000, -1000, -1000,
	1385, 188, -266, 2013, -1000, 1552, 1310, -1000, 222, -1000,
	-1000, 1400, -1000, -1000, 1310, -1000, 576, -1000, -1000, -1000,
	-1000, -1000, 1105, -1000, 34894, -1000, -1000, -1000, -1000, 1569,
	578, -1000, 286, 38977, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1090, -1000, -1000, 1198, 412, 153, -1000, 1896,
	-1000, 1613, 1055, 1816, 1968, 1813, 1811, -1000, 1259, -253,
	1529, 1397, 1612, 24059, 3847, 1394, -1000, 34353, 1976, 1965,
	-1000, 1385, 237, 237, 1557, -1000, 1741, -248, -275, 11043,
	1552, 1385, -1000, 10492, -1000, -1000, 1528, -350, -1000, 578,
	-1000, 313, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17567, 17567, 5533, 38977, 141, -1000, 131,
	-1000, -1000, -1000, 1258, -1000, 902, -1000, 1257, -1000, 1950,
	1948, -1000, 167, 1978, 578, 24059, 1392, -1000, 813, 1758,
	-198, 17567, 17567, -1000, -1000, 241, -1000, 898, 281, 896,
	-1000, 1229, -1000, -1000, 1734, -1000, 1532, -1000, 1390, -1000,
	5125, 34353, -1000, -1000, 1312, 1263, -1000, 1146, 1126, 213,
	207, 4210, -1000, -1000, -1000, -1000, -356, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1245, 1239, 26779, 1976, -1000, 1388,
	578, -1000, 351, -1000, 34353, -1000, 953, 1508, -1000, 953,
	1012, -1000, -1000, -1000, -1000, -1000, 34353, -257, 1385, 10492,
	228, 1384, -1000, -1000, -1000, 1074, -1000, 17567, 38977, 1932,
	1930, 1928, 1858, 10492, 38489, -1000, -1000, -1000, -1000, 112,
	1490, -198, 578, -1000, 349, 1507, -1000, 1895, 17567, 241,
	-1000, -269, 1884, -1000, -1000, 1150, -234, 1681, 201, 993,
	38977, -1000, 1123, -357, 447, 222, 465, 19731, -1000, -1000,
	-1000, 29484, -1000, -1000, 1310, 34353, 1310, -1000, -1000, -276,
	22977, 1148, 1147, 1680, 1679, 1984, -1000, -1000, -1000, -1000,
	-1000, -1000, 38977, -1000, -1000, -359, 38977, 704, -1000, -1000,
	-1000, 5081, -1000, -1000, -1000, -1000, 205, -1000, -1000, 3847,
	1490, 18649, -1000, -1000, -1000, -1000, -1000, 1655, 19731, -1000,
	-1000, 1991, -1000, 2010, 622, 622, -1000, -360, 37980, -362,
	458, 38977, 1011, -1000, 17567, -1000, 465, -1000, 1569, 1385,
	-282, 1527, -1000, -1000, -1000, 378, 1140, -1000, 5034, 992,
	38977, -1000, -363, 451, 38977, -1000, 1049, -1000, -1000, -1000,
	-1000, -283, -1000, -1000, -1000, -1000, -1000, 3413, -1000, -364,
	38977, -1000, 442, 3130, -366, -1000, 393, 38977, -1000,
}

var yyPgo = [...]int{
	0, 2392, 2388, 17, 2387, 255, 2386, 2385, 65, 2383,
	27, 21, 14, 35, 2381, 2143, 2138, 2131, 2123, 2120,
	2380, 12, 2377, 2376, 2118, 2375, 2374, 2116, 2114, 2106,
	2096, 2373, 2372, 2371, 2094, 2085, 2081, 10, 2368, 23,
	2362, 3, 151, 173, 2361, 2, 2360, 2359, 24, 2358,
	2357, 2075, 2356, 2355, 2354, 106, 2353, 2070, 2062, 2352,
	2060, 2054, 2344, 2342, 2052, 2045, 2037, 2341, 182, 2340,
	2339, 2338, 153, 108, 157, 2337, 2336, 2334, 116, 88,
	2026, 113, 61, 123, 175, 2332, 16, 56, 261, 2328,
	249, 2324, 122, 2323, 105, 2322, 2321, 167, 2320, 150,
	168, 95, 2317, 2315, 172, 2314, 2311, 2309, 110, 2305,
	2304, 179, 3086, 2303, 2301, 145, 2300, 53, 177, 54,
	50, 2299, 2298, 2297, 2296, 2295, 37, 457, 2294, 99,
	155, 2292, 2291, 97, 2290, 2289, 188, 2287, 2286, 2285,
	146, 55, 2278, 2277, 52, 2275, 51, 59, 2271, 45,
	2269, 144, 2267, 2265, 41, 29, 2264, 75, 2263, 64,
	2262, 148, 247, 1242, 2261, 25, 11, 7, 2259, 46,
	19, 9, 47, 32, 73, 58, 138, 98, 2258, 33,
	42, 125, 92, 2256, 103, 74, 48, 2255, 160, 2254,
	85, 166, 139, 143, 159, 2253, 2252, 2251, 183, 2249,
	140, 90, 2247, 115, 962, 189, 127, 2245, 100, 2244,
	2243, 2242, 2241, 2239, 87, 124, 2238, 2237, 180, 178,
	181, 101, 71, 31, 2587, 104, 163, 2236, 49, 2235,
	2234, 2233, 2729, 130, 20, 111, 174, 2232, 114, 30,
	62, 2231, 2230, 2229, 2227, 2226, 2223, 2222, 2220, 1789,
	2217, 2216, 2215, 2214, 171, 70, 2213, 133, 132, 129,
	2212, 154, 34, 2211, 2210, 141, 119, 2208, 2204, 2202,
	2201, 134, 89, 152, 26, 2200, 121, 112, 158, 2198,
	91, 2197, 2196, 238, 57, 2195, 2194, 2193, 2190, 109,
	102, 2188, 76, 43, 40, 82, 39, 2187, 2184, 83,
	84, 2183, 38, 2182, 4, 5, 8, 2181, 2179, 2178,
	2170, 2165, 2164, 2163, 96, 2160, 2157, 69, 2156, 2155,
	2151, 44, 2148, 2147, 2140, 149, 118, 131, 170, 86,
	6, 2136, 2133, 13, 2128, 128, 2126, 67, 2108, 63,
	2104, 2101, 66, 2091, 2087, 68, 2083, 2079, 176, 1770,
	516, 2077, 169, 156, 60, 93, 2058, 2049, 0, 1188,
	161, 162, 2042, 2039,
}

var yyR1 = [...]int{
	0, 357, 357, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 184, 184, 184,
	184, 183, 183, 90, 90, 91, 91, 88, 88, 97,
	6, 6, 7, 7, 10, 10, 71, 71, 11, 12,
	12, 12, 12, 360, 360, 106, 106, 104, 104, 105,
	105, 181, 181, 13, 13, 13, 188, 188, 193, 193,
	193, 196, 196, 196, 196, 171, 172, 173, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	331, 331, 340, 340, 340, 341, 341, 339, 339, 339,
	339, 339, 343, 343, 344, 344, 342, 342, 342, 342,
	346, 346, 347, 347, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 345, 345, 334, 334,
	334, 34, 34, 34, 34, 35, 35, 35, 35, 35,
	35, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 348, 348,
	348, 348, 349, 349, 350, 350, 351, 351, 352, 352,
	352, 352, 353, 353, 353, 353, 353, 354, 354, 354,
	354, 354, 354, 354, 355, 355, 356, 356, 2, 312,
	312, 313, 313, 314, 314, 314, 314, 315, 315, 316,
	316, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 25, 220, 220, 217, 217, 217, 218, 218, 219,
	219, 219, 333, 333, 333, 327, 327, 327, 329, 329,
	328, 328, 328, 330, 330, 335, 335, 335, 335, 335,
	337, 337, 337, 337, 337, 337, 338, 338, 338, 336,
	336, 49, 49, 50, 50, 50, 160, 160, 160, 14,
	14, 14, 14, 14, 20, 22, 22, 38, 38, 39,
	23, 23, 23, 23, 40, 40, 41, 26, 26, 26,
	26, 26, 26, 47, 47, 47, 46, 46, 45, 45,
	45, 45, 45, 45, 24, 24, 24, 24, 48, 48,
	43, 43, 42, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 27, 27, 27, 27, 27,
	27, 19, 311, 311, 311, 37, 37, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 53, 285, 286,
	286, 286, 286, 286, 286, 286, 286, 272, 272, 273,
	262, 262, 262, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 239, 239, 239, 239, 245,
	245, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 244, 244, 244, 244, 244, 244, 244, 244, 246,
	246, 246, 246, 246, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 248, 248, 248, 248, 248, 248, 248, 248, 271,
	271, 249, 249, 265, 265, 266, 266, 266, 263, 263,
	263, 264, 264, 252, 253, 267, 254, 254, 254, 255,
	255, 255, 256, 256, 261, 261, 260, 260, 260, 260,
	260, 260, 257, 257, 257, 257, 258, 258, 259, 270,
	270, 270, 270, 270, 250, 36, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 298, 298,
	210, 210, 211, 211, 275, 275, 296, 296, 295, 295,
	294, 294, 294, 284, 284, 291, 291, 291, 291, 291,
	291, 291, 291, 279, 279, 279, 278, 278, 280, 280,
	283, 283, 293, 293, 292, 292, 276, 276, 276, 299,
	299, 299, 299, 299, 277, 277, 277, 277, 300, 281,
	281, 282, 282, 282, 305, 306, 304, 304, 304, 304,
	304, 123, 123, 123, 288, 288, 288, 289, 289, 289,
	290, 290, 290, 309, 309, 308, 308, 51, 52, 56,
	56, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 159, 159, 159,
	215, 215, 303, 301, 301, 302, 302, 16, 16, 54,
	54, 332, 332, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 307, 307, 307, 18, 18, 57, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 85, 202, 202, 201, 201, 200, 200,
	200, 203, 203, 203, 203, 237, 237, 237, 59, 59,
	59, 63, 63, 66, 66, 66, 64, 65, 28, 29,
	29, 29, 29, 30, 216, 216, 61, 61, 62, 62,
	62, 62, 77, 77, 362, 362, 60, 363, 68, 69,
	69, 70, 70, 70, 206, 206, 74, 74, 74, 72,
	72, 72, 73, 73, 79, 79, 83, 83, 83, 83,
	82, 82, 82, 82, 162, 162, 167, 229, 229, 143,
	143, 163, 163, 168, 168, 168, 169, 169, 170, 170,
	170, 170, 170, 165, 165, 164, 164, 166, 131, 131,
	227, 227, 227, 226, 226, 226, 226, 87, 87, 92,
	92, 92, 94, 94, 94, 94, 94, 98, 145, 145,
	116, 116, 117, 117, 117, 117, 117, 129, 129, 180,
	180, 179, 179, 182, 182, 93, 95, 95, 95, 95,
	101, 101, 102, 102, 103, 103, 214, 214, 234, 234,
	234, 107, 107, 107, 109, 108, 108, 108, 108, 110,
	110, 96, 287, 287, 274, 241, 241, 242, 242, 111,
	111, 113, 114, 114, 112, 112, 118, 118, 115, 119,
	119, 119, 119, 120, 120, 84, 84, 84, 84, 84,
	84, 84, 84, 199, 199, 122, 122, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 139, 139, 139,
	139, 139, 139, 124, 124, 124, 124, 124, 124, 124,
	78, 78, 140, 140, 140, 100, 99, 99, 81, 81,
	80, 80, 141, 141, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 134, 134,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 361, 361, 136, 135,
	135, 135, 135, 135, 135, 75, 75, 75, 75, 75,
	235, 235, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 152, 152, 76,
	76, 150, 150, 151, 153, 153, 149, 149, 149, 126,
	126, 126, 126, 126, 126, 126, 126, 128, 128, 128,
	154, 154, 142, 142, 86, 155, 155, 156, 157, 157,
	158, 158, 161, 174, 174, 174, 175, 175, 175, 175,
	130, 130, 176, 176, 176, 125, 125, 125, 125, 125,
	125, 125, 178, 178, 177, 177, 177, 177, 185, 185,
	144, 144, 147, 147, 146, 148, 186, 186, 190, 190,
	187, 187, 191, 191, 191, 191, 194, 194, 195, 195,
	195, 192, 192, 192, 189, 189, 189, 231, 231, 231,
	197, 197, 207, 207, 204, 204, 205, 205, 198, 198,
	251, 251, 251, 213, 213, 212, 212, 212, 208, 208,
	208, 209, 209, 228, 228, 224, 224, 230, 230, 225,
	225, 232, 232, 233, 233, 310, 310, 268, 268, 320,
	320, 269, 269, 321, 321, 323, 323, 318, 318, 319,
	319, 322, 322, 31, 324, 324, 325, 325, 326, 326,
	326, 326, 32, 33, 33, 33, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 358, 359,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 0, 1, 1, 3, 4,
	1, 3, 1, 3, 8, 9, 1, 1, 10, 9,
	8, 7, 7, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 1, 1, 0, 2, 3, 2, 2, 2, 2,
	2, 6, 8, 3, 3, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 3, 3, 2, 4,
	5, 2, 3, 4, 2, 2, 3, 3, 3, 3,
	3, 4, 1, 1, 1, 1, 1, 6, 6, 4,
	4, 4, 5, 3, 3, 3, 3, 3, 4, 6,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 0, 1, 0, 1, 1, 1, 1, 2,
	2, 2, 5, 5, 4, 4, 4, 4, 4, 2,
	1, 2, 1, 2, 2, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 0, 3,
	1, 1, 0, 1, 5, 4, 0, 1, 1, 2,
	2, 3, 2, 0, 1, 3, 5, 3, 3, 5,
	3, 2, 2, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 3, 3, 3, 3, 3, 1, 10,
	11, 11, 12, 12, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 0, 2, 0, 2, 1, 5, 1,
	3, 5, 4, 3, 5, 3, 8, 10, 3, 3,
	3, 3, 3, 5, 4, 5, 1, 2, 2, 4,
	3, 6, 5, 3, 9, 2, 2, 0, 1, 2,
	0, 1, 7, 1, 3, 8, 8, 3, 3, 3,
	5, 3, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 1, 3, 2, 3, 3, 4,
	3, 5, 5, 5, 4, 4, 4, 2, 2, 2,
	6, 2, 4, 4, 4, 5, 8, 6, 3, 5,
	4, 2, 4, 3, 2, 4, 5, 6, 2, 6,
	6, 3, 3, 3, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 3, 2, 0, 1, 1, 2, 4,
	1, 1, 1, 2, 4, 4, 1, 1, 2, 3,
	4, 4, 5, 3, 1, 1, 3, 3, 1, 1,
	1, 1, 0, 3, 1, 1, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 2, 6, 0, 1, 0,
	3, 0, 1, 0, 2, 2, 4, 1, 2, 2,
	2, 2, 2, 0, 2, 1, 3, 3, 1, 3,
	0, 1, 2, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 1, 4, 1, 3, 1, 2, 2, 4,
	2, 6, 1, 4, 6, 3, 2, 0, 3, 0,
	3, 1, 3, 1, 3, 4, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 12, 1, 3, 3, 3, 3, 3, 4, 1,
	3, 3, 2, 1, 1, 3, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 3, 6, 6, 6, 8, 8, 8, 8, 4,
	6, 7, 7, 7, 9, 4, 7, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 0, 3, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -357, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -91, 29,
	-53, 180, -52, 183, 182, 218, 184, 211, 64, 341,
	-66, 344, 345, -362, -216, 269, 270, 20, 37, 346,
	348, 30, 31, 232, 286, 288, 313, -5, -90, -6,
	181, 342, 213, 212, 26, 492, -358, 68, 556, -157,
	15, -68, -363, -68, -71, 9, 10, 8, 441, -68,
	-285, -214, 108, 68, 23, -209, -220, 88, 432, 188,
	-218, 282, 284, -207, -208, -217, 242, 252, 44, 199,
	198, 253, 189, 282, 189, 190, 192, 432, 188, 225,
	224, 282, 284, 189, -112, -232, 72, -222, 202, 502,
	307, 489, 253, 551, 294, 239, 341, 355, 357, 349,
	384, 372, 490, 503, 203, 264, 187, 340, 370, 373,
	418, 201, 297, 257, 320, 504, 407, 413, 267, 344,
	427, 505, 204, 261, 263, 262, 247, 457, 268, 36,
	214, 368, 303, 361, 272, 242, 506, 497, 236, 359,
	35, 27, 237, 235, 430, 507, 331, 415, 389, 332,
	306, 508, 494, 301, 414, 364, 360, 313, 205, 199,
	333, 509, 390, 394, 510, 419, 287, 334, 511, 512,
	513, 191, 293, 353, 354, 514, 243, 421, 298, 388,
	32, 200, 491, 48, 222, 422, 38, 392, 37, 398,
	515, 330, 387, 382, 399, 516, 517, 518, 519, 311,
	309, 310, 312, 386, 352, 381, 254, 259, 53, 186,
	396, 395, 397, 260, 417, 377, 375, 520, 521, 302,
	206, 522, 523, 362, 18, 524, 525, 425, 217, 304,
	305, 42, 526, 527, 528, 112, 487, 529, 530, 416,
	391, 393, 241, 116, 365, 196, 531, 308, 412, 317,
	493, 291, 113, 423, 358, 533, 336, 348, 221, 216,
	426, 326, 534, 270, 535, 536, 537, 208, 538, 285,
	284, 345, 318, 114, 346, 409, 265, 539, 540, 541,
	542, 251, 234, 429, 420, 52, 269, 403, 543, 321,
	337, 351, 198, 271, 406, 295, 342, 43, 7, 258,
	299, 410, 319, 266, 252, 255, 379, 223, 544, 545,
	366, 367, 385, 350, 380, 343, 226, 218, 111, 428,
	404, 495, 282, 338, 374, 371, 229, 378, 546, 547,
	256, 230, 347, 424, 296, 369, 405, 189, 133, 373,
	418, 180, 408, 409, 415, -279, 416, 224, 227, -237,
	189, -202, 407, 287, 308, 462, 230, 231, 190, 191,
	32, 420, 419, 411, -232, 193, 347, -77, 184, 219,
	-112, -48, 72, 271, -48, 29, 72, 72, 36, 72,
	346, 410, 410, 75, 493, 233, 21, -349, -330, 317,
	-348, -328, 181, 180, 10, 182, 322, 323, 324, 190,
	8, 30, 532, 207, 325, 326, 6, 211, 327, 328,
	225, 9, 329, -333, 74, 72, -222, 21, -349, -330,
	317, -211, -210, 339, 398, 6, -70, 5, -198, 194,
	343, -88, 501, -97, -234, -232, -223, 74, 300, 210,
	290, 401, 458, 459, 460, 461, 233, 462, 475, 476,
	99, 231, 322, 323, 314, 324, 209, 477, 117, 240,
	219, 279, 411, 278, 283, 463, 464, 478, 479, 480,
	465, 466, 289, 481, 482, 554, 292, 555, 315, 484,
	532, 485, 325, 483, 327, 228, 469, 468, 467, 470,
	328, 452, 453, 471, 51, 473, 472, 474, 192, 81,
	-8, -3, -90, -175, 17, 16, -74, 54, 55, -69,
	-82, 124, -84, -232, -121, 91, -127, 28, 72, -222,
	24, -126, -223, -122, -149, -148, -100, 133, -236, 122,
	123, 130, 92, 176, -134, -132, -133, -135, -137, -138,
	74, 73, 82, 75, 76, 77, 78, 83, 458, 459,
	460, 461, 462, 475, 476, 209, 477, 219, 463, 464,
	478, 479, 480, 465, 466, 481, 482, 484, 485, 483,
	469, 468, 467, 470, 452, 453, 471, 473, 472, 474,
	84, 85, -224, -146, -358, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 58, 59, 188,
	442, 443, 444, 445, 446, 488, 450, 94, 47, 431,
	440, 439, 438, 436, 437, 433, 435, 434, 195, 432,
	128, 441, -68, -68, -68, -187, 343, -194, -191, 419,
	420, -192, -195, -189, -149, 398, 529, 530, 418, 373,
	417, -224, -232, -2, -5, 6, -112, -286, -273, -277,
	-225, 204, -300, -224, -221, 201, 72, -222, 300, 185,
	210, 181, 90, 496, 23, 25, 290, 401, 458, 93,
	133, 459, 460, 461, 16, 20, 94, 132, 81, 442,
	233, 462, 180, 62, 433, 435, 431, 432, 408, 28,
	10, 26, 212, 246, 22, 126, 182, 97, 98, 99,
	231, 215, 322, 323, 24, 213, 314, 85, 324, 209,
	117, 240, 19, 65, 219, 279, 11, 411, 227, 550,
	286, 13, 456, 115, 278, 14, 283, 195, 194, 110,
	244, 190, 60, 8, 176, 87, 107, 56, 463, 464,
	486, 45, 232, 499, 58, 108, 17, 436, 437, 30,
	488, 465, 220, 500, 466, 128, 249, 63, 50, 289,
	91, 83, 554, 33, 86, 66, 335, 88, 15, 245,
	61, 454, 292, 555, 315, 224, 532, 248, 501, 207,
	109, 325, 183, 441, 316, 288, 59, 188, 6, 451,
	29, 211, 327, 250, 228, 469, 468, 467, 470, 552,
	57, 444, 445, 471, 328, 548, 189, 96, 452, 453,
	193, 225, 84, 5, 44, 31, 9, 329, 64, 67,
	438, 439, 440, 47, 51, 473, 472, 474, 192, 553,
	95, 12, 455, 492, 89, 190, 192, 441, -205, 195,
	-205, 225, 224, -219, 250, -205, -205, 189, -218, 100,
	100, -54, -112, -332, -327, -333, -204, 195, -224, -204,
	-204, -204, -204, -204, -204, -204, -112, 177, -104, -112,
	72, 29, -203, 108, 12, 432, 188, 189, 224, 225,
	192, -281, 11, 110, 228, 228, 228, 229, 228, -201,
	410, 412, 226, 413, 414, 12, -85, 108, 19, -358,
	-175, -175, 125, 72, 346, 193, -62, -3, -12, -10,
	-11, -8, 100, -129, 23, 29, 29, 74, 51, 29,
	-43, -42, -44, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 29, -311, 68, -268, 398,
	72, -324, -325, -112, 75, 75, 66, 66, 69, 193,
	69, 66, -350, 318, 68, -350, 284, 318, 319, 252,
	282, 192, -350, -350, 284, -350, -350, -350, -350, -350,
	410, -350, -350, -350, 320, 321, -350, 408, 192, -350,
	-350, -350, -350, -350, 71, 66, 69, 308, 66, 11,
	66, -297, 133, 331, 332, 333, 334, 330, 308, 335,
	336, 337, 228, 338, -68, -7, -5, -358, 21, 22,
	189, 423, 69, -88, -178, -358, -359, 70, -176, 19,
	30, -130, 75, 78, -158, -161, -84, -232, 50, -72,
	21, 22, 80, 11, -227, 90, 88, 89, 107, -226,
	23, 72, -222, -223, 74, 177, -84, -124, 110, 91,
	108, 109, 93, 119, 118, 129, 122, 123, 124, 125,
	126, 127, 128, 120, 121, 132, 100, 101, 102, 103,
	104, 105, 106, -199, -358, -100, -358, 178, 179, -127,
	-127, -127, -127, -127, -127, -127, -358, -358, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -358,
	-358, -358, -358, -358, -358, -358, -358, -358, -358, -8,
	-141, -84, -358, -358, -358, -358, -358, -358, -358, -358,
	-358, -358, -358, -152, -84, -358, -361, -136, -358, -361,
	-136, -361, -136, -361, -358, -361, -136, -361, -136, -361,
	-361, -136, -361, -358, -358, -358, -358, -198, -198, 11,
	-104, -105, -115, -232, 69, -188, -193, 421, 423, 343,
	-192, -192, -231, -224, 74, 28, 100, 29, 177, -157,
	-68, 70, 69, -277, 204, 201, -239, -245, -247, -246,
	-248, -243, -244, 370, 373, 377, 375, 371, 376, 133,
	374, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 29, 214, 366, 367, 368, 369, 390, 391,
	392, 393, 394, 395, 396, 397, 349, 372, 490, 350,
	351, 352, 353, 354, 355, 357, 358, 359, 360, 361,
	362, 363, 364, 72, -223, -300, 68, -224, -112, -220,
	-218, 72, 91, 72, -111, -224, -232, -118, -224, -232,
	251, -336, -335, -327, -330, -205, -219, -327, 256, 254,
	255, 69, 193, 69, 193, 71, -104, 24, 66, -106,
	-112, 72, 72, -111, -118, -329, -327, -330, -233, -232,
	-221, 69, -203, 74, -236, -84, -205, -205, -112, -112,
	-112, -112, -112, -203, -203, -203, -203, -200, 11, 110,
	11, -200, -200, -84, -127, -327, 434, 124, -232, 72,
	72, 346, 72, 33, -43, -43, 74, -43, 69, 100,
	-43, 70, -141, -310, 549, 69, -326, 23, 423, 424,
	399, -352, 189, 227, 224, -352, -348, 326, -329, -328,
	-327, -350, -351, -224, -350, -350, -350, 410, -350, -350,
	-350, -350, -350, -350, -350, -350, -333, -352, 286, 69,
	-352, -329, -327, 330, 330, 330, 330, 330, 330, -74,
	-8, -112, 424, 425, -97, 23, -177, -225, -184, 87,
	9, 110, 69, 18, 69, -174, 25, 26, 177, -128,
	51, 75, 78, -206, 49, -112, -84, -84, -84, -139,
	83, 91, 84, 85, -226, 124, -233, -225, -221, -127,
	-140, -146, -100, 79, 110, 108, 109, 93, -127, -127,
	-127, -127, -127, -127, -127, -127, -127, -127, -127, -127,
	-127, -127, -127, -235, 72, 74, 72, -126, -126, -224,
	-72, -80, -83, 124, -84, -232, -80, -80, -72, -359,
	-359, -80, -83, -80, -80, -80, -80, -83, -80, -72,
	-72, -80, -359, -359, -359, -359, -80, -80, -80, -80,
	-224, -224, -72, -80, -80, -80, -72, -359, 69, -359,
	-8, -80, -80, -359, -84, -84, -149, 74, -80, -149,
	74, -80, -127, 447, 448, 449, -80, -72, -150, -151,
	95, -149, -359, -127, -80, -81, -80, -80, -80, -114,
	87, -112, -87, -92, -94, -95, -96, -116, -99, -358,
	-93, 486, -112, -100, 72, -112, -104, -360, 11, 67,
	-360, 69, 177, -191, -194, 69, 422, 424, 425, -188,
	-255, 132, 66, 86, -84, -225, -233, -175, -74, -288,
	-289, -290, -225, 74, 75, -273, -275, -276, -277, -291,
	204, -299, 196, 198, 199, 44, -278, 205, 190, 45,
	-240, -263, 403, 404, -249, 68, -249, -249, 378, 370,
	373, 371, -249, -249, -249, -249, -249, -254, 373, -254,
	-254, -254, -254, 371, 68, 68, -249, -249, -249, -265,
	68, -265, 365, -266, 68, -266, -266, -266, -266, -300,
	-300, -84, -228, 67, 23, 192, -261, -260, -257, -258,
	-259, -256, 28, 24, -261, -49, 239, 210, 177, 68,
	177, 242, 243, -331, 69, 28, -337, 283, -112, -112,
	-112, -327, -327, -333, -307, 208, 203, -112, 69, 69,
	-112, 74, 72, 72, -129, -282, 11, 110, -203, -232,
	-232, -112, -129, -203, -78, 215, 67, -361, -359, 72,
	-127, -42, -126, 70, -113, 87, 74, -325, -234, 398,
	424, -353, 124, -224, -353, -356, 492, 193, 70, 69,
	-350, -353, 304, 286, -353, 11, -298, 19, -72, -359,
	-56, -55, 185, 182, 183, 186, 187, -303, 401, 181,
	236, 235, 221, -99, -358, -359, 69, 177, -183, 34,
	35, -224, 52, -130, -130, -161, -197, 19, 11, 47,
	47, -73, 57, 83, 84, 85, 177, -358, -140, -127,
	-127, -127, -78, 90, -359, -80, 69, -359, 177, -359,
	-359, -80, -162, 454, -162, -359, -359, -359, -359, -359,
	-359, -359, -359, -80, -80, -359, -162, -162, -162, -162,
	-359, -359, -359, -359, 69, 69, -80, -359, -359, -359,
	-81, -84, -359, -359, -359, 69, 67, 23, 11, 11,
	-359, 11, 11, -359, -359, 11, -127, -127, -127, -359,
	-80, -153, -151, 97, -84, -359, -359, -359, -359, -359,
	-359, -181, 112, -112, 29, 69, -107, -109, -108, -110,
	56, 60, 62, 57, 58, 59, 63, -214, -87, -98,
	47, -358, -358, -117, 112, -119, 23, -234, 64, 194,
	65, -358, -181, 67, -87, -87, -115, -232, 124, -193,
	-196, 426, 423, 429, 72, 74, 177, -176, 69, -290,
	100, -277, 68, 72, -283, -223, 45, -278, 190, 45,
	-280, -278, -278, -283, 72, -283, 45, 83, 91, -252,
	-253, -267, -270, -250, 23, 550, 406, 487, 28, 66,
	401, 196, 45, 44, 199, 81, -264, 405, 75, -254,
	-254, -249, -249, -249, 378, -249, -254, -255, 133, 29,
	-255, 133, -255, 133, -255, 133, -255, 133, -254, -271,
	74, -271, 75, -265, 75, 70, 66, -224, -171, -112,
	-258, -257, -259, 373, 418, 132, 430, -50, 8, 9,
	10, -224, -312, -313, -314, -224, 110, 244, 245, -224,
	-340, 316, -335, 284, 293, 90, 16, 492, 193, 193,
	-112, -327, -120, 12, 72, 72, -200, -203, -127, -330,
	230, 231, -181, 189, -326, 193, 177, 177, 193, 307,
	-329, -224, 11, 11, 304, 11, -329, 340, -206, 69,
	-215, -278, -309, -276, -277, -308, 197, 204, 205, -215,
	204, 201, -278, 205, 196, 197, -212, -278, 193, 23,
	-215, -215, -284, 100, -215, 32, 32, 112, -225, -225,
	69, 74, 74, 53, -112, -79, -172, 124, -225, -81,
	-78, 90, -127, -359, -83, -163, -162, 124, -233, -163,
	-163, -359, -224, -167, -358, -162, -163, -163, -162, -162,
	-162, -359, -359, -162, -163, -163, -163, -163, -127, -127,
	-359, -163, -163, -163, -359, -238, 133, 370, 214, 368,
	361, 388, 375, 403, 366, 404, -235, -238, -127, -127,
	-127, -127, -127, 11, 11, 11, 489, -157, 99, -84,
	96, -125, 29, 47, -358, -8, -358, -186, -190, -149,
	-221, -92, -94, -94, -92, -94, 56, 56, 56, 61,
	56, 61, 56, -108, -234, -359, -359, -145, 238, 74,
	-358, 33, -234, -119, 190, 190, 190, -81, -120, -87,
	-120, -120, 177, 423, 427, 428, -289, -290, -293, -292,
	-224, -223, 196, -299, 44, -299, -283, -283, -283, -283,
	68, 83, -358, 551, 75, 74, -127, 9, 45, 45,
	45, 74, 70, -255, 133, -255, 133, -254, -249, -255,
	133, 72, 133, -255, 133, 70, 69, 70, 69, 70,
	69, -123, 507, 91, -112, -173, 23, 29, -284, -284,
	-284, 66, 70, 69, -239, -224, -224, -224, -343, 492,
	289, -341, -339, 295, 296, 297, 298, 299, -330, 294,
	-337, 291, 74, 72, -112, -327, -84, -129, -254, -112,
	-329, 124, 124, -224, -329, 304, -355, 492, -329, -329,
	11, -329, 74, -73, -55, 68, -272, 72, -223, -283,
	-208, 196, 72, 72, 72, -223, 72, -223, -224, 45,
	45, 72, -112, -224, -272, 72, -84, -224, -224, 177,
	-224, -184, 69, -82, -359, -127, -163, 177, -163, -229,
	72, -163, -163, 69, 69, -163, -359, -249, -249, -249,
	-266, -249, 354, -249, 354, -359, -359, 19, 19, 19,
	19, -359, -127, -127, -127, -358, -76, 451, -84, -185,
	66, -186, -144, -147, -146, -358, -8, -359, -177, 6,
	492, -182, -224, -120, 69, 100, 100, -102, -101, 66,
	67, -103, 66, -101, 56, 56, -180, 68, 69, -146,
	-358, 69, -182, -127, -119, -358, -358, -358, -359, -157,
	-120, 70, 69, -249, -249, 45, -280, -179, -224, -127,
	23, -133, 452, 453, -255, 133, -254, 74, -254, 75,
	75, 507, 68, -8, -171, -284, 72, 133, 72, 133,
	74, -112, -315, -316, -317, 81, 491, 91, 246, 247,
	206, 248, 249, 250, -314, -239, -239, -239, -346, -347,
	-345, 292, 314, 315, 300, -344, -342, 309, 310, 311,
	312, 90, 74, 74, 74, -338, 283, 90, 292, 16,
	23, -203, -318, -201, -355, -355, 286, -329, -79, -272,
	-159, 209, 210, -239, -239, -228, -280, 45, 72, -213,
	193, 23, 193, -159, -272, 29, 182, 87, -225, -89,
	11, -172, -172, 124, -143, 112, -127, -127, -254, 72,
	-127, -127, -127, -127, -359, -359, -359, -127, -359, 74,
	27, -185, 69, -359, -359, 47, -359, -359, 69, -157,
	-190, -84, -84, -84, 68, -84, -179, 238, 74, -359,
	-119, -214, -179, -179, -179, -175, -295, -294, 67, 200,
	81, -292, -174, -174, -283, -283, 70, 69, -359, -358,
	-255, 133, -255, 133, 70, 70, -293, -171, -173, 72,
	133, 19, -172, -317, 74, 250, 246, 250, 250, 250,
	250, 251, -334, 81, 290, -345, 301, 512, 285, 316,
	75, 75, 111, 30, 31, -342, 75, 75, 75, 75,
	-339, 16, 492, -337, 291, 74, 74, -319, 38, -321,
	39, -354, 23, -354, 304, 11, 70, 72, -240, -240,
	68, -283, -283, 72, -224, -159, 28, 28, -358, -120,
	-87, -82, -157, 16, -359, -359, -359, -359, -359, -359,
	-75, 110, 492, 45, -147, -144, 47, -8, -358, -224,
	-175, -179, 70, -146, 413, -117, -234, -359, -359, -359,
	-294, 72, -284, 74, 207, -224, -262, 553, 552, -127,
	70, -8, 237, -173, 36, 36, 242, 243, 74, 74,
	28, 302, 176, 28, 75, 176, 457, 291, 74, 72,
	292, -251, 194, -322, 43, -320, -269, 42, 16, -327,
	-87, -293, -228, 68, -127, -301, -302, 112, -154, 13,
	-172, -168, 114, 113, -141, -359, 490, 63, 493, 9,
	-144, -8, 70, -358, -119, 75, -112, -359, -296, -295,
	-171, 238, -21, -3, -10, -11, -12, -13, -15, -51,
	-16, -17, -22, -23, -18, -57, -58, -66, -64, -65,
	-61, -60, -26, -24, -27, -19, -28, -29, -30, -34,
	-35, -25, -36, 94, 195, 272, 341, 75, 28, 75,
	28, 305, 292, 23, -180, 75, -321, 16, -323, 40,
	41, 74, 492, -120, 70, 68, -293, -359, 69, -224,
	-155, 14, 16, -359, -169, 93, -170, 111, 457, -131,
	75, 176, -169, 53, 491, 494, -186, -359, -287, -274,
	-225, 68, -262, -160, 240, 241, -171, -84, -84, 72,
	-47, -230, 275, 276, 277, -225, -37, -21, 303, 303,
	74, 38, 114, 74, 16, 16, 284, -154, -296, -293,
	70, -302, 47, -165, 455, -156, -84, -142, -86, -84,
	-170, 116, 117, 238, 116, 117, -126, 53, -359, 69,
	-239, -179, -171, 72, 72, -38, -39, 95, 96, 273,
	274, 278, -239, 69, 556, 74, 74, 28, 289, 21,
	-330, -155, 70, -296, 222, -164, -166, -224, 69, 90,
	-224, 492, -359, -274, -241, 487, 24, 70, -173, 99,
	97, -39, -84, -37, 19, 19, 19, 28, -225, 99,
	-21, 306, -165, -296, 223, 69, 23, -86, -170, 493,
	23, 74, 487, -305, -306, 66, -14, -20, -13, -10,
	-11, -12, 341, -90, 94, -37, 96, 556, -48, 75,
	-8, -46, -45, 75, -48, 280, 91, 281, 72, -127,
	-330, -358, -166, -167, 494, -234, -242, 83, 28, 74,
	-306, 66, -305, 66, 10, 9, -171, -37, 556, -37,
	99, 97, -40, -41, 98, -21, 69, 279, -127, 220,
	66, -127, -304, 208, 203, 206, 29, -304, 556, 99,
	556, 195, -37, 99, 97, -41, -84, -45, -359, -359,
	498, 66, 202, 28, 83, 99, 94, 556, 195, -37,
	96, 498, 99, 556, -37, 195, 99, 556, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 767, 767, 0, 767,
	866, -2, 627, 0, 0, 0, 0, -2, 740, 741,
	742, 746, 747, 762, 764, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 41, 56, 0,
	1228, 0, 765, 754, 755, 0, 0, 1774, 2, 1166,
	0, 776, 769, 0, 767, 767, 767, 66, 67, 0,
	98, 0, 0, 0, 867, 0, 0, 0, 1226, 1226,
	249, 1226, 1226, 0, 1242, 247, 0, 1223, 1238, 1239,
	1240, 0, 0, 0, 1224, 0, 1224, 1224, 1224, 1224,
	1224, 1224, 1224, 0, 686, 894, 1251, 1252, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 0, 0, 0,
	731, 0, 697, 698, 699, 0, 701, 0, 0, 0,
	0, 0, 711, 714, 718, 0, 1166, 1166, 573, 574,
	575, 736, 737, 725, 738, 0, 0, 55, 0, 0,
	847, 324, 326, 0, 346, 0, 349, 352, 1257, 748,
	0, 0, 1282, 1283, 0, 0, 0, 0, 0, 1624,
	192, 263, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 0, 194, 194, 194, 1636, 194, 0, 194, 194,
	194, 194, 194, 262, 252, 253, 254, 0, 0, 0,
	1624, 0, 553, 550, 551, 767, 0, 771, 0, 1229,
	743, 53, 0, 57, 1182, 868, 869, 870, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753,
	1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	0, 39, 0, 1172, 0, 0, 779, 777, 778, 768,
	0, 790, 820, 0, 905, 0, 911, 913, -2, -2,
	0, 954, 955, 956, 957, 958, 959, 0, 0, 0,
	0, 0, 0, 0, 982, 983, 984, 985, 986, 987,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1716, 1717,
	1718, 1719, 1721, 1722, 1723, 1730, 1731, 1734, 1739, 1740,
	1741, 1742, 1743, 1744, 1745, 1747, 1748, 1753, 1755, 1757,
	1760, 1761, 1762, 1763, 1765, 1766, 1767, 1769, 1770, 1771,
	915, 916, 1136, 1195, 0, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1127, 0, 1056,
	1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 0, 0,
	0, 0, 1228, 1228, 0, 83, 1690, 0, 1200, -2,
	-2, 1202, 0, 0, 0, -2, -2, -2, -2, 1484,
	-2, 1136, 0, 99, 1158, 767, 100, 0, 389, 390,
	0, 1497, 597, 1249, 1250, 1486, 1245, 1246, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 0, 0, 247, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 1226, 249, 0,
	0, 667, 0, 668, 0, 257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 685, 0, 687, 77,
	688, 731, 690, 0, 0, 1226, 1226, 0, 0, 0,
	0, 0, 599, 600, 731, 731, 731, 731, 728, 0,
	728, 708, 728, 726, 727, 0, 713, 0, 0, 0,
	721, 722, 0, 749, 0, 0, 756, 758, 759, 760,
	761, 757, 0, 766, 0, 0, 0, 328, 0, 0,
	348, 330, 0, 333, 334, 335, 336, 337, 338, 339,
	340, 341, 342, 343, 344, 0, 351, 0, 1255, 1258,
	753, 1273, 1274, 0, 1284, 1285, 198, 198, 0, 0,
	0, 0, 161, 194, 0, 163, 194, 194, 194, 0,
	194, 194, 170, 171, 194, 173, 174, 175, 176, 177,
	194, 179, 180, 181, 194, 194, 184, 194, 194, 187,
	188, 189, 190, 191, 261, 198, 0, 0, 198, 0,
	0, 535, 0, 0, 0, 0, 540, 541, 542, 543,
	0, 0, 546, 547, 776, 43, 62, 0, 772, 773,
	0, 0, 0, 54, 0, 0, 61, 1775, 47, 0,
	0, 1167, 1170, 1171, 1159, 1160, 1163, 0, 0, 774,
	780, 781, 770, 0, 791, 0, 0, 0, 0, 821,
	0, 823, 824, 825, 826, 0, 909, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 933, 934, 935, 936,
	937, 938, 939, 912, 0, 926, 0, 0, 0, 975,
	976, 977, 978, 979, 980, 0, 779, 0, 0, 0,
	779, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 779, 779, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 779, 0, 0, 0, 779, 0,
	0, 952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 779, 0, 1128, 0, 1039, 1048, 0, 1040,
	1049, 1041, 1050, 1042, 0, 1043, 1051, 1044, 1052, 1045,
	1046, 1053, 1047, 0, 948, 0, 0, 0, 0, 0,
	0, 0, 79, 894, 0, 84, 86, 0, 0, 1690,
	1203, 1204, 509, 1217, 1218, 1219, 0, 1215, 0, 1166,
	776, 614, 0, 391, 0, 0, 403, 498, 416, 417,
	418, 491, 420, 491, 491, 0, 491, 491, 491, 491,
	491, 506, 506, 506, 506, 506, 462, 463, 464, 465,
	466, 0, 0, 439, 491, 491, 491, 443, 481, 482,
	483, 484, 485, 486, 487, 488, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 493, 493, 495, 495,
	495, 495, 495, 0, 0, 596, 0, 1243, 0, 0,
	249, -2, 0, -2, 0, 889, 0, 0, 896, 0,
	0, 110, 279, 265, 109, 0, 243, 248, 244, 245,
	246, 0, 0, 0, 0, 256, 682, 1225, 0, 675,
	75, 676, 677, 678, 679, 680, 258, 681, 895, 1253,
	1254, 0, 689, 732, 0, 734, 0, 0, 847, 694,
	695, 696, 601, 702, 703, 704, 710, 731, 0, 0,
	0, 847, 731, 712, 940, 715, 1056, 0, 739, 751,
	750, 0, 763, 0, 325, 327, 329, 347, 0, 0,
	350, 353, 0, 0, 0, 0, 1276, 0, 1278, 1280,
	0, 0, 199, 200, 201, 0, 193, 0, 216, 264,
	0, 162, 0, 196, 164, 165, 166, 194, 168, 169,
	172, 178, 182, 183, 185, 186, 260, 0, 0, 0,
	0, 159, 0, 536, 537, 538, 539, 548, 545, 779,
	0, 0, 744, 745, 58, 0, 0, 1184, 37, 0,
	1173, 0, 0, 0, 0, 1162, 1164, 1165, 0, 0,
	1147, 0, 0, 782, 775, 40, 906, 907, 908, 910,
	927, 0, 929, 931, 822, 792, 0, 1137, -2, 917,
	918, 942, 943, 944, 0, 0, 0, 0, 940, 922,
	0, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 974, 1070, 1071, 0, 972, 973, 981,
	0, 0, 950, 786, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 948, 945, 0, 1194,
	0, 0, 0, 1021, 0, 0, 957, 1139, 0, 957,
	1139, 0, 0, 0, 0, 0, 0, 0, 1134, 1131,
	0, 0, 1057, 0, 0, 0, 949, 0, 0, 81,
	0, 893, 0, 827, 829, 830, 831, 832, -2, 0,
	836, 0, 899, 946, 1251, -2, 0, 0, 73, 74,
	0, 0, 0, 1201, 0, 0, 0, 89, 90, 85,
	1205, 0, 1211, 1212, 1213, 1137, 0, 1172, 779, 388,
	615, 617, 620, 621, 622, 392, 394, 395, 396, 0,
	-2, 588, 1620, 1667, -2, -2, 580, 1533, -2, -2,
	399, 501, 499, 500, 419, 0, 506, 506, 491, 491,
	491, 491, 448, 506, 451, 454, 455, 509, 0, 509,
	509, 509, 509, 506, 0, 0, 440, 441, 442, 431,
	0, 432, 493, 434, 0, 435, 436, 437, 438, 594,
	595, 0, 0, 0, 95, 0, 104, -2, 516, 517,
	518, 0, 513, 1227, 105, 0, 281, 282, 0, 219,
	0, 250, 251, 112, 0, 0, 266, 0, 387, 0,
	669, 0, 671, 255, 673, 683, 684, 674, 0, 0,
	78, 733, 691, 692, 693, 903, 0, 0, 705, 729,
	730, 728, 731, 709, 723, 0, 0, 716, 0, 752,
	848, 331, 332, 354, 81, 0, 1256, 1275, 0, 1279,
	1281, 0, 202, 204, 0, 153, 0, 0, 195, 0,
	167, 0, 0, 0, 0, 0, 544, 0, 774, 63,
	628, 629, -2, 660, 1235, 660, 660, 646, 563, 660,
	0, 0, 0, 59, 0, 1183, 0, 0, 48, 0,
	1515, 51, 0, 1168, 1169, 1161, 0, 1220, 1221, 1148,
	1149, 96, 783, 928, 930, 932, 0, 948, 919, 940,
	923, 0, 920, 0, 914, 0, 0, 801, 0, 801,
	801, 0, 1007, 0, 1008, 1035, 0, 1020, 801, 801,
	0, 0, 0, 0, 0, 0, 1014, 1015, 1016, 1017,
	801, 801, 801, 801, 0, 0, 0, 801, 801, 801,
	0, 953, -2, 1018, 1019, 0, 0, 0, 0, 0,
	1063, 0, 0, 1064, 1029, 0, 0, 0, 0, 0,
	1158, 0, 1132, 0, 0, 1038, 1058, 1059, 1060, 1061,
	1062, 0, 0, 892, 0, 0, 0, 0, 0, 0,
	871, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 840, 1610, 842, 0, 899, 0, 0,
	0, 948, 903, 0, 903, 903, 80, 0, 898, 87,
	88, 0, 0, 94, 510, 511, 0, 218, 0, 618,
	0, 393, 0, 581, 0, 0, 580, 580, 576, 577,
	580, 579, 580, 571, 581, 572, 0, 404, 0, 406,
	407, 408, 409, 410, 0, 0, 0, 0, 0, 0,
	505, 0, 530, 532, 0, 0, 415, 502, 0, 509,
	509, 506, 446, 447, 491, 452, 509, 456, 473, 0,
	457, 474, 458, 475, 459, 476, 460, 477, 509, 0,
	489, 0, 0, 433, 0, 611, 0, 1244, 97, 0,
	519, 520, 521, 0, 563, 563, 563, 0, 283, 284,
	285, 890, 0, 220, 221, 0, 0, 0, 0, 897,
	122, 0, 280, 0, 0, 0, 0, 0, 0, 0,
	76, 259, 700, 0, 602, 603, 847, 707, 941, 717,
	719, 720, 506, 0, 1277, 0, 0, 0, 0, 0,
	214, 197, 0, 0, 0, 0, 160, 0, 782, 0,
	0, 580, 0, 647, 648, 0, 661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1236, 1237,
	0, 0, 0, 564, 0, 655, 656, 0, 1186, 1185,
	0, 49, 50, 1174, 38, 47, 0, 793, 1138, 0,
	921, 0, 924, 801, 951, 992, 802, 788, 0, 993,
	994, 801, 794, 795, 797, 1009, 996, 997, 1010, 1011,
	1012, 801, 801, 1013, 1001, 1000, 999, 1002, 0, 0,
	801, 1005, 1004, 1006, 988, 0, 491, 491, 1117, 491,
	495, 1120, 491, 1122, 491, 1125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1129, 1037, 1135,
	0, 1188, 0, 0, 0, 1177, 0, 903, 1196, 0,
	0, 828, 862, 864, 0, 859, 872, 873, 875, 0,
	877, 0, 879, 880, 849, 835, 947, 837, 0, 0,
	0, 0, 899, 846, 0, 0, 0, 0, 1158, 903,
	71, 72, 0, 91, 92, 93, 616, 619, 0, 582,
	491, 491, 0, 586, 578, 587, 565, 567, 568, 570,
	0, 405, 0, 0, 413, 414, 503, 0, 529, 531,
	533, 534, 492, 444, 469, 445, 470, 509, 453, 449,
	471, 507, 508, 461, 478, 506, 0, 506, 0, 496,
	0, 598, 612, 0, 0, 0, 95, 563, 0, 0,
	0, 0, 227, 0, 223, 0, 0, 0, 130, 0,
	113, 114, 115, 117, 118, 0, 0, 0, 111, 0,
	268, 0, 271, 272, 670, 672, 904, 731, 1267, 891,
	214, 203, 205, 206, 214, 217, 154, 0, 155, 157,
	0, 156, 549, 96, 630, 0, 657, 0, 0, 1243,
	578, 0, -2, 633, 638, 639, 640, 641, 642, 0,
	653, 0, 635, 0, 657, 0, 650, 0, 0, 0,
	52, 45, 96, 96, 989, 925, 991, 0, 995, 799,
	798, 990, 998, 0, 0, 1003, 1022, 1114, 506, 1118,
	1119, 1121, 1123, 1124, 1126, 1024, 1023, 0, 0, 0,
	0, 1030, 0, 0, 0, 0, 0, 0, 1133, 64,
	0, 1188, 1175, 1190, 1192, 0, 0, 0, 0, -2,
	1461, 0, 853, 1158, 0, 0, 0, 856, 863, 0,
	0, 857, 0, 858, 876, 878, 833, 0, 0, 838,
	0, 0, 0, -2, 845, 0, 0, 0, 855, 1166,
	70, 555, 0, 1163, 1163, 580, 580, 0, 851, 0,
	0, 504, 0, 0, 450, 472, 509, 490, 509, 0,
	0, 613, 0, 95, 97, 0, 524, 525, 526, 527,
	528, 0, 96, 228, 229, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 222, 224, 225, 226, 148, 131,
	132, 0, 0, 0, 0, 123, 124, 0, 0, 0,
	0, 0, 119, 120, 121, 267, 0, 0, 270, 0,
	0, 706, 1269, 1263, 207, 207, 0, 158, 0, 0,
	632, 658, 0, 403, 403, 0, 580, 580, 649, 0,
	1233, 1234, 0, 644, 657, 0, 0, 0, 1187, 903,
	0, 0, 784, 789, 1158, 0, 0, 0, 1115, 1116,
	0, 0, 0, 0, 1031, 1032, 1033, 1065, 1036, 1130,
	0, 65, 0, 1193, -2, 0, 0, 82, 0, 1166,
	1197, 1198, 1199, 860, 0, 865, 0, 0, 0, 899,
	843, 0, 0, 0, 0, 69, 554, 558, 0, 563,
	0, 583, 584, 585, 566, 569, 0, 0, 400, 0,
	467, 479, 468, 480, 494, 497, 0, 102, 0, 522,
	523, 0, 97, 230, 231, 232, 233, 235, 236, 0,
	0, 0, 108, 0, 0, 133, 0, 0, 0, 0,
	143, 144, 145, 146, 147, 125, 126, 127, 128, 129,
	116, 0, 0, 269, 0, 274, 275, 1230, 1271, -2,
	0, 151, 0, 152, 215, 0, 631, 659, 397, 398,
	0, 1243, 0, 634, 643, 645, 0, 652, 0, 1150,
	46, 96, 803, 0, 1054, 1055, 1025, 1027, 1026, 1028,
	0, 0, 0, 0, 1191, 1176, 0, 1180, 0, 854,
	68, 0, 850, 839, 0, 841, 899, 900, 901, 902,
	559, 560, 0, 562, 0, 852, 411, 401, 402, 0,
	556, 95, 0, 55, 237, 238, 239, 240, 149, 150,
	134, 135, 0, 137, 138, 0, 0, 0, 277, 0,
	273, 849, 0, 1263, 0, 1265, 0, 1262, 0, 208,
	903, 0, 0, 0, 651, 0, 663, 0, 1155, 0,
	785, 0, 0, 0, 800, 1034, 0, 0, 0, 0,
	1179, 0, 861, 0, 844, 561, 0, 400, 101, 557,
	103, 286, 95, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 0, 0, 0, 55, 0, 139, 0,
	141, 142, 276, 0, 36, 0, 1270, 0, 1268, 0,
	0, 1264, 0, 1150, 556, 0, 0, 662, 0, 0,
	813, 0, 0, 796, 804, 0, 807, 0, 0, 0,
	818, 0, 805, 1066, 0, 1069, 1189, -2, 0, 882,
	0, 0, 412, 95, 0, 0, 107, 0, 0, 1245,
	0, 0, 313, 314, 315, 1247, 0, 355, 136, 140,
	278, 1231, 1232, 1272, 0, 0, 0, 1155, 636, 0,
	556, 664, 0, 44, 0, 1156, 1157, 1151, 1152, 1154,
	0, 808, 809, 810, 811, 812, 0, 1067, 0, 0,
	0, 0, 97, 287, 288, 0, 297, 0, 55, 0,
	0, 0, 311, 0, 55, 1266, 1260, 209, 210, 211,
	213, 813, 556, 654, 0, 814, 815, 0, 0, 0,
	819, 0, 0, 883, 884, 0, 0, 589, 55, 0,
	55, 298, 0, 0, 0, 0, 0, 0, 1248, 241,
	356, 0, 42, 637, 0, 0, 0, 1153, 806, 0,
	0, 0, 0, 590, 591, 0, 95, 289, 290, 291,
	292, 293, 55, 56, 295, 0, 55, 55, 307, 308,
	309, 55, 316, 318, 319, 320, 0, 322, 323, 312,
	212, 0, 816, 817, 1068, 881, 885, 0, 0, 886,
	592, 0, 593, 0, 0, 0, 106, 0, 55, 0,
	0, 55, 0, 304, 0, 310, 0, 321, 0, 0,
	0, 0, 604, 606, 607, 0, 0, 605, 55, 0,
	-2, 300, 0, 0, 55, 305, 0, 317, 665, 666,
	887, 0, 608, 609, 610, 294, 296, 55, 302, 0,
	55, 888, 0, 55, 0, 301, 0, -2, 303,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 556,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:520
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:524
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:566
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:572
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:578
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:589
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:595
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:605
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:616
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:623
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:629
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:637
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:641
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:650
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:654
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:658
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:662
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:668
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:672
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:678
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:682
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:687
		{
			yyVAL.with = nil
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			yyVAL.with = yyDollar[1].with
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:697
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:701
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:707
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:721
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:735
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 64:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:741
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:754
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.str = InsertStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			yyVAL.str = ReplaceStr
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:776
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:782
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:786
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:790
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:794
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:804
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:808
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:818
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:824
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:828
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:833
		{
			yyVAL.partitions = nil
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:837
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:843
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:847
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:854
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:867
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:873
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:877
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:881
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:887
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:891
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:895
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:899
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:904
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:909
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:914
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:929
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:934
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:939
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:943
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 103:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:949
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:955
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:963
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:971
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 107:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:975
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:979
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:998
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1007
		{
			yyVAL.accountNames = nil
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1016
		{
			yyVAL.tlsOptionItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1020
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1034
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1040
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1044
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1048
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1061
		{
			yyVAL.accountLimitItems = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1071
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1098
		{
			yyVAL.passLockItems = nil
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1108
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1122
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1126
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1130
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1138
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1142
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1146
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1150
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1154
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1158
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1162
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1175
		{
			yyVAL.str = ""
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1190
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1195
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1199
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1203
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1209
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1214
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1218
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1222
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1226
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1230
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1260
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1268
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1276
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1284
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1292
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1366
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1371
		{
			yyVAL.strs = nil
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1381
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1390
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1408
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1416
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1429
		{
			yyVAL.grantAssumption = nil
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1433
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1437
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1441
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1445
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1449
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1453
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1458
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1467
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1471
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1478
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1490
		{
			yyVAL.procedureParams = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1504
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1510
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1527
		{
			yyVAL.characteristics = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1541
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1551
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1555
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1571
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1575
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1589
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1599
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1655
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1691
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1723
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1727
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1731
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1735
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1741
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1753
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1757
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1761
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1767
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1775
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1785
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = BeforeStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = AfterStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = InsertStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = UpdateStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = DeleteStr
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1814
		{
			yyVAL.triggerOrder = nil
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1844
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 296:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1848
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1858
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1864
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 300:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1870
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1875
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1880
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1886
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1904
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1910
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1914
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1918
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1922
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1926
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1930
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1955
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1961
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1991
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1999
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2019
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2025
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.statement = &Resignal{}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2093
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2101
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2107
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2112
		{
			yyVAL.exprs = nil
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.exprs = nil
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2120
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2171
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2187
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2214
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2273
		{
			yyVAL.columnType = ColumnType{}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2277
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2286
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2295
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2313
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2340
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2349
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			opt := ColumnType{Path: string(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2378
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2389
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2416
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2454
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2635
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2639
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2647
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2651
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2655
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2659
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2699
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2704
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2709
		{
			yyVAL.sqlVal = nil
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2718
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2722
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2730
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2734
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2740
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2748
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2761
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2765
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2771
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2777
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2783
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2788
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2792
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2796
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2801
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2805
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2809
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2814
		{
			yyVAL.boolean = false
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.boolean = true
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2823
		{
			yyVAL.charsetCollates = nil
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2845
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2853
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2859
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2863
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2867
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2871
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2877
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2881
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2887
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.colKeyOpt = colKey
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2901
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2921
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2947
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2951
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2963
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2971
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2976
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2987
		{
			yyVAL.str = ""
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2989
		{
			yyVAL.str = yyDollar[1].str
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2993
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2997
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3002
		{
			yyVAL.indexOptions = nil
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3022
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3026
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3031
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3037
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3041
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3053
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3061
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3065
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3078
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3111
		{
			yyVAL.str = ""
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3115
		{
			yyVAL.str = yyDollar[1].str
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3120
		{
			yyVAL.str = ""
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3140
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3144
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3150
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3154
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 589:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3164
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 590:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3168
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 591:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3172
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 592:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3176
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 593:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3180
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3186
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3190
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3194
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3204
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3214
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3219
		{
			yyVAL.str = ""
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3223
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3227
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3233
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3239
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3245
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3249
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3253
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3257
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3261
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3266
		{
			yyVAL.boolean = true
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.boolean = true
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3274
		{
			yyVAL.boolean = false
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3279
		{
			yyVAL.str = ""
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.str = yyDollar[1].str
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3299
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3303
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3309
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3322
		{
			yyVAL.str = ""
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3326
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3331
		{
			yyVAL.str = string("")
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3335
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3344
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3357
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3361
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3367
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3374
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3381
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3385
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 636:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3394
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 637:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3398
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3402
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3407
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3412
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3417
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3426
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3430
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3437
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3447
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3459
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3464
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 651:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3468
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3472
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 654:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3482
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3488
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3492
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3497
		{
			yyVAL.columnOrder = nil
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3501
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3505
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3510
		{
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
		}
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3516
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3526
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 665:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3532
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 666:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3536
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3542
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3556
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3564
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3568
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3574
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3582
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3586
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3594
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3602
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3610
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3618
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3626
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3634
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3643
		{

		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3657
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3667
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3678
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3682
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3686
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3690
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3694
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3699
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3707
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3719
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3723
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3727
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3731
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3735
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3739
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3743
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 706:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3747
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 707:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3752
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3757
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3761
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3765
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3769
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3773
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3787
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3791
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3796
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3800
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 719:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3809
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3813
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3817
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3821
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3827
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3833
		{
			yyVAL.boolean = false
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.boolean = true
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3861
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3867
		{
			yyVAL.showFilter = nil
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3871
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3875
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3879
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = SessionStr
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.str = GlobalStr
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3899
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3903
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.statement = &Begin{}
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3923
		{
			yyVAL.statement = &Begin{}
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3927
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3931
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.statement = &Commit{}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.statement = &Rollback{}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3949
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3955
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3959
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3963
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3967
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3973
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3983
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3987
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4001
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4005
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4016
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4022
		{
			setAllowComments(yylex, true)
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4026
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4032
		{
			yyVAL.bytes2 = nil
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4036
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.str = UnionStr
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = UnionAllStr
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4050
		{
			yyVAL.str = UnionDistinctStr
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4055
		{
			yyVAL.byt = 0
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.byt = 1
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4064
		{
			yyVAL.str = ""
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4072
		{
			yyVAL.str = SQLCacheStr
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4077
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4081
		{
			yyVAL.str = ""
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.str = DistinctStr
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4090
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4094
		{
			yyVAL.str = StraightJoinHint
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4100
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4108
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4127
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4131
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4141
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4145
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4149
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4159
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4165
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4170
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4178
		{
			yyVAL.exprs = nil
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4182
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4187
		{
			yyVAL.over = nil
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.over = yyDollar[1].over
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4196
		{
			yyVAL.frame = nil
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4200
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4204
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4211
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4249
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4253
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4257
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4261
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4276
		{
			yyVAL.window = nil
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.window = yyDollar[2].window
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4285
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4294
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4307
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4312
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4316
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4320
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4330
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4363
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4379
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4392
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4396
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4402
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4407
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4418
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4422
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 844:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4426
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4430
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4434
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4445
		{
			yyVAL.expr = nil
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4449
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4454
		{
			yyVAL.columns = nil
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4458
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4478
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4484
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4498
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4502
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 858:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4506
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4518
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4522
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4528
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4530
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4533
		{
			yyVAL.empty = struct{}{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4535
		{
			yyVAL.empty = struct{}{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = JoinStr
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = JoinStr
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4558
		{
			yyVAL.str = JoinStr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = StraightJoinStr
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = LeftJoinStr
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = LeftJoinStr
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4578
		{
			yyVAL.str = RightJoinStr
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4582
		{
			yyVAL.str = RightJoinStr
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4588
		{
			yyVAL.str = NaturalJoinStr
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4592
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 881:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4602
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].bytes, Path: string(yyDollar[5].bytes), Columns: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4613
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4621
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4633
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4637
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4644
		{

		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4648
		{

		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4677
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4683
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4689
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4699
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4703
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4713
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4724
		{
			yyVAL.indexHints = nil
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4728
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4732
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4736
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4741
		{
			yyVAL.expr = nil
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4745
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4755
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4759
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4763
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4771
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4779
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4785
		{
			yyVAL.str = ""
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4809
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4813
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4817
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 921:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4821
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4829
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4833
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4837
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4841
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.str = IsNullStr
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = IsNotNullStr
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.str = IsTrueStr
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4859
		{
			yyVAL.str = IsNotTrueStr
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4863
		{
			yyVAL.str = IsFalseStr
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4867
		{
			yyVAL.str = IsNotFalseStr
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.str = EqualStr
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4877
		{
			yyVAL.str = LessThanStr
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4881
		{
			yyVAL.str = GreaterThanStr
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4885
		{
			yyVAL.str = LessEqualStr
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4889
		{
			yyVAL.str = GreaterEqualStr
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = NotEqualStr
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4902
		{
			yyVAL.expr = nil
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4906
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4926
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4932
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4936
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4942
		{
			yyVAL.selectExprs = nil
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4949
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4953
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4959
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4963
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4969
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4973
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4977
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4981
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4993
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4997
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5005
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5009
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5017
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5021
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5025
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5029
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5033
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5037
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5041
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5045
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5049
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5053
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5057
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5061
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5069
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5091
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5125
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5129
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5133
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5137
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5141
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5145
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5149
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5153
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5157
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5161
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5165
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5169
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5173
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5177
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5181
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5185
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5189
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5210
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5218
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5222
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5226
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5230
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5234
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5238
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5249
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5253
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5257
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5261
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5265
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5269
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5273
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5277
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5281
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5285
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5289
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5293
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1030:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5297
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1031:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5301
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1032:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5305
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1033:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5309
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1034:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5313
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5317
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1036:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5321
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5325
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5329
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5339
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5343
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5347
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5352
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5357
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5362
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5373
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5377
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5382
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5386
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5390
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5395
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5400
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5405
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1054:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5409
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1055:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5413
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5424
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5434
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5438
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5442
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5446
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5450
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5454
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5460
		{
			yyVAL.str = ""
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5464
		{
			yyVAL.str = BooleanModeStr
		}
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5468
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1068:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5472
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5476
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5482
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5492
		{
			yyVAL.str = Armscii8Str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5496
		{
			yyVAL.str = AsciiStr
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5500
		{
			yyVAL.str = Big5Str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5504
		{
			yyVAL.str = UBinaryStr
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5508
		{
			yyVAL.str = Cp1250Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5512
		{
			yyVAL.str = Cp1251Str
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5516
		{
			yyVAL.str = Cp1256Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5520
		{
			yyVAL.str = Cp1257Str
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5524
		{
			yyVAL.str = Cp850Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5528
		{
			yyVAL.str = Cp852Str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5532
		{
			yyVAL.str = Cp866Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5536
		{
			yyVAL.str = Cp932Str
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5540
		{
			yyVAL.str = Dec8Str
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5544
		{
			yyVAL.str = EucjpmsStr
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5548
		{
			yyVAL.str = EuckrStr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5552
		{
			yyVAL.str = Gb18030Str
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5556
		{
			yyVAL.str = Gb2312Str
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.str = GbkStr
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5564
		{
			yyVAL.str = Geostd8Str
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5568
		{
			yyVAL.str = GreekStr
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5572
		{
			yyVAL.str = HebrewStr
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5576
		{
			yyVAL.str = Hp8Str
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5580
		{
			yyVAL.str = Keybcs2Str
		}
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.str = Koi8rStr
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5588
		{
			yyVAL.str = Koi8uStr
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5592
		{
			yyVAL.str = Latin1Str
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5596
		{
			yyVAL.str = Latin2Str
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.str = Latin5Str
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5604
		{
			yyVAL.str = Latin7Str
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5608
		{
			yyVAL.str = MacceStr
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5612
		{
			yyVAL.str = MacromanStr
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5616
		{
			yyVAL.str = SjisStr
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5620
		{
			yyVAL.str = Swe7Str
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5624
		{
			yyVAL.str = Tis620Str
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.str = Ucs2Str
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5632
		{
			yyVAL.str = UjisStr
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5636
		{
			yyVAL.str = Utf16Str
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5640
		{
			yyVAL.str = Utf16leStr
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5644
		{
			yyVAL.str = Utf32Str
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5652
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5662
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5666
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5670
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5678
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5682
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5688
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5692
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5696
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5700
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5704
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5708
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5712
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5717
		{
			yyVAL.expr = nil
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = string("")
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5730
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5736
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5740
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5746
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5751
		{
			yyVAL.expr = nil
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5755
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5765
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5769
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5775
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5779
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5783
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5787
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5791
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5795
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5799
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5803
		{
			yyVAL.expr = &NullVal{}
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5809
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5813
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5817
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5822
		{
			yyVAL.exprs = nil
		}
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5826
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5832
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5836
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5842
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5847
		{
			yyVAL.expr = nil
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5851
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5857
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5862
		{
			yyVAL.orderBy = nil
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5866
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5872
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5876
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5882
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5887
		{
			yyVAL.str = AscScr
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5891
		{
			yyVAL.str = AscScr
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5895
		{
			yyVAL.str = DescScr
		}
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5900
		{
			yyVAL.limit = nil
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5904
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5908
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5912
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5918
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5922
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5927
		{
			yyVAL.str = ""
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5931
		{
			yyVAL.str = ForUpdateStr
		}
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5935
		{
			yyVAL.str = ShareModeStr
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5948
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5952
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5956
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5960
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1179:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5965
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5969
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5973
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5979
		{
			yyVAL.columns = nil
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5983
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5993
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5997
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6001
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6006
		{
			yyVAL.assignExprs = nil
		}
	case 1189:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6010
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6016
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6020
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6026
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6030
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6036
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6052
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6056
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6062
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6065
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6071
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6081
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6092
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6105
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6118
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6124
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6128
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6134
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6138
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6142
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6148
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6152
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6156
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6163
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6170
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6174
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6178
		{
			yyVAL.expr = &Default{}
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6187
		{
			yyVAL.byt = 0
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6189
		{
			yyVAL.byt = 1
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6192
		{
			yyVAL.byt = 0
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6194
		{
			yyVAL.byt = 1
		}
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6197
		{
			yyVAL.byt = 0
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6199
		{
			yyVAL.byt = 1
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6202
		{
			yyVAL.str = ""
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6204
		{
			yyVAL.str = IgnoreStr
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6207
		{
			yyVAL.sqlVal = nil
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6209
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6211
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6215
		{
			yyVAL.empty = struct{}{}
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6217
		{
			yyVAL.empty = struct{}{}
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6220
		{
			yyVAL.empty = struct{}{}
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.empty = struct{}{}
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6224
		{
			yyVAL.empty = struct{}{}
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6228
		{
			yyVAL.str = UniqueStr
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6230
		{
			yyVAL.str = FulltextStr
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6232
		{
			yyVAL.str = SpatialStr
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6235
		{
			yyVAL.str = ""
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6237
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6240
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6242
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6246
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6250
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6256
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6260
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6267
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6273
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6277
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6284
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6289
		{
			yyVAL.str = string("")
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6291
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6294
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6296
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6299
		{
			yyVAL.EnclosedBy = nil
		}
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6303
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6308
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6312
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6317
		{
			yyVAL.sqlVal = nil
		}
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6321
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6326
		{
			yyVAL.sqlVal = nil
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6330
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6335
		{
			yyVAL.Fields = nil
		}
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6339
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6344
		{
			yyVAL.Lines = nil
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6348
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6353
		{
			yyVAL.sqlVal = nil
		}
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6357
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6369
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6373
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6379
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6383
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6389
		{
			yyVAL.lockType = LockRead
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6393
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6397
		{
			yyVAL.lockType = LockWrite
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6401
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6407
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6413
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6417
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6421
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6946
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6955
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
