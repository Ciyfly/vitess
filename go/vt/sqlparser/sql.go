// Code generated by goyacc -v y.output -o sql.go sql.y. DO NOT EDIT.

//line sql.y:17

package sqlparser

import __yyfmt__ "fmt"

//line sql.y:19

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const SRID = 57730
const COLLATION = 57731
const DATABASES = 57732
const SCHEMAS = 57733
const TABLES = 57734
const FULL = 57735
const PROCESSLIST = 57736
const COLUMNS = 57737
const FIELDS = 57738
const ENGINES = 57739
const PLUGINS = 57740
const NAMES = 57741
const CHARSET = 57742
const GLOBAL = 57743
const SESSION = 57744
const ISOLATION = 57745
const LEVEL = 57746
const READ = 57747
const WRITE = 57748
const ONLY = 57749
const REPEATABLE = 57750
const COMMITTED = 57751
const UNCOMMITTED = 57752
const SERIALIZABLE = 57753
const ENCRYPTION = 57754
const CURRENT_TIMESTAMP = 57755
const DATABASE = 57756
const CURRENT_DATE = 57757
const CURRENT_USER = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const UTC_DATE = 57762
const UTC_TIME = 57763
const UTC_TIMESTAMP = 57764
const REPLACE = 57765
const CONVERT = 57766
const CAST = 57767
const SUBSTR = 57768
const SUBSTRING = 57769
const TRIM = 57770
const LEADING = 57771
const TRAILING = 57772
const BOTH = 57773
const GROUP_CONCAT = 57774
const SEPARATOR = 57775
const TIMESTAMPADD = 57776
const TIMESTAMPDIFF = 57777
const OVER = 57778
const WINDOW = 57779
const GROUPING = 57780
const CURRENT = 57781
const AVG = 57782
const BIT_AND = 57783
const BIT_OR = 57784
const BIT_XOR = 57785
const COUNT = 57786
const JSON_ARRAYAGG = 57787
const JSON_OBJECTAGG = 57788
const MAX = 57789
const MIN = 57790
const STDDEV_POP = 57791
const STDDEV = 57792
const STD = 57793
const STDDEV_SAMP = 57794
const SUM = 57795
const VAR_POP = 57796
const VARIANCE = 57797
const VAR_SAMP = 57798
const CUME_DIST = 57799
const DENSE_RANK = 57800
const FIRST_VALUE = 57801
const LAG = 57802
const LAST_VALUE = 57803
const LEAD = 57804
const NTH_VALUE = 57805
const NTILE = 57806
const ROW_NUMBER = 57807
const PERCENT_RANK = 57808
const RANK = 57809
const MATCH = 57810
const AGAINST = 57811
const BOOLEAN = 57812
const LANGUAGE = 57813
const WITH = 57814
const QUERY = 57815
const EXPANSION = 57816
const ACCESSIBLE = 57817
const ASENSITIVE = 57818
const CUBE = 57819
const DAY_HOUR = 57820
const DAY_MICROSECOND = 57821
const DAY_MINUTE = 57822
const DAY_SECOND = 57823
const DISTINCTROW = 57824
const DUAL = 57825
const FETCH = 57826
const FLOAT4 = 57827
const FLOAT8 = 57828
const GET = 57829
const HIGH_PRIORITY = 57830
const HOUR_MICROSECOND = 57831
const HOUR_MINUTE = 57832
const HOUR_SECOND = 57833
const INSENSITIVE = 57834
const INT1 = 57835
const INT2 = 57836
const INT3 = 57837
const INT4 = 57838
const INT8 = 57839
const IO_AFTER_GTIDS = 57840
const IO_BEFORE_GTIDS = 57841
const ITERATE = 57842
const LEAVE = 57843
const LINEAR = 57844
const LOOP = 57845
const MASTER_BIND = 57846
const MASTER_SSL_VERIFY_SERVER_CERT = 57847
const PURGE = 57848
const READ_WRITE = 57849
const RETURN = 57850
const RLIKE = 57851
const SECOND_MICROSECOND = 57852
const SENSITIVE = 57853
const SPECIFIC = 57854
const SQL_BIG_RESULT = 57855
const SQL_SMALL_RESULT = 57856
const VARCHARACTER = 57857
const WHILE = 57858
const YEAR_MONTH = 57859
const UNUSED = 57860
const DESCRIPTION = 57861
const EMPTY = 57862
const JSON_TABLE = 57863
const LATERAL = 57864
const MEMBER = 57865
const RECURSIVE = 57866
const BUCKETS = 57867
const CLONE = 57868
const COMPONENT = 57869
const DEFINITION = 57870
const ENFORCED = 57871
const EXCLUDE = 57872
const GEOMCOLLECTION = 57873
const GET_MASTER_PUBLIC_KEY = 57874
const HISTOGRAM = 57875
const HISTORY = 57876
const INACTIVE = 57877
const INVISIBLE = 57878
const LOCKED = 57879
const MASTER_COMPRESSION_ALGORITHMS = 57880
const MASTER_PUBLIC_KEY_PATH = 57881
const MASTER_TLS_CIPHERSUITES = 57882
const MASTER_ZSTD_COMPRESSION_LEVEL = 57883
const NESTED = 57884
const NETWORK_NAMESPACE = 57885
const NOWAIT = 57886
const NULLS = 57887
const OJ = 57888
const OLD = 57889
const ORDINALITY = 57890
const ORGANIZATION = 57891
const OTHERS = 57892
const PATH = 57893
const PERSIST = 57894
const PERSIST_ONLY = 57895
const PRIVILEGE_CHECKS_USER = 57896
const PROCESS = 57897
const REFERENCE = 57898
const REQUIRE_ROW_FORMAT = 57899
const RESOURCE = 57900
const RESPECT = 57901
const RESTART = 57902
const RETAIN = 57903
const SECONDARY = 57904
const SECONDARY_ENGINE = 57905
const SECONDARY_LOAD = 57906
const SECONDARY_UNLOAD = 57907
const SKIP = 57908
const THREAD_PRIORITY = 57909
const TIES = 57910
const VCPU = 57911
const VISIBLE = 57912
const SYSTEM = 57913
const INFILE = 57914
const ACTIVE = 57915
const AGGREGATE = 57916
const ANY = 57917
const ARRAY = 57918
const ASCII = 57919
const AT = 57920
const AUTOEXTEND_SIZE = 57921
const ENDS = 57922
const EVENTS = 57923
const GENERATED = 57924
const ALWAYS = 57925
const STORED = 57926
const VIRTUAL = 57927
const NVAR = 57928
const PASSWORD_LOCK = 57929

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DISTINCTROW",
	"DUAL",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"PURGE",
	"READ_WRITE",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 58,
	-2, 1137,
	-1, 43,
	189, 1201,
	190, 1220,
	-2, 245,
	-1, 49,
	228, 722,
	229, 722,
	-2, 711,
	-1, 470,
	177, 1231,
	-2, 1224,
	-1, 471,
	177, 1232,
	-2, 1225,
	-1, 632,
	100, 1613,
	177, 1613,
	-2, 1185,
	-1, 633,
	100, 1712,
	177, 1712,
	-2, 1186,
	-1, 638,
	100, 1633,
	177, 1633,
	-2, 1187,
	-1, 639,
	100, 1675,
	177, 1675,
	-2, 1188,
	-1, 640,
	100, 1676,
	177, 1676,
	-2, 1189,
	-1, 641,
	100, 1557,
	177, 1557,
	-2, 1193,
	-1, 643,
	100, 1656,
	177, 1656,
	-2, 1195,
	-1, 989,
	1, 821,
	5, 821,
	12, 821,
	13, 821,
	14, 821,
	15, 821,
	17, 821,
	19, 821,
	29, 821,
	30, 821,
	56, 821,
	57, 821,
	58, 821,
	59, 821,
	60, 821,
	62, 821,
	63, 821,
	66, 821,
	67, 821,
	69, 821,
	70, 821,
	87, 821,
	455, 821,
	606, 821,
	-2, 853,
	-1, 995,
	67, 75,
	69, 75,
	-2, 79,
	-1, 1090,
	1, 499,
	606, 499,
	-2, 497,
	-1, 1092,
	1, 499,
	606, 499,
	-2, 497,
	-1, 1526,
	177, 1234,
	-2, 1230,
	-1, 1692,
	44, 565,
	-2, 1569,
	-1, 1749,
	1, 500,
	606, 500,
	-2, 497,
	-1, 1833,
	44, 608,
	196, 610,
	198, 608,
	199, 608,
	-2, 647,
	-1, 1883,
	5, 59,
	-2, 924,
	-1, 2226,
	69, 1462,
	70, 1462,
	177, 1462,
	-2, 754,
	-1, 2249,
	1, 878,
	5, 878,
	12, 878,
	13, 878,
	14, 878,
	15, 878,
	17, 878,
	19, 878,
	29, 878,
	30, 878,
	56, 878,
	57, 878,
	58, 878,
	59, 878,
	60, 878,
	62, 878,
	63, 878,
	66, 878,
	67, 878,
	69, 878,
	70, 878,
	87, 878,
	455, 878,
	606, 878,
	-2, 853,
	-1, 2361,
	196, 611,
	-2, 609,
	-1, 2424,
	5, 59,
	-2, 1157,
	-1, 2638,
	41, 1241,
	-2, 1239,
	-1, 2737,
	5, 59,
	-2, 1160,
	-1, 2830,
	278, 311,
	-2, 1292,
	-1, 2831,
	278, 312,
	-2, 1332,
	-1, 2832,
	278, 313,
	-2, 1493,
}

const yyPrivate = 57344

const yyLast = 40315

var yyAct = [...]int{
	509, 80, 2938, 2055, 2964, 2971, 2920, 2835, 2921, 2891,
	679, 2940, 2812, 2856, 397, 2196, 2741, 2871, 2851, 2834,
	2749, 7, 2748, 6, 2747, 5, 2305, 2803, 2436, 473,
	2723, 1025, 471, 2725, 2579, 2683, 2750, 8, 2810, 2638,
	1978, 917, 2243, 1948, 2151, 1744, 476, 1225, 462, 2497,
	2263, 916, 1650, 1702, 2521, 2746, 3, 2322, 1644, 2137,
	1684, 2219, 1768, 2640, 2491, 2475, 2220, 2264, 2150, 380,
	383, 455, 2742, 1999, 488, 2003, 1125, 422, 422, 695,
	129, 80, 428, 129, 1502, 2355, 1648, 2071, 1693, 129,
	508, 1495, 83, 712, 1949, 443, 1683, 2216, 2345, 425,
	425, 1735, 93, 1832, 2203, 736, 1682, 106, 1862, 2228,
	2235, 1222, 129, 1551, 1569, 2167, 1719, 1795, 1510, 2116,
	1172, 1689, 1143, 129, 1678, 1600, 1627, 129, 657, 1752,
	1731, 652, 453, 2004, 2046, 1101, 454, 1751, 637, 2204,
	841, 1750, 634, 1006, 1634, 1592, 989, 129, 425, 1528,
	657, 848, 986, 765, 1812, 844, 744, 985, 129, 1748,
	1005, 651, 630, 631, 862, 458, 626, 442, 1177, 400,
	480, 852, 399, 604, 1672, 662, 743, 1093, 623, 667,
	102, 98, 1096, 85, 997, 3003, 1124, 2999, 2994, 2979,
	2977, 935, 678, 2959, 2933, 2879, 82, 2685, 2684, 2278,
	1170, 2462, 2303, 2476, 2617, 2950, 36, 36, 936, 392,
	655, 36, 36, 2478, 72, 39, 40, 2808, 2918, 2731,
	2615, 87, 88, 89, 90, 91, 2894, 36, 1781, 415,
	1943, 409, 420, 403, 2630, 2618, 478, 2795, 2017, 1781,
	2083, 2319, 2807, 2020, 2188, 2703, 2730, 2564, 1944, 2816,
	452, 2816, 1646, 410, 2852, 1919, 2414, 661, 1176, 2025,
	2024, 69, 1811, 440, 2259, 2260, 1173, 2811, 81, 81,
	2258, 2361, 1987, 81, 81, 1986, 834, 664, 1988, 669,
	670, 2021, 1174, 1175, 1007, 2813, 1008, 2813, 672, 81,
	1669, 1670, 1218, 1219, 1668, 1193, 2027, 715, 2010, 2666,
	716, 717, 793, 391, 390, 2029, 2011, 878, 877, 887,
	888, 880, 881, 882, 883, 884, 885, 886, 879, 801,
	1810, 889, 432, 72, 39, 40, 762, 566, 2481, 572,
	574, 573, 570, 571, 569, 568, 567, 452, 1704, 1705,
	2546, 1707, 1707, 1725, 41, 1720, 1720, 2401, 575, 576,
	2817, 1732, 2817, 2399, 2354, 647, 1156, 374, 2356, 1571,
	1711, 1713, 726, 1712, 2062, 722, 389, 394, 2479, 2480,
	2482, 2483, 2484, 439, 2113, 1214, 1213, 80, 80, 129,
	1212, 433, 1211, 1210, 120, 116, 117, 1209, 118, 797,
	798, 619, 2078, 777, 2492, 808, 2105, 731, 809, 733,
	658, 732, 2495, 402, 401, 404, 2498, 2499, 2500, 2501,
	2911, 2023, 2783, 408, 2026, 2837, 2493, 2494, 2643, 452,
	122, 121, 2344, 129, 2110, 1823, 2836, 2329, 468, 734,
	412, 2785, 730, 454, 416, 2707, 830, 723, 724, 2509,
	2356, 2517, 1824, 2320, 838, 2844, 2705, 464, 419, 2323,
	2324, 2325, 2326, 2327, 1204, 2634, 2082, 699, 700, 2332,
	1769, 703, 2080, 2507, 2697, 452, 2968, 777, 2876, 2612,
	898, 2616, 2935, 900, 129, 2874, 2875, 2610, 123, 1099,
	124, 713, 612, 714, 716, 717, 1082, 384, 381, 607,
	110, 613, 2609, 701, 702, 108, 2608, 865, 2607, 605,
	2606, 910, 911, 912, 913, 914, 113, 2604, 915, 668,
	919, 375, 2605, 610, 614, 2323, 2324, 2325, 2326, 2327,
	114, 608, 609, 611, 616, 692, 617, 618, 2822, 2823,
	385, 1108, 1109, 1107, 99, 800, 2693, 2694, 1763, 1764,
	108, 2862, 2744, 2438, 1969, 405, 406, 407, 413, 1183,
	417, 418, 421, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 454, 934, 937, 937, 937,
	943, 937, 937, 943, 937, 943, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 2060, 666, 665, 2689, 2096,
	2097, 2477, 2699, 115, 711, 658, 2022, 1759, 827, 708,
	2944, 2019, 990, 2939, 707, 393, 2914, 1595, 119, 2682,
	1157, 2814, 668, 2814, 101, 2889, 727, 810, 868, 2942,
	377, 1720, 1176, 776, 112, 111, 1758, 73, 1734, 2346,
	2061, 2036, 1710, 129, 129, 129, 2929, 447, 2302, 2081,
	1817, 448, 2063, 2704, 449, 450, 1174, 1175, 382, 657,
	451, 2729, 2633, 709, 710, 378, 2331, 637, 2613, 2667,
	984, 422, 637, 787, 1699, 1103, 998, 382, 108, 2784,
	79, 79, 657, 129, 2989, 79, 79, 829, 109, 113,
	422, 698, 425, 425, 1126, 836, 425, 1178, 2631, 899,
	658, 79, 2168, 129, 2084, 2360, 129, 2580, 2975, 2522,
	2523, 425, 425, 658, 129, 2122, 3004, 1699, 103, 382,
	104, 2582, 3001, 129, 129, 129, 129, 129, 2698, 777,
	1019, 2995, 1180, 2709, 447, 1179, 1102, 2980, 448, 110,
	1106, 449, 450, 663, 425, 681, 73, 451, 129, 938,
	940, 942, 944, 946, 948, 949, 951, 658, 1653, 1655,
	1024, 2532, 615, 1010, 1128, 438, 939, 941, 1011, 945,
	947, 773, 950, 1023, 422, 2533, 2267, 1139, 1140, 1141,
	1142, 658, 2104, 2170, 606, 1699, 411, 2101, 1151, 2086,
	2085, 996, 1168, 1818, 1113, 425, 425, 425, 1111, 1001,
	657, 728, 1747, 660, 1976, 2018, 1701, 849, 1202, 382,
	1778, 1701, 1975, 1974, 659, 1777, 447, 870, 2941, 2943,
	448, 80, 1020, 449, 450, 2099, 1147, 833, 1148, 451,
	425, 671, 1089, 1088, 346, 425, 425, 1104, 2007, 1895,
	2581, 1186, 1105, 901, 902, 2392, 2380, 2103, 993, 1115,
	2102, 1991, 1701, 784, 1122, 1084, 129, 1130, 129, 918,
	1123, 657, 447, 2536, 1132, 1133, 448, 1983, 100, 449,
	450, 725, 1216, 1886, 1867, 451, 454, 1848, 1762, 129,
	1208, 1760, 2973, 1701, 1892, 2974, 865, 2972, 1654, 1223,
	2134, 80, 1505, 112, 111, 772, 1018, 1003, 903, 904,
	905, 906, 907, 908, 909, 1160, 1161, 1526, 869, 1163,
	919, 691, 1701, 782, 933, 2702, 2598, 2469, 2340, 815,
	1524, 1555, 1556, 1673, 879, 1166, 2467, 889, 889, 1181,
	2172, 2531, 657, 1185, 1182, 2176, 1664, 2171, 1153, 2169,
	2292, 2863, 2864, 783, 2174, 779, 454, 2860, 2861, 1184,
	2620, 1700, 2724, 1529, 2839, 2560, 1700, 2173, 1498, 2734,
	2733, 1567, 2142, 1578, 1581, 454, 861, 1203, 1628, 2138,
	1206, 1594, 2175, 2177, 96, 657, 657, 2599, 2470, 780,
	781, 1647, 474, 1215, 1523, 1656, 2621, 2468, 990, 1207,
	2233, 2232, 990, 1220, 1840, 1834, 1835, 1700, 1833, 1836,
	1837, 2293, 1144, 2129, 2122, 129, 901, 902, 2126, 1165,
	1787, 2125, 2128, 129, 825, 129, 2537, 1016, 1521, 95,
	129, 129, 860, 858, 129, 129, 129, 868, 1700, 735,
	2840, 674, 697, 705, 1843, 2122, 454, 673, 1535, 658,
	861, 637, 2123, 1699, 657, 657, 1659, 1131, 1842, 1841,
	1661, 901, 902, 1533, 1534, 1532, 1526, 1700, 718, 94,
	2133, 2190, 445, 858, 2130, 1606, 1593, 1608, 1149, 1677,
	2993, 839, 1558, 1559, 1560, 1561, 1562, 1563, 1652, 2930,
	861, 1679, 1643, 887, 888, 880, 881, 882, 883, 884,
	885, 886, 879, 1590, 821, 889, 2872, 1091, 2900, 1530,
	2899, 1145, 2983, 2965, 2982, 1706, 859, 860, 858, 1788,
	918, 2895, 1657, 680, 2997, 1775, 820, 816, 817, 818,
	819, 822, 823, 824, 826, 861, 437, 129, 696, 2508,
	369, 452, 706, 129, 129, 425, 425, 425, 2502, 1150,
	129, 2538, 1806, 943, 1690, 1593, 1698, 1908, 1721, 1722,
	1723, 1724, 1998, 1496, 720, 2276, 2990, 1666, 1665, 1662,
	1671, 1890, 855, 1889, 1864, 1865, 1866, 129, 129, 129,
	1737, 1738, 1739, 1740, 1687, 2383, 1680, 2788, 1507, 1773,
	1774, 2881, 859, 860, 858, 1803, 2780, 882, 883, 884,
	885, 886, 879, 1496, 129, 889, 129, 1733, 2738, 2628,
	657, 861, 1508, 2880, 657, 1509, 2627, 2841, 1513, 1514,
	1515, 2991, 1845, 1789, 1839, 620, 621, 993, 1794, 2626,
	859, 860, 858, 2625, 993, 1084, 657, 2872, 993, 657,
	1785, 347, 683, 684, 685, 686, 687, 688, 689, 861,
	2619, 2461, 1756, 1793, 746, 747, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 2460, 81, 2279, 1809,
	880, 881, 882, 883, 884, 885, 886, 879, 1531, 918,
	889, 2051, 619, 845, 1576, 1577, 846, 2781, 350, 2049,
	1552, 658, 1553, 1741, 1742, 2700, 2030, 359, 367, 368,
	1527, 768, 2838, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 859, 860,
	858, 1802, 859, 860, 858, 1808, 2932, 767, 1503, 1504,
	2873, 2794, 356, 2869, 2782, 357, 1815, 861, 365, 366,
	2696, 861, 2701, 2695, 1798, 878, 877, 887, 888, 880,
	881, 882, 883, 884, 885, 886, 879, 1584, 1822, 889,
	741, 1825, 859, 860, 858, 96, 1596, 1989, 1844, 1990,
	2192, 840, 2681, 612, 2635, 1114, 1676, 859, 860, 858,
	607, 861, 613, 740, 2603, 2556, 2505, 1829, 2504, 2503,
	605, 859, 860, 858, 2471, 362, 861, 2458, 2351, 2285,
	1517, 1519, 1520, 2147, 610, 614, 1653, 1655, 1518, 2146,
	861, 2047, 608, 609, 611, 616, 363, 617, 618, 878,
	877, 887, 888, 880, 881, 882, 883, 884, 885, 886,
	879, 1807, 1782, 889, 445, 1162, 2868, 2706, 2679, 2652,
	2007, 2646, 1796, 2529, 2419, 1743, 877, 887, 888, 880,
	881, 882, 883, 884, 885, 886, 879, 866, 993, 889,
	878, 877, 887, 888, 880, 881, 882, 883, 884, 885,
	886, 879, 2376, 873, 889, 876, 1891, 2372, 2362, 2333,
	507, 348, 890, 891, 892, 893, 894, 895, 896, 2091,
	874, 875, 872, 2090, 1800, 1899, 1784, 1783, 1554, 1158,
	878, 877, 887, 888, 880, 881, 882, 883, 884, 885,
	886, 879, 2052, 1155, 889, 361, 351, 352, 1121, 372,
	1120, 1092, 1090, 353, 355, 1868, 349, 371, 370, 657,
	859, 860, 858, 763, 693, 388, 1654, 386, 2571, 2897,
	840, 859, 860, 858, 1564, 1566, 2447, 2887, 447, 861,
	807, 1575, 448, 1526, 840, 449, 450, 2447, 2848, 2645,
	861, 451, 2801, 840, 2447, 2797, 1524, 2447, 2687, 2594,
	364, 2593, 644, 2571, 2675, 2312, 653, 2571, 2588, 2286,
	493, 492, 495, 496, 497, 498, 1604, 1605, 1801, 494,
	499, 2571, 840, 1611, 1612, 1613, 1614, 773, 682, 2571,
	2570, 2915, 878, 877, 887, 888, 880, 881, 882, 883,
	884, 885, 886, 879, 2447, 2446, 889, 2428, 840, 1847,
	840, 2300, 2299, 1529, 2296, 2297, 2296, 2295, 1945, 1947,
	1884, 840, 990, 990, 990, 990, 990, 1631, 840, 1820,
	1819, 1565, 1804, 1565, 840, 1022, 1021, 1083, 1647, 1979,
	1970, 2644, 999, 1856, 1873, 1854, 1855, 2217, 999, 990,
	2231, 1630, 2893, 615, 129, 129, 129, 129, 129, 2417,
	1767, 2231, 1658, 1979, 998, 812, 129, 1950, 1951, 1946,
	129, 84, 1869, 454, 129, 606, 1565, 1500, 2422, 1881,
	811, 129, 770, 771, 1631, 771, 1781, 2313, 2298, 1567,
	1981, 1631, 1982, 454, 2245, 1973, 1631, 2416, 1000, 2383,
	1002, 1766, 2145, 637, 1000, 657, 998, 1980, 878, 877,
	887, 888, 880, 881, 882, 883, 884, 885, 886, 879,
	2231, 2115, 889, 773, 1993, 1884, 1667, 1907, 1499, 1965,
	1884, 1913, 1912, 1164, 1918, 1920, 1780, 1972, 1501, 835,
	1205, 1926, 1927, 1928, 1929, 1171, 878, 877, 887, 888,
	880, 881, 882, 883, 884, 885, 886, 879, 998, 1530,
	889, 2006, 2008, 1112, 1110, 1004, 648, 81, 657, 1994,
	129, 1799, 1977, 2819, 2798, 1953, 1954, 1964, 1956, 1952,
	2244, 2720, 1955, 657, 657, 657, 2649, 2463, 1707, 425,
	1636, 1639, 1640, 1641, 1637, 2434, 1638, 1642, 422, 1010,
	1736, 1984, 2095, 129, 425, 2275, 2236, 2237, 396, 1996,
	1992, 1732, 1997, 777, 1761, 2031, 2032, 2089, 445, 2002,
	425, 2005, 2038, 1727, 1726, 1085, 760, 2954, 81, 1745,
	1797, 2952, 2045, 1102, 1830, 2922, 80, 2311, 2239, 2217,
	1846, 425, 2053, 657, 1117, 813, 866, 774, 2088, 425,
	769, 849, 2048, 1863, 2242, 2050, 2000, 2241, 993, 993,
	993, 993, 993, 2093, 1958, 1957, 2858, 1961, 1959, 2059,
	657, 657, 1962, 1960, 993, 2806, 427, 2057, 459, 460,
	129, 2058, 2148, 1853, 2039, 993, 2041, 2042, 2043, 2044,
	657, 454, 2079, 1084, 1963, 1511, 1640, 1641, 2143, 2144,
	853, 854, 2850, 2425, 1861, 2092, 1860, 2561, 2528, 2450,
	2197, 2371, 2370, 2284, 2283, 1882, 2282, 2009, 2153, 2001,
	2100, 2269, 2098, 2711, 1526, 2714, 2793, 2792, 2639, 851,
	2637, 2692, 2691, 387, 1159, 2222, 80, 1524, 2114, 2622,
	2623, 2307, 657, 1909, 2124, 2119, 2135, 2136, 2141, 2140,
	2139, 842, 1870, 1871, 1872, 2120, 2040, 2117, 2127, 2132,
	2247, 2907, 843, 1017, 758, 2251, 2252, 2253, 657, 742,
	657, 739, 738, 694, 2656, 445, 2655, 2218, 2155, 2230,
	1950, 1951, 1754, 2420, 2154, 1503, 1504, 2223, 2189, 2164,
	1755, 454, 2510, 657, 2178, 2106, 1223, 2179, 1116, 2511,
	2916, 2166, 2786, 2112, 1900, 1901, 1902, 1083, 2277, 2641,
	2454, 2257, 737, 2306, 657, 2250, 657, 1746, 657, 96,
	657, 853, 854, 2906, 1221, 2221, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 831, 832, 2905,
	1859, 2904, 2153, 2600, 1828, 721, 2843, 2225, 1858, 456,
	2246, 2198, 2199, 2200, 2201, 2202, 2240, 2842, 2805, 2790,
	2715, 2255, 2671, 457, 84, 2271, 2272, 2273, 2804, 2274,
	2248, 2726, 1979, 2065, 2066, 2067, 129, 2268, 2541, 2270,
	2349, 422, 2262, 2956, 2955, 2328, 2111, 2109, 2108, 1896,
	2261, 1893, 1826, 1146, 2314, 856, 657, 657, 657, 2955,
	2956, 644, 2672, 425, 2281, 1497, 644, 1013, 129, 425,
	648, 2308, 2309, 2310, 434, 436, 2760, 52, 2762, 19,
	2761, 18, 129, 86, 425, 55, 657, 425, 2763, 20,
	1086, 425, 425, 1, 425, 2330, 1094, 1097, 1708, 1709,
	2289, 1714, 1715, 1716, 1717, 1718, 2764, 21, 2364, 2367,
	657, 2759, 15, 2335, 129, 657, 445, 1094, 1097, 1728,
	1729, 1730, 657, 2758, 14, 657, 2752, 10, 657, 2775,
	34, 1816, 1875, 2773, 33, 2772, 32, 2771, 28, 2412,
	1188, 2358, 2770, 27, 2490, 1883, 1885, 2489, 2336, 2496,
	2384, 1887, 1888, 2769, 26, 2318, 2287, 2288, 1894, 1741,
	2321, 1897, 1898, 2291, 2077, 2337, 1903, 1904, 2506, 2353,
	2294, 2375, 1910, 2352, 1911, 2094, 2359, 1914, 1915, 1100,
	1916, 1917, 2767, 23, 1921, 1922, 1923, 1924, 1925, 2766,
	22, 2611, 2382, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 2768, 24, 677, 1189, 1765,
	129, 2757, 13, 2387, 2388, 2389, 2390, 2391, 2191, 764,
	2407, 2791, 1966, 1967, 2397, 2754, 12, 657, 1950, 1951,
	2442, 2443, 2444, 2710, 657, 657, 657, 2712, 2339, 2753,
	11, 2343, 2751, 9, 657, 2347, 2348, 2000, 2350, 2365,
	2368, 2636, 2440, 2157, 2452, 2513, 80, 2474, 657, 2473,
	2465, 2070, 2069, 759, 1169, 2118, 2421, 2121, 1776, 1224,
	1838, 2180, 2181, 2429, 2182, 2183, 2430, 2445, 2184, 2722,
	1827, 814, 1691, 1681, 1084, 650, 92, 1786, 704, 2256,
	354, 2193, 2194, 1688, 129, 2451, 657, 2486, 2487, 2488,
	1224, 2015, 2441, 2713, 761, 2014, 2455, 2464, 1994, 2028,
	1703, 454, 1749, 1753, 2013, 2012, 2708, 2466, 2016, 878,
	877, 887, 888, 880, 881, 882, 883, 884, 885, 886,
	879, 1029, 425, 889, 1027, 1028, 1026, 1031, 2524, 2525,
	1557, 1030, 358, 1012, 2829, 992, 2418, 857, 1479, 107,
	2249, 2485, 56, 2530, 2526, 2131, 430, 431, 97, 105,
	360, 897, 2457, 657, 2459, 644, 2512, 1857, 1985, 635,
	636, 2519, 628, 2222, 1849, 657, 2222, 2566, 2542, 2543,
	2534, 2514, 837, 1597, 1598, 2527, 2732, 2890, 2515, 2247,
	2520, 2539, 2516, 126, 2821, 847, 2853, 1906, 932, 2280,
	2268, 1591, 379, 2153, 477, 2590, 1968, 2559, 2855, 1516,
	491, 657, 2535, 2569, 2456, 490, 489, 657, 2596, 486,
	487, 2815, 129, 1506, 129, 1942, 871, 2301, 2565, 475,
	657, 466, 454, 988, 981, 644, 625, 2563, 1805, 2562,
	649, 1635, 2597, 1633, 1632, 1118, 657, 2377, 624, 1224,
	2238, 2568, 1224, 653, 2158, 2159, 2160, 2161, 2162, 2163,
	676, 464, 2545, 2221, 2595, 2583, 2221, 2234, 2601, 2578,
	1645, 690, 987, 991, 2586, 2587, 2573, 70, 2540, 2572,
	719, 376, 2413, 2584, 2585, 1652, 2518, 2574, 2665, 2657,
	2602, 38, 990, 435, 461, 25, 2624, 1636, 1639, 1640,
	1641, 1637, 2415, 1638, 1642, 2614, 17, 2236, 2237, 729,
	2629, 16, 1831, 675, 42, 2222, 657, 80, 44, 2064,
	1757, 2632, 1741, 2224, 129, 2828, 2937, 745, 2647, 2648,
	2642, 2658, 918, 2963, 2870, 2386, 31, 30, 29, 2765,
	2654, 2660, 2431, 2432, 2774, 2756, 2433, 2755, 80, 2435,
	2659, 2650, 2651, 2924, 657, 2254, 2923, 918, 4, 828,
	71, 35, 646, 2678, 2409, 2410, 2411, 2, 2674, 0,
	0, 0, 454, 2406, 0, 0, 2673, 2677, 2690, 0,
	0, 0, 2591, 0, 2592, 0, 445, 0, 0, 0,
	0, 2680, 0, 0, 445, 990, 0, 0, 0, 2688,
	0, 0, 2670, 454, 0, 2221, 0, 0, 1814, 0,
	1601, 0, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 425, 0, 0, 129, 0, 0,
	0, 0, 657, 0, 1814, 1083, 0, 1814, 0, 0,
	0, 80, 2743, 0, 0, 0, 2719, 0, 2745, 0,
	2718, 0, 0, 2717, 0, 2727, 2453, 0, 0, 0,
	0, 0, 0, 2735, 0, 129, 2736, 0, 2716, 1950,
	1951, 0, 878, 877, 887, 888, 880, 881, 882, 883,
	884, 885, 886, 879, 0, 0, 889, 0, 0, 0,
	0, 0, 625, 0, 0, 0, 0, 0, 0, 2824,
	2789, 2787, 0, 657, 0, 0, 0, 657, 2796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2799, 0, 2818, 0, 0, 2820, 2678, 993, 0,
	80, 0, 2385, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 2393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2402, 2403, 0, 0,
	0, 657, 2408, 0, 2846, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2859, 2867, 2033, 2034, 2035, 2037,
	2845, 657, 2849, 2547, 2548, 2549, 2550, 0, 0, 2833,
	0, 2554, 0, 0, 0, 2557, 2558, 2865, 2866, 2847,
	2423, 2424, 657, 2426, 0, 422, 2427, 0, 0, 2885,
	0, 2877, 0, 0, 0, 2888, 0, 0, 0, 0,
	0, 0, 0, 2886, 80, 0, 2439, 425, 0, 0,
	80, 993, 0, 0, 0, 657, 0, 2910, 2901, 0,
	0, 0, 0, 2903, 2898, 0, 0, 0, 657, 0,
	0, 80, 464, 0, 2913, 2912, 80, 2917, 2919, 0,
	0, 657, 0, 0, 0, 2947, 2934, 2197, 0, 2928,
	2931, 2927, 422, 2926, 0, 2948, 2946, 2957, 2953, 2951,
	80, 0, 2949, 80, 80, 2925, 2187, 0, 80, 2908,
	0, 2910, 0, 0, 425, 2966, 0, 0, 657, 2958,
	0, 0, 2960, 0, 0, 0, 0, 2936, 0, 0,
	80, 454, 2976, 80, 0, 0, 0, 2910, 2984, 0,
	2986, 0, 0, 0, 0, 0, 0, 1852, 80, 0,
	80, 0, 2981, 0, 80, 2910, 1224, 2910, 0, 0,
	2266, 0, 0, 0, 0, 80, 0, 0, 80, 0,
	80, 0, 2910, 2996, 80, 0, 0, 2910, 0, 0,
	0, 2910, 0, 0, 0, 0, 983, 3000, 995, 2686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 918, 0, 0, 0, 0, 0, 2551, 2552, 2553,
	0, 2555, 0, 878, 877, 887, 888, 880, 881, 882,
	883, 884, 885, 886, 879, 0, 1087, 889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2575, 2576, 2577, 0, 0, 0, 625, 0, 0, 1119,
	0, 2589, 0, 775, 2721, 0, 0, 0, 2405, 0,
	0, 0, 0, 0, 0, 0, 1134, 1135, 1136, 1137,
	1138, 0, 0, 0, 0, 0, 0, 0, 0, 2357,
	0, 644, 0, 0, 0, 0, 1083, 0, 0, 0,
	0, 0, 0, 850, 0, 0, 0, 0, 2357, 0,
	0, 0, 0, 0, 0, 0, 2825, 2826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 2290, 0, 0, 2404, 0, 0, 0, 0,
	0, 0, 2186, 1224, 2854, 2857, 0, 0, 0, 0,
	0, 127, 0, 0, 373, 2661, 2662, 2663, 2664, 0,
	127, 0, 0, 0, 0, 2668, 2669, 878, 877, 887,
	888, 880, 881, 882, 883, 884, 885, 886, 879, 0,
	0, 889, 0, 444, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 627, 645, 0, 0, 127, 0,
	445, 0, 0, 0, 0, 0, 2054, 0, 0, 1217,
	0, 0, 2902, 0, 0, 0, 0, 0, 127, 0,
	0, 2068, 2072, 2076, 0, 0, 0, 0, 0, 127,
	0, 0, 1512, 2857, 878, 877, 887, 888, 880, 881,
	882, 883, 884, 885, 886, 879, 0, 0, 889, 878,
	877, 887, 888, 880, 881, 882, 883, 884, 885, 886,
	879, 0, 0, 889, 2394, 2395, 0, 2396, 0, 0,
	2398, 0, 2400, 2728, 2185, 0, 0, 0, 0, 0,
	0, 2107, 2737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2740, 0, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 2985, 0, 0, 1224, 1224,
	0, 0, 0, 0, 0, 0, 2945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2357, 1224, 0,
	2800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2809, 0, 0, 2878, 0, 0, 0, 1224, 0, 2357,
	0, 0, 0, 0, 0, 0, 2969, 0, 1629, 0,
	0, 2448, 2449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	2195, 878, 877, 887, 888, 880, 881, 882, 883, 884,
	885, 886, 879, 0, 0, 889, 0, 0, 0, 0,
	0, 0, 0, 0, 644, 0, 1224, 1038, 2229, 2156,
	0, 0, 445, 0, 445, 0, 0, 0, 0, 0,
	2266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2229, 0, 0, 0, 0, 2266, 878, 877, 887,
	888, 880, 881, 882, 883, 884, 885, 886, 879, 0,
	127, 889, 1224, 0, 1224, 0, 1224, 0, 2265, 0,
	0, 0, 0, 0, 0, 0, 778, 785, 786, 788,
	789, 790, 791, 792, 1874, 794, 795, 796, 0, 799,
	1770, 802, 803, 804, 805, 806, 1771, 1772, 1052, 0,
	0, 0, 0, 1779, 127, 0, 0, 0, 0, 0,
	0, 0, 878, 877, 887, 888, 880, 881, 882, 883,
	884, 885, 886, 879, 0, 0, 889, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2315, 2316, 2317, 0, 0, 0,
	0, 0, 0, 0, 0, 444, 0, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1568, 1573, 1574, 2342, 0, 0, 1580, 1583, 0,
	1588, 1589, 0, 0, 0, 0, 0, 2987, 2988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2369, 0,
	0, 0, 0, 2374, 0, 1599, 0, 1602, 1603, 0,
	2378, 0, 1607, 2379, 1609, 1610, 2381, 0, 0, 0,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 2266, 1065, 1068, 1069, 1070, 1071, 1072, 1073,
	0, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 0,
	1053, 1054, 1055, 1056, 1032, 1036, 1066, 1033, 1039, 1035,
	1037, 1034, 0, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 878, 877, 887, 888, 880, 881, 882, 883,
	884, 885, 886, 879, 0, 0, 889, 0, 0, 0,
	0, 0, 644, 2266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2437, 0, 0, 0, 0,
	0, 0, 2437, 2437, 2437, 0, 0, 0, 0, 0,
	0, 0, 1224, 0, 127, 127, 127, 0, 0, 0,
	0, 0, 0, 0, 645, 0, 2437, 0, 0, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1067, 0, 127, 0, 0, 0, 0, 1095,
	1098, 2266, 0, 0, 2072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 127, 0, 0,
	1095, 1098, 0, 0, 0, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 127, 127, 127, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1154,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1187, 1224, 0, 1190, 1191, 1192, 0, 1194, 1195, 0,
	0, 1196, 0, 1224, 0, 0, 0, 1197, 0, 0,
	0, 1198, 1199, 0, 1200, 1201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2567,
	0, 0, 0, 0, 0, 2437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 36, 0, 72, 39, 40, 0, 0, 0, 0,
	0, 0, 0, 1525, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 41, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 1572, 1572, 1572, 1051, 0, 0,
	1572, 1572, 2676, 1572, 1572, 0, 0, 0, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2776,
	0, 0, 2962, 2965, 2961, 0, 0, 0, 1572, 1572,
	1572, 1572, 0, 0, 1572, 1572, 1572, 1572, 1572, 0,
	0, 0, 0, 1572, 1572, 1572, 1572, 1572, 1572, 1572,
	1572, 1572, 1572, 1572, 1572, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 444, 0, 0, 0,
	0, 127, 127, 0, 0, 127, 1663, 1127, 645, 0,
	2265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1525, 2056, 0, 0, 0, 0, 0, 0,
	0, 1038, 0, 644, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2777, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	0, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 2265, 0, 0, 0, 2802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	1877, 1878, 1879, 1880, 0, 0, 0, 0, 127, 0,
	0, 0, 1052, 0, 127, 127, 0, 0, 0, 0,
	0, 127, 0, 0, 57, 58, 0, 2778, 0, 0,
	0, 1905, 0, 2149, 0, 0, 0, 0, 0, 1224,
	0, 66, 0, 67, 0, 0, 0, 0, 1790, 1791,
	127, 0, 0, 0, 0, 0, 0, 1821, 0, 2265,
	0, 0, 36, 37, 72, 39, 40, 0, 68, 0,
	0, 0, 0, 0, 0, 127, 59, 444, 0, 0,
	2437, 0, 78, 0, 0, 41, 63, 64, 0, 0,
	0, 0, 0, 60, 0, 0, 2779, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2892, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 81, 0, 2896, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 1065, 1068, 1069,
	1070, 1071, 1072, 1073, 0, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 0, 1053, 1054, 1055, 1056, 1032, 1036,
	1066, 1033, 1039, 1035, 1037, 1034, 2892, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2304,
	0, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2334, 0, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 0, 0, 47, 2338, 0, 0, 0, 36,
	0, 72, 39, 40, 0, 0, 1067, 0, 65, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 36, 41, 72, 39, 40, 0, 2373, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 78, 0, 0, 41, 57, 58, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 66, 0, 67, 0, 0, 0, 0, 0,
	1129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 2776, 0, 68,
	0, 0, 3002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2776,
	0, 0, 0, 0, 2998, 0, 0, 51, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 1525,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 1572, 1572, 1572, 1572, 1572, 1572, 2777, 0,
	0, 0, 0, 0, 0, 43, 74, 46, 45, 48,
	0, 0, 0, 0, 49, 77, 76, 2472, 0, 0,
	2777, 47, 0, 0, 1572, 0, 36, 73, 72, 39,
	40, 0, 0, 0, 0, 0, 49, 77, 76, 0,
	59, 0, 0, 47, 0, 0, 78, 0, 0, 41,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 645, 127, 127, 127, 127, 127,
	0, 0, 57, 58, 0, 2778, 79, 444, 0, 0,
	0, 127, 0, 0, 0, 444, 0, 0, 81, 66,
	1572, 67, 127, 0, 57, 58, 0, 2778, 0, 0,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 66, 0, 67, 2776, 0, 68, 0, 0, 2992,
	36, 0, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 68, 0,
	78, 0, 0, 41, 2779, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2779, 75, 0, 53,
	54, 61, 0, 62, 0, 0, 0, 0, 0, 0,
	0, 127, 81, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 2776, 0,
	0, 0, 0, 2978, 127, 2777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	0, 72, 39, 40, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 41, 0, 0, 0, 0, 0, 0, 57,
	58, 127, 2778, 79, 43, 74, 46, 45, 48, 0,
	0, 0, 1572, 0, 0, 0, 66, 0, 67, 2777,
	0, 0, 0, 0, 0, 79, 0, 0, 1572, 0,
	1525, 81, 2967, 0, 0, 49, 77, 76, 0, 0,
	0, 0, 47, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2779, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 0, 57, 58, 0, 2778, 0, 2739, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2777, 0,
	0, 0, 0, 0, 0, 2779, 75, 0, 53, 54,
	61, 73, 62, 0, 49, 77, 76, 0, 0, 0,
	36, 47, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 127, 0, 0,
	78, 0, 0, 41, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 57, 58, 0, 2778, 0, 0, 0, 0,
	0, 0, 81, 127, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 2776, 0,
	0, 0, 0, 2909, 0, 127, 68, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	0, 0, 0, 0, 2779, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 79, 0, 0, 0, 36, 0,
	72, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 43, 74, 46, 45, 48, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2777,
	0, 444, 0, 0, 0, 645, 0, 0, 0, 0,
	81, 0, 0, 0, 0, 49, 77, 76, 0, 0,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 2776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 2778, 0, 0, 0,
	0, 0, 0, 79, 0, 127, 0, 0, 0, 0,
	66, 0, 67, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2777, 0, 0,
	0, 0, 0, 0, 0, 2779, 75, 0, 53, 54,
	61, 0, 62, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 444, 2778, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2779, 75, 0, 53, 54, 61, 0,
	62, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 465, 1454, 1422, 315,
	1325, 1458, 1273, 1303, 1472, 1309, 1312, 1386, 1241, 1352,
	260, 1300, 1242, 1228, 1278, 1232, 1291, 1233, 1275, 180,
	1272, 1425, 1358, 1456, 1342, 1379, 1389, 179, 171, 1355,
	1354, 1444, 1289, 1288, 1384, 1439, 1455, 1341, 0, 1465,
	224, 1436, 1490, 0, 308, 245, 0, 0, 1339, 1441,
	1350, 1414, 1322, 1388, 1255, 1370, 1460, 1301, 1380, 1461,
	0, 0, 0, 73, 656, 0, 1685, 1686, 1297, 0,
	0, 0, 0, 1484, 0, 1376, 1452, 1294, 1491, 1334,
	1385, 1476, 1231, 1372, 0, 1236, 1244, 1471, 1445, 1285,
	1286, 183, 1995, 0, 0, 0, 0, 0, 127, 1337,
	1351, 1405, 1319, 332, 1391, 1397, 1417, 1311, 276, 196,
	0, 0, 79, 0, 0, 0, 0, 0, 1280, 0,
	1368, 0, 0, 0, 1249, 1238, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 1254, 1229, 1282, 1407, 1230, 1227, 246, 1245,
	1419, 1443, 1320, 215, 619, 1449, 1318, 1317, 1394, 1250,
	1429, 1304, 222, 1248, 130, 1243, 164, 1302, 257, 1404,
	1411, 1486, 133, 1426, 1276, 1293, 172, 1485, 286, 1381,
	331, 1487, 1367, 285, 225, 324, 1395, 1451, 330, 1305,
	1494, 337, 341, 190, 1343, 163, 305, 181, 178, 1284,
	1416, 1235, 197, 275, 175, 218, 1323, 1387, 1277, 168,
	1400, 1369, 1431, 304, 321, 136, 243, 322, 340, 154,
	316, 244, 250, 165, 167, 166, 150, 299, 320, 159,
	170, 1427, 1410, 1433, 1271, 1251, 1262, 1252, 1292, 1453,
	210, 201, 1434, 1432, 335, 612, 295, 294, 1308, 209,
	1413, 1371, 607, 282, 613, 216, 141, 1438, 344, 153,
	220, 317, 605, 194, 256, 174, 1383, 264, 1290, 132,
	278, 236, 237, 235, 238, 200, 610, 614, 1409, 280,
	297, 319, 155, 311, 608, 609, 611, 616, 288, 617,
	618, 1459, 230, 186, 189, 203, 211, 1382, 284, 312,
	336, 1373, 151, 144, 314, 329, 160, 296, 298, 342,
	1406, 146, 1447, 1428, 240, 1326, 1332, 1237, 0, 145,
	1402, 1281, 199, 1270, 1377, 1269, 198, 1393, 327, 328,
	173, 345, 1246, 1467, 147, 1247, 1466, 253, 0, 252,
	1469, 323, 1448, 241, 1361, 1359, 1239, 1446, 239, 1360,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 1363, 0, 143, 0, 309, 1457, 1478, 313, 157,
	1264, 1420, 318, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 1399, 343, 263, 287, 161,
	333, 306, 182, 1260, 1263, 1258, 1261, 1259, 1356, 1357,
	1462, 1463, 1464, 1408, 1253, 0, 0, 0, 0, 1348,
	1450, 1240, 0, 1424, 1492, 1493, 1390, 1474, 1310, 169,
	1480, 1481, 1482, 1483, 0, 1488, 1489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1257, 1274, 1296,
	1344, 1345, 1347, 1374, 1375, 1418, 1392, 1398, 1366, 134,
	148, 223, 1475, 281, 193, 1226, 1234, 1256, 1265, 1266,
	1267, 1268, 1279, 1283, 1295, 1298, 1299, 1307, 1313, 1314,
	1315, 1316, 1324, 1327, 1328, 1329, 1330, 1331, 1335, 1336,
	1338, 1349, 1353, 1362, 1364, 1365, 1396, 1401, 1412, 1415,
	1421, 1423, 1430, 1435, 1437, 1468, 1473, 1477, 334, 177,
	1287, 1340, 1346, 242, 1403, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 615, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 325, 326, 338,
	339, 1442, 1321, 131, 135, 138, 139, 606, 140, 142,
	184, 191, 1306, 137, 1440, 1470, 1378, 268, 1454, 1422,
	315, 1325, 1458, 1273, 1303, 1472, 1309, 1312, 1386, 1241,
	1352, 260, 1300, 1242, 1228, 1278, 1232, 1291, 1233, 1275,
	180, 1272, 1425, 1358, 1456, 1342, 1379, 1389, 179, 171,
	1355, 1354, 1444, 1289, 1288, 1384, 1439, 1455, 1341, 0,
	1465, 224, 1436, 1490, 0, 308, 245, 0, 0, 1339,
	1441, 1350, 1414, 1322, 1388, 1255, 1370, 1460, 1301, 1380,
	1461, 0, 0, 0, 0, 656, 0, 1685, 1686, 1297,
	0, 0, 0, 0, 1484, 0, 1376, 1452, 1294, 1491,
	1334, 1385, 1476, 1231, 1372, 0, 1236, 1244, 1471, 1445,
	1285, 1286, 183, 0, 0, 0, 0, 0, 0, 0,
	1337, 1351, 1405, 1319, 332, 1391, 1397, 1417, 1311, 276,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 1280,
	0, 1368, 0, 0, 0, 1249, 1238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	0, 0, 0, 1254, 1229, 1282, 1407, 1230, 1227, 246,
	1245, 1419, 1443, 1320, 215, 619, 1449, 1318, 1317, 1394,
	1250, 1429, 1304, 222, 1248, 130, 1243, 164, 1302, 257,
	1404, 1411, 1486, 133, 1426, 1276, 1293, 172, 1485, 286,
	1381, 331, 1487, 1367, 285, 225, 324, 1395, 1451, 330,
	1305, 1494, 337, 341, 190, 1343, 163, 305, 181, 178,
	1284, 1416, 1235, 197, 275, 175, 218, 1323, 1387, 1277,
	168, 1400, 1369, 1431, 304, 321, 136, 243, 322, 340,
	154, 316, 244, 250, 165, 167, 166, 150, 299, 320,
	159, 170, 1427, 1410, 1433, 1271, 1251, 1262, 1252, 1292,
	1453, 210, 201, 1434, 1432, 335, 612, 295, 294, 1308,
	209, 1413, 1371, 607, 282, 613, 216, 141, 1438, 344,
	153, 220, 317, 605, 194, 256, 174, 1383, 264, 1290,
	132, 278, 236, 237, 235, 238, 200, 610, 614, 1409,
	280, 297, 319, 155, 311, 608, 609, 611, 616, 288,
	617, 618, 1459, 230, 186, 189, 203, 211, 1382, 284,
	312, 336, 1373, 151, 144, 314, 329, 160, 296, 298,
	342, 1406, 146, 1447, 1428, 240, 1326, 1332, 1237, 0,
	145, 1402, 1281, 199, 1270, 1377, 1269, 198, 1393, 327,
	328, 173, 345, 1246, 1467, 147, 1247, 1466, 253, 0,
	252, 1469, 323, 1448, 241, 1361, 1359, 1239, 1446, 239,
	1360, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 228, 1363, 0, 143, 0, 309, 1457, 1478, 313,
	157, 1264, 1420, 318, 202, 279, 158, 195, 187, 272,
	251, 152, 208, 307, 219, 226, 1399, 343, 263, 287,
	161, 333, 306, 182, 1260, 1263, 1258, 1261, 1259, 1356,
	1357, 1462, 1463, 1464, 1408, 1253, 0, 0, 0, 0,
	1348, 1450, 1240, 0, 1424, 1492, 1493, 1390, 1474, 1310,
	169, 1480, 1481, 1482, 1483, 0, 1488, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1257, 1274,
	1296, 1344, 1345, 1347, 1374, 1375, 1418, 1392, 1398, 1366,
	134, 148, 223, 1475, 281, 193, 1226, 1234, 1256, 1265,
	1266, 1267, 1268, 1279, 1283, 1295, 1298, 1299, 1307, 1313,
	1314, 1315, 1316, 1324, 1327, 1328, 1329, 1330, 1331, 1335,
	1336, 1338, 1349, 1353, 1362, 1364, 1365, 1396, 1401, 1412,
	1415, 1421, 1423, 1430, 1435, 1437, 1468, 1473, 1477, 334,
	177, 1287, 1340, 1346, 242, 1403, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 270, 271, 277, 615, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 325, 326,
	338, 339, 1442, 1321, 131, 135, 138, 139, 606, 140,
	142, 184, 191, 1306, 137, 1440, 1470, 1378, 268, 1454,
	2226, 315, 1325, 1458, 1273, 1303, 1472, 1309, 1312, 1386,
	1241, 1352, 260, 1300, 1242, 1228, 1278, 1232, 1291, 1233,
	1275, 180, 1272, 1425, 1358, 1456, 1342, 1379, 1389, 179,
	171, 1355, 1354, 1444, 1289, 1288, 1384, 1439, 1455, 1341,
	0, 1465, 224, 1436, 1490, 0, 308, 245, 0, 0,
	1339, 1441, 1350, 1414, 1322, 1388, 1255, 1370, 1460, 1301,
	1380, 1461, 81, 0, 840, 0, 656, 0, 0, 0,
	1297, 0, 0, 0, 0, 1484, 0, 1376, 1452, 1294,
	1491, 1334, 1385, 1476, 1231, 1372, 0, 1236, 1244, 1471,
	1445, 1285, 1286, 183, 0, 0, 0, 0, 0, 0,
	0, 1337, 1351, 1405, 1319, 332, 1391, 1397, 1417, 1311,
	276, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	1280, 0, 1368, 0, 0, 0, 1249, 1238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 1254, 1229, 1282, 1407, 1230, 1227,
	246, 1245, 1419, 1443, 1320, 215, 619, 1449, 1318, 1317,
	1394, 1250, 1429, 1304, 222, 1248, 130, 1243, 164, 1302,
	257, 1404, 1411, 1486, 133, 1426, 1276, 1293, 172, 1485,
	286, 1381, 331, 1487, 1367, 285, 225, 324, 1395, 1451,
	330, 1305, 1494, 337, 341, 190, 1343, 163, 305, 181,
	178, 1284, 1416, 1235, 197, 275, 175, 218, 1323, 1387,
	1277, 168, 1400, 1369, 1431, 304, 321, 136, 243, 322,
	340, 154, 316, 244, 250, 165, 167, 166, 150, 299,
	320, 159, 170, 1427, 1410, 1433, 1271, 1251, 1262, 1252,
	1292, 1453, 210, 201, 1434, 1432, 335, 612, 295, 294,
	1308, 209, 1413, 1371, 607, 282, 613, 216, 141, 1438,
	344, 153, 220, 317, 605, 194, 256, 174, 1383, 264,
	1290, 132, 278, 236, 237, 235, 238, 200, 610, 614,
	1409, 280, 297, 319, 155, 311, 608, 609, 611, 616,
	288, 617, 618, 1459, 230, 186, 189, 203, 211, 1382,
	284, 312, 336, 1373, 151, 144, 314, 329, 160, 296,
	298, 342, 1406, 146, 1447, 1428, 240, 1326, 1332, 1237,
	0, 145, 1402, 1281, 199, 1270, 1377, 1269, 198, 1393,
	327, 328, 173, 345, 1246, 1467, 147, 1247, 1466, 253,
	0, 252, 1469, 323, 1448, 241, 1361, 1359, 1239, 1446,
	239, 1360, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 1363, 0, 143, 0, 309, 1457, 1478,
	313, 157, 1264, 1420, 318, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 1399, 343, 263,
	287, 161, 333, 306, 182, 1260, 1263, 1258, 1261, 1259,
	1356, 1357, 1462, 1463, 1464, 1408, 1253, 0, 0, 0,
	0, 1348, 1450, 1240, 0, 1424, 1492, 1493, 1390, 1474,
	1310, 169, 1480, 1481, 1482, 1483, 0, 1488, 1489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1257,
	1274, 1296, 1344, 1345, 1347, 1374, 1375, 1418, 1392, 1398,
	1366, 134, 148, 223, 2227, 281, 193, 1226, 1234, 1256,
	1265, 1266, 1267, 1268, 1279, 1283, 1295, 1298, 1299, 1307,
	1313, 1314, 1315, 1316, 1324, 1327, 1328, 1329, 1330, 1331,
	1335, 1336, 1338, 1349, 1353, 1362, 1364, 1365, 1396, 1401,
	1412, 1415, 1421, 1423, 1430, 1435, 1437, 1468, 1473, 1477,
	334, 177, 1287, 1340, 1346, 242, 1403, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 615, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 325,
	326, 338, 339, 1442, 1321, 131, 135, 138, 139, 606,
	140, 142, 184, 191, 1306, 137, 1440, 1470, 1378, 268,
	1454, 1422, 315, 1325, 1458, 1273, 1303, 1472, 1309, 1312,
	1386, 1241, 1352, 260, 1300, 1242, 1228, 1278, 1232, 1291,
	1233, 1275, 180, 1272, 1425, 1358, 1456, 1342, 1379, 1389,
	179, 171, 1355, 1354, 1444, 1289, 1288, 1384, 1439, 1455,
	1341, 0, 1465, 224, 1436, 1490, 0, 308, 245, 0,
	0, 1339, 1441, 1350, 1414, 1322, 1388, 1255, 1370, 1460,
	1301, 1380, 1461, 0, 0, 0, 0, 656, 0, 0,
	0, 1297, 0, 0, 0, 0, 1484, 0, 1376, 1452,
	1294, 1491, 1334, 1385, 1476, 1231, 1372, 0, 1236, 1244,
	1471, 1445, 1285, 1286, 183, 0, 0, 0, 0, 0,
	0, 0, 1337, 1351, 1405, 1319, 332, 1391, 1397, 1417,
	1311, 276, 196, 0, 0, 0, 0, 0, 0, 2544,
	0, 1280, 0, 1368, 0, 0, 0, 1249, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 1254, 1229, 1282, 1407, 1230,
	1227, 246, 1245, 1419, 1443, 1320, 215, 619, 1449, 1318,
	1317, 1394, 1250, 1429, 1304, 222, 1248, 130, 1243, 164,
	1302, 257, 1404, 1411, 1486, 133, 1426, 1276, 1293, 172,
	1485, 286, 1381, 331, 1487, 1367, 285, 225, 324, 1395,
	1451, 330, 1305, 1494, 337, 341, 190, 1343, 163, 305,
	181, 178, 1284, 1416, 1235, 197, 275, 175, 218, 1323,
	1387, 1277, 168, 1400, 1369, 1431, 304, 321, 136, 243,
	322, 340, 154, 316, 244, 250, 165, 167, 166, 150,
	299, 320, 159, 170, 1427, 1410, 1433, 1271, 1251, 1262,
	1252, 1292, 1453, 210, 201, 1434, 1432, 335, 612, 295,
	294, 1308, 209, 1413, 1371, 607, 282, 613, 216, 141,
	1438, 344, 153, 220, 317, 605, 194, 256, 174, 1383,
	264, 1290, 132, 278, 236, 237, 235, 238, 200, 610,
	614, 1409, 280, 297, 319, 155, 311, 608, 609, 611,
	616, 288, 617, 618, 1459, 230, 186, 189, 203, 211,
	1382, 284, 312, 336, 1373, 151, 144, 314, 329, 160,
	296, 298, 342, 1406, 146, 1447, 1428, 240, 1326, 1332,
	1237, 0, 145, 1402, 1281, 199, 1270, 1377, 1269, 198,
	1393, 327, 328, 173, 345, 1246, 1467, 147, 1247, 1466,
	253, 0, 252, 1469, 323, 1448, 241, 1361, 1359, 1239,
	1446, 239, 1360, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 228, 1363, 0, 143, 0, 309, 1457,
	1478, 313, 157, 1264, 1420, 318, 202, 279, 158, 195,
	187, 272, 251, 152, 208, 307, 219, 226, 1399, 343,
	263, 287, 161, 333, 306, 182, 1260, 1263, 1258, 1261,
	1259, 1356, 1357, 1462, 1463, 1464, 1408, 1253, 0, 0,
	0, 0, 1348, 1450, 1240, 0, 1424, 1492, 1493, 1390,
	1474, 1310, 169, 1480, 1481, 1482, 1483, 0, 1488, 1489,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1257, 1274, 1296, 1344, 1345, 1347, 1374, 1375, 1418, 1392,
	1398, 1366, 134, 148, 223, 1475, 281, 193, 1226, 1234,
	1256, 1265, 1266, 1267, 1268, 1279, 1283, 1295, 1298, 1299,
	1307, 1313, 1314, 1315, 1316, 1324, 1327, 1328, 1329, 1330,
	1331, 1335, 1336, 1338, 1349, 1353, 1362, 1364, 1365, 1396,
	1401, 1412, 1415, 1421, 1423, 1430, 1435, 1437, 1468, 1473,
	1477, 334, 177, 1287, 1340, 1346, 242, 1403, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 270, 271, 277, 615, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	325, 326, 338, 339, 1442, 1321, 131, 135, 138, 139,
	606, 140, 142, 184, 191, 1306, 137, 1440, 1470, 1378,
	268, 1454, 1422, 315, 1325, 1458, 1273, 1303, 1472, 1309,
	1312, 1386, 1241, 1352, 260, 1300, 1242, 1228, 1278, 1232,
	1291, 1233, 1275, 180, 1272, 1425, 1358, 1456, 1342, 1379,
	1389, 179, 171, 1355, 1354, 1444, 1289, 1288, 1384, 1439,
	1455, 1341, 0, 1465, 224, 1436, 1490, 0, 308, 245,
	0, 0, 1339, 1441, 1350, 1414, 1322, 1388, 1255, 1370,
	1460, 1301, 1380, 1461, 0, 0, 0, 0, 470, 0,
	0, 0, 1297, 0, 0, 0, 0, 1484, 0, 1376,
	1452, 1294, 1491, 1334, 1385, 1476, 1231, 1372, 0, 1236,
	1244, 1471, 1445, 1285, 1286, 183, 0, 0, 0, 0,
	0, 0, 0, 1337, 1351, 1405, 1319, 332, 1391, 1397,
	1417, 1311, 276, 196, 0, 0, 0, 0, 0, 0,
	2165, 0, 1280, 0, 1368, 0, 0, 0, 1249, 1238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 1254, 1229, 1282, 1407,
	1230, 1227, 246, 1245, 1419, 1443, 1320, 215, 619, 1449,
	1318, 1317, 1394, 1250, 1429, 1304, 222, 1248, 130, 1243,
	164, 1302, 257, 1404, 1411, 1486, 133, 1426, 1276, 1293,
	172, 1485, 286, 1381, 331, 1487, 1367, 285, 225, 324,
	1395, 1451, 330, 1305, 1494, 337, 341, 190, 1343, 163,
	305, 181, 178, 1284, 1416, 1235, 197, 275, 175, 218,
	1323, 1387, 1277, 168, 1400, 1369, 1431, 304, 321, 136,
	243, 322, 340, 154, 316, 244, 250, 165, 167, 166,
	150, 299, 320, 159, 170, 1427, 1410, 1433, 1271, 1251,
	1262, 1252, 1292, 1453, 210, 201, 1434, 1432, 335, 612,
	295, 294, 1308, 209, 1413, 1371, 607, 282, 613, 216,
	141, 1438, 344, 153, 220, 317, 605, 194, 256, 174,
	1383, 264, 1290, 132, 278, 236, 237, 235, 238, 200,
	610, 614, 1409, 280, 297, 319, 155, 311, 608, 609,
	611, 616, 288, 617, 618, 1459, 230, 186, 189, 203,
	211, 1382, 284, 312, 336, 1373, 151, 144, 314, 329,
	160, 296, 298, 342, 1406, 146, 1447, 1428, 240, 1326,
	1332, 1237, 0, 145, 1402, 1281, 199, 1270, 1377, 1269,
	198, 1393, 327, 328, 173, 345, 1246, 1467, 147, 1247,
	1466, 253, 0, 252, 1469, 323, 1448, 241, 1361, 1359,
	1239, 1446, 239, 1360, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 1363, 0, 143, 0, 309,
	1457, 1478, 313, 157, 1264, 1420, 318, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 1399,
	343, 263, 287, 161, 333, 306, 182, 1260, 1263, 1258,
	1261, 1259, 1356, 1357, 1462, 1463, 1464, 1408, 1253, 0,
	0, 0, 0, 1348, 1450, 1240, 0, 1424, 1492, 1493,
	1390, 1474, 1310, 169, 1480, 1481, 1482, 1483, 0, 1488,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1257, 1274, 1296, 1344, 1345, 1347, 1374, 1375, 1418,
	1392, 1398, 1366, 134, 148, 223, 1475, 281, 193, 1226,
	1234, 1256, 1265, 1266, 1267, 1268, 1279, 1283, 1295, 1298,
	1299, 1307, 1313, 1314, 1315, 1316, 1324, 1327, 1328, 1329,
	1330, 1331, 1335, 1336, 1338, 1349, 1353, 1362, 1364, 1365,
	1396, 1401, 1412, 1415, 1421, 1423, 1430, 1435, 1437, 1468,
	1473, 1477, 334, 177, 1287, 1340, 1346, 242, 1403, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 615,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 325, 326, 338, 339, 1442, 1321, 131, 135, 138,
	139, 606, 140, 142, 184, 191, 1306, 137, 1440, 1470,
	1378, 268, 1454, 1422, 315, 1325, 1458, 1273, 1303, 1472,
	1309, 1312, 1386, 1241, 1352, 260, 1300, 1242, 1228, 1278,
	1232, 1291, 1233, 1275, 180, 1272, 1425, 1358, 1456, 1342,
	1379, 1389, 179, 171, 1355, 1354, 1444, 1289, 1288, 1384,
	1439, 1455, 1341, 0, 1465, 224, 1436, 1490, 0, 308,
	245, 0, 0, 1339, 1441, 1350, 1414, 1322, 1388, 1255,
	1370, 1460, 1301, 1380, 1461, 0, 0, 0, 0, 656,
	0, 0, 0, 1297, 0, 0, 0, 0, 1484, 0,
	1376, 1452, 1294, 1491, 1334, 1385, 1476, 1231, 1372, 0,
	1236, 1244, 1471, 1445, 1285, 1286, 183, 0, 0, 0,
	0, 0, 0, 0, 1337, 1351, 1405, 1319, 332, 1391,
	1397, 1417, 1311, 276, 196, 0, 0, 0, 0, 0,
	0, 2152, 0, 1280, 0, 1368, 0, 0, 0, 1249,
	1238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 1254, 1229, 1282,
	1407, 1230, 1227, 246, 1245, 1419, 1443, 1320, 215, 619,
	1449, 1318, 1317, 1394, 1250, 1429, 1304, 222, 1248, 130,
	1243, 164, 1302, 257, 1404, 1411, 1486, 133, 1426, 1276,
	1293, 172, 1485, 286, 1381, 331, 1487, 1367, 285, 225,
	324, 1395, 1451, 330, 1305, 1494, 337, 341, 190, 1343,
	163, 305, 181, 178, 1284, 1416, 1235, 197, 275, 175,
	218, 1323, 1387, 1277, 168, 1400, 1369, 1431, 304, 321,
	136, 243, 322, 340, 154, 316, 244, 250, 165, 167,
	166, 150, 299, 320, 159, 170, 1427, 1410, 1433, 1271,
	1251, 1262, 1252, 1292, 1453, 210, 201, 1434, 1432, 335,
	612, 295, 294, 1308, 209, 1413, 1371, 607, 282, 613,
	216, 141, 1438, 344, 153, 220, 317, 605, 194, 256,
	174, 1383, 264, 1290, 132, 278, 236, 237, 235, 238,
	200, 610, 614, 1409, 280, 297, 319, 155, 311, 608,
	609, 611, 616, 288, 617, 618, 1459, 230, 186, 189,
	203, 211, 1382, 284, 312, 336, 1373, 151, 144, 314,
	329, 160, 296, 298, 342, 1406, 146, 1447, 1428, 240,
	1326, 1332, 1237, 0, 145, 1402, 1281, 199, 1270, 1377,
	1269, 198, 1393, 327, 328, 173, 345, 1246, 1467, 147,
	1247, 1466, 253, 0, 252, 1469, 323, 1448, 241, 1361,
	1359, 1239, 1446, 239, 1360, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 1363, 0, 143, 0,
	309, 1457, 1478, 313, 157, 1264, 1420, 318, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	1399, 343, 263, 287, 161, 333, 306, 182, 1260, 1263,
	1258, 1261, 1259, 1356, 1357, 1462, 1463, 1464, 1408, 1253,
	0, 0, 0, 0, 1348, 1450, 1240, 0, 1424, 1492,
	1493, 1390, 1474, 1310, 169, 1480, 1481, 1482, 1483, 0,
	1488, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1257, 1274, 1296, 1344, 1345, 1347, 1374, 1375,
	1418, 1392, 1398, 1366, 134, 148, 223, 1475, 281, 193,
	1226, 1234, 1256, 1265, 1266, 1267, 1268, 1279, 1283, 1295,
	1298, 1299, 1307, 1313, 1314, 1315, 1316, 1324, 1327, 1328,
	1329, 1330, 1331, 1335, 1336, 1338, 1349, 1353, 1362, 1364,
	1365, 1396, 1401, 1412, 1415, 1421, 1423, 1430, 1435, 1437,
	1468, 1473, 1477, 334, 177, 1287, 1340, 1346, 242, 1403,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	615, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 325, 326, 338, 339, 1442, 1321, 131, 135,
	138, 139, 606, 140, 142, 184, 191, 1306, 137, 1440,
	1470, 1378, 268, 1454, 1422, 315, 1325, 1458, 1273, 1303,
	1472, 1309, 1312, 1386, 1241, 1352, 260, 1300, 1242, 1228,
	1278, 1232, 1291, 1233, 1275, 180, 1272, 1425, 1358, 1456,
	1342, 1379, 1389, 179, 171, 1355, 1354, 1444, 1289, 1288,
	1384, 1439, 1455, 1341, 0, 1465, 224, 1436, 1490, 0,
	308, 245, 0, 0, 1339, 1441, 1350, 1414, 1322, 1388,
	1255, 1370, 1460, 1301, 1380, 1461, 0, 0, 0, 0,
	470, 0, 0, 0, 1297, 0, 0, 0, 0, 1484,
	0, 1376, 1452, 1294, 1491, 1334, 1385, 1476, 1231, 1372,
	0, 1236, 1244, 1471, 1445, 1285, 1286, 183, 0, 0,
	0, 0, 0, 0, 0, 1337, 1351, 1405, 1319, 332,
	1391, 1397, 1417, 1311, 276, 196, 0, 0, 0, 0,
	0, 0, 1522, 0, 1280, 0, 1368, 0, 0, 0,
	1249, 1238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 1254, 1229,
	1282, 1407, 1230, 1227, 246, 1245, 1419, 1443, 1320, 215,
	619, 1449, 1318, 1317, 1394, 1250, 1429, 1304, 222, 1248,
	130, 1243, 164, 1302, 257, 1404, 1411, 1486, 133, 1426,
	1276, 1293, 172, 1485, 286, 1381, 331, 1487, 1367, 285,
	225, 324, 1395, 1451, 330, 1305, 1494, 337, 341, 190,
	1343, 163, 305, 181, 178, 1284, 1416, 1235, 197, 275,
	175, 218, 1323, 1387, 1277, 168, 1400, 1369, 1431, 304,
	321, 136, 243, 322, 340, 154, 316, 244, 250, 165,
	167, 166, 150, 299, 320, 159, 170, 1427, 1410, 1433,
	1271, 1251, 1262, 1252, 1292, 1453, 210, 201, 1434, 1432,
	335, 612, 295, 294, 1308, 209, 1413, 1371, 607, 282,
	613, 216, 141, 1438, 344, 153, 220, 317, 605, 194,
	256, 174, 1383, 264, 1290, 132, 278, 236, 237, 235,
	238, 200, 610, 614, 1409, 280, 297, 319, 155, 311,
	608, 609, 611, 616, 288, 617, 618, 1459, 230, 186,
	189, 203, 211, 1382, 284, 312, 336, 1373, 151, 144,
	314, 329, 160, 296, 298, 342, 1406, 146, 1447, 1428,
	240, 1326, 1332, 1237, 0, 145, 1402, 1281, 199, 1270,
	1377, 1269, 198, 1393, 327, 328, 173, 345, 1246, 1467,
	147, 1247, 1466, 253, 0, 252, 1469, 323, 1448, 241,
	1361, 1359, 1239, 1446, 239, 1360, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 1363, 0, 143,
	0, 309, 1457, 1478, 313, 157, 1264, 1420, 318, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 1399, 343, 263, 287, 161, 333, 306, 182, 1260,
	1263, 1258, 1261, 1259, 1356, 1357, 1462, 1463, 1464, 1408,
	1253, 0, 0, 0, 0, 1348, 1450, 1240, 0, 1424,
	1492, 1493, 1390, 1474, 1310, 169, 1480, 1481, 1482, 1483,
	0, 1488, 1489, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1257, 1274, 1296, 1344, 1345, 1347, 1374,
	1375, 1418, 1392, 1398, 1366, 134, 148, 223, 1475, 281,
	193, 1226, 1234, 1256, 1265, 1266, 1267, 1268, 1279, 1283,
	1295, 1298, 1299, 1307, 1313, 1314, 1315, 1316, 1324, 1327,
	1328, 1329, 1330, 1331, 1335, 1336, 1338, 1349, 1353, 1362,
	1364, 1365, 1396, 1401, 1412, 1415, 1421, 1423, 1430, 1435,
	1437, 1468, 1473, 1477, 334, 177, 1287, 1340, 1346, 242,
	1403, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 615, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 325, 326, 338, 339, 1442, 1321, 131,
	135, 138, 139, 606, 140, 142, 184, 191, 1306, 137,
	1440, 1470, 1378, 268, 1454, 1422, 315, 1325, 1458, 1273,
	1303, 1472, 1309, 1312, 1386, 1241, 1352, 260, 1300, 1242,
	1228, 1278, 1232, 1291, 1233, 1275, 180, 1272, 1425, 1358,
	1456, 1342, 1379, 1389, 179, 171, 1355, 1354, 1444, 1289,
	1288, 1384, 1439, 1455, 1341, 0, 1465, 224, 1436, 1490,
	0, 308, 245, 0, 0, 1339, 1441, 1350, 1414, 1322,
	1388, 1255, 1370, 1460, 1301, 1380, 1461, 0, 0, 0,
	0, 656, 0, 0, 0, 1297, 0, 0, 0, 0,
	1484, 0, 1376, 1452, 1294, 1491, 1334, 1385, 1476, 1231,
	1372, 0, 1236, 1244, 1471, 1445, 1285, 1286, 183, 0,
	0, 0, 0, 0, 0, 0, 1337, 1351, 1405, 1319,
	332, 1391, 1397, 1417, 1311, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 1280, 0, 1368, 0, 0,
	0, 1249, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 1254,
	1229, 1282, 1407, 1230, 1227, 246, 1245, 1419, 1443, 1320,
	215, 619, 1449, 1318, 1317, 1394, 1250, 1429, 1304, 222,
	1248, 130, 1243, 164, 1302, 257, 1404, 1411, 1486, 133,
	1426, 1276, 1293, 172, 1485, 286, 1381, 331, 1487, 1367,
	285, 225, 324, 1395, 1451, 330, 1305, 1494, 337, 341,
	190, 1343, 163, 305, 181, 178, 1284, 1416, 1235, 197,
	275, 175, 218, 1323, 1387, 1277, 168, 1400, 1369, 1431,
	304, 321, 136, 243, 322, 340, 154, 316, 244, 250,
	165, 167, 166, 150, 299, 320, 159, 170, 1427, 1410,
	1433, 1271, 1251, 1262, 1252, 1292, 1453, 210, 201, 1434,
	1432, 335, 612, 295, 294, 1308, 209, 1413, 1371, 607,
	282, 613, 216, 141, 1438, 344, 153, 220, 317, 605,
	194, 256, 174, 1383, 264, 1290, 132, 278, 236, 237,
	235, 238, 200, 610, 614, 1409, 280, 297, 319, 155,
	311, 608, 609, 611, 616, 288, 617, 618, 1459, 230,
	186, 189, 203, 211, 1382, 284, 312, 336, 1373, 151,
	144, 314, 329, 160, 296, 298, 342, 1406, 146, 1447,
	1428, 240, 1326, 1332, 1237, 0, 145, 1402, 1281, 199,
	1270, 1377, 1269, 198, 1393, 327, 328, 173, 345, 1246,
	1467, 147, 1247, 1466, 253, 0, 252, 1469, 323, 1448,
	241, 1361, 1359, 1239, 1446, 239, 1360, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 1363, 0,
	143, 0, 309, 1457, 1478, 313, 157, 1264, 1420, 318,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 1399, 343, 263, 287, 161, 333, 306, 182,
	1260, 1263, 1258, 1261, 1259, 1356, 1357, 1462, 1463, 1464,
	1408, 1253, 0, 0, 0, 0, 1348, 1450, 1240, 0,
	1424, 1492, 1493, 1390, 1474, 1310, 169, 1480, 1481, 1482,
	1483, 0, 1488, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1257, 1274, 1296, 1344, 1345, 1347,
	1374, 1375, 1418, 1392, 1398, 1366, 134, 148, 223, 1475,
	281, 193, 1226, 1234, 1256, 1265, 1266, 1267, 1268, 1279,
	1283, 1295, 1298, 1299, 1307, 1313, 1314, 1315, 1316, 1324,
	1327, 1328, 1329, 1330, 1331, 1335, 1336, 1338, 1349, 1353,
	1362, 1364, 1365, 1396, 1401, 1412, 1415, 1421, 1423, 1430,
	1435, 1437, 1468, 1473, 1477, 334, 177, 1287, 1340, 1346,
	242, 1403, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 615, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 325, 326, 338, 339, 1442, 1321,
	131, 135, 138, 139, 606, 140, 142, 184, 191, 1306,
	137, 1440, 1470, 1378, 268, 1454, 1422, 315, 1325, 1458,
	1273, 1303, 1472, 1309, 1312, 1386, 1241, 1352, 260, 1300,
	1242, 1228, 1278, 1232, 1291, 1233, 1275, 180, 1272, 1425,
	1358, 1456, 1342, 1379, 1389, 179, 171, 1355, 1354, 1444,
	1289, 1288, 1384, 1439, 1455, 1341, 0, 1465, 224, 1436,
	1490, 0, 308, 245, 0, 0, 1339, 1441, 1350, 1414,
	1322, 1388, 1255, 1370, 1460, 1301, 1380, 1461, 0, 0,
	0, 0, 2827, 0, 0, 0, 1297, 0, 0, 0,
	0, 1484, 0, 1376, 1452, 1294, 1491, 1334, 1385, 1476,
	1231, 1372, 0, 1236, 1244, 1471, 1445, 1285, 1286, 183,
	0, 0, 0, 0, 0, 0, 0, 1337, 1351, 1405,
	1319, 332, 1391, 1397, 1417, 1311, 276, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 1280, 0, 1368, 0,
	0, 0, 1249, 1238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 0, 0,
	1254, 1229, 1282, 1407, 1230, 1227, 246, 1245, 1419, 1443,
	1320, 215, 619, 1449, 1318, 1317, 1394, 1250, 1429, 1304,
	222, 1248, 130, 1243, 164, 1302, 257, 1404, 1411, 1486,
	133, 1426, 1276, 1293, 172, 1485, 286, 1381, 331, 1487,
	1367, 285, 225, 324, 1395, 1451, 330, 1305, 1494, 337,
	341, 190, 1343, 163, 305, 181, 178, 1284, 1416, 1235,
	197, 275, 175, 218, 1323, 1387, 1277, 168, 1400, 1369,
	1431, 304, 321, 136, 243, 322, 340, 154, 316, 244,
	250, 165, 167, 166, 150, 299, 320, 159, 170, 1427,
	1410, 1433, 1271, 1251, 1262, 2830, 2831, 2832, 210, 201,
	1434, 1432, 335, 612, 295, 294, 1308, 209, 1413, 1371,
	607, 282, 613, 216, 141, 1438, 344, 153, 220, 317,
	605, 194, 256, 174, 1383, 264, 1290, 132, 278, 236,
	237, 235, 238, 200, 610, 614, 1409, 280, 297, 319,
	155, 311, 608, 609, 611, 616, 288, 617, 618, 1459,
	230, 186, 189, 203, 211, 1382, 284, 312, 336, 1373,
	151, 144, 314, 329, 160, 296, 298, 342, 1406, 146,
	1447, 1428, 240, 1326, 1332, 1237, 0, 145, 1402, 1281,
	199, 1270, 1377, 1269, 198, 1393, 327, 328, 173, 345,
	1246, 1467, 147, 1247, 1466, 253, 0, 252, 1469, 323,
	1448, 241, 1361, 1359, 1239, 1446, 239, 1360, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 1363,
	0, 143, 0, 309, 1457, 1478, 313, 157, 1264, 1420,
	318, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 1399, 343, 263, 287, 161, 333, 306,
	182, 1260, 1263, 1258, 1261, 1259, 1356, 1357, 1462, 1463,
	1464, 1408, 1253, 0, 0, 0, 0, 1348, 1450, 1240,
	0, 1424, 1492, 1493, 1390, 1474, 1310, 169, 1480, 1481,
	1482, 1483, 0, 1488, 1489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1257, 1274, 1296, 1344, 1345,
	1347, 1374, 1375, 1418, 1392, 1398, 1366, 134, 148, 223,
	1475, 281, 193, 1226, 1234, 1256, 1265, 1266, 1267, 1268,
	1279, 1283, 1295, 1298, 1299, 1307, 1313, 1314, 1315, 1316,
	1324, 1327, 1328, 1329, 1330, 1331, 1335, 1336, 1338, 1349,
	1353, 1362, 1364, 1365, 1396, 1401, 1412, 1415, 1421, 1423,
	1430, 1435, 1437, 1468, 1473, 1477, 334, 177, 1287, 1340,
	1346, 242, 1403, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 615, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 325, 326, 338, 339, 1442,
	1321, 131, 135, 138, 139, 606, 140, 142, 184, 191,
	1306, 137, 1440, 1470, 1378, 268, 1454, 1422, 315, 1325,
	1458, 1273, 1303, 1472, 1309, 1312, 1386, 1241, 1352, 260,
	1300, 1242, 1228, 1278, 1232, 1291, 1233, 1275, 180, 1272,
	1425, 1358, 1456, 1342, 1379, 1389, 179, 171, 1355, 1354,
	1444, 1289, 1288, 1384, 1439, 1455, 1341, 0, 1465, 224,
	1436, 1490, 0, 308, 245, 0, 0, 1339, 1441, 1350,
	1414, 1322, 1388, 1255, 1370, 1460, 1301, 1380, 1461, 0,
	0, 0, 0, 470, 0, 0, 0, 1297, 0, 0,
	0, 0, 1484, 0, 1376, 1452, 1294, 1491, 1334, 1385,
	1476, 1231, 1372, 0, 1236, 1244, 1471, 1445, 1285, 1286,
	183, 0, 0, 0, 0, 0, 0, 0, 1337, 1351,
	1405, 1319, 332, 1391, 1397, 1417, 1311, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 1280, 0, 1368,
	0, 0, 0, 1249, 1238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	0, 1254, 1229, 1282, 1407, 1230, 1227, 246, 1245, 1419,
	1443, 1320, 215, 619, 1449, 1318, 1317, 1394, 1250, 1429,
	1304, 222, 1248, 130, 1243, 164, 1302, 257, 1404, 1411,
	1486, 133, 1426, 1276, 1293, 172, 1485, 286, 1381, 331,
	1487, 1367, 285, 225, 324, 1395, 1451, 330, 1305, 1494,
	337, 341, 190, 1343, 163, 305, 181, 178, 1284, 1416,
	1235, 197, 275, 175, 218, 1323, 1387, 1277, 168, 1400,
	1369, 1431, 304, 321, 136, 243, 322, 340, 154, 316,
	244, 250, 165, 167, 166, 150, 299, 320, 159, 170,
	1427, 1410, 1433, 1271, 1251, 1262, 1252, 1292, 1453, 210,
	201, 1434, 1432, 335, 612, 295, 294, 1308, 209, 1413,
	1371, 607, 282, 613, 216, 141, 1438, 344, 153, 220,
	317, 605, 194, 256, 174, 1383, 264, 1290, 132, 278,
	236, 237, 235, 238, 200, 610, 614, 1409, 280, 297,
	319, 155, 311, 608, 609, 611, 616, 288, 617, 618,
	1459, 230, 186, 189, 203, 211, 1382, 284, 312, 336,
	1373, 151, 144, 314, 329, 160, 296, 298, 342, 1406,
	146, 1447, 1428, 240, 1326, 1332, 1237, 0, 145, 1402,
	1281, 199, 1270, 1377, 1269, 198, 1393, 327, 328, 173,
	345, 1246, 1467, 147, 1247, 1466, 253, 0, 252, 1469,
	323, 1448, 241, 1361, 1359, 1239, 1446, 239, 1360, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	1363, 0, 143, 0, 309, 1457, 1478, 313, 157, 1264,
	1420, 318, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 1399, 343, 263, 287, 161, 333,
	306, 182, 1260, 1263, 1258, 1261, 1259, 1356, 1357, 1462,
	1463, 1464, 1408, 1253, 0, 0, 0, 0, 1348, 1450,
	1240, 0, 1424, 1492, 1493, 1390, 1474, 1310, 169, 1480,
	1481, 1482, 1483, 0, 1488, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1257, 1274, 1296, 1344,
	1345, 1347, 1374, 1375, 1418, 1392, 1398, 1366, 134, 148,
	223, 1475, 281, 193, 1226, 1234, 1256, 1265, 1266, 1267,
	1268, 1279, 1283, 1295, 1298, 1299, 1307, 1313, 1314, 1315,
	1316, 1324, 1327, 1328, 1329, 1330, 1331, 1335, 1336, 1338,
	1349, 1353, 1362, 1364, 1365, 1396, 1401, 1412, 1415, 1421,
	1423, 1430, 1435, 1437, 1468, 1473, 1477, 334, 177, 1287,
	1340, 1346, 242, 1403, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 615, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 325, 326, 338, 339,
	1442, 1321, 131, 135, 138, 139, 606, 140, 142, 184,
	191, 1306, 137, 1440, 1470, 1378, 268, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 472, 0, 0, 180, 469, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 224, 0,
	0, 452, 308, 245, 0, 0, 0, 0, 552, 553,
	0, 0, 0, 0, 0, 0, 1674, 0, 81, 0,
	0, 0, 470, 493, 492, 495, 496, 497, 498, 0,
	0, 0, 494, 499, 505, 506, 1675, 0, 0, 0,
	0, 467, 484, 0, 564, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 481, 482, 0, 0, 0, 0, 579, 0,
	483, 0, 0, 479, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 555, 0,
	0, 215, 619, 0, 0, 577, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 562,
	133, 0, 0, 0, 172, 0, 286, 0, 331, 554,
	0, 285, 225, 324, 0, 0, 330, 0, 0, 337,
	341, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 321, 136, 243, 322, 340, 154, 316, 244,
	250, 165, 167, 166, 150, 299, 320, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 335, 612, 295, 294, 0, 209, 0, 0,
	607, 282, 613, 216, 141, 0, 344, 153, 220, 317,
	605, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 610, 614, 0, 280, 297, 319,
	155, 311, 608, 609, 611, 616, 288, 617, 618, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 336, 0,
	151, 144, 314, 329, 160, 296, 298, 342, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 327, 328, 173, 345,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 323,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	318, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 343, 263, 287, 161, 333, 306,
	182, 566, 578, 572, 574, 573, 570, 571, 569, 568,
	567, 580, 556, 557, 558, 559, 560, 0, 0, 0,
	563, 0, 575, 576, 0, 0, 0, 169, 500, 592,
	593, 594, 501, 595, 596, 502, 503, 597, 598, 599,
	600, 504, 601, 602, 603, 581, 582, 583, 584, 585,
	586, 587, 588, 591, 589, 590, 561, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 615, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 325, 326, 338, 339, 0,
	0, 131, 135, 138, 139, 606, 140, 142, 184, 191,
	0, 137, 36, 315, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	472, 0, 0, 180, 469, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 224, 0, 0, 452, 308, 245,
	0, 0, 0, 0, 552, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 470, 493,
	492, 495, 496, 497, 498, 0, 0, 0, 494, 499,
	505, 506, 0, 0, 0, 0, 0, 467, 484, 0,
	564, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 276, 196, 0, 0, 0, 0, 481, 482,
	0, 0, 0, 0, 579, 0, 483, 0, 0, 479,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 555, 0, 0, 215, 619, 0,
	0, 577, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 562, 133, 0, 0, 0,
	172, 0, 286, 0, 331, 554, 0, 285, 225, 324,
	0, 0, 330, 0, 0, 337, 341, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 321, 136,
	243, 322, 340, 154, 316, 244, 250, 165, 167, 166,
	150, 299, 320, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 335, 612,
	295, 294, 0, 209, 0, 0, 607, 282, 613, 216,
	141, 0, 344, 153, 220, 317, 605, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	610, 614, 0, 280, 297, 319, 155, 311, 608, 609,
	611, 616, 288, 617, 618, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 336, 0, 151, 144, 314, 329,
	160, 296, 298, 342, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 327, 328, 173, 345, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 323, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 318, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	343, 263, 287, 161, 333, 306, 182, 566, 578, 572,
	574, 573, 570, 571, 569, 568, 567, 580, 556, 557,
	558, 559, 560, 0, 0, 0, 563, 0, 575, 576,
	0, 0, 0, 169, 500, 592, 593, 594, 501, 595,
	596, 502, 503, 597, 598, 599, 600, 504, 601, 602,
	603, 581, 582, 583, 584, 585, 586, 587, 588, 591,
	589, 590, 561, 134, 148, 223, 79, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 615,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 325, 326, 338, 339, 315, 0, 131, 135, 138,
	139, 606, 140, 142, 184, 191, 260, 137, 0, 0,
	0, 268, 472, 0, 0, 180, 469, 0, 0, 0,
	0, 0, 0, 179, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 224, 0, 0, 452,
	308, 245, 0, 0, 0, 0, 552, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	470, 493, 492, 495, 496, 497, 498, 0, 0, 0,
	494, 499, 505, 506, 0, 0, 0, 0, 0, 467,
	484, 0, 564, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 276, 196, 0, 0, 0, 0,
	481, 482, 463, 0, 0, 0, 579, 0, 483, 0,
	0, 479, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 555, 0, 0, 215,
	619, 0, 0, 577, 0, 0, 0, 0, 222, 0,
	130, 0, 164, 0, 257, 0, 0, 562, 133, 0,
	0, 0, 172, 0, 286, 0, 331, 554, 0, 285,
	225, 324, 0, 0, 330, 0, 0, 337, 341, 190,
	0, 163, 305, 181, 178, 0, 0, 0, 197, 275,
	175, 218, 0, 0, 0, 168, 0, 0, 0, 304,
	321, 136, 243, 322, 340, 154, 316, 244, 250, 165,
	167, 166, 150, 299, 320, 159, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 201, 0, 0,
	335, 612, 295, 294, 0, 209, 0, 0, 607, 282,
	613, 216, 141, 0, 344, 153, 220, 317, 605, 194,
	256, 174, 0, 264, 0, 132, 278, 236, 237, 235,
	238, 200, 610, 614, 0, 280, 297, 319, 155, 311,
	608, 609, 611, 616, 288, 617, 618, 0, 230, 186,
	189, 203, 211, 0, 284, 312, 336, 0, 151, 144,
	314, 329, 160, 296, 298, 342, 0, 146, 0, 0,
	240, 0, 0, 0, 0, 145, 0, 0, 199, 0,
	0, 0, 198, 0, 327, 328, 173, 345, 0, 0,
	147, 0, 0, 253, 0, 252, 0, 323, 0, 241,
	0, 0, 0, 0, 239, 0, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 0, 0, 143,
	0, 309, 0, 0, 313, 157, 0, 0, 318, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 0, 343, 263, 287, 161, 333, 306, 182, 566,
	578, 572, 574, 573, 570, 571, 569, 568, 567, 580,
	556, 557, 558, 559, 560, 0, 0, 0, 563, 0,
	575, 576, 0, 0, 0, 169, 500, 592, 593, 594,
	501, 595, 596, 502, 503, 597, 598, 599, 600, 504,
	601, 602, 603, 581, 582, 583, 584, 585, 586, 587,
	588, 591, 589, 590, 561, 134, 148, 223, 0, 281,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 177, 0, 0, 0, 242,
	0, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 615, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 325, 326, 338, 339, 315, 0, 131,
	135, 138, 139, 606, 140, 142, 184, 191, 260, 137,
	0, 0, 0, 268, 472, 0, 0, 180, 469, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 224, 0,
	0, 452, 308, 245, 0, 0, 0, 0, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	840, 0, 470, 493, 492, 495, 496, 497, 498, 0,
	0, 0, 494, 499, 505, 506, 0, 0, 0, 0,
	0, 467, 484, 0, 564, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 481, 482, 0, 0, 0, 0, 579, 0,
	483, 0, 0, 479, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 555, 0,
	0, 215, 619, 0, 0, 577, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 562,
	133, 0, 0, 0, 172, 0, 286, 0, 331, 554,
	0, 285, 225, 324, 0, 0, 330, 0, 0, 337,
	341, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 321, 136, 243, 322, 340, 154, 316, 244,
	250, 165, 167, 166, 150, 299, 320, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 335, 612, 295, 294, 0, 209, 0, 0,
	607, 282, 613, 216, 141, 0, 344, 153, 220, 317,
	605, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 610, 614, 0, 280, 297, 319,
	155, 311, 608, 609, 611, 616, 288, 617, 618, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 336, 0,
	151, 144, 314, 329, 160, 296, 298, 342, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 327, 328, 173, 345,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 323,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	318, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 343, 263, 287, 161, 333, 306,
	182, 566, 578, 572, 574, 573, 570, 571, 569, 568,
	567, 580, 556, 557, 558, 559, 560, 0, 0, 0,
	563, 0, 575, 576, 0, 0, 0, 169, 500, 592,
	593, 594, 501, 595, 596, 502, 503, 597, 598, 599,
	600, 504, 601, 602, 603, 581, 582, 583, 584, 585,
	586, 587, 588, 591, 589, 590, 561, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 615, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 325, 326, 338, 339, 315,
	0, 131, 135, 138, 139, 606, 140, 142, 184, 191,
	260, 137, 0, 0, 0, 268, 472, 0, 0, 180,
	469, 0, 0, 0, 0, 0, 0, 179, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	224, 0, 0, 452, 308, 245, 0, 0, 0, 0,
	552, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 470, 493, 492, 495, 496, 497,
	498, 0, 0, 0, 494, 499, 505, 506, 0, 0,
	0, 0, 0, 467, 484, 0, 564, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 276, 196,
	0, 0, 0, 0, 481, 482, 1570, 0, 0, 0,
	579, 0, 483, 0, 0, 479, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	555, 0, 0, 215, 619, 0, 0, 577, 0, 0,
	0, 0, 222, 0, 130, 0, 164, 0, 257, 0,
	0, 562, 133, 0, 0, 0, 172, 0, 286, 0,
	331, 554, 0, 285, 225, 324, 0, 0, 330, 0,
	0, 337, 341, 190, 0, 163, 305, 181, 178, 0,
	0, 0, 197, 275, 175, 218, 0, 0, 0, 168,
	0, 0, 0, 304, 321, 136, 243, 322, 340, 154,
	316, 244, 250, 165, 167, 166, 150, 299, 320, 159,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 201, 0, 0, 335, 612, 295, 294, 0, 209,
	0, 0, 607, 282, 613, 216, 141, 0, 344, 153,
	220, 317, 605, 194, 256, 174, 0, 264, 0, 132,
	278, 236, 237, 235, 238, 200, 610, 614, 0, 280,
	297, 319, 155, 311, 608, 609, 611, 616, 288, 617,
	618, 0, 230, 186, 189, 203, 211, 0, 284, 312,
	336, 0, 151, 144, 314, 329, 160, 296, 298, 342,
	0, 146, 0, 0, 240, 0, 0, 0, 0, 145,
	0, 0, 199, 0, 0, 0, 198, 0, 327, 328,
	173, 345, 0, 0, 147, 0, 0, 253, 0, 252,
	0, 323, 0, 241, 0, 0, 0, 0, 239, 0,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 0, 0, 143, 0, 309, 0, 0, 313, 157,
	0, 0, 318, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 0, 343, 263, 287, 161,
	333, 306, 182, 566, 578, 572, 574, 573, 570, 571,
	569, 568, 567, 580, 556, 557, 558, 559, 560, 0,
	0, 0, 563, 0, 575, 576, 0, 0, 0, 169,
	500, 592, 593, 594, 501, 595, 596, 502, 503, 597,
	598, 599, 600, 504, 601, 602, 603, 581, 582, 583,
	584, 585, 586, 587, 588, 591, 589, 590, 561, 134,
	148, 223, 0, 281, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 177,
	0, 0, 0, 242, 0, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 615, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 325, 326, 338,
	339, 315, 0, 131, 135, 138, 139, 606, 140, 142,
	184, 191, 260, 137, 0, 0, 0, 268, 472, 0,
	0, 180, 469, 0, 0, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 224, 0, 0, 452, 308, 245, 0, 0,
	0, 0, 552, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 470, 493, 1582, 495,
	496, 497, 498, 0, 0, 0, 494, 499, 505, 506,
	0, 0, 0, 0, 0, 467, 484, 0, 564, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 481, 482, 1570, 0,
	0, 0, 579, 0, 483, 0, 0, 479, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 555, 0, 0, 215, 619, 0, 0, 577,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 0, 0, 562, 133, 0, 0, 0, 172, 0,
	286, 0, 331, 554, 0, 285, 225, 324, 0, 0,
	330, 0, 0, 337, 341, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 321, 136, 243, 322,
	340, 154, 316, 244, 250, 165, 167, 166, 150, 299,
	320, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 335, 612, 295, 294,
	0, 209, 0, 0, 607, 282, 613, 216, 141, 0,
	344, 153, 220, 317, 605, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 610, 614,
	0, 280, 297, 319, 155, 311, 608, 609, 611, 616,
	288, 617, 618, 0, 230, 186, 189, 203, 211, 0,
	284, 312, 336, 0, 151, 144, 314, 329, 160, 296,
	298, 342, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	327, 328, 173, 345, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 323, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 318, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 343, 263,
	287, 161, 333, 306, 182, 566, 578, 572, 574, 573,
	570, 571, 569, 568, 567, 580, 556, 557, 558, 559,
	560, 0, 0, 0, 563, 0, 575, 576, 0, 0,
	0, 169, 500, 592, 593, 594, 501, 595, 596, 502,
	503, 597, 598, 599, 600, 504, 601, 602, 603, 581,
	582, 583, 584, 585, 586, 587, 588, 591, 589, 590,
	561, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 615, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 325,
	326, 338, 339, 315, 0, 131, 135, 138, 139, 606,
	140, 142, 184, 191, 260, 137, 0, 0, 0, 268,
	472, 0, 0, 180, 469, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 224, 0, 0, 452, 308, 245,
	0, 0, 0, 0, 552, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 470, 493,
	1579, 495, 496, 497, 498, 0, 0, 0, 494, 499,
	505, 506, 0, 0, 0, 0, 0, 467, 484, 0,
	564, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 276, 196, 0, 0, 0, 0, 481, 482,
	1570, 0, 0, 0, 579, 0, 483, 0, 0, 479,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 555, 0, 0, 215, 619, 0,
	0, 577, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 562, 133, 0, 0, 0,
	172, 0, 286, 0, 331, 554, 0, 285, 225, 324,
	0, 0, 330, 0, 0, 337, 341, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 321, 136,
	243, 322, 340, 154, 316, 244, 250, 165, 167, 166,
	150, 299, 320, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 335, 612,
	295, 294, 0, 209, 0, 0, 607, 282, 613, 216,
	141, 0, 344, 153, 220, 317, 605, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	610, 614, 0, 280, 297, 319, 155, 311, 608, 609,
	611, 616, 288, 617, 618, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 336, 0, 151, 144, 314, 329,
	160, 296, 298, 342, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 327, 328, 173, 345, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 323, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 318, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	343, 263, 287, 161, 333, 306, 182, 566, 578, 572,
	574, 573, 570, 571, 569, 568, 567, 580, 556, 557,
	558, 559, 560, 0, 0, 0, 563, 0, 575, 576,
	0, 0, 0, 169, 500, 592, 593, 594, 501, 595,
	596, 502, 503, 597, 598, 599, 600, 504, 601, 602,
	603, 581, 582, 583, 584, 585, 586, 587, 588, 591,
	589, 590, 561, 134, 148, 223, 0, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 615,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 325, 326, 338, 339, 315, 0, 131, 135, 138,
	139, 606, 140, 142, 184, 191, 260, 137, 0, 0,
	0, 268, 472, 0, 0, 180, 469, 0, 0, 0,
	0, 0, 0, 179, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 224, 0, 0, 452,
	308, 245, 0, 0, 0, 0, 552, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 1167, 0,
	470, 493, 492, 495, 496, 497, 498, 0, 0, 0,
	494, 499, 505, 506, 0, 0, 0, 0, 0, 467,
	484, 0, 564, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 276, 196, 0, 0, 0, 0,
	481, 482, 0, 0, 0, 0, 579, 0, 483, 0,
	0, 479, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 555, 0, 0, 215,
	619, 0, 0, 577, 0, 0, 0, 0, 222, 0,
	130, 0, 164, 0, 257, 0, 0, 562, 133, 0,
	0, 0, 172, 0, 286, 0, 331, 554, 0, 285,
	225, 324, 0, 0, 330, 0, 0, 337, 341, 190,
	0, 163, 305, 181, 178, 0, 0, 0, 197, 275,
	175, 218, 0, 0, 0, 168, 0, 0, 0, 304,
	321, 136, 243, 322, 340, 154, 316, 244, 250, 165,
	167, 166, 150, 299, 320, 159, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 201, 0, 0,
	335, 612, 295, 294, 0, 209, 0, 0, 607, 282,
	613, 216, 141, 0, 344, 153, 220, 317, 605, 194,
	256, 174, 0, 264, 0, 132, 278, 236, 237, 235,
	238, 200, 610, 614, 0, 280, 297, 319, 155, 311,
	608, 609, 611, 616, 288, 617, 618, 0, 230, 186,
	189, 203, 211, 0, 284, 312, 336, 0, 151, 144,
	314, 329, 160, 296, 298, 342, 0, 146, 0, 0,
	240, 0, 0, 0, 0, 145, 0, 0, 199, 0,
	0, 0, 198, 0, 327, 328, 173, 345, 0, 0,
	147, 0, 0, 253, 0, 252, 0, 323, 0, 241,
	0, 0, 0, 0, 239, 0, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 0, 0, 143,
	0, 309, 0, 0, 313, 157, 0, 0, 318, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 0, 343, 263, 287, 161, 333, 306, 182, 566,
	578, 572, 574, 573, 570, 571, 569, 568, 567, 580,
	556, 557, 558, 559, 560, 0, 0, 0, 563, 0,
	575, 576, 0, 0, 0, 169, 500, 592, 593, 594,
	501, 595, 596, 502, 503, 597, 598, 599, 600, 504,
	601, 602, 603, 581, 582, 583, 584, 585, 586, 587,
	588, 591, 589, 590, 561, 134, 148, 223, 0, 281,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 177, 0, 0, 0, 242,
	0, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 615, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 325, 326, 338, 339, 315, 0, 131,
	135, 138, 139, 606, 140, 142, 184, 191, 260, 137,
	0, 0, 0, 268, 472, 0, 0, 180, 469, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 565, 224, 0,
	0, 452, 308, 245, 0, 0, 0, 0, 552, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 470, 493, 492, 495, 496, 497, 498, 0,
	0, 0, 494, 499, 505, 506, 0, 0, 0, 0,
	0, 467, 484, 0, 564, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 481, 482, 0, 0, 0, 0, 579, 0,
	483, 0, 0, 479, 510, 511, 512, 513, 514, 515,
	516, 517, 518, 519, 520, 521, 522, 523, 524, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 555, 0,
	0, 215, 619, 0, 0, 577, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 562,
	133, 0, 0, 0, 172, 0, 286, 0, 331, 554,
	0, 285, 225, 324, 0, 0, 330, 0, 0, 337,
	341, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 321, 136, 243, 322, 340, 154, 316, 244,
	250, 165, 167, 166, 150, 299, 320, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 335, 612, 295, 294, 0, 209, 0, 0,
	607, 282, 613, 216, 141, 0, 344, 153, 220, 317,
	605, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 610, 614, 0, 280, 297, 319,
	155, 311, 608, 609, 611, 616, 288, 617, 618, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 336, 0,
	151, 144, 314, 329, 160, 296, 298, 342, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 327, 328, 173, 345,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 323,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	318, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 343, 263, 287, 161, 333, 306,
	182, 566, 578, 572, 574, 573, 570, 571, 569, 568,
	567, 580, 556, 557, 558, 559, 560, 0, 0, 0,
	563, 0, 575, 576, 0, 0, 0, 169, 500, 592,
	593, 594, 501, 595, 596, 502, 503, 597, 598, 599,
	600, 504, 601, 602, 603, 581, 582, 583, 584, 585,
	586, 587, 588, 591, 589, 590, 561, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 615, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 325, 326, 338, 339, 315,
	0, 131, 135, 138, 139, 606, 140, 142, 184, 191,
	260, 137, 0, 0, 0, 268, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 179, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 565,
	224, 0, 0, 452, 308, 245, 0, 0, 0, 0,
	552, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 470, 493, 492, 495, 496, 497,
	498, 0, 0, 0, 494, 499, 505, 506, 0, 0,
	0, 0, 0, 0, 484, 0, 564, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 276, 196,
	0, 0, 0, 0, 481, 482, 0, 0, 0, 0,
	579, 0, 483, 0, 0, 479, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	555, 0, 0, 215, 619, 0, 0, 577, 0, 0,
	0, 0, 222, 0, 130, 0, 164, 0, 257, 0,
	0, 562, 133, 0, 0, 0, 172, 0, 286, 0,
	331, 554, 0, 285, 225, 324, 0, 0, 330, 0,
	0, 337, 341, 190, 0, 163, 305, 181, 178, 0,
	0, 0, 197, 275, 175, 218, 0, 0, 0, 168,
	0, 0, 0, 304, 321, 136, 243, 322, 340, 154,
	316, 244, 250, 165, 167, 166, 150, 299, 320, 159,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 201, 0, 0, 335, 612, 295, 294, 0, 209,
	0, 0, 607, 282, 613, 216, 141, 0, 344, 153,
	220, 317, 605, 194, 256, 174, 0, 264, 0, 132,
	278, 236, 237, 235, 238, 200, 610, 614, 0, 280,
	297, 319, 155, 311, 608, 609, 611, 616, 288, 617,
	618, 0, 230, 186, 189, 203, 211, 0, 284, 312,
	336, 0, 151, 144, 314, 329, 160, 296, 298, 342,
	0, 146, 0, 0, 240, 0, 0, 0, 0, 145,
	0, 0, 199, 0, 0, 0, 198, 0, 327, 328,
	173, 345, 0, 0, 147, 0, 0, 253, 0, 252,
	0, 323, 0, 241, 0, 0, 0, 0, 239, 0,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 0, 0, 143, 0, 309, 0, 0, 313, 157,
	0, 0, 318, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 0, 343, 263, 287, 161,
	333, 306, 182, 566, 578, 572, 574, 573, 570, 571,
	569, 568, 567, 580, 556, 557, 558, 559, 560, 1585,
	1586, 1587, 563, 0, 575, 576, 0, 0, 0, 169,
	500, 592, 593, 594, 501, 595, 596, 502, 503, 597,
	598, 599, 600, 504, 601, 602, 603, 581, 582, 583,
	584, 585, 586, 587, 588, 591, 589, 590, 561, 134,
	148, 223, 0, 281, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 177,
	0, 0, 0, 242, 0, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 615, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 325, 326, 338,
	339, 315, 0, 131, 135, 138, 139, 606, 140, 142,
	184, 191, 260, 137, 0, 0, 0, 268, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 224, 0, 0, 452, 308, 245, 0, 0,
	0, 0, 552, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 470, 493, 492, 495,
	496, 497, 498, 0, 0, 0, 494, 499, 505, 506,
	0, 0, 0, 0, 0, 0, 484, 0, 564, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 481, 482, 0, 0,
	0, 0, 579, 0, 483, 0, 0, 479, 510, 511,
	512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 555, 0, 0, 215, 619, 0, 0, 577,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 0, 0, 562, 133, 0, 0, 0, 172, 0,
	286, 0, 331, 554, 2970, 285, 225, 324, 0, 0,
	330, 0, 0, 337, 341, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 321, 136, 243, 322,
	340, 154, 316, 244, 250, 165, 167, 166, 150, 299,
	320, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 335, 612, 295, 294,
	0, 209, 0, 0, 607, 282, 613, 216, 141, 0,
	344, 153, 220, 317, 605, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 610, 614,
	0, 280, 297, 319, 155, 311, 608, 609, 611, 616,
	288, 617, 618, 0, 230, 186, 189, 203, 211, 0,
	284, 312, 336, 0, 151, 144, 314, 329, 160, 296,
	298, 342, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	327, 328, 173, 345, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 323, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 318, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 343, 263,
	287, 161, 333, 306, 182, 566, 578, 572, 574, 573,
	570, 571, 569, 568, 567, 580, 556, 557, 558, 559,
	560, 0, 0, 0, 563, 0, 575, 576, 0, 0,
	0, 169, 500, 592, 593, 594, 501, 595, 596, 502,
	503, 597, 598, 599, 600, 504, 601, 602, 603, 581,
	582, 583, 584, 585, 586, 587, 588, 591, 589, 590,
	561, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 615, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 325,
	326, 338, 339, 315, 0, 131, 135, 138, 139, 606,
	140, 142, 184, 191, 260, 137, 0, 0, 0, 268,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 224, 0, 0, 452, 308, 245,
	0, 0, 0, 0, 552, 553, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 840, 0, 470, 493,
	492, 495, 496, 497, 498, 0, 0, 0, 494, 499,
	505, 506, 0, 0, 0, 0, 0, 0, 484, 0,
	564, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 276, 196, 0, 0, 0, 0, 481, 482,
	0, 0, 0, 0, 579, 0, 483, 0, 0, 479,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 555, 0, 0, 215, 619, 0,
	0, 577, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 562, 133, 0, 0, 0,
	172, 0, 286, 0, 331, 554, 0, 285, 225, 324,
	0, 0, 330, 0, 0, 337, 341, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 321, 136,
	243, 322, 340, 154, 316, 244, 250, 165, 167, 166,
	150, 299, 320, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 335, 612,
	295, 294, 0, 209, 0, 0, 607, 282, 613, 216,
	141, 0, 344, 153, 220, 317, 605, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	610, 614, 0, 280, 297, 319, 155, 311, 608, 609,
	611, 616, 288, 617, 618, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 336, 0, 151, 144, 314, 329,
	160, 296, 298, 342, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 327, 328, 173, 345, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 323, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 318, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	343, 263, 287, 161, 333, 306, 182, 566, 578, 572,
	574, 573, 570, 571, 569, 568, 567, 580, 556, 557,
	558, 559, 560, 0, 0, 0, 563, 0, 575, 576,
	0, 0, 0, 169, 500, 592, 593, 594, 501, 595,
	596, 502, 503, 597, 598, 599, 600, 504, 601, 602,
	603, 581, 582, 583, 584, 585, 586, 587, 588, 591,
	589, 590, 561, 134, 148, 223, 0, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 615,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 325, 326, 338, 339, 315, 0, 131, 135, 138,
	139, 606, 140, 142, 184, 191, 260, 137, 0, 0,
	0, 268, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 179, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 224, 0, 0, 452,
	308, 245, 0, 0, 0, 0, 552, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	470, 493, 492, 495, 496, 497, 498, 0, 0, 0,
	494, 499, 505, 506, 0, 0, 0, 0, 0, 0,
	484, 0, 564, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 276, 196, 0, 0, 0, 0,
	481, 482, 0, 0, 0, 0, 579, 0, 483, 0,
	0, 479, 510, 511, 512, 513, 514, 515, 516, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 555, 0, 0, 215,
	619, 0, 0, 577, 0, 0, 0, 0, 222, 0,
	130, 0, 164, 0, 257, 0, 0, 562, 133, 0,
	0, 0, 172, 0, 286, 0, 331, 554, 0, 285,
	225, 324, 0, 0, 330, 0, 0, 337, 341, 190,
	0, 163, 305, 181, 178, 0, 0, 0, 197, 275,
	175, 218, 0, 0, 0, 168, 0, 0, 0, 304,
	321, 136, 243, 322, 340, 154, 316, 244, 250, 165,
	167, 166, 150, 299, 320, 159, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 201, 0, 0,
	335, 612, 295, 294, 0, 209, 0, 0, 607, 282,
	613, 216, 141, 0, 344, 153, 220, 317, 605, 194,
	256, 174, 0, 264, 0, 132, 278, 236, 237, 235,
	238, 200, 610, 614, 0, 280, 297, 319, 155, 311,
	608, 609, 611, 616, 288, 617, 618, 0, 230, 186,
	189, 203, 211, 0, 284, 312, 336, 0, 151, 144,
	314, 329, 160, 296, 298, 342, 0, 146, 0, 0,
	240, 0, 0, 0, 0, 145, 0, 0, 199, 0,
	0, 0, 198, 0, 327, 328, 173, 345, 0, 0,
	147, 0, 0, 253, 0, 252, 0, 323, 0, 241,
	0, 0, 0, 0, 239, 0, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 0, 0, 143,
	0, 309, 0, 0, 313, 157, 0, 0, 318, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 0, 343, 263, 287, 161, 333, 306, 182, 566,
	578, 572, 574, 573, 570, 571, 569, 568, 567, 580,
	556, 557, 558, 559, 560, 0, 0, 0, 563, 0,
	575, 576, 0, 0, 0, 169, 500, 592, 593, 594,
	501, 595, 596, 502, 503, 597, 598, 599, 600, 504,
	601, 602, 603, 581, 582, 583, 584, 585, 586, 587,
	588, 591, 589, 590, 561, 134, 148, 223, 0, 281,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 177, 0, 0, 0, 242,
	0, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 615, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 325, 326, 338, 339, 315, 0, 131,
	135, 138, 139, 606, 140, 142, 184, 191, 260, 137,
	0, 0, 0, 268, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 308, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 276, 196, 878, 877,
	887, 888, 880, 881, 882, 883, 884, 885, 886, 879,
	0, 0, 889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 215, 619, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 0,
	133, 0, 0, 0, 172, 0, 286, 0, 331, 0,
	0, 285, 225, 324, 0, 0, 330, 0, 0, 337,
	341, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 321, 136, 243, 322, 340, 154, 316, 244,
	250, 165, 167, 166, 150, 299, 320, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 335, 612, 295, 294, 0, 209, 0, 0,
	607, 282, 613, 216, 141, 0, 344, 153, 220, 317,
	605, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 610, 614, 0, 280, 297, 319,
	155, 311, 608, 609, 611, 616, 288, 617, 618, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 336, 0,
	151, 144, 314, 329, 160, 296, 298, 342, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 327, 328, 173, 345,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 323,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	318, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 343, 263, 287, 161, 333, 306,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 615, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 325, 326, 338, 339, 0,
	0, 131, 135, 138, 139, 606, 140, 142, 184, 191,
	315, 137, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 863, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 179, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 452, 308, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 864, 0, 867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 859, 860, 858, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	861, 0, 0, 0, 332, 0, 0, 0, 0, 276,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 215, 619, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 130, 0, 164, 0, 257,
	0, 0, 0, 133, 0, 0, 0, 172, 0, 286,
	0, 331, 0, 0, 285, 225, 324, 0, 0, 330,
	0, 0, 337, 341, 190, 0, 163, 305, 181, 178,
	0, 0, 0, 197, 275, 175, 218, 0, 0, 0,
	168, 0, 0, 0, 304, 321, 136, 243, 322, 340,
	154, 316, 244, 250, 165, 167, 166, 150, 299, 320,
	159, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 201, 0, 0, 335, 612, 295, 294, 0,
	209, 0, 0, 607, 282, 613, 216, 141, 0, 344,
	153, 220, 317, 605, 194, 256, 174, 0, 264, 0,
	132, 278, 236, 237, 235, 238, 200, 610, 614, 0,
	280, 297, 319, 155, 311, 608, 609, 611, 616, 288,
	617, 618, 0, 230, 186, 189, 203, 211, 0, 284,
	312, 336, 0, 151, 144, 314, 329, 160, 296, 298,
	342, 0, 146, 0, 0, 240, 0, 0, 0, 0,
	145, 0, 0, 199, 0, 0, 0, 198, 0, 327,
	328, 173, 345, 0, 0, 147, 0, 0, 253, 0,
	252, 0, 323, 0, 241, 0, 0, 0, 0, 239,
	0, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 228, 0, 0, 143, 0, 309, 0, 0, 313,
	157, 0, 0, 318, 202, 279, 158, 195, 187, 272,
	251, 152, 208, 307, 219, 226, 0, 343, 263, 287,
	161, 333, 306, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 447, 0, 0, 0, 448, 0, 0, 449, 450,
	0, 0, 0, 0, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 148, 223, 0, 281, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	177, 0, 0, 0, 242, 0, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 270, 271, 277, 615, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 325, 326,
	338, 339, 315, 0, 131, 135, 138, 139, 606, 140,
	142, 184, 191, 260, 137, 0, 0, 0, 268, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	179, 171, 0, 0, 0, 0, 0, 0, 0, 1697,
	1701, 0, 0, 224, 0, 0, 0, 308, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 276, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 1700, 215, 619, 0, 0,
	0, 1694, 0, 1695, 1696, 222, 658, 130, 0, 1692,
	1699, 257, 0, 0, 0, 133, 0, 0, 0, 172,
	0, 286, 0, 331, 0, 0, 285, 225, 324, 0,
	0, 330, 0, 0, 337, 341, 190, 0, 163, 305,
	181, 178, 0, 0, 0, 197, 275, 175, 218, 0,
	0, 0, 168, 0, 0, 0, 304, 321, 136, 243,
	322, 340, 154, 316, 244, 250, 165, 167, 166, 150,
	299, 320, 159, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 201, 0, 0, 335, 612, 295,
	294, 0, 209, 0, 0, 607, 282, 613, 216, 141,
	0, 344, 153, 220, 317, 605, 194, 256, 174, 0,
	264, 0, 132, 278, 236, 237, 235, 238, 200, 610,
	614, 0, 280, 297, 319, 155, 311, 608, 609, 611,
	616, 288, 617, 618, 0, 230, 186, 189, 203, 211,
	0, 284, 312, 336, 0, 151, 144, 314, 329, 160,
	296, 298, 342, 0, 146, 0, 0, 240, 0, 0,
	0, 0, 145, 0, 0, 199, 0, 0, 0, 198,
	0, 327, 328, 173, 345, 0, 0, 147, 0, 0,
	253, 0, 252, 0, 323, 0, 241, 0, 0, 0,
	0, 239, 0, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 228, 0, 0, 143, 0, 309, 0,
	0, 313, 157, 0, 0, 318, 202, 279, 158, 195,
	187, 272, 251, 152, 208, 307, 219, 226, 0, 343,
	263, 287, 161, 333, 306, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 148, 223, 0, 281, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 177, 0, 0, 0, 242, 0, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 270, 271, 277, 615, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	325, 326, 338, 339, 315, 0, 131, 135, 138, 139,
	606, 140, 142, 184, 191, 260, 137, 0, 0, 0,
	268, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 452, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 864,
	0, 867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 215, 619,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 0, 133, 0, 0,
	0, 172, 0, 286, 0, 331, 0, 0, 285, 225,
	324, 0, 0, 330, 0, 0, 337, 341, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 321,
	136, 243, 322, 340, 154, 316, 244, 250, 165, 167,
	166, 150, 299, 320, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 335,
	612, 295, 294, 0, 209, 0, 0, 607, 282, 613,
	216, 141, 0, 344, 153, 220, 317, 605, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 610, 614, 0, 280, 297, 319, 155, 311, 608,
	609, 611, 616, 288, 617, 618, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 336, 0, 151, 144, 314,
	329, 160, 296, 298, 342, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 327, 328, 173, 345, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 323, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 318, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 343, 263, 287, 161, 333, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 447, 0, 0, 0, 448,
	0, 0, 449, 450, 0, 0, 0, 0, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	615, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 325, 326, 338, 339, 0, 0, 131, 135,
	138, 139, 606, 140, 142, 184, 191, 0, 137, 0,
	0, 0, 268, 415, 315, 409, 420, 403, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 426, 0,
	0, 0, 0, 0, 180, 0, 0, 410, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 401, 404,
	0, 0, 0, 246, 0, 0, 0, 408, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 412, 0, 0, 133, 416, 0,
	0, 172, 0, 286, 0, 331, 0, 0, 285, 225,
	324, 0, 419, 330, 0, 0, 337, 341, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 321,
	136, 243, 322, 340, 154, 316, 244, 250, 165, 167,
	166, 150, 299, 320, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 335,
	0, 295, 294, 0, 209, 0, 0, 0, 282, 0,
	216, 141, 0, 344, 153, 220, 317, 0, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 0, 0, 0, 429, 297, 319, 155, 311, 405,
	406, 407, 413, 414, 417, 418, 421, 230, 186, 189,
	203, 211, 0, 284, 312, 336, 0, 151, 144, 314,
	329, 160, 296, 298, 342, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 327, 328, 173, 345, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 323, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 318, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 343, 263, 287, 161, 333, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	411, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 325, 326, 338, 339, 0, 0, 131, 135,
	138, 139, 0, 140, 142, 184, 191, 0, 137, 0,
	0, 0, 268, 415, 315, 409, 420, 403, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 395, 0,
	0, 0, 0, 0, 180, 0, 0, 410, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 424,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 402, 401, 404,
	0, 0, 0, 246, 0, 0, 0, 408, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 412, 0, 0, 133, 416, 0,
	0, 172, 0, 286, 0, 331, 0, 0, 285, 225,
	324, 0, 419, 330, 0, 0, 337, 341, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 321,
	136, 243, 322, 340, 154, 316, 244, 250, 165, 167,
	166, 150, 299, 320, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 335,
	0, 295, 294, 0, 209, 0, 0, 0, 282, 0,
	216, 141, 0, 344, 153, 220, 317, 0, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 0, 0, 0, 398, 297, 319, 155, 311, 405,
	406, 407, 413, 414, 417, 418, 421, 230, 186, 189,
	203, 211, 0, 284, 312, 336, 0, 151, 144, 314,
	329, 160, 296, 298, 342, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 327, 328, 173, 345, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 323, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 318, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 343, 263, 287, 161, 333, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	411, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 325, 326, 338, 339, 315, 0, 131, 135,
	138, 139, 0, 140, 142, 184, 191, 260, 137, 0,
	0, 0, 268, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 179, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	452, 308, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	215, 619, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 130, 0, 164, 0, 257, 0, 0, 0, 133,
	0, 0, 0, 172, 0, 286, 0, 331, 0, 0,
	285, 225, 324, 0, 0, 330, 0, 0, 337, 341,
	190, 0, 163, 305, 181, 178, 0, 0, 0, 197,
	275, 175, 218, 0, 0, 0, 168, 0, 0, 0,
	304, 321, 136, 243, 322, 340, 154, 316, 244, 250,
	165, 167, 166, 150, 299, 320, 159, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 201, 0,
	0, 335, 612, 295, 294, 0, 209, 0, 0, 607,
	282, 613, 216, 141, 0, 344, 153, 220, 317, 605,
	194, 256, 174, 0, 264, 0, 132, 278, 236, 237,
	235, 238, 200, 610, 614, 0, 280, 297, 319, 155,
	311, 608, 609, 611, 616, 288, 617, 618, 0, 230,
	186, 189, 203, 211, 0, 284, 312, 336, 0, 151,
	144, 314, 329, 160, 296, 298, 342, 0, 146, 0,
	0, 240, 0, 0, 0, 0, 145, 0, 0, 199,
	0, 0, 0, 198, 0, 327, 328, 173, 345, 0,
	0, 147, 0, 0, 253, 0, 252, 0, 323, 0,
	241, 0, 0, 0, 0, 239, 0, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 0, 0,
	143, 0, 309, 0, 0, 313, 157, 0, 0, 318,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 0, 343, 263, 287, 161, 333, 306, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 447, 0, 0,
	0, 448, 0, 0, 449, 450, 0, 0, 0, 0,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 148, 223, 0,
	281, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 177, 0, 0, 0,
	242, 0, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 615, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 325, 326, 338, 339, 315, 0,
	131, 135, 138, 139, 606, 140, 142, 184, 191, 260,
	137, 0, 0, 0, 268, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 179, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 308, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2073, 332, 0, 0, 0, 0, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 215, 619, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 130, 0, 164, 0, 257, 0, 0,
	0, 133, 0, 0, 0, 172, 0, 286, 0, 331,
	0, 0, 285, 225, 324, 0, 0, 330, 0, 0,
	337, 341, 190, 0, 163, 305, 181, 178, 0, 0,
	0, 197, 275, 175, 218, 2074, 2075, 0, 168, 0,
	0, 0, 304, 321, 136, 243, 322, 340, 154, 316,
	244, 250, 165, 167, 166, 150, 299, 320, 159, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	201, 0, 0, 335, 612, 295, 294, 0, 209, 0,
	0, 607, 282, 613, 216, 141, 0, 344, 153, 220,
	317, 605, 194, 256, 174, 0, 264, 0, 132, 278,
	236, 237, 235, 238, 200, 610, 614, 0, 280, 297,
	319, 155, 311, 608, 609, 611, 616, 288, 617, 618,
	0, 230, 186, 189, 203, 211, 0, 284, 312, 336,
	0, 151, 144, 314, 329, 160, 296, 298, 342, 0,
	146, 0, 0, 240, 0, 0, 0, 0, 145, 0,
	0, 199, 0, 0, 0, 198, 0, 327, 328, 173,
	345, 0, 0, 147, 0, 0, 253, 0, 252, 0,
	323, 0, 241, 0, 0, 0, 0, 239, 0, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	0, 0, 143, 0, 309, 0, 0, 313, 157, 0,
	0, 318, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 0, 343, 263, 287, 161, 333,
	306, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 148,
	223, 0, 281, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 177, 0,
	0, 0, 242, 0, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 615, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 325, 326, 338, 339,
	315, 0, 131, 135, 138, 139, 606, 140, 142, 184,
	191, 260, 137, 0, 0, 0, 268, 0, 0, 0,
	180, 1015, 0, 0, 0, 0, 0, 0, 179, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 308, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 0, 1014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 276,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 215, 619, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 130, 0, 164, 0, 257,
	0, 0, 0, 133, 0, 0, 0, 172, 0, 286,
	0, 331, 0, 0, 285, 225, 324, 0, 0, 330,
	0, 0, 337, 341, 190, 0, 163, 305, 181, 178,
	0, 0, 0, 197, 275, 175, 218, 0, 0, 0,
	168, 0, 0, 0, 304, 321, 136, 243, 322, 340,
	154, 316, 244, 250, 165, 167, 166, 150, 299, 320,
	159, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 201, 0, 0, 335, 612, 295, 294, 0,
	209, 0, 0, 607, 282, 613, 216, 141, 0, 344,
	153, 220, 317, 605, 194, 256, 174, 0, 264, 0,
	132, 278, 236, 237, 235, 238, 200, 610, 614, 0,
	280, 297, 319, 155, 311, 608, 609, 611, 616, 288,
	617, 618, 0, 230, 186, 189, 203, 211, 0, 284,
	312, 336, 0, 151, 144, 314, 329, 160, 296, 298,
	342, 0, 146, 0, 0, 240, 0, 0, 0, 0,
	145, 0, 0, 199, 0, 0, 0, 198, 0, 327,
	328, 173, 345, 0, 0, 147, 0, 0, 253, 0,
	252, 0, 323, 0, 241, 0, 0, 0, 0, 239,
	0, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 228, 0, 0, 143, 0, 309, 0, 0, 313,
	157, 0, 0, 318, 202, 279, 158, 195, 187, 272,
	251, 152, 208, 307, 219, 226, 0, 343, 263, 287,
	161, 333, 306, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 148, 223, 0, 281, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	177, 0, 0, 0, 242, 0, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 270, 271, 277, 615, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 325, 326,
	338, 339, 315, 0, 131, 135, 138, 139, 606, 140,
	142, 184, 191, 260, 137, 0, 0, 0, 268, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	179, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 308, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 276, 196, 0, 0, 0, 0, 0, 0, 2341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 215, 619, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 130, 0, 164,
	0, 257, 0, 0, 0, 133, 0, 0, 0, 172,
	0, 286, 0, 331, 0, 0, 285, 225, 324, 0,
	0, 330, 0, 0, 337, 341, 190, 0, 163, 305,
	181, 178, 0, 0, 0, 197, 275, 175, 218, 0,
	0, 0, 168, 0, 0, 0, 304, 321, 136, 243,
	322, 340, 154, 316, 244, 250, 165, 167, 166, 150,
	299, 320, 159, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 201, 0, 0, 335, 612, 295,
	294, 0, 209, 0, 0, 607, 282, 613, 216, 141,
	0, 344, 153, 220, 317, 605, 194, 256, 174, 0,
	264, 0, 132, 278, 236, 237, 235, 238, 200, 610,
	614, 0, 280, 297, 319, 155, 311, 608, 609, 611,
	616, 288, 617, 618, 0, 230, 186, 189, 203, 211,
	0, 284, 312, 336, 0, 151, 144, 314, 329, 160,
	296, 298, 342, 0, 146, 0, 0, 240, 0, 0,
	0, 0, 145, 0, 0, 199, 0, 0, 0, 198,
	0, 327, 328, 173, 345, 0, 0, 147, 0, 0,
	253, 0, 252, 0, 323, 0, 241, 0, 0, 0,
	0, 239, 0, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 228, 0, 0, 143, 0, 309, 0,
	0, 313, 157, 0, 0, 318, 202, 279, 158, 195,
	187, 272, 251, 152, 208, 307, 219, 226, 0, 343,
	263, 287, 161, 333, 306, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 148, 223, 0, 281, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 177, 0, 0, 0, 242, 0, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 270, 271, 277, 615, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	325, 326, 338, 339, 315, 0, 131, 135, 138, 139,
	606, 140, 142, 184, 191, 260, 137, 0, 0, 0,
	268, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 215, 619,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 0, 133, 0, 0,
	0, 172, 0, 286, 0, 331, 0, 0, 285, 225,
	324, 0, 0, 330, 0, 0, 337, 341, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 321,
	136, 243, 322, 340, 154, 316, 244, 250, 165, 167,
	166, 150, 299, 320, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 335,
	612, 295, 294, 0, 209, 0, 0, 607, 282, 613,
	216, 141, 0, 344, 153, 220, 317, 605, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 610, 614, 0, 280, 297, 319, 155, 311, 608,
	609, 611, 616, 288, 617, 618, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 336, 0, 151, 144, 314,
	329, 160, 296, 298, 342, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 327, 328, 173, 345, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 323, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 318, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 343, 263, 287, 161, 333, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	615, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 325, 326, 338, 339, 315, 0, 131, 135,
	138, 139, 606, 140, 142, 184, 191, 260, 137, 0,
	0, 0, 268, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 1850, 1851, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 308, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	215, 619, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 130, 0, 164, 0, 257, 0, 0, 0, 133,
	0, 0, 0, 172, 0, 286, 0, 331, 0, 0,
	285, 225, 324, 0, 0, 330, 0, 0, 337, 341,
	190, 0, 163, 305, 181, 178, 0, 0, 0, 197,
	275, 175, 218, 0, 0, 0, 168, 0, 0, 0,
	304, 321, 136, 243, 322, 340, 154, 316, 244, 250,
	165, 167, 166, 150, 299, 320, 159, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 201, 0,
	0, 335, 612, 295, 294, 0, 209, 0, 0, 607,
	282, 613, 216, 141, 0, 344, 153, 220, 317, 605,
	194, 256, 174, 0, 264, 0, 132, 278, 236, 237,
	235, 238, 200, 610, 614, 0, 280, 297, 319, 155,
	311, 608, 609, 611, 616, 288, 617, 618, 0, 230,
	186, 189, 203, 211, 0, 284, 312, 336, 0, 151,
	144, 314, 329, 160, 296, 298, 342, 0, 146, 0,
	0, 240, 0, 0, 0, 0, 145, 0, 0, 199,
	0, 0, 0, 198, 0, 327, 328, 173, 345, 0,
	0, 147, 0, 0, 253, 0, 252, 0, 323, 0,
	241, 0, 0, 0, 0, 239, 0, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 0, 0,
	143, 0, 309, 0, 0, 313, 157, 0, 0, 318,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 0, 343, 263, 287, 161, 333, 306, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 148, 223, 0,
	281, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 177, 0, 0, 0,
	242, 0, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 615, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 325, 326, 338, 339, 315, 0,
	131, 135, 138, 139, 606, 140, 142, 184, 191, 260,
	137, 0, 0, 0, 268, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 179, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 308, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 276, 196, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 215, 619, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 130, 0, 164, 0, 257, 0, 0,
	0, 133, 0, 0, 0, 172, 0, 286, 0, 331,
	0, 0, 285, 225, 324, 0, 0, 330, 0, 0,
	337, 341, 190, 0, 163, 305, 181, 178, 0, 0,
	0, 197, 275, 175, 218, 0, 0, 0, 168, 0,
	0, 0, 304, 321, 136, 243, 322, 340, 154, 316,
	244, 250, 165, 167, 166, 150, 299, 320, 159, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	201, 0, 0, 335, 612, 295, 294, 0, 209, 0,
	0, 607, 282, 613, 216, 141, 0, 344, 153, 220,
	317, 605, 194, 256, 174, 0, 264, 0, 132, 278,
	236, 237, 235, 238, 200, 610, 614, 0, 280, 297,
	319, 155, 311, 608, 609, 611, 616, 288, 617, 618,
	0, 230, 186, 189, 203, 211, 0, 284, 312, 336,
	0, 151, 144, 314, 329, 160, 296, 298, 342, 0,
	146, 0, 0, 240, 0, 0, 0, 0, 145, 0,
	0, 199, 0, 0, 0, 198, 0, 327, 328, 173,
	345, 0, 0, 147, 0, 0, 253, 0, 252, 0,
	323, 0, 241, 0, 0, 0, 0, 239, 0, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	0, 0, 143, 0, 309, 0, 0, 313, 157, 0,
	0, 318, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 0, 343, 263, 287, 161, 333,
	306, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 148,
	223, 0, 281, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 177, 0,
	0, 0, 242, 0, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 615, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 325, 326, 338, 339,
	315, 0, 131, 135, 138, 139, 606, 140, 142, 184,
	191, 260, 137, 0, 0, 0, 268, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 179, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 308, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 276,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 215, 619, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 130, 0, 164, 0, 257,
	0, 0, 0, 133, 0, 0, 0, 172, 0, 286,
	0, 331, 0, 0, 285, 225, 324, 0, 0, 330,
	0, 0, 337, 341, 190, 0, 163, 305, 181, 178,
	0, 0, 0, 197, 275, 175, 218, 0, 0, 0,
	168, 0, 0, 0, 304, 321, 136, 243, 322, 340,
	154, 316, 244, 250, 165, 167, 166, 150, 299, 320,
	159, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 201, 0, 0, 335, 612, 295, 294, 0,
	209, 0, 0, 607, 282, 613, 216, 141, 0, 344,
	153, 220, 317, 605, 194, 256, 174, 0, 264, 0,
	132, 278, 236, 237, 235, 238, 200, 610, 614, 0,
	280, 297, 319, 155, 311, 608, 609, 611, 616, 288,
	617, 618, 0, 230, 186, 189, 203, 211, 0, 284,
	312, 336, 0, 151, 144, 314, 329, 160, 296, 298,
	342, 0, 146, 0, 0, 240, 0, 0, 0, 0,
	145, 0, 0, 199, 0, 0, 0, 198, 0, 327,
	328, 173, 345, 0, 0, 147, 642, 0, 253, 0,
	252, 0, 323, 0, 241, 0, 0, 0, 0, 239,
	0, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 638, 0, 0, 143, 0, 309, 0, 0, 313,
	157, 0, 0, 318, 202, 279, 158, 195, 187, 272,
	643, 641, 632, 633, 219, 226, 0, 343, 263, 287,
	161, 333, 306, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 148, 223, 0, 281, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	177, 0, 0, 0, 242, 0, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 639, 640, 277, 615, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 325, 326,
	338, 339, 315, 0, 131, 135, 138, 139, 606, 140,
	142, 184, 191, 260, 137, 0, 0, 0, 268, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	179, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 308, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 656, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 276, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 215, 619, 0, 0,
	0, 0, 0, 0, 0, 222, 658, 130, 0, 654,
	0, 257, 0, 0, 0, 133, 0, 0, 0, 172,
	0, 286, 0, 331, 0, 0, 285, 225, 324, 0,
	0, 330, 0, 0, 337, 341, 190, 0, 163, 305,
	181, 178, 0, 0, 0, 197, 275, 175, 218, 0,
	0, 0, 168, 0, 0, 0, 304, 321, 136, 243,
	322, 340, 154, 316, 244, 250, 165, 167, 166, 150,
	299, 320, 159, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 201, 0, 0, 335, 612, 295,
	294, 0, 209, 0, 0, 607, 282, 613, 216, 141,
	0, 344, 153, 220, 317, 605, 194, 256, 174, 0,
	264, 0, 132, 278, 236, 237, 235, 238, 200, 610,
	614, 0, 280, 297, 319, 155, 311, 608, 609, 611,
	616, 288, 617, 618, 0, 230, 186, 189, 203, 211,
	0, 284, 312, 336, 0, 151, 144, 314, 329, 160,
	296, 298, 342, 0, 146, 0, 0, 240, 0, 0,
	0, 0, 145, 0, 0, 199, 0, 0, 0, 198,
	0, 327, 328, 173, 345, 0, 0, 147, 0, 0,
	253, 0, 252, 0, 323, 0, 241, 0, 0, 0,
	0, 239, 0, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 228, 0, 0, 143, 0, 309, 0,
	0, 313, 157, 0, 0, 318, 202, 279, 158, 195,
	187, 272, 251, 152, 208, 307, 219, 226, 0, 343,
	263, 287, 161, 333, 306, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 148, 223, 0, 281, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 177, 0, 0, 0, 242, 0, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 270, 271, 277, 615, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	325, 326, 338, 339, 315, 0, 131, 135, 138, 139,
	606, 140, 142, 184, 191, 260, 137, 0, 0, 0,
	268, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 215, 619,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 0, 133, 0, 0,
	0, 172, 0, 286, 0, 331, 0, 0, 285, 225,
	324, 0, 0, 330, 0, 0, 337, 341, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 321,
	136, 243, 322, 340, 154, 316, 244, 250, 165, 167,
	166, 150, 299, 320, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 335,
	612, 295, 294, 0, 209, 0, 0, 607, 282, 613,
	216, 141, 0, 344, 153, 220, 317, 605, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 610, 614, 0, 280, 297, 319, 155, 311, 608,
	609, 611, 616, 288, 617, 618, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 336, 0, 151, 144, 314,
	629, 160, 296, 298, 342, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 327, 328, 173, 345, 0, 0, 147,
	642, 0, 253, 0, 252, 0, 323, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 638, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 318, 202, 279,
	158, 195, 187, 272, 643, 641, 632, 633, 219, 226,
	0, 343, 263, 287, 161, 333, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 639, 640, 277,
	615, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 325, 326, 338, 339, 315, 0, 131, 135,
	138, 139, 606, 140, 142, 184, 191, 260, 137, 0,
	0, 0, 268, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 179, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 308, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	215, 619, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 130, 0, 164, 0, 257, 0, 0, 0, 133,
	0, 0, 0, 172, 0, 286, 0, 331, 0, 0,
	285, 225, 324, 0, 0, 330, 0, 0, 337, 341,
	190, 0, 163, 305, 181, 178, 0, 0, 0, 197,
	275, 175, 218, 0, 0, 0, 168, 0, 0, 0,
	304, 321, 136, 243, 322, 340, 154, 316, 244, 250,
	165, 167, 166, 150, 299, 320, 159, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 201, 0,
	0, 335, 612, 295, 294, 0, 209, 0, 0, 607,
	282, 613, 216, 141, 0, 344, 153, 220, 317, 605,
	194, 256, 174, 0, 264, 0, 132, 278, 236, 237,
	235, 238, 200, 610, 614, 0, 280, 297, 319, 155,
	311, 608, 609, 611, 616, 288, 617, 618, 0, 230,
	186, 189, 203, 211, 0, 284, 312, 336, 0, 151,
	144, 314, 329, 160, 296, 298, 342, 0, 146, 0,
	0, 240, 0, 0, 0, 0, 145, 0, 0, 199,
	0, 0, 0, 198, 0, 327, 328, 173, 345, 0,
	0, 147, 0, 0, 253, 0, 252, 0, 323, 0,
	241, 0, 0, 0, 0, 239, 0, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 0, 0,
	143, 0, 309, 0, 0, 313, 157, 0, 0, 318,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 0, 343, 263, 287, 161, 333, 306, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 148, 223, 0,
	281, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 177, 0, 0, 0,
	242, 0, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 615, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 325, 326, 338, 339, 315, 0,
	131, 135, 138, 139, 606, 140, 142, 184, 191, 260,
	137, 0, 0, 0, 268, 0, 0, 0, 180, 0,
	0, 0, 0, 0, 0, 0, 179, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 308, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 276, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 215, 619, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 130, 0, 164, 0, 257, 0, 0,
	0, 133, 0, 0, 0, 172, 0, 286, 0, 331,
	0, 0, 285, 225, 324, 0, 0, 330, 0, 0,
	337, 341, 190, 0, 163, 305, 181, 178, 0, 0,
	0, 197, 275, 175, 218, 0, 0, 0, 168, 0,
	0, 0, 304, 321, 136, 243, 322, 340, 154, 316,
	244, 250, 165, 167, 166, 150, 299, 320, 159, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	201, 0, 0, 335, 612, 295, 294, 0, 209, 0,
	0, 607, 282, 613, 216, 141, 0, 344, 153, 220,
	317, 605, 194, 256, 174, 0, 264, 0, 132, 278,
	236, 237, 235, 238, 200, 610, 614, 0, 280, 297,
	319, 155, 311, 608, 609, 611, 616, 288, 617, 618,
	0, 230, 186, 189, 203, 211, 0, 284, 312, 336,
	0, 151, 144, 314, 329, 160, 296, 298, 342, 0,
	146, 0, 0, 240, 0, 0, 0, 0, 145, 0,
	0, 199, 0, 0, 0, 198, 0, 327, 328, 173,
	345, 0, 0, 147, 0, 0, 253, 0, 252, 0,
	323, 0, 241, 0, 0, 0, 0, 239, 0, 221,
	188, 205, 273, 227, 274, 206, 248, 247, 249, 228,
	0, 0, 143, 0, 309, 0, 0, 313, 157, 0,
	0, 318, 202, 279, 158, 195, 187, 272, 251, 152,
	208, 307, 219, 226, 0, 343, 263, 287, 161, 333,
	306, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 148,
	223, 0, 281, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 334, 177, 0,
	0, 0, 242, 0, 149, 156, 162, 176, 185, 192,
	204, 207, 212, 213, 214, 217, 229, 231, 232, 233,
	234, 254, 255, 258, 259, 261, 262, 265, 266, 267,
	269, 270, 271, 277, 615, 283, 289, 290, 291, 292,
	293, 300, 301, 302, 303, 310, 325, 326, 338, 339,
	315, 0, 131, 135, 138, 139, 606, 140, 142, 184,
	191, 260, 137, 0, 0, 0, 268, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 0, 0, 179, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 308, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 276,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 215, 619, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 130, 0, 164, 0, 257,
	0, 0, 0, 133, 0, 0, 0, 172, 0, 286,
	0, 331, 0, 0, 285, 225, 324, 0, 0, 330,
	0, 0, 337, 341, 190, 0, 163, 305, 181, 178,
	0, 0, 0, 197, 275, 175, 218, 0, 0, 0,
	168, 0, 0, 0, 304, 321, 136, 243, 322, 340,
	154, 316, 244, 250, 165, 167, 166, 150, 299, 320,
	159, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 201, 0, 0, 335, 612, 295, 294, 0,
	209, 0, 0, 607, 282, 613, 216, 141, 0, 344,
	153, 220, 317, 605, 194, 256, 174, 0, 264, 0,
	132, 278, 236, 237, 235, 238, 200, 610, 614, 0,
	280, 297, 319, 155, 311, 608, 609, 611, 616, 288,
	617, 618, 0, 230, 186, 189, 203, 211, 0, 284,
	312, 336, 0, 151, 144, 314, 329, 160, 296, 298,
	342, 0, 146, 0, 0, 240, 0, 0, 0, 0,
	145, 0, 0, 199, 0, 0, 0, 198, 0, 327,
	328, 173, 345, 0, 0, 147, 0, 0, 253, 0,
	252, 0, 323, 0, 241, 0, 0, 0, 0, 239,
	0, 221, 188, 205, 273, 227, 274, 206, 248, 247,
	249, 228, 0, 0, 143, 0, 309, 0, 0, 313,
	157, 0, 0, 318, 202, 279, 158, 195, 187, 272,
	251, 152, 208, 307, 219, 226, 0, 343, 263, 287,
	161, 333, 306, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 148, 223, 0, 281, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 334,
	177, 0, 0, 0, 242, 0, 149, 156, 162, 176,
	185, 192, 204, 207, 212, 213, 214, 217, 229, 231,
	232, 233, 234, 254, 255, 258, 259, 261, 262, 265,
	266, 267, 269, 270, 271, 277, 615, 283, 289, 290,
	291, 292, 293, 300, 301, 302, 303, 310, 325, 326,
	338, 339, 315, 0, 131, 135, 138, 139, 606, 140,
	142, 184, 191, 260, 137, 0, 0, 0, 268, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	179, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 308, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 276, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 215, 619, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 130, 0, 164,
	0, 257, 0, 0, 0, 133, 0, 0, 0, 172,
	0, 286, 0, 331, 0, 0, 285, 225, 324, 0,
	0, 330, 0, 0, 337, 341, 190, 0, 163, 305,
	181, 178, 0, 0, 0, 197, 275, 175, 218, 0,
	0, 0, 168, 0, 0, 0, 304, 321, 136, 243,
	322, 340, 154, 316, 244, 250, 165, 167, 166, 150,
	299, 320, 159, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 201, 0, 0, 335, 612, 295,
	294, 0, 209, 0, 0, 607, 282, 613, 216, 141,
	0, 344, 153, 220, 317, 605, 194, 256, 174, 0,
	264, 0, 132, 278, 236, 237, 235, 238, 200, 610,
	614, 0, 280, 297, 319, 155, 311, 608, 609, 611,
	616, 288, 617, 618, 0, 230, 186, 189, 203, 211,
	0, 284, 312, 336, 0, 151, 144, 314, 329, 160,
	296, 298, 342, 0, 146, 0, 0, 240, 0, 0,
	0, 0, 145, 0, 0, 199, 0, 0, 0, 198,
	0, 327, 328, 173, 345, 0, 0, 147, 0, 0,
	253, 0, 252, 0, 323, 0, 241, 0, 0, 0,
	0, 239, 0, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 228, 0, 0, 143, 0, 309, 0,
	0, 313, 157, 0, 0, 318, 202, 279, 158, 195,
	187, 272, 251, 152, 208, 307, 219, 226, 0, 343,
	263, 287, 161, 333, 306, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 148, 223, 0, 281, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 177, 0, 0, 0, 242, 0, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 270, 271, 277, 615, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	325, 326, 338, 339, 315, 0, 131, 135, 138, 139,
	606, 140, 142, 184, 191, 260, 137, 0, 0, 0,
	268, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 215, 619,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 0, 133, 0, 0,
	0, 172, 0, 286, 0, 331, 0, 0, 285, 225,
	324, 0, 0, 330, 0, 0, 337, 341, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 321,
	136, 243, 322, 340, 154, 316, 244, 250, 165, 167,
	166, 150, 299, 320, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 335,
	612, 295, 294, 0, 209, 0, 0, 607, 282, 613,
	216, 141, 0, 344, 153, 220, 317, 605, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 610, 614, 0, 280, 297, 319, 155, 311, 608,
	609, 611, 616, 288, 617, 618, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 336, 0, 151, 144, 314,
	1009, 160, 296, 298, 342, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 327, 328, 173, 345, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 323, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 318, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 343, 263, 287, 161, 333, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	615, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 325, 326, 338, 339, 0, 0, 131, 135,
	138, 139, 606, 140, 142, 184, 191, 315, 137, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 1651, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 452, 308, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1653, 1655, 0, 0, 0, 0,
	0, 0, 128, 0, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 1649, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 215, 0, 0, 1654, 0, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 0,
	133, 0, 0, 0, 172, 0, 286, 0, 331, 0,
	0, 285, 225, 324, 0, 0, 330, 0, 0, 337,
	341, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 321, 136, 243, 322, 340, 154, 316, 244,
	250, 165, 167, 166, 150, 299, 320, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 335, 0, 295, 294, 0, 209, 0, 0,
	0, 282, 0, 216, 141, 0, 344, 153, 220, 317,
	0, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 0, 0, 0, 280, 297, 319,
	155, 311, 0, 0, 0, 0, 288, 0, 0, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 336, 0,
	151, 144, 314, 329, 160, 296, 298, 342, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 327, 328, 173, 345,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 323,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	318, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 343, 263, 287, 161, 333, 306,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 447, 0,
	0, 0, 448, 0, 0, 449, 450, 0, 0, 0,
	0, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 0, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 325, 326, 338, 339, 0,
	0, 131, 135, 138, 139, 315, 140, 142, 184, 191,
	0, 137, 0, 0, 0, 268, 260, 0, 0, 0,
	0, 1651, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 179, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 452,
	308, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1653, 1655, 0, 0, 0, 0, 0, 0,
	128, 0, 446, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 276, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 215,
	0, 0, 1654, 0, 0, 0, 0, 0, 222, 0,
	130, 0, 164, 0, 257, 0, 0, 0, 133, 0,
	0, 0, 172, 0, 286, 0, 331, 0, 0, 285,
	225, 324, 0, 0, 330, 0, 0, 337, 341, 190,
	0, 163, 305, 181, 178, 0, 0, 0, 197, 275,
	175, 218, 0, 0, 0, 168, 0, 0, 0, 304,
	321, 136, 243, 322, 340, 154, 316, 244, 250, 165,
	167, 166, 150, 299, 320, 159, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 201, 0, 0,
	335, 0, 295, 294, 0, 209, 0, 0, 0, 282,
	0, 216, 141, 0, 344, 153, 220, 317, 0, 194,
	256, 174, 0, 264, 0, 132, 278, 236, 237, 235,
	238, 200, 0, 0, 0, 280, 297, 319, 155, 311,
	0, 0, 0, 0, 288, 0, 0, 0, 230, 186,
	189, 203, 211, 0, 284, 312, 336, 0, 151, 144,
	314, 329, 160, 296, 298, 342, 0, 146, 0, 0,
	240, 0, 0, 0, 0, 145, 0, 0, 199, 0,
	0, 0, 198, 0, 327, 328, 173, 345, 0, 0,
	147, 0, 0, 253, 0, 252, 0, 323, 0, 241,
	0, 0, 0, 0, 239, 0, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 0, 0, 143,
	0, 309, 0, 0, 313, 157, 0, 0, 318, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 0, 343, 263, 287, 161, 333, 306, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 447, 0, 0, 0,
	448, 0, 0, 449, 450, 0, 0, 0, 0, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 148, 223, 0, 281,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 177, 0, 0, 0, 242,
	0, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 0, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 325, 326, 338, 339, 315, 0, 131,
	135, 138, 139, 0, 140, 142, 184, 191, 260, 137,
	0, 0, 0, 268, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 452, 308, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 0, 446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 0,
	133, 0, 0, 0, 172, 0, 286, 0, 331, 0,
	0, 285, 225, 324, 0, 0, 330, 0, 0, 337,
	341, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 321, 136, 243, 322, 340, 154, 316, 244,
	250, 165, 167, 166, 150, 299, 320, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 335, 0, 295, 294, 0, 209, 0, 0,
	0, 282, 0, 216, 141, 0, 344, 153, 220, 317,
	0, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 0, 0, 0, 280, 297, 319,
	155, 311, 0, 0, 0, 0, 288, 0, 0, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 336, 0,
	151, 144, 314, 329, 160, 296, 298, 342, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 327, 328, 173, 345,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 323,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	318, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 343, 263, 287, 161, 333, 306,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 447, 0,
	0, 0, 448, 0, 0, 449, 450, 0, 0, 0,
	0, 451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 177, 0, 0,
	0, 242, 441, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 0, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 325, 326, 338, 339, 315,
	0, 131, 135, 138, 139, 0, 140, 142, 184, 191,
	260, 137, 0, 0, 0, 268, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 1971, 0, 179, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 452, 308, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 446, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 276, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 130, 0, 164, 0, 257, 0,
	0, 0, 133, 0, 0, 0, 172, 0, 286, 0,
	331, 0, 0, 285, 225, 324, 0, 0, 330, 0,
	0, 337, 341, 190, 0, 163, 305, 181, 178, 0,
	0, 0, 197, 275, 175, 218, 0, 0, 0, 168,
	0, 0, 0, 304, 321, 136, 243, 322, 340, 154,
	316, 244, 250, 165, 167, 166, 150, 299, 320, 159,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 201, 0, 0, 335, 0, 295, 294, 0, 209,
	0, 0, 0, 282, 0, 216, 141, 0, 344, 153,
	220, 317, 0, 194, 256, 174, 0, 264, 0, 132,
	278, 236, 237, 235, 238, 200, 0, 0, 0, 280,
	297, 319, 155, 311, 0, 0, 0, 0, 288, 0,
	0, 0, 230, 186, 189, 203, 211, 0, 284, 312,
	336, 0, 151, 144, 314, 329, 160, 296, 298, 342,
	0, 146, 0, 0, 240, 0, 0, 0, 0, 145,
	0, 0, 199, 0, 0, 0, 198, 0, 327, 328,
	173, 345, 0, 0, 147, 0, 0, 253, 0, 252,
	0, 323, 0, 241, 0, 0, 0, 0, 239, 0,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 0, 0, 143, 0, 309, 0, 0, 313, 157,
	0, 0, 318, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 0, 343, 263, 287, 161,
	333, 306, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	447, 0, 0, 0, 448, 0, 0, 449, 450, 0,
	0, 0, 0, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	148, 223, 0, 281, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 177,
	0, 0, 0, 242, 0, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 0, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 325, 326, 338,
	339, 315, 0, 131, 135, 138, 139, 0, 140, 142,
	184, 191, 260, 137, 0, 0, 0, 268, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 452, 308, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 0, 0, 0, 133, 0, 0, 0, 172, 0,
	286, 0, 331, 0, 0, 285, 225, 324, 0, 0,
	330, 0, 0, 337, 341, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 321, 136, 243, 322,
	340, 154, 316, 244, 250, 165, 167, 166, 150, 299,
	320, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 335, 0, 295, 294,
	0, 209, 0, 0, 0, 282, 0, 216, 141, 0,
	344, 153, 220, 317, 0, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 0, 0,
	0, 280, 297, 319, 155, 311, 0, 0, 0, 0,
	288, 0, 0, 0, 230, 186, 189, 203, 211, 0,
	284, 312, 336, 0, 151, 144, 314, 329, 160, 296,
	298, 342, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	327, 328, 173, 345, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 323, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 318, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 343, 263,
	287, 161, 333, 306, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 447, 0, 0, 0, 448, 0, 0, 449,
	450, 0, 0, 0, 0, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 0, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 325,
	326, 338, 339, 315, 0, 131, 135, 138, 139, 0,
	140, 142, 184, 191, 260, 137, 0, 2884, 0, 268,
	0, 0, 0, 180, 2882, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 308, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 276, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 0, 133, 0, 0, 0,
	172, 0, 286, 0, 331, 0, 0, 285, 225, 324,
	0, 0, 330, 0, 0, 337, 341, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 321, 136,
	243, 322, 340, 154, 316, 244, 250, 165, 167, 166,
	150, 299, 320, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 335, 0,
	295, 294, 0, 209, 0, 2883, 0, 282, 0, 216,
	141, 0, 344, 153, 220, 317, 0, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	0, 0, 0, 280, 297, 319, 155, 311, 0, 0,
	0, 0, 288, 0, 0, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 336, 0, 151, 144, 314, 329,
	160, 296, 298, 342, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 327, 328, 173, 345, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 323, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 318, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	343, 263, 287, 161, 333, 306, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 148, 223, 0, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 0,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 325, 326, 338, 339, 0, 0, 131, 135, 138,
	139, 0, 140, 142, 184, 191, 0, 137, 36, 315,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 179, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1646,
	224, 0, 0, 0, 308, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 276, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 130, 0, 164, 0, 257, 0,
	0, 0, 133, 0, 0, 0, 172, 0, 286, 0,
	331, 0, 0, 285, 225, 324, 0, 0, 330, 0,
	0, 337, 341, 190, 0, 163, 305, 181, 178, 0,
	0, 0, 197, 275, 175, 218, 0, 0, 0, 168,
	0, 0, 0, 304, 321, 136, 243, 322, 340, 154,
	316, 244, 250, 165, 167, 166, 150, 299, 320, 159,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 201, 0, 0, 335, 0, 295, 294, 0, 209,
	0, 0, 0, 282, 0, 216, 141, 0, 344, 153,
	220, 317, 0, 194, 256, 174, 0, 264, 0, 132,
	278, 236, 237, 235, 238, 200, 0, 0, 0, 280,
	297, 319, 155, 311, 0, 0, 0, 0, 288, 0,
	0, 0, 230, 186, 189, 203, 211, 0, 284, 312,
	336, 0, 151, 144, 314, 329, 160, 296, 298, 342,
	0, 146, 0, 0, 240, 0, 0, 0, 0, 145,
	0, 0, 199, 0, 0, 0, 198, 0, 327, 328,
	173, 345, 0, 0, 147, 0, 0, 253, 0, 252,
	0, 323, 0, 241, 0, 0, 0, 0, 239, 0,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 0, 0, 143, 0, 309, 0, 0, 313, 157,
	0, 0, 318, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 0, 343, 263, 287, 161,
	333, 306, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	148, 223, 79, 281, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 177,
	0, 0, 0, 242, 0, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 0, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 325, 326, 338,
	339, 315, 0, 131, 135, 138, 139, 0, 140, 142,
	184, 191, 260, 137, 0, 0, 0, 268, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 0, 179,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 224, 0, 0, 0, 308, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 424, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	276, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 130, 0, 164, 0,
	257, 0, 0, 0, 133, 0, 0, 0, 172, 0,
	286, 0, 331, 0, 0, 285, 225, 324, 0, 0,
	330, 0, 0, 337, 341, 190, 0, 163, 305, 181,
	178, 0, 0, 0, 197, 275, 175, 218, 0, 0,
	0, 168, 0, 0, 0, 304, 321, 136, 243, 322,
	340, 154, 316, 244, 250, 165, 167, 166, 150, 299,
	320, 159, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 201, 0, 0, 335, 0, 295, 294,
	0, 209, 0, 0, 0, 282, 0, 216, 141, 0,
	344, 153, 220, 317, 0, 194, 256, 174, 0, 264,
	0, 132, 278, 236, 237, 235, 238, 200, 0, 0,
	0, 280, 297, 319, 155, 311, 0, 0, 0, 0,
	288, 0, 0, 0, 230, 186, 189, 203, 211, 0,
	284, 312, 336, 0, 151, 144, 314, 329, 160, 296,
	298, 342, 0, 146, 0, 0, 240, 0, 0, 0,
	0, 145, 0, 0, 199, 0, 0, 0, 198, 0,
	327, 328, 173, 345, 0, 0, 147, 0, 0, 253,
	0, 252, 0, 323, 0, 241, 0, 0, 0, 0,
	239, 0, 221, 188, 205, 273, 227, 274, 206, 248,
	247, 249, 228, 0, 0, 143, 0, 309, 0, 0,
	313, 157, 0, 0, 318, 202, 279, 158, 195, 187,
	272, 251, 152, 208, 307, 219, 226, 0, 343, 263,
	287, 161, 333, 306, 182, 0, 0, 0, 1152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 148, 223, 0, 281, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 177, 0, 0, 0, 242, 0, 149, 156, 162,
	176, 185, 192, 204, 207, 212, 213, 214, 217, 229,
	231, 232, 233, 234, 254, 255, 258, 259, 261, 262,
	265, 266, 267, 269, 270, 271, 277, 0, 283, 289,
	290, 291, 292, 293, 300, 301, 302, 303, 310, 325,
	326, 338, 339, 315, 0, 131, 135, 138, 139, 0,
	140, 142, 184, 191, 260, 137, 0, 0, 0, 268,
	0, 0, 0, 180, 0, 0, 0, 0, 0, 0,
	0, 179, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 308, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 424, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 276, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 130, 0,
	164, 0, 257, 0, 0, 0, 133, 0, 0, 0,
	172, 0, 286, 0, 331, 0, 0, 285, 225, 324,
	0, 0, 330, 0, 0, 337, 341, 190, 0, 163,
	305, 181, 178, 0, 0, 0, 197, 275, 175, 218,
	0, 0, 0, 168, 0, 0, 0, 304, 321, 136,
	243, 322, 340, 154, 316, 244, 250, 165, 167, 166,
	150, 299, 320, 159, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 201, 0, 0, 335, 0,
	295, 294, 0, 209, 0, 0, 0, 282, 0, 216,
	141, 0, 344, 153, 220, 317, 0, 194, 256, 174,
	0, 264, 0, 132, 278, 236, 237, 235, 238, 200,
	0, 0, 0, 280, 297, 319, 155, 311, 0, 0,
	0, 0, 288, 0, 0, 0, 230, 186, 189, 203,
	211, 0, 284, 312, 336, 0, 151, 144, 314, 329,
	160, 296, 298, 342, 0, 146, 0, 0, 240, 0,
	0, 0, 0, 145, 0, 0, 199, 0, 0, 0,
	198, 0, 327, 328, 173, 345, 0, 0, 147, 0,
	0, 253, 0, 252, 0, 323, 0, 241, 0, 0,
	0, 0, 239, 0, 221, 188, 205, 273, 227, 274,
	206, 248, 247, 249, 228, 0, 0, 143, 0, 309,
	0, 0, 313, 157, 0, 0, 318, 202, 279, 158,
	195, 187, 272, 251, 152, 208, 307, 219, 226, 0,
	343, 263, 287, 161, 333, 306, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 148, 223, 0, 281, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 177, 0, 0, 0, 242, 0, 149,
	156, 162, 176, 185, 192, 204, 207, 212, 213, 214,
	217, 229, 231, 232, 233, 234, 254, 255, 258, 259,
	261, 262, 265, 266, 267, 269, 270, 271, 277, 0,
	283, 289, 290, 291, 292, 293, 300, 301, 302, 303,
	310, 325, 326, 338, 339, 315, 0, 131, 135, 138,
	139, 0, 140, 142, 184, 191, 260, 137, 0, 0,
	0, 268, 0, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 179, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	308, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	994, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 276, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	130, 0, 164, 0, 257, 0, 0, 0, 133, 0,
	0, 0, 172, 0, 286, 0, 331, 0, 0, 285,
	225, 324, 0, 0, 330, 0, 0, 337, 341, 190,
	0, 163, 305, 181, 178, 0, 0, 0, 197, 275,
	175, 218, 0, 0, 0, 168, 0, 0, 0, 304,
	321, 136, 243, 322, 340, 154, 316, 244, 250, 165,
	167, 166, 150, 299, 320, 159, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 201, 0, 0,
	335, 0, 295, 294, 0, 209, 0, 0, 0, 282,
	0, 216, 141, 0, 344, 153, 220, 317, 0, 194,
	256, 174, 0, 264, 0, 132, 278, 236, 237, 235,
	238, 200, 0, 0, 0, 280, 297, 319, 155, 311,
	0, 0, 0, 0, 288, 0, 0, 0, 230, 186,
	189, 203, 211, 0, 284, 312, 336, 0, 151, 144,
	314, 329, 160, 296, 298, 342, 0, 146, 0, 0,
	240, 0, 0, 0, 0, 145, 0, 0, 199, 0,
	0, 0, 198, 0, 327, 328, 173, 345, 0, 0,
	147, 0, 0, 253, 0, 252, 0, 323, 0, 241,
	0, 0, 0, 0, 239, 0, 221, 188, 205, 273,
	227, 274, 206, 248, 247, 249, 228, 0, 0, 143,
	0, 309, 0, 0, 313, 157, 0, 0, 318, 202,
	279, 158, 195, 187, 272, 251, 152, 208, 307, 219,
	226, 0, 343, 263, 287, 161, 333, 306, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 148, 223, 0, 281,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 334, 177, 0, 0, 0, 242,
	0, 149, 156, 162, 176, 185, 192, 204, 207, 212,
	213, 214, 217, 229, 231, 232, 233, 234, 254, 255,
	258, 259, 261, 262, 265, 266, 267, 269, 270, 271,
	277, 0, 283, 289, 290, 291, 292, 293, 300, 301,
	302, 303, 310, 325, 326, 338, 339, 315, 0, 131,
	135, 138, 139, 0, 140, 142, 184, 191, 260, 137,
	0, 0, 0, 268, 0, 0, 0, 180, 0, 0,
	0, 0, 0, 0, 0, 179, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 308, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 276, 196, 0, 0,
	0, 0, 0, 0, 1664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 130, 0, 164, 0, 257, 0, 0, 0,
	133, 0, 0, 0, 172, 0, 286, 0, 331, 0,
	0, 285, 225, 324, 0, 0, 330, 0, 0, 337,
	341, 190, 0, 163, 305, 181, 178, 0, 0, 0,
	197, 275, 175, 218, 0, 0, 0, 168, 0, 0,
	0, 304, 321, 136, 243, 322, 340, 154, 316, 244,
	250, 165, 167, 166, 150, 299, 320, 159, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 201,
	0, 0, 335, 0, 295, 294, 0, 209, 0, 0,
	0, 282, 0, 216, 141, 0, 344, 153, 220, 317,
	0, 194, 256, 174, 0, 264, 0, 132, 278, 236,
	237, 235, 238, 200, 0, 0, 0, 280, 297, 319,
	155, 311, 0, 0, 0, 0, 288, 0, 0, 0,
	230, 186, 189, 203, 211, 0, 284, 312, 336, 0,
	151, 144, 314, 329, 160, 296, 298, 342, 0, 146,
	0, 0, 240, 0, 0, 0, 0, 145, 0, 0,
	199, 0, 0, 0, 198, 0, 327, 328, 173, 345,
	0, 0, 147, 0, 0, 253, 0, 252, 0, 323,
	0, 241, 0, 0, 0, 0, 239, 0, 221, 188,
	205, 273, 227, 274, 206, 248, 247, 249, 228, 0,
	0, 143, 0, 309, 0, 0, 313, 157, 0, 0,
	318, 202, 279, 158, 195, 187, 272, 251, 152, 208,
	307, 219, 226, 0, 343, 263, 287, 161, 333, 306,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 148, 223,
	0, 281, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 334, 177, 0, 0,
	0, 242, 0, 149, 156, 162, 176, 185, 192, 204,
	207, 212, 213, 214, 217, 229, 231, 232, 233, 234,
	254, 255, 258, 259, 261, 262, 265, 266, 267, 269,
	270, 271, 277, 0, 283, 289, 290, 291, 292, 293,
	300, 301, 302, 303, 310, 325, 326, 338, 339, 315,
	0, 131, 135, 138, 139, 0, 140, 142, 184, 191,
	260, 137, 0, 0, 0, 268, 0, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 179, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 308, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 276, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 130, 0, 164, 0, 257, 0,
	0, 0, 133, 0, 0, 0, 172, 0, 286, 0,
	331, 0, 0, 285, 225, 324, 0, 0, 330, 0,
	0, 337, 341, 190, 0, 163, 305, 181, 178, 0,
	0, 0, 197, 275, 175, 218, 0, 0, 0, 168,
	0, 0, 0, 304, 321, 136, 243, 322, 340, 154,
	316, 244, 250, 165, 167, 166, 150, 299, 320, 159,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 201, 0, 0, 335, 0, 295, 294, 0, 209,
	0, 0, 0, 282, 0, 216, 141, 0, 344, 153,
	220, 317, 0, 194, 256, 174, 0, 264, 0, 132,
	278, 236, 237, 235, 238, 200, 0, 0, 0, 280,
	297, 319, 155, 311, 0, 0, 0, 0, 288, 0,
	0, 0, 230, 186, 189, 203, 211, 0, 284, 312,
	336, 0, 151, 144, 314, 329, 160, 296, 298, 342,
	0, 146, 0, 0, 240, 0, 0, 0, 0, 145,
	0, 0, 199, 0, 0, 0, 198, 0, 327, 328,
	173, 345, 0, 0, 147, 0, 0, 253, 0, 252,
	0, 323, 0, 241, 0, 0, 0, 0, 239, 0,
	221, 188, 205, 273, 227, 274, 206, 248, 247, 249,
	228, 0, 0, 143, 0, 309, 0, 0, 313, 157,
	0, 0, 318, 202, 279, 158, 195, 187, 272, 251,
	152, 208, 307, 219, 226, 0, 343, 263, 287, 161,
	333, 306, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	148, 223, 0, 281, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 177,
	0, 0, 0, 242, 0, 149, 156, 162, 176, 185,
	192, 204, 207, 212, 213, 214, 217, 229, 231, 232,
	233, 234, 254, 255, 258, 259, 261, 262, 265, 266,
	267, 269, 270, 271, 277, 0, 283, 289, 290, 291,
	292, 293, 300, 301, 302, 303, 310, 325, 326, 338,
	339, 0, 0, 131, 135, 138, 139, 0, 140, 142,
	184, 191, 315, 137, 0, 0, 622, 268, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 0, 0, 0, 0,
	179, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 308, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 276, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 130, 0, 164,
	0, 257, 0, 0, 0, 133, 0, 0, 0, 172,
	0, 286, 0, 331, 0, 0, 285, 225, 324, 0,
	0, 330, 0, 0, 337, 341, 190, 0, 163, 305,
	181, 178, 0, 0, 0, 197, 275, 175, 218, 0,
	0, 0, 168, 0, 0, 0, 304, 321, 136, 243,
	322, 340, 154, 316, 244, 250, 165, 167, 166, 150,
	299, 320, 159, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 201, 0, 0, 335, 0, 295,
	294, 0, 209, 0, 0, 0, 282, 0, 216, 141,
	0, 344, 153, 220, 317, 0, 194, 256, 174, 0,
	264, 0, 132, 278, 236, 237, 235, 238, 200, 0,
	0, 0, 280, 297, 319, 155, 311, 0, 0, 0,
	0, 288, 0, 0, 0, 230, 186, 189, 203, 211,
	0, 284, 312, 336, 0, 151, 144, 314, 329, 160,
	296, 298, 342, 0, 146, 0, 0, 240, 0, 0,
	0, 0, 145, 0, 0, 199, 0, 0, 0, 198,
	0, 327, 328, 173, 345, 0, 0, 147, 0, 0,
	253, 0, 252, 0, 323, 0, 241, 0, 0, 0,
	0, 239, 0, 221, 188, 205, 273, 227, 274, 206,
	248, 247, 249, 228, 0, 0, 143, 0, 309, 0,
	0, 313, 157, 0, 0, 318, 202, 279, 158, 195,
	187, 272, 251, 152, 208, 307, 219, 226, 0, 343,
	263, 287, 161, 333, 306, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 148, 223, 0, 281, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 334, 177, 0, 0, 0, 242, 0, 149, 156,
	162, 176, 185, 192, 204, 207, 212, 213, 214, 217,
	229, 231, 232, 233, 234, 254, 255, 258, 259, 261,
	262, 265, 266, 267, 269, 270, 271, 277, 0, 283,
	289, 290, 291, 292, 293, 300, 301, 302, 303, 310,
	325, 326, 338, 339, 315, 0, 131, 135, 138, 139,
	0, 140, 142, 184, 191, 260, 137, 0, 0, 0,
	268, 0, 0, 0, 180, 0, 0, 0, 0, 0,
	0, 0, 179, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 308,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 276, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 125, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 130,
	0, 164, 0, 257, 0, 0, 0, 133, 0, 0,
	0, 172, 0, 286, 0, 331, 0, 0, 285, 225,
	324, 0, 0, 330, 0, 0, 337, 341, 190, 0,
	163, 305, 181, 178, 0, 0, 0, 197, 275, 175,
	218, 0, 0, 0, 168, 0, 0, 0, 304, 321,
	136, 243, 322, 340, 154, 316, 244, 250, 165, 167,
	166, 150, 299, 320, 159, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 201, 0, 0, 335,
	0, 295, 294, 0, 209, 0, 0, 0, 282, 0,
	216, 141, 0, 344, 153, 220, 317, 0, 194, 256,
	174, 0, 264, 0, 132, 278, 236, 237, 235, 238,
	200, 0, 0, 0, 280, 297, 319, 155, 311, 0,
	0, 0, 0, 288, 0, 0, 0, 230, 186, 189,
	203, 211, 0, 284, 312, 336, 0, 151, 144, 314,
	329, 160, 296, 298, 342, 0, 146, 0, 0, 240,
	0, 0, 0, 0, 145, 0, 0, 199, 0, 0,
	0, 198, 0, 327, 328, 173, 345, 0, 0, 147,
	0, 0, 253, 0, 252, 0, 323, 0, 241, 0,
	0, 0, 0, 239, 0, 221, 188, 205, 273, 227,
	274, 206, 248, 247, 249, 228, 0, 0, 143, 0,
	309, 0, 0, 313, 157, 0, 0, 318, 202, 279,
	158, 195, 187, 272, 251, 152, 208, 307, 219, 226,
	0, 343, 263, 287, 161, 333, 306, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 148, 223, 0, 281, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 334, 177, 0, 0, 0, 242, 0,
	149, 156, 162, 176, 185, 192, 204, 207, 212, 213,
	214, 217, 229, 231, 232, 233, 234, 254, 255, 258,
	259, 261, 262, 265, 266, 267, 269, 270, 271, 277,
	0, 283, 289, 290, 291, 292, 293, 300, 301, 302,
	303, 310, 325, 326, 338, 339, 315, 0, 131, 135,
	138, 139, 0, 140, 142, 184, 191, 260, 137, 0,
	0, 0, 268, 0, 0, 0, 180, 0, 0, 0,
	0, 0, 0, 0, 179, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 224, 0, 0,
	0, 308, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 276, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 130, 0, 164, 0, 257, 0, 0, 0, 133,
	0, 0, 0, 172, 0, 286, 0, 331, 0, 0,
	285, 225, 324, 0, 0, 330, 0, 0, 337, 341,
	190, 0, 163, 305, 181, 178, 0, 0, 0, 197,
	275, 175, 218, 0, 0, 0, 168, 0, 0, 0,
	304, 321, 136, 243, 322, 340, 154, 316, 244, 250,
	165, 167, 166, 150, 299, 320, 159, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 201, 0,
	0, 335, 0, 295, 294, 0, 209, 0, 0, 0,
	282, 0, 216, 141, 0, 344, 153, 220, 317, 0,
	194, 256, 174, 0, 264, 0, 132, 278, 236, 237,
	235, 238, 200, 0, 0, 0, 280, 297, 319, 155,
	311, 0, 0, 0, 0, 288, 0, 0, 0, 230,
	186, 189, 203, 211, 0, 284, 312, 336, 0, 151,
	144, 314, 329, 160, 296, 298, 342, 0, 146, 0,
	0, 240, 0, 0, 0, 0, 145, 0, 0, 199,
	0, 0, 0, 198, 0, 327, 328, 173, 345, 0,
	0, 147, 0, 0, 253, 0, 252, 0, 323, 0,
	241, 0, 0, 0, 0, 239, 0, 221, 188, 205,
	273, 227, 274, 206, 248, 247, 249, 228, 0, 0,
	143, 0, 309, 0, 0, 313, 157, 0, 0, 318,
	202, 279, 158, 195, 187, 272, 251, 152, 208, 307,
	219, 226, 0, 343, 263, 287, 161, 333, 306, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 148, 223, 0,
	281, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 334, 177, 0, 0, 0,
	242, 0, 149, 156, 162, 176, 185, 192, 204, 207,
	212, 213, 214, 217, 229, 231, 232, 233, 234, 254,
	255, 258, 259, 261, 262, 265, 266, 267, 269, 270,
	271, 277, 0, 283, 289, 290, 291, 292, 293, 300,
	301, 302, 303, 310, 325, 326, 338, 339, 0, 0,
	131, 135, 138, 139, 0, 140, 142, 184, 191, 0,
	137, 0, 0, 0, 268,
}

var yyPact = [...]int{
	4276, -1000, -410, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2059, -1000, -1000, -1000, -1000,
	-1000, -1000, 961, 446, -1000, 331, 196, 39127, 655, 1108,
	39709, -1000, -1000, -1000, 164, 456, 39709, 416, 458, 1465,
	1907, 1463, 20, -106, -107, 134, 22207, 21607, -17, -1000,
	2118, 2120, -1000, -1000, 581, 30, -1000, -1000, -1000, 32700,
	221, -1000, -1000, 2042, 2057, 1834, -1000, 12848, 581, 581,
	38545, 28027, -1000, 2114, 39709, 27445, -1000, 634, 621, -184,
	558, 558, 382, 558, 558, 652, -1000, 298, 947, -1000,
	-1000, -1000, -1000, 941, 39709, 36206, 560, 28609, 560, 560,
	560, 560, 560, 560, 560, 39709, -1000, 744, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 39709, 1462, 1954, 1030,
	269, -1000, -1000, -1000, 1032, -1000, 396, 391, 445, 386,
	71, 1056, 2036, -1000, 1709, 2042, 2042, -1000, -1000, -1000,
	-1000, -1000, -1000, 756, 290, 618, 206, 221, 939, 1999,
	1953, 1952, 1309, 1950, 997, 1945, 1768, -72, -1000, 1461,
	39709, -1000, -1000, 1252, 1226, 1794, 1626, 712, 1791, -1000,
	-1000, 325, 671, 1755, 399, 1755, 1755, 1755, 1755, 1755,
	-108, 1755, 1755, 1755, 69, 1755, 127, 1755, 1755, 1755,
	1755, 1755, 1479, -1000, -1000, -1000, 329, 1624, 1664, 1789,
	796, -1000, -1000, -1000, -1000, 1770, 2026, 648, -1000, -147,
	1680, 33864, -1000, 1709, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1470, -1000, 1942, 1208, 16340, 1889, -1000,
	-1000, 1092, 2094, -1000, 19843, 741, -1000, 16340, 1382, 1709,
	-1000, -1000, 1709, -1000, -1000, -1000, 675, -1000, -1000, 18668,
	18668, 18668, 18668, 18668, 18668, 18668, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1709, 1709, 1709, 1709, 1709, -1000, -1000, 1709, -1000, 12266,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 16340, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	37952, 36788, 39709, 1647, 1641, -1000, -1000, 730, 1706, -137,
	30937, -1000, -1000, -1000, -1000, 30355, 23953, 927, -1000, -1000,
	-1000, -1000, 1944, -1000, -1000, 729, -1000, 2059, -1000, -1000,
	1576, 566, -1000, 4018, 414, -1000, -1000, -1000, 1767, 28609,
	39709, 253, 1450, 1016, 1449, 30355, 30355, -1000, 228, 36206,
	36206, 558, 259, 36206, 277, 1705, 615, 1704, 611, 1304,
	39709, 1984, 1788, 39709, 1448, 1446, 30355, 30355, 36206, 36206,
	-1000, 39709, 1699, -1000, 1030, -1000, 4496, 16340, 558, 558,
	39709, 39709, 39709, 39709, 39709, -1000, -1000, 1030, 1030, 1030,
	1030, 1001, 2092, 1001, -1000, 1001, -1000, -1000, 16340, -1000,
	18668, 35624, 824, -1000, -1000, 39709, -1000, 1441, 284, -1000,
	-1000, -1000, -1000, -1000, -1000, 1427, -1000, 1911, 997, 997,
	-1000, 1361, 997, 1674, -1000, 919, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 997, -1000,
	15758, -390, -1000, -1000, 1686, -1000, 243, -1000, -1000, 518,
	518, 223, 36206, 36206, 36206, -1000, 1755, 28609, -1000, 1755,
	1755, 1755, -115, 1755, 1755, -1000, -1000, 1755, -1000, -1000,
	-1000, -1000, -1000, 1755, -1000, -1000, -1000, 1755, 1755, -1000,
	1755, 1755, -1000, -1000, -1000, -1000, -1000, 36206, 518, 168,
	1681, 518, 36206, 36206, -1000, 57, 53, 52, 50, -1000,
	-1000, -1000, -1000, 46, 45, -1000, -1000, 1834, -1000, -1000,
	221, -1000, -1000, 39709, -132, 33864, 1680, 2011, 9869, -1000,
	-1000, 1076, 2106, 858, 1669, -1000, -1000, 1679, -1000, 1303,
	725, 1137, 1856, -1000, -1000, -1000, 39709, -1000, 16340, 16340,
	16340, 1317, -1000, 21007, -1000, -1000, -1000, -1000, -1000, 9268,
	869, 18668, 1199, 955, 18668, 18668, 18668, 18668, 18668, 18668,
	18668, 18668, 18668, 18668, 18668, 18668, 18668, 18668, 18668, 1218,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1426, -1000,
	221, 1507, 1507, 806, 806, 806, 806, 806, 806, 19250,
	2010, 2010, 2010, 2010, 2010, 2010, 1470, 1574, 1289, 12266,
	14012, 14012, 14012, 1470, 16340, 16340, 15176, 14594, 16922, 14012,
	14012, 2010, 981, 1289, 30355, -1000, -1000, 18086, -1000, -1000,
	-1000, -1000, -1000, 1470, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 28609, 28609, 14012, 14012, 14012, 14012, 1470, 1470,
	14012, 14012, 14012, 14012, 14012, 1470, 1470, 1470, 1470, 14012,
	14012, 14012, 14012, 14012, 14012, 14012, 14012, 14012, 14012, 14012,
	14012, 866, 39709, -1000, 1632, 1744, -1000, -1000, -1000, 2006,
	35042, -1000, 31530, -1000, 1709, 866, 1605, 36788, 39709, -1000,
	-1000, 36788, 39709, 37370, 26863, 1667, -1000, -128, -134, -137,
	-1000, -1000, 801, -1000, -1000, -1000, 11670, -1000, 11071, 2042,
	1834, 6263, 20425, -1000, 414, -1000, -65, -1000, -1000, -1000,
	1730, -1000, 1730, 274, -10, 1730, 1730, 1730, 1730, 1730,
	-27, -27, -27, -27, -28, -1000, -1000, -1000, -1000, -1000,
	1766, 1765, -1000, 1730, 1730, 1730, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1753, 283, 1742, 1742, 1742,
	1742, 1742, 509, 509, -1000, 16340, 1772, 2004, 620, 259,
	1964, 1976, 1964, 407, -1000, 714, 1756, -1000, 711, 296,
	1642, -1000, 177, 1528, 39709, -1000, -1000, -1000, -1000, -1000,
	39709, 39709, 36206, 36206, 36206, 617, -1000, 39709, 1677, -1000,
	-1000, -1000, -1000, -1000, 1627, -1000, 1528, -1000, -1000, -1000,
	1358, 1289, 1425, 1424, 1999, -1000, -1000, -1000, 1009, -1000,
	-1000, -1000, -1000, 1030, 39709, 39709, 39709, 1999, 1030, 1289,
	1227, 1773, 1709, 1470, -1000, -1000, -1000, 1422, -1000, 18668,
	1674, 1674, -1000, 1674, 997, 1507, 1674, -1000, 1572, 1065,
	1357, 39709, -1000, 33864, -78, -1000, -162, 26281, -1000, -1000,
	-1000, 26281, -1000, 69, 170, -1000, 610, -1000, 1570, -1000,
	-1000, -1000, -1000, 1755, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 26281, 121, 156, 26281, 1627, 2091, -1000,
	-1000, -1000, -1000, 2035, -1000, 2010, 1470, 823, -1000, -1000,
	-1000, 1709, 1550, 710, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 25699, -1000, 1841, 1208,
	1208, 16340, -1000, -1000, -1000, 11071, 2039, -1000, 1869, 1867,
	1806, -1000, -1000, 869, 943, 983, -1000, -1000, 1091, -1000,
	-1000, -1000, -1000, 707, 1709, -1000, -1000, 3574, -1000, -1000,
	-1000, -1000, 1199, 18668, 18668, 18668, 1227, 3574, 3404, 973,
	1327, 806, 1073, 1073, 805, 805, 805, 805, 805, 1148,
	1148, -1000, -1000, -1000, 1470, -1000, -1000, -1000, 14012, 14012,
	14012, 14012, 14012, 14012, -1000, 16340, -1000, 1470, 1561, -1000,
	-1000, 1289, 706, 1561, 1561, -1000, 1104, 1453, 883, 2090,
	1561, 838, 2088, 1561, 1484, 18668, 18668, 18668, 1561, 1561,
	14012, 1060, -1000, 16340, 1470, -1000, 1301, 1673, 1672, 1561,
	1470, 1671, 1561, 1561, -199, -199, 1470, 1561, 1470, 1561,
	1561, -199, -199, -199, -199, 1561, 1561, 1561, 1561, 1561,
	1561, 1561, 1561, 1561, 1561, 1561, 1561, 201, 1709, -1000,
	11071, 36788, 36788, 36788, 36788, 36788, -1000, 1819, 1818, -1000,
	1822, 1821, 1848, 33864, 1568, 1470, 306, 35042, -1000, 1709,
	-1000, 33282, 704, 633, 632, 624, 14012, 2070, 36788, 1637,
	-1000, 1637, -1000, 700, -1000, -1000, 30355, -137, -151, -1000,
	-1000, 1667, -1000, 1295, -1000, -1000, 1289, -1000, 684, 1942,
	2010, 1665, 5662, -1000, -1000, -1000, -1000, 566, -1000, -1000,
	-1000, 1754, 1090, -1000, 1884, 771, 771, 776, 1368, 1882,
	-1000, -1000, 215, -100, -1000, -1000, -1000, 1221, -27, -27,
	1730, 1730, 273, 1730, -1000, -27, -1000, -1000, -1000, 801,
	1937, 801, 801, 801, 801, -27, 1337, 1337, -1000, -1000,
	-1000, -1000, 1214, -1000, 1753, -1000, 1206, -1000, -1000, -1000,
	-1000, -1000, -1000, 1442, 1786, 28609, -1000, 39709, -1000, 1964,
	-1000, -1000, -1000, 232, -1000, -1000, -1000, 2075, -1000, -1000,
	28609, 23371, 28609, -1000, -1000, 76, 36206, 178, 366, 224,
	-1000, 607, -1000, 606, -1000, -1000, -1000, -1000, -1000, -1000,
	39709, 36206, -1000, -1000, -1000, -1000, 2070, 1421, 1417, -1000,
	-1000, -1000, 1001, 1030, -1000, -1000, 18668, 36206, -1000, 379,
	-1000, 3574, -1000, -1000, -1000, 866, 646, -1000, -1000, -141,
	-1000, -1000, 604, 683, 680, 599, -1000, 89, 36206, -1000,
	28609, -1000, 2087, 2086, 120, 2085, 36206, -1000, 34, 1856,
	-1000, 1662, -1000, 848, 817, 877, 528, 528, -1000, 879,
	528, 1927, 1926, 860, -1000, 205, -1000, 9869, 9869, 1643,
	1335, 1329, -1000, 1839, -1000, -1000, -1000, 39709, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8667, 14012, -1000,
	1227, 3574, 3339, -1000, 18668, -1000, 1561, 1561, 1561, 1561,
	1561, 1470, 1289, -1000, 14012, -1000, 8066, -1000, -1000, 579,
	1218, 579, 18668, 18668, -1000, 18668, 18668, -1000, -1000, 18668,
	3283, 3151, 2925, -243, -1000, 1666, 972, -1000, 16340, 1274,
	-1000, -1000, 18668, 18668, -1000, -1000, -1000, -1000, -1000, 25117,
	-1000, -199, -199, -199, -199, -199, -1000, -1000, -1000, -1000,
	-199, -199, -199, -199, -199, -199, -199, -199, -199, -199,
	-199, -199, 1783, 11071, 1709, 6864, -1000, 28609, 1661, -1000,
	901, 900, 1744, 1750, 1782, 2491, -1000, -1000, -1000, -1000,
	1811, -1000, 1808, -1000, -1000, 1722, -1000, -1000, 1635, 1709,
	28609, 18668, 704, -1000, 1709, 1709, 1709, 1470, 2059, 16340,
	1637, -1000, -1000, 822, -1000, -1000, -153, -163, -1000, -1000,
	-1000, 9869, -1000, 6263, -1000, 6263, -1000, 22789, 590, 1887,
	479, 1368, 1368, 1368, -1000, 1368, -1000, -1000, -1000, 1747,
	-1000, 1082, -1000, -1000, -1000, -1000, -1000, 1709, -402, 1193,
	18668, 2105, -1000, 1881, -1000, 1879, 1878, 1325, -1000, -1000,
	1509, 801, 801, -27, -1000, -1000, 1730, -1000, 801, -1000,
	878, -1000, -1000, -1000, -1000, 801, 1557, -1000, 1555, 1629,
	-1000, 1552, 111, 39709, -1000, -1000, 2000, -1000, -1000, -1000,
	1922, 879, 879, 879, 1781, -1000, -1000, -1000, -1000, 1505,
	1628, -1000, 4018, 28609, 28609, 28609, -1000, -249, 154, -1000,
	36206, 133, 177, 385, 1407, 39709, 36206, -1000, -1000, -1000,
	-1000, -1000, 1999, -1000, 3574, 1528, -1000, -1000, -27, 39709,
	-1000, 36206, 804, 24535, 36206, 118, 159, -1000, 36206, 36206,
	2079, 36206, 1627, 1324, 1806, 823, 286, 1368, 705, -1000,
	-1000, 519, -1000, 199, 1406, 29773, 29191, 28609, 1877, 1876,
	1405, 39709, 28609, -1000, -1000, 368, 1400, 16340, -1000, 28609,
	-1000, -1000, 28609, 679, -1000, 28609, -1000, -1000, -1000, -1000,
	1116, 12848, -1000, -1000, 1470, -1000, 18668, 3574, -199, -199,
	-199, -199, -199, -1000, -1000, -1000, 678, 1470, 1730, 1730,
	-1000, 1730, 1742, -1000, 1730, -1, 1730, -7, 1470, 1470,
	3136, 3069, 2604, 2251, 1301, 18668, 18668, 18668, 1709, -195,
	-1000, 1289, 16340, 1638, 1600, -1000, -1000, 1372, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1966, 1591, 1619,
	-1000, -1000, 13430, 1470, 1866, 1550, -1000, 32700, 1548, -1000,
	2059, 11071, 16340, 16340, -1000, -1000, 16340, 1737, -1000, 16340,
	-1000, -1000, -1000, -1000, 28609, 305, -1000, 16340, 1548, 1342,
	-1000, 28609, 28609, 28609, -1000, 2042, 1289, -1000, -1000, -1000,
	-1000, 5662, -1000, 1545, -1000, 1730, 1730, 1874, -1000, 771,
	-1000, -1000, -1000, -1000, -1000, 28609, -1000, 18668, 1997, -1000,
	3574, -104, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 801,
	-1000, -1000, -1000, -1000, -1000, -27, 1323, -27, 1191, -1000,
	1176, -1000, -1000, -346, 1729, 221, -1000, 879, 864, 855,
	1320, 39709, 122, 23371, -1000, 4018, 4018, 4018, 102, 97,
	-1000, 1058, -1000, -1000, -1000, 1315, 1314, 1312, 1528, 180,
	1049, 147, -1000, 1986, -1000, -1000, 1030, -113, -1000, 159,
	-1000, -1000, -1000, 159, -1000, -1000, 155, 1627, 1627, 36206,
	1627, -1000, -1000, -1000, 368, 510, 4018, 4018, 1772, 771,
	1873, 522, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1371, -1000, 748, -1000, 592, 510, 368, 1289, 844, 1064,
	9869, -1000, 2077, -1000, -1000, -1000, 3574, -1000, -1000, -1000,
	-1000, -1000, 7465, -1000, -1000, 268, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18668, 18668, 18668, 18668, -1000, 1301,
	1301, 1301, 18668, 1470, 1311, 1289, 18668, 18668, 853, -1000,
	1872, -1000, 1709, -1000, -1000, 1709, 200, -1000, 28609, 2042,
	-1000, 1289, 1289, 1289, 28609, 1289, 1530, -1000, 1709, 32118,
	-1000, 33864, 1522, 1522, 1522, -1000, 650, 22789, 1970, 1970,
	1368, 1368, 1508, 1301, 1709, -1000, -1000, 801, -1000, 801,
	1501, 1499, -1000, 22789, -1000, -1000, 854, -1000, -1000, -1000,
	-1000, -1000, 2034, -1000, 122, -1000, 1310, 257, 266, -1000,
	250, 248, 246, 242, 226, -1000, -1000, -1000, -1000, 388,
	102, -1000, -81, 1175, 885, 1919, 97, -1000, 1158, 1154,
	1141, 1134, 220, -1000, -1000, -1000, -1000, 218, 177, -1000,
	381, 1300, -1000, 1902, 1899, 1996, 1996, 114, 1627, 1640,
	1489, -1000, -1000, 1369, -1000, -1000, 1728, 1368, 1368, -1000,
	1367, -1000, -1000, 28609, -1000, 510, 1958, 1956, 1709, -1000,
	2070, 36788, 12848, -1000, -1000, -1000, -1000, 1301, 1301, 1301,
	1301, -1000, -1000, -1000, 189, -1000, -1000, 1301, 1301, 2059,
	2056, 2103, -1000, 1619, 1709, -1000, 221, -1000, -1000, 1504,
	-1000, 28609, -1000, -1000, 704, -1000, -1000, -1000, 650, -1000,
	1366, 879, 1298, -1000, -1000, -1000, -1000, -1000, 422, -405,
	18668, -1000, -1000, -1000, -1000, 1498, -1000, 221, -1000, -1000,
	371, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1906, 1905,
	294, -1000, 1269, 1266, -1000, 436, 1267, 749, -212, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	372, 1365, -1000, 143, -1000, -1000, 549, 1890, 1893, 2054,
	-1000, 36206, -1000, -1000, 36788, -1000, -1000, 215, 215, 22789,
	1772, 1723, -1000, -1000, -1000, 18668, -1000, 850, 2068, 1625,
	-1000, -1000, -1000, -1000, -1000, 1470, 183, -272, -1000, -1000,
	856, 16340, 11071, 1619, 1470, -1000, -1000, -1000, -1000, -1000,
	1133, -1000, 39709, -1000, -1000, -1000, 1301, 650, -1000, 304,
	5292, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1121,
	-1000, -1000, 1259, 384, 139, -1000, 1989, -1000, 1722, 1112,
	1899, 2053, 1897, 1895, -1000, 1257, -253, 1637, 1495, 1716,
	22789, 3574, 1493, -1000, 28609, 2064, 2052, -1000, -1000, 1832,
	-247, -275, 1470, 174, 174, 1617, 1602, -1000, -1000, 1715,
	-405, -1000, 650, -1000, 288, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 16340, 16340, 10470, 5292,
	123, -1000, 112, -1000, -1000, -1000, 1228, -1000, 926, -1000,
	1143, -1000, 2051, 2040, -1000, 161, 2068, 650, 22789, 1488,
	-1000, 850, 1865, -201, 16340, 16340, -1000, 1823, -1000, -1000,
	-1000, 176, -1000, 841, 303, 835, -1000, 1507, -1000, 28609,
	-1000, -1000, 1364, 1261, -1000, 1142, 1234, 202, 190, 3294,
	-1000, -1000, -1000, -1000, -411, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1139, 1117, 34446, 2064, -1000, 1477, 650, -1000,
	413, -1000, 28609, -1000, 1289, 1593, -1000, 1289, -264, 1031,
	-1000, -1000, -1000, -1000, -1000, 28609, 1469, -1000, -1000, -1000,
	1011, -1000, 16340, 5292, 2032, 2030, 2014, 1943, 9869, 5154,
	-1000, -1000, -1000, -1000, 104, 1528, -201, 650, -1000, 403,
	1532, -1000, 1987, 16340, -273, 176, -1000, 1779, 315, 995,
	5292, -1000, 1230, -412, 397, 221, 548, 18668, -1000, -1000,
	-1000, 36206, -1000, -1000, 1709, 28609, 1709, -1000, -287, -1000,
	1775, 1771, 2084, -1000, -1000, -1000, -1000, -1000, -1000, 5292,
	-1000, -413, 5292, 3975, -1000, -1000, -1000, 4943, -1000, -1000,
	-1000, -1000, 187, -1000, -1000, 3574, 1528, 17504, -1000, -1000,
	-1000, -1000, 2101, -1000, 2099, 689, 689, -1000, -416, 4804,
	-417, 552, 5292, 1015, -1000, 16340, -1000, 548, -1000, 1301,
	1470, -1000, -1000, -1000, 492, 1138, -1000, 4710, 986, 5292,
	-1000, -418, 546, 5292, -1000, 1028, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4515, -1000, -419, 5292, 537, 4493,
	-421, -1000, 531, 5292, -1000,
}

var yyPgo = [...]int{
	0, 2617, 2612, 55, 2611, 261, 2610, 2609, 51, 2608,
	24, 22, 20, 36, 2606, 2292, 2289, 2275, 2261, 2255,
	2603, 7, 2597, 2595, 2239, 2594, 2589, 2232, 2203, 2192,
	2187, 2588, 2587, 2586, 2185, 2183, 2179, 19, 2584, 17,
	2583, 4, 156, 176, 2577, 2, 2576, 2575, 11, 2570,
	2569, 2176, 2568, 2564, 2563, 103, 2562, 2173, 2161, 2561,
	2156, 2138, 2559, 2556, 2130, 2128, 2126, 2545, 183, 2544,
	2543, 2541, 171, 108, 165, 2538, 2532, 2531, 117, 68,
	2660, 125, 48, 114, 359, 2530, 13, 58, 263, 2528,
	2527, 157, 2523, 152, 2522, 167, 2520, 146, 236, 110,
	2517, 2500, 178, 2498, 2495, 2494, 144, 2493, 2491, 177,
	2395, 2488, 2484, 166, 2483, 86, 182, 52, 40, 2481,
	2479, 2477, 2476, 2475, 29, 428, 2473, 105, 155, 2471,
	2470, 74, 2469, 2466, 208, 2465, 2460, 2459, 149, 41,
	2458, 2457, 61, 2456, 90, 66, 2454, 46, 2451, 145,
	2448, 2447, 33, 27, 2446, 92, 2445, 54, 2444, 151,
	139, 104, 2437, 18, 9, 15, 2436, 38, 12, 3,
	44, 26, 84, 71, 140, 111, 2432, 28, 42, 126,
	109, 2424, 91, 97, 43, 2422, 160, 2420, 94, 163,
	142, 143, 162, 2419, 2418, 2417, 1136, 2411, 122, 93,
	2410, 79, 1123, 175, 118, 2409, 107, 2408, 2407, 2406,
	2405, 2403, 102, 119, 2402, 2399, 180, 179, 181, 47,
	2398, 32, 992, 173, 1480, 60, 164, 2397, 45, 2396,
	2394, 2393, 3123, 124, 95, 113, 170, 2392, 115, 31,
	53, 2391, 2387, 2386, 2385, 2384, 2381, 1115, 2368, 2366,
	2365, 2364, 116, 174, 2363, 141, 137, 129, 2362, 159,
	35, 2360, 2359, 130, 101, 2355, 2354, 2353, 2351, 134,
	85, 161, 2343, 121, 131, 133, 2340, 75, 2338, 2337,
	73, 59, 2336, 2335, 2333, 106, 96, 2332, 67, 50,
	34, 72, 16, 2331, 2330, 88, 210, 2329, 30, 2320,
	5, 6, 8, 2318, 2317, 2315, 2314, 2313, 2312, 2311,
	87, 2309, 2307, 65, 2305, 2301, 2287, 39, 2283, 2271,
	2269, 153, 120, 76, 169, 186, 14, 2259, 2257, 10,
	2241, 135, 2229, 62, 2218, 57, 2214, 2210, 49, 2205,
	2199, 64, 2197, 2194, 172, 1818, 3083, 2190, 168, 154,
	63, 98, 2181, 2143, 0, 627, 184, 191, 2135, 2133,
}

var yyR1 = [...]int{
	0, 353, 353, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 182, 182, 182,
	182, 181, 181, 90, 90, 88, 88, 95, 6, 6,
	7, 7, 10, 10, 71, 71, 11, 12, 12, 12,
	12, 356, 356, 104, 104, 102, 102, 103, 103, 179,
	179, 13, 13, 13, 186, 186, 191, 191, 191, 194,
	194, 194, 194, 169, 170, 171, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 327, 327,
	336, 336, 336, 337, 337, 335, 335, 335, 335, 335,
	339, 339, 340, 340, 338, 338, 338, 338, 342, 342,
	343, 343, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 330, 330, 330, 34,
	34, 34, 34, 35, 35, 35, 35, 35, 35, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	345, 345, 346, 346, 347, 347, 348, 348, 348, 348,
	349, 349, 349, 349, 349, 350, 350, 350, 350, 350,
	350, 350, 351, 351, 352, 352, 2, 308, 308, 309,
	309, 310, 310, 310, 310, 311, 311, 312, 312, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 25,
	218, 218, 215, 215, 215, 216, 216, 217, 217, 217,
	329, 329, 329, 323, 323, 323, 325, 325, 324, 324,
	324, 326, 326, 331, 331, 331, 331, 331, 333, 333,
	333, 333, 333, 333, 334, 334, 334, 332, 332, 49,
	49, 50, 50, 50, 158, 158, 158, 14, 14, 14,
	14, 14, 20, 22, 22, 38, 38, 39, 23, 23,
	23, 23, 40, 40, 41, 26, 26, 26, 26, 26,
	26, 47, 47, 47, 46, 46, 45, 45, 45, 45,
	45, 45, 24, 24, 24, 24, 48, 48, 43, 43,
	42, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 27, 27, 27, 27, 27, 27, 19,
	307, 307, 307, 37, 37, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 53, 282, 283, 283, 283,
	283, 283, 283, 283, 283, 270, 270, 271, 260, 260,
	260, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 239, 239, 239, 239, 243, 243, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 242, 242,
	242, 242, 242, 242, 242, 242, 244, 244, 244, 244,
	244, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 246, 246, 246, 246,
	246, 246, 246, 246, 269, 269, 247, 247, 263, 263,
	264, 264, 264, 261, 261, 261, 262, 262, 250, 251,
	265, 252, 252, 252, 253, 253, 253, 254, 254, 259,
	259, 258, 258, 258, 258, 258, 258, 255, 255, 255,
	255, 256, 256, 257, 268, 268, 268, 268, 268, 248,
	36, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 294, 294, 208, 208, 209, 209, 272,
	272, 292, 292, 291, 291, 290, 290, 290, 281, 281,
	287, 287, 287, 287, 287, 287, 287, 287, 276, 276,
	276, 275, 275, 277, 277, 280, 280, 289, 289, 288,
	288, 273, 273, 273, 295, 295, 295, 295, 295, 274,
	274, 274, 274, 296, 278, 278, 279, 279, 279, 301,
	302, 300, 300, 300, 300, 300, 121, 121, 121, 284,
	284, 284, 285, 285, 285, 286, 286, 286, 305, 305,
	304, 304, 51, 52, 56, 56, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 157, 157, 157, 213, 213, 299,
	297, 297, 298, 298, 16, 16, 54, 54, 328, 328,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 303,
	303, 303, 18, 18, 57, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	85, 200, 200, 199, 199, 198, 198, 198, 201, 201,
	201, 201, 237, 237, 237, 59, 59, 59, 63, 63,
	66, 66, 66, 64, 65, 28, 29, 29, 29, 29,
	30, 214, 214, 61, 61, 62, 62, 62, 62, 77,
	77, 358, 358, 60, 359, 68, 69, 69, 70, 70,
	70, 204, 204, 74, 74, 74, 72, 72, 72, 73,
	73, 79, 79, 83, 83, 83, 83, 82, 82, 82,
	82, 160, 160, 165, 229, 229, 141, 141, 161, 161,
	166, 166, 166, 167, 167, 168, 168, 168, 168, 168,
	163, 163, 162, 162, 164, 129, 129, 227, 227, 227,
	226, 226, 226, 226, 226, 87, 87, 91, 91, 93,
	93, 93, 93, 93, 96, 143, 143, 114, 114, 115,
	115, 115, 115, 115, 127, 127, 178, 178, 177, 177,
	180, 180, 92, 94, 94, 94, 94, 99, 99, 100,
	100, 101, 101, 212, 212, 234, 234, 234, 105, 105,
	105, 107, 106, 106, 106, 106, 108, 108, 109, 109,
	111, 112, 112, 110, 110, 116, 116, 113, 117, 117,
	117, 117, 118, 118, 84, 84, 84, 84, 84, 84,
	84, 84, 197, 197, 120, 120, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 137, 137, 137, 137,
	137, 137, 122, 122, 122, 122, 122, 122, 122, 78,
	78, 138, 138, 138, 98, 97, 97, 81, 81, 80,
	80, 139, 139, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 132, 132, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 357, 357, 134, 133, 133,
	133, 133, 133, 133, 75, 75, 75, 75, 75, 235,
	235, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 150, 150, 76, 76,
	148, 148, 149, 151, 151, 147, 147, 147, 124, 124,
	124, 124, 124, 124, 124, 124, 126, 126, 126, 152,
	152, 140, 140, 86, 153, 153, 154, 155, 155, 156,
	156, 159, 172, 172, 172, 173, 173, 173, 173, 128,
	128, 174, 174, 174, 123, 123, 123, 123, 123, 123,
	123, 176, 176, 175, 175, 175, 175, 183, 183, 142,
	142, 145, 145, 144, 146, 184, 184, 188, 188, 185,
	185, 189, 189, 189, 189, 192, 192, 193, 193, 193,
	190, 190, 190, 187, 187, 187, 231, 231, 231, 195,
	195, 205, 205, 202, 202, 203, 203, 196, 196, 249,
	249, 249, 211, 211, 210, 210, 210, 206, 206, 206,
	207, 207, 228, 228, 224, 224, 224, 230, 230, 225,
	225, 232, 232, 233, 233, 306, 306, 266, 266, 316,
	316, 267, 267, 317, 317, 319, 319, 314, 314, 315,
	315, 318, 318, 31, 320, 320, 321, 321, 322, 322,
	322, 322, 32, 33, 33, 33, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 222, 222, 222, 222, 222, 222, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 354, 355,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 1, 3, 4, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 0, 2, 3, 3, 11,
	9, 11, 5, 5, 16, 12, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 4, 3,
	3, 6, 5, 5, 4, 3, 5, 1, 3, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 4, 5, 8, 1, 2, 5, 7, 10,
	8, 11, 1, 2, 5, 5, 5, 5, 6, 3,
	5, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 2, 4, 2, 4, 2, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 3,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 5, 4, 1, 1, 2,
	3, 4, 3, 3, 3, 3, 3, 3, 0, 1,
	1, 0, 2, 3, 2, 2, 2, 2, 2, 6,
	8, 3, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	3, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	1, 4, 4, 3, 3, 2, 4, 5, 2, 3,
	4, 2, 2, 3, 3, 3, 3, 3, 4, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 4,
	4, 4, 4, 4, 2, 1, 2, 1, 2, 2,
	3, 2, 2, 2, 2, 1, 1, 1, 1, 3,
	2, 1, 1, 0, 3, 1, 1, 0, 1, 5,
	4, 0, 1, 1, 2, 2, 3, 2, 0, 1,
	3, 5, 3, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 0, 2,
	0, 2, 1, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 3, 3,
	5, 4, 5, 1, 2, 2, 4, 3, 6, 5,
	3, 9, 2, 2, 0, 1, 2, 0, 1, 7,
	1, 3, 8, 8, 3, 3, 3, 5, 3, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 0,
	1, 1, 3, 2, 3, 3, 4, 3, 5, 5,
	5, 4, 4, 4, 2, 2, 2, 6, 2, 4,
	4, 4, 5, 8, 6, 3, 5, 4, 2, 4,
	3, 2, 4, 5, 6, 2, 6, 6, 3, 3,
	3, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	3, 2, 0, 1, 1, 2, 4, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 0, 1, 1, 0, 1, 1, 0,
	1, 3, 5, 1, 1, 3, 5, 1, 2, 3,
	5, 2, 2, 6, 0, 1, 0, 3, 0, 1,
	0, 2, 2, 4, 1, 2, 2, 2, 2, 2,
	0, 2, 1, 3, 3, 1, 3, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	4, 1, 3, 1, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 3, 0, 5,
	5, 5, 0, 2, 1, 3, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 0, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 1, 1, 5, 6, 6,
	6, 5, 5, 5, 6, 5, 5, 6, 5, 5,
	5, 5, 6, 5, 5, 5, 4, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 6, 8, 8, 8, 8, 4, 6,
	7, 7, 7, 9, 4, 7, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 1, 3, 1, 0, 2, 1, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 1,
	1, 0, 2, 4, 2, 4, 1, 3, 5, 4,
	6, 0, 3, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 3, 1,
	3, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -353, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -71, 9,
	10, 29, -53, 180, -52, 183, 182, 218, 184, 211,
	64, 341, -66, 344, 345, -358, -214, 269, 270, 20,
	37, 346, 348, 30, 31, 232, 286, 288, 313, -5,
	-90, -6, 8, 441, 181, 342, 213, 212, 26, 490,
	-354, 68, 606, -155, 15, -68, -359, -68, -68, -68,
	-68, -68, -282, -212, 108, 68, 23, -207, -218, 88,
	432, 188, -216, 282, 284, -205, -206, -215, 242, 252,
	44, 199, 198, 253, 189, 282, 189, 190, 192, 432,
	188, 225, 224, 282, 284, 189, -110, -232, 72, -221,
	202, 591, 307, 210, 487, 592, 253, 601, 593, 594,
	596, 294, 597, 401, 341, 357, 349, 372, 488, 543,
	264, 340, 418, 297, 257, 320, 544, 407, 413, 267,
	344, 427, 545, 233, 204, 261, 263, 262, 247, 457,
	268, 36, 214, 368, 303, 242, 546, 537, 236, 35,
	27, 235, 430, 99, 598, 547, 331, 415, 389, 332,
	231, 599, 548, 492, 301, 414, 117, 240, 364, 360,
	313, 279, 411, 333, 549, 390, 394, 550, 419, 287,
	278, 334, 551, 552, 553, 191, 293, 554, 243, 421,
	298, 388, 200, 489, 48, 222, 422, 392, 398, 555,
	330, 556, 557, 558, 559, 311, 309, 310, 312, 386,
	352, 381, 541, 254, 259, 53, 186, 396, 395, 397,
	260, 417, 377, 375, 560, 561, 302, 206, 562, 563,
	18, 564, 565, 425, 305, 566, 567, 568, 605, 569,
	570, 571, 416, 391, 393, 241, 116, 572, 308, 412,
	317, 491, 291, 574, 336, 221, 216, 426, 326, 575,
	576, 577, 578, 579, 285, 284, 345, 318, 346, 265,
	580, 581, 582, 583, 251, 234, 429, 420, 52, 403,
	584, 321, 337, 406, 342, 7, 258, 299, 410, 319,
	266, 252, 255, 379, 223, 585, 586, 366, 367, 343,
	226, 218, 111, 428, 536, 282, 338, 229, 587, 588,
	256, 230, 347, 424, 296, 369, 189, 133, 373, 418,
	180, 408, 409, 415, -276, 416, 224, 227, -237, 189,
	-200, 407, 287, 308, 462, 230, 231, 190, 191, 32,
	420, 419, 411, -232, 193, 347, -77, 184, 219, -110,
	-48, 72, 271, -48, 29, 72, 72, 36, 72, 346,
	410, 410, 75, 491, 233, 21, -345, -326, 317, -344,
	-324, 181, 180, 10, 182, 322, 323, 324, 190, 8,
	30, 573, 207, 325, 326, 6, 211, 327, 328, 225,
	9, 329, -329, 74, 72, -221, 21, -345, -326, 317,
	-209, -208, 339, 398, 6, -70, 5, -196, 194, 343,
	-88, 542, -95, -234, -232, -222, 74, 458, 462, 465,
	466, 471, 51, -8, -3, -173, 17, 16, -74, 54,
	55, -69, -82, 124, -84, -232, -119, 91, -125, 28,
	72, -221, 24, -124, -222, -120, -147, -146, -98, 133,
	-236, 122, 123, 130, 92, 176, -132, -130, -131, -133,
	-135, -136, 74, 73, 82, 75, 76, 77, 78, 83,
	458, 462, 465, 466, 471, 84, 85, -224, -144, -354,
	134, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 163,
	164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
	174, 175, 58, 59, 219, 188, 442, 443, 444, 445,
	446, 486, 209, 450, 94, 47, 431, 440, 439, 438,
	436, 437, 433, 435, 434, 452, 453, 195, 432, 128,
	441, 475, 476, 477, 478, 479, 480, 481, 482, 484,
	485, 483, 459, 460, 461, 463, 464, 467, 468, 469,
	470, 472, 473, 474, -223, 300, 595, 290, 322, 323,
	314, 324, 283, 292, 315, 573, 325, 327, 328, 192,
	-196, -196, 11, -102, -103, -110, -113, -232, -185, 343,
	-192, -189, 419, 420, -190, -193, -187, -147, 398, 570,
	571, 418, 373, 417, -224, -232, -2, -5, 6, -110,
	-283, -271, -274, -224, 204, -296, 72, -221, 201, 190,
	192, 441, -203, 195, -203, 225, 224, -217, 250, -203,
	-203, 189, -216, 100, 100, -54, -110, -328, -323, -329,
	-202, 195, -224, -202, -202, -202, -202, -202, -202, -202,
	-110, 177, -102, 72, 29, -201, 108, 12, 432, 188,
	189, 224, 225, 192, -278, 11, 110, 228, 228, 228,
	229, 228, -199, 410, 412, 226, 413, 414, 12, -85,
	108, 19, -354, -173, -173, 125, 72, 346, 193, -62,
	-3, -12, -10, -11, -8, 100, -127, 23, 29, 29,
	74, 51, 29, -43, -42, -44, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 29, -307,
	68, -266, 398, 72, -320, -321, -110, 75, 75, 66,
	66, 69, 193, 69, 66, -346, 318, 68, -346, 284,
	318, 319, 252, 282, 192, -346, -346, 284, -346, -346,
	-346, -346, -346, 410, -346, -346, -346, 320, 321, -346,
	408, 192, -346, -346, -346, -346, -346, 71, 66, 69,
	308, 66, 11, 66, -293, 133, 331, 332, 333, 334,
	330, 308, 335, 336, 337, 228, 338, -68, -7, -5,
	-354, 21, 22, 189, 423, 69, -88, -176, -354, -355,
	70, -174, 19, 30, -128, 75, 78, -156, -159, -84,
	-232, 50, -72, 21, 22, 80, 11, -227, 90, 88,
	89, 107, -226, 23, 72, -221, -222, 74, -223, 177,
	-84, -122, 110, 91, 108, 109, 93, 119, 118, 129,
	122, 123, 124, 125, 126, 127, 128, 120, 121, 132,
	100, 101, 102, 103, 104, 105, 106, -197, -354, -98,
	-354, 178, 179, -125, -125, -125, -125, -125, -125, -125,
	-354, -354, -354, -354, -354, -354, -8, -139, -84, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -150, -84, -354, -357, -134, -354, -357, -134,
	-357, -134, -357, -354, -357, -134, -357, -134, -357, -357,
	-134, -357, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -354, -354, -354, -354, -354, -354, -354, -354, -354,
	-354, -112, 87, -110, -87, -91, -93, -94, -114, -97,
	-354, -92, -110, -98, 72, -110, -102, -356, 69, 11,
	67, -356, 69, 177, 69, -186, -191, 421, 423, 343,
	-190, -190, -231, -224, 74, 28, 100, 29, 177, -155,
	-68, 70, 69, -274, 204, -239, -243, -245, -244, -246,
	-241, -242, 370, 373, 377, 375, 371, 376, 133, 374,
	379, 380, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 29, 214, 366, 367, 368, 369, 390, 391, 392,
	393, 394, 395, 396, 397, 349, 372, 488, 350, 351,
	352, 353, 354, 355, 357, 358, 359, 360, 361, 362,
	363, 364, 72, -222, -296, 68, -224, -110, -218, -216,
	72, 91, 72, -109, -224, -232, -116, -224, -232, 251,
	-332, -331, -323, -326, -203, -217, -323, 256, 254, 255,
	69, 193, 69, 193, 71, -102, 24, 66, -104, -110,
	72, 72, -109, -116, -325, -323, -326, -232, -201, 74,
	-236, -84, -203, -203, -110, -110, -110, -110, -110, -201,
	-201, -201, -201, -198, 11, 110, 11, -198, -198, -84,
	-125, -323, 434, 124, -232, 72, 72, 346, 72, 33,
	-43, -43, 74, -43, 69, 100, -43, 70, -139, -306,
	590, 69, -322, 23, 423, 424, 399, -348, 189, 227,
	224, -348, -344, 326, -325, -324, -323, -346, -347, -224,
	-346, -346, -346, 410, -346, -346, -346, -346, -346, -346,
	-346, -346, -329, -348, 286, 69, -348, -325, -323, 330,
	330, 330, 330, 330, 330, -74, -8, -110, 424, 425,
	-95, 23, -175, -225, -224, -219, 493, 185, 21, 181,
	184, 90, 23, 25, 494, 239, 93, 355, 133, 384,
	449, 16, 20, 203, 94, 187, 370, 373, 201, 132,
	197, 273, 275, 442, 180, 62, 495, 475, 433, 435,
	431, 434, 274, 432, 408, 496, 497, 498, 499, 363,
	361, 272, 28, 10, 476, 26, 212, 246, 22, 500,
	126, 359, 182, 501, 237, 97, 98, 538, 41, 40,
	306, 24, 276, 213, 85, 502, 477, 76, 503, 504,
	19, 65, 205, 11, 199, 227, 600, 505, 286, 13,
	456, 115, 14, 506, 507, 508, 509, 195, 194, 110,
	190, 590, 60, 244, 510, 8, 353, 511, 512, 513,
	514, 515, 354, 176, 87, 516, 517, 107, 518, 56,
	539, 45, 32, 232, 478, 479, 540, 480, 447, 519,
	58, 108, 17, 520, 38, 37, 436, 437, 30, 383,
	387, 382, 521, 399, 522, 523, 486, 220, 128, 249,
	63, 289, 91, 339, 481, 482, 83, 362, 604, 33,
	66, 217, 335, 304, 42, 88, 15, 245, 61, 34,
	454, 112, 484, 365, 196, 224, 524, 113, 485, 423,
	248, 525, 358, 542, 207, 109, 348, 183, 441, 316,
	270, 208, 526, 288, 59, 527, 238, 114, 483, 188,
	409, 528, 6, 529, 451, 29, 211, 269, 351, 198,
	530, 250, 281, 271, 280, 531, 49, 532, 295, 43,
	602, 57, 589, 189, 39, 96, 385, 350, 380, 193,
	448, 225, 84, 277, 5, 44, 31, 404, 9, 329,
	64, 67, 438, 439, 440, 47, 374, 371, 533, 378,
	603, 95, 12, 534, 455, 490, 89, 535, 405, -220,
	458, 459, 460, 461, 81, 215, 209, 219, 463, 464,
	50, 86, 452, 453, 228, -182, 87, 9, 110, 69,
	18, 69, -172, 25, 26, 177, -126, 51, 75, 78,
	-204, 49, -110, -84, -84, -84, -137, 83, 91, 84,
	85, -226, 124, -233, -225, -232, -219, -125, -138, -144,
	-98, 79, 110, 108, 109, 93, -125, -125, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -235, 72, 74, 72, -124, -124, -224, -72, -72,
	-72, -72, -72, -72, -355, 69, -355, -8, -80, -83,
	124, -84, -232, -80, -80, -355, -84, -84, -147, 74,
	-80, -147, 74, -80, -125, 447, 448, 449, -80, -80,
	-72, -148, -149, 95, -147, -355, -125, -224, -224, -80,
	-81, -80, -80, -80, -355, -355, -83, -80, -83, -80,
	-80, -355, -355, -355, -355, -80, -80, -80, -80, -80,
	-80, -80, -80, -80, -80, -80, -80, -179, 112, -110,
	29, 69, -105, -107, -106, -108, 56, 60, 62, 57,
	58, 59, 63, -212, -87, -96, 47, -354, -115, 112,
	-117, 23, -234, 64, 194, 65, -354, -179, 67, -87,
	-110, -87, -113, -232, 124, -189, -192, 69, 422, 424,
	425, -186, -253, 132, 66, 86, -84, -225, -233, -173,
	-74, -284, -285, -286, -225, 74, 75, -271, -272, -273,
	-274, -287, 204, -295, 196, 198, 199, 44, -275, 205,
	190, 45, -240, -261, 403, 404, -247, 68, -247, -247,
	378, 370, 373, 371, -247, -247, -247, -247, -247, -252,
	373, -252, -252, -252, -252, 371, 68, 68, -247, -247,
	-247, -263, 68, -263, 365, -264, 68, -264, -264, -264,
	-264, -296, -296, -84, -228, 67, 23, 192, -259, -258,
	-255, -256, -257, -254, 28, 24, -259, -49, 239, 210,
	177, 68, 177, 242, 243, -327, 69, 28, -333, 283,
	-110, -110, -110, -323, -323, -329, -303, 208, 203, -110,
	69, 69, 74, 72, 72, -127, -279, 11, 110, -201,
	-232, -232, -110, -127, -201, -78, 215, 67, -357, -355,
	72, -125, -42, -124, 70, -111, 87, 74, -321, -234,
	398, 424, -349, 124, -224, -349, -352, 490, 193, 70,
	69, -346, -349, 304, 286, -349, 11, -294, 19, -72,
	-355, -56, -55, 185, 182, 183, 186, 187, -299, 401,
	181, 236, 235, 221, -97, -354, -355, 69, 177, -181,
	34, 35, -224, 52, -128, -128, -159, -195, 19, 11,
	47, 47, -73, 57, 83, 84, 85, 177, -354, -138,
	-125, -125, -125, -78, 90, -355, -80, -80, -80, -80,
	-80, -81, -84, -355, 69, -355, 177, -355, -355, 69,
	67, 23, 11, 11, -355, 11, 11, -355, -355, 11,
	-125, -125, -125, -355, -355, -80, -151, -149, 97, -84,
	-355, -355, 69, 69, -355, -355, -355, -355, -160, 454,
	-160, -355, -355, -355, -355, -355, -160, -160, -160, -160,
	-355, -355, -355, -355, -355, -355, -355, -355, -355, -355,
	-355, -355, -123, 29, 47, -354, -8, -354, -184, -188,
	-147, -219, -91, -93, -93, -91, -93, 56, 56, 56,
	61, 56, 61, 56, -106, -234, -355, -355, -143, 238,
	-354, 33, -234, -117, 190, 190, 190, -81, -118, 12,
	-87, -118, -118, 177, -191, -194, 426, 423, 429, 72,
	74, 177, -174, 69, -286, 100, -274, 68, 72, -280,
	-223, 45, -275, -277, -275, -275, -280, 72, -280, 45,
	83, 91, -250, -251, -265, -268, -248, 23, 600, 406,
	28, 66, 401, 196, 45, 44, 199, 81, -262, 405,
	75, -252, -252, -247, -247, -247, 378, -247, -252, -253,
	29, -253, -253, -253, -253, -252, -269, 74, -269, 75,
	-263, 75, 70, 66, -224, -169, -110, -256, -255, -257,
	373, 418, 132, 430, -50, 8, 9, 10, -224, -308,
	-309, -310, -224, 110, 244, 245, -224, -336, 316, -331,
	284, 293, 90, 16, 490, 193, 193, -110, -323, -118,
	72, 72, -198, -201, -125, -326, 230, 231, -179, 189,
	-322, 193, 177, 177, 193, 307, -325, -224, 11, 11,
	304, 11, -325, 340, -204, 69, -213, -275, -305, -273,
	-274, -304, 197, 204, -213, 204, 201, -275, 205, 196,
	197, -210, -275, 193, 23, -213, -213, -281, 100, -213,
	32, 32, 112, -225, -225, 69, 74, 74, 53, -110,
	-79, -170, 124, -225, -81, -78, 90, -125, -355, -355,
	-355, -355, -355, -355, -83, 124, -233, -238, 133, 370,
	214, 368, 361, 388, 375, 403, 366, 404, -235, -238,
	-125, -125, -125, -125, -125, 11, 11, 11, 487, -155,
	99, -84, 96, -125, -125, -224, -165, -354, -160, -160,
	-160, -160, -160, -161, -160, -161, -161, -161, -161, -161,
	-161, -161, -161, -161, -161, -161, -183, 66, -184, -142,
	-145, -144, -354, -8, -355, -175, 6, 490, -180, -224,
	-118, 69, 100, 100, -100, -99, 66, 67, -101, 66,
	-99, 56, 56, -178, 68, 69, -144, -354, -180, -125,
	-117, -354, -354, -354, -355, -155, -84, -118, 423, 427,
	428, -285, -286, -289, -288, -224, -222, 196, -295, 44,
	-295, -280, -280, -280, -280, 68, 83, -354, 601, 75,
	-125, 9, 45, 45, 45, 74, 70, -253, -253, -252,
	-247, -253, 72, 133, -253, 70, 69, 70, 69, 70,
	69, -121, 547, 91, -110, -171, 23, 29, -281, -281,
	-281, 66, 70, 69, -239, -224, -224, -224, -339, 490,
	289, -337, -335, 295, 296, 297, 298, 299, -326, 294,
	-333, 291, 74, 72, -110, -323, -127, -252, -110, -325,
	124, 124, -224, -325, 304, -351, 490, -325, -325, 11,
	-325, 74, -73, -55, 68, -270, 72, -222, -280, -206,
	196, 72, 72, 72, -221, -223, 72, -221, -223, -224,
	45, 45, 72, -110, -224, -270, 72, -84, -224, -224,
	177, -224, -182, 69, -82, -355, -125, -161, -161, -161,
	-161, -161, 177, -355, -247, -247, -247, -264, -247, 354,
	-247, 354, -355, -355, 19, 19, 19, 19, -355, -125,
	-125, -125, -354, -76, 451, -84, 69, 69, -229, 72,
	27, -183, 69, -355, -355, 47, -355, -355, 69, -155,
	-188, -84, -84, -84, 68, -84, -177, -224, 238, -355,
	-117, -212, -177, -177, -177, -173, 70, 69, -247, -247,
	45, -277, -177, -125, 23, -131, -253, -252, 74, -252,
	75, 75, 547, 68, -8, -169, -281, 72, 133, 72,
	133, 74, -110, -311, -312, -313, 81, 489, 91, 246,
	247, 206, 248, 249, 250, -310, -239, -239, -239, -342,
	-343, -341, 292, 314, 315, 300, -340, -338, 309, 310,
	311, 312, 90, 74, 74, 74, -334, 283, 90, 292,
	16, 23, -201, -314, -199, -351, -351, 286, -325, -79,
	-270, -157, 209, 210, -239, -239, -228, -277, 45, 72,
	-211, 193, 23, 193, -157, -270, 29, 182, 87, -225,
	-89, 11, -170, -170, 124, -252, 72, -125, -125, -125,
	-125, -355, -355, -355, -125, -355, 74, -125, -125, -141,
	112, 45, -145, -142, 47, -8, -354, -224, -173, -177,
	70, 69, -144, -115, -234, -355, -355, -355, -291, -290,
	67, 200, 81, -288, -172, -172, -280, -280, 70, -355,
	-354, -253, -253, 70, 70, -289, -169, -171, 72, 133,
	19, -170, -313, 74, 250, 246, 250, 250, 250, 250,
	251, -330, 81, 290, -341, 301, 552, 285, 316, 75,
	75, 111, 30, 31, -338, 75, 75, 75, 75, -335,
	16, 490, -333, 291, 74, 74, -315, 38, -317, 39,
	-350, 23, -350, 304, 11, 70, 72, -240, -240, 68,
	-280, -280, 72, -224, -157, 28, 28, -354, -118, -87,
	-82, -355, -355, -355, -355, -75, 110, 490, -355, -355,
	-155, 16, 9, -142, -8, 70, -224, -117, -290, 72,
	-281, 74, 207, -260, 603, 602, -125, 70, -8, 237,
	-171, 36, 36, 242, 243, 74, 74, 28, 302, 176,
	28, 75, 176, 457, 291, 74, 72, 292, -249, 194,
	-318, 43, -316, -267, 42, 16, -323, -87, -289, -228,
	68, -125, -297, -298, 112, -152, 13, -170, -355, 488,
	63, 491, -166, 114, 113, -139, -184, -355, 75, -110,
	-355, -292, -291, -169, 238, -21, -3, -10, -11, -12,
	-13, -15, -51, -16, -17, -22, -23, -18, -57, -58,
	-66, -64, -65, -61, -60, -26, -24, -27, -19, -28,
	-29, -30, -34, -35, -25, -36, 94, 195, 272, 341,
	75, 28, 75, 28, 305, 292, 23, -178, 75, -317,
	16, -319, 40, 41, 74, 490, -118, 70, 68, -289,
	-355, 69, -224, -153, 14, 16, 53, 489, 492, -355,
	-167, 93, -168, 111, 457, -129, 75, 176, -167, 68,
	-260, -158, 240, 241, -169, -84, -84, 72, -47, -230,
	275, 276, 277, -225, -37, -21, 303, 303, 74, 38,
	114, 74, 16, 16, 284, -152, -292, -289, 70, -298,
	47, -163, 455, -154, -84, -140, -86, -84, 53, -168,
	116, 117, 238, 116, 117, -124, -177, -169, 72, 72,
	-38, -39, 95, 96, 273, 274, 278, -239, 69, 606,
	74, 74, 28, 289, 21, -326, -153, 70, -292, 222,
	-162, -164, -224, 69, 490, 90, -224, 70, -171, 99,
	97, -39, -84, -37, 19, 19, 19, 28, -225, 99,
	-21, 306, -163, -292, 223, 69, 23, -86, 491, -168,
	-301, -302, 66, -14, -20, -13, -10, -11, -12, 341,
	94, -37, 96, 606, -48, 75, -8, -46, -45, 75,
	-48, 280, 91, 281, 72, -125, -326, -354, -164, -165,
	492, -302, 66, -301, 66, 10, 9, -169, -37, 606,
	-37, 99, 97, -40, -41, 98, -21, 69, 279, -125,
	220, -300, 208, 203, 206, 29, -300, 606, 99, 606,
	195, -37, 99, 97, -41, -84, -45, -355, -355, 202,
	28, 83, 99, 94, 606, 195, -37, 96, 99, 606,
	-37, 195, 99, 606, 195,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 754, 754, 754, 754,
	754, 754, 853, -2, 612, 0, 0, 0, 0, -2,
	727, 728, 729, 733, 734, 749, 751, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 41,
	0, 0, 64, 65, 1207, 0, 752, 741, 742, 0,
	0, 1772, 2, 1145, 0, 763, 756, 0, 1207, 1207,
	0, 0, 96, 0, 0, 0, 854, 0, 0, 0,
	1205, 1205, 247, 1205, 1205, 0, 1221, 245, 0, 1202,
	1217, 1218, 1219, 0, 0, 0, 1203, 0, 1203, 1203,
	1203, 1203, 1203, 1203, 1203, 0, 673, 873, 1231, 1232,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 0, 0, 0, 718,
	0, 684, 685, 686, 0, 688, 0, 0, 0, 0,
	0, 698, 701, 705, 0, 1145, 1145, 558, 559, 560,
	723, 724, 712, 725, 0, 0, 0, 0, 0, 834,
	322, 324, 0, 344, 0, 347, 350, 1237, 735, 0,
	0, 1262, 1263, 0, 0, 0, 0, 0, 1685, 190,
	261, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	0, 192, 192, 192, 1693, 192, 0, 192, 192, 192,
	192, 192, 260, 250, 251, 252, 0, 0, 0, 1685,
	0, 538, 535, 536, 754, 0, 758, 0, 1208, 730,
	53, 0, 55, 1161, 855, 856, 857, 1751, 1752, 1753,
	1754, 1755, 1756, 0, 39, 1151, 0, 0, 766, 764,
	765, 755, 0, 777, 807, 0, 884, 0, 890, 892,
	-2, -2, 0, 933, 934, 935, 936, 937, 938, 0,
	0, 0, 0, 0, 0, 0, 961, 962, 963, 964,
	965, 966, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1751, 1752, 1753, 1754, 1755, 894, 895, 1115, 1174, 0,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1106, 0, 1035, 1035, 1035, 1035,
	1035, 1035, 1035, 1035, 1035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	0, 0, 0, 0, 0, 75, 77, 873, 81, 1734,
	0, 1179, -2, -2, 1181, 0, 0, 0, -2, -2,
	-2, -2, 0, -2, 1115, 0, 97, 1137, 754, 98,
	0, 387, 388, 0, 1569, 582, 1224, 1225, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 1205, 247, 0, 0, 654, 0, 655, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	672, 0, 674, 675, 718, 677, 0, 0, 1205, 1205,
	0, 0, 0, 0, 0, 584, 585, 718, 718, 718,
	718, 715, 0, 715, 695, 715, 713, 714, 0, 700,
	0, 0, 0, 708, 709, 0, 736, 0, 0, 743,
	745, 746, 747, 748, 744, 0, 753, 0, 0, 0,
	326, 0, 0, 346, 328, 0, 331, 332, 333, 334,
	335, 336, 337, 338, 339, 340, 341, 342, 0, 349,
	0, 1235, 1238, 740, 1253, 1254, 0, 1264, 1265, 196,
	196, 0, 0, 0, 0, 159, 192, 0, 161, 192,
	192, 192, 0, 192, 192, 168, 169, 192, 171, 172,
	173, 174, 175, 192, 177, 178, 179, 192, 192, 182,
	192, 192, 185, 186, 187, 188, 189, 259, 196, 0,
	0, 196, 0, 0, 520, 0, 0, 0, 0, 525,
	526, 527, 528, 0, 0, 531, 532, 763, 43, 60,
	0, 759, 760, 0, 0, 0, 54, 0, 0, 59,
	1773, 47, 0, 0, 1146, 1149, 1150, 1138, 1139, 1142,
	0, 0, 761, 767, 768, 757, 0, 778, 0, 0,
	0, 0, 808, 0, 810, 811, 812, 813, 814, 0,
	888, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	912, 913, 914, 915, 916, 917, 918, 891, 0, 905,
	0, 0, 0, 954, 955, 956, 957, 958, 959, 0,
	766, 766, 766, 766, 766, 766, 0, 0, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 1107, 0, 1018, 1027, 0, 1019, 1028,
	1020, 1029, 1021, 0, 1022, 1030, 1023, 1031, 1024, 1025,
	1032, 1026, 0, 0, 0, 927, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 872, 0, 815, 817, 818, 819, -2,
	0, 823, 878, 925, 1231, -2, 0, 0, 0, 71,
	72, 0, 0, 0, 0, 82, 84, 0, 0, 1734,
	1182, 1183, 494, 1196, 1197, 1198, 0, 1194, 0, 1145,
	763, 599, 0, 389, 0, 401, 483, 413, 414, 415,
	476, 417, 476, 476, 0, 476, 476, 476, 476, 476,
	491, 491, 491, 491, 491, 459, 460, 461, 462, 463,
	0, 0, 436, 476, 476, 476, 440, 466, 467, 468,
	469, 470, 471, 472, 473, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 478, 478, 480, 480, 480,
	480, 480, 0, 0, 581, 0, 1222, 0, 0, 247,
	-2, 0, -2, 0, 868, 0, 0, 875, 0, 0,
	108, 277, 263, 107, 0, 241, 246, 242, 243, 244,
	0, 0, 0, 0, 254, 669, 1204, 0, 662, 73,
	663, 664, 665, 666, 667, 256, 668, 874, 676, 719,
	0, 721, 0, 0, 834, 681, 682, 683, 586, 689,
	690, 691, 697, 718, 0, 0, 0, 834, 718, 699,
	919, 702, 1035, 0, 726, 738, 737, 0, 750, 0,
	323, 325, 327, 345, 0, 0, 348, 351, 0, 0,
	0, 0, 1256, 0, 1258, 1260, 0, 0, 197, 198,
	199, 0, 191, 0, 214, 262, 0, 160, 0, 194,
	162, 163, 164, 192, 166, 167, 170, 176, 180, 181,
	183, 184, 258, 0, 0, 0, 0, 157, 0, 521,
	522, 523, 524, 533, 530, 766, 0, 0, 731, 732,
	56, 0, 0, 1163, 1229, 1230, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 37, 0, 1152, 0, 0,
	0, 0, 1141, 1143, 1144, 0, 0, 1126, 0, 0,
	769, 762, 40, 885, 886, 887, 889, 906, 0, 908,
	910, 809, 779, 0, 1116, 1233, -2, 896, 897, 921,
	922, 923, 0, 0, 0, 0, 919, 901, 0, 939,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 953, 1049, 1050, 0, 951, 952, 960, 0, 0,
	0, 0, 0, 927, 924, 0, 1173, 0, 0, 929,
	773, 774, 0, 0, 0, 1000, 0, 0, 936, 1118,
	0, 936, 1118, 0, 0, 0, 0, 0, 0, 0,
	0, 1113, 1110, 0, 0, 1036, 0, 0, 0, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 871,
	0, 0, 0, 0, 0, 0, 858, 0, 0, 861,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 0,
	829, 0, 878, 0, 0, 0, 927, 882, 0, 882,
	76, 882, 78, 0, 877, 1180, 0, 0, 0, 87,
	88, 83, 1184, 0, 1190, 1191, 1192, 1116, 0, 1151,
	766, 386, 600, 602, 605, 606, 607, 390, 392, 393,
	394, 0, -2, 573, 0, 0, 563, 565, 565, 0,
	561, 562, 397, 486, 484, 485, 416, 0, 491, 491,
	476, 476, 476, 476, 445, 491, 448, 451, 452, 494,
	0, 494, 494, 494, 494, 491, 0, 0, 437, 438,
	439, 428, 0, 429, 478, 431, 0, 432, 433, 434,
	435, 579, 580, 0, 0, 0, 93, 0, 102, -2,
	501, 502, 503, 0, 498, 1206, 103, 0, 279, 280,
	0, 217, 0, 248, 249, 110, 0, 0, 264, 0,
	385, 0, 656, 0, 658, 253, 660, 670, 671, 661,
	0, 0, 720, 678, 679, 680, 882, 0, 0, 692,
	716, 717, 715, 718, 696, 710, 0, 0, 703, 0,
	739, 835, 329, 330, 352, 79, 0, 1236, 1255, 0,
	1259, 1261, 0, 200, 202, 0, 151, 0, 0, 193,
	0, 165, 0, 0, 0, 0, 0, 529, 0, 761,
	61, 613, 614, -2, 647, 1214, 647, 647, 633, 548,
	647, 0, 0, 0, 57, 0, 1162, 0, 0, 48,
	0, 1584, 51, 0, 1147, 1148, 1140, 0, 1199, 1200,
	1127, 1128, 94, 770, 907, 909, 911, 0, 927, 898,
	919, 902, 0, 899, 0, 893, 0, 0, 0, 0,
	0, 0, 932, -2, 0, 997, 0, 998, 999, 0,
	0, 0, 0, 0, 1042, 0, 0, 1043, 1008, 0,
	0, 0, 0, 0, 1014, 1137, 0, 1111, 0, 0,
	1017, 1037, 0, 0, 1038, 1039, 1040, 1041, 986, 0,
	987, 0, 0, 0, 0, 0, 993, 994, 995, 996,
	788, 788, 788, 788, 788, 788, 788, 788, 788, 788,
	788, 788, 1167, 0, 0, 0, 1156, 0, 882, 1175,
	0, 0, 816, 849, 851, 0, 846, 859, 860, 862,
	0, 864, 0, 866, 867, 836, 822, 926, 824, 0,
	0, 0, 878, 833, 0, 0, 0, 0, 1137, 0,
	882, 69, 70, 0, 85, 86, 0, 0, 92, 495,
	496, 0, 216, 0, 603, 0, 391, 0, 566, 0,
	0, 565, 565, 565, 564, 565, 556, 566, 557, 0,
	402, 0, 404, 405, 406, 407, 408, 0, 0, 0,
	0, 0, 490, 0, 515, 517, 0, 0, 412, 487,
	0, 494, 494, 491, 443, 444, 476, 449, 494, 453,
	0, 454, 455, 456, 457, 494, 0, 474, 0, 0,
	430, 0, 596, 0, 1223, 95, 0, 504, 505, 506,
	0, 548, 548, 548, 0, 281, 282, 283, 869, 0,
	218, 219, 0, 0, 0, 0, 876, 120, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 74, 257, 687,
	587, 588, 834, 694, 920, 704, 706, 707, 491, 0,
	1257, 0, 0, 0, 0, 0, 212, 195, 0, 0,
	0, 0, 158, 0, 769, 0, 0, 565, 0, 634,
	635, 0, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 1216, 0, 0, 0, 549, 0,
	642, 643, 0, 1165, 1164, 0, 49, 50, 1153, 38,
	47, 0, 780, 1117, 0, 900, 0, 903, 788, 788,
	788, 788, 788, 967, 930, 775, 0, 0, 476, 476,
	1096, 476, 480, 1099, 476, 1101, 476, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1108,
	1016, 1114, 0, 0, 0, 781, 782, 784, 988, 989,
	990, 991, 992, 971, 789, 972, 973, 975, 976, 978,
	979, 980, 981, 983, 984, 985, 62, 0, 1167, 1154,
	1169, 1171, 0, 0, 0, 0, -2, 1515, 0, 840,
	1137, 0, 0, 0, 843, 850, 0, 0, 844, 0,
	845, 863, 865, 820, 0, 0, 825, 0, 0, -2,
	832, 0, 0, 0, 842, 1145, 883, 68, 89, 90,
	91, 601, 604, 0, 567, 476, 476, 0, 571, 563,
	572, 550, 552, 553, 555, 0, 403, 0, 0, 411,
	488, 0, 514, 516, 518, 519, 477, 441, 442, 494,
	450, 446, 492, 493, 458, 491, 0, 491, 0, 481,
	0, 583, 597, 0, 0, 0, 93, 548, 0, 0,
	0, 0, 225, 0, 221, 0, 0, 0, 128, 0,
	111, 112, 113, 115, 116, 0, 0, 0, 109, 0,
	266, 0, 269, 270, 657, 659, 718, 1247, 870, 212,
	201, 203, 204, 212, 215, 152, 0, 153, 155, 0,
	154, 534, 94, 615, 0, 644, 0, 0, 1222, 563,
	0, -2, 618, 623, 624, 625, 626, 627, 628, 629,
	0, 640, 0, 620, 0, 644, 0, 637, 0, 0,
	0, 52, 45, 94, 94, 968, 904, 970, 974, 969,
	977, 982, 0, 1001, 1093, 491, 1097, 1098, 1100, 1102,
	1103, 1105, 1003, 1002, 0, 0, 0, 0, 1009, 0,
	0, 0, 0, 0, 0, 1112, 0, 0, 786, 785,
	0, 63, 0, 1172, -2, 0, 0, 80, 0, 1145,
	1176, 1177, 1178, 847, 0, 852, 0, 838, 0, 878,
	830, 0, 0, 0, 0, 67, 540, 0, 1142, 1142,
	565, 565, 0, 0, 0, 489, 447, 494, 475, 494,
	0, 0, 598, 0, 93, 95, 0, 509, 510, 511,
	512, 513, 0, 94, 226, 227, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 220, 222, 223, 224, 146,
	129, 130, 0, 0, 0, 0, 121, 122, 0, 0,
	0, 0, 0, 117, 118, 119, 265, 0, 0, 268,
	0, 0, 693, 1249, 1243, 205, 205, 0, 156, 0,
	0, 617, 645, 0, 401, 401, 0, 565, 565, 636,
	0, 1212, 1213, 0, 631, 644, 0, 0, 0, 1166,
	882, 0, 0, 771, 776, 1094, 1095, 0, 0, 0,
	0, 1010, 1011, 1012, 1044, 1015, 1109, 0, 0, 1137,
	0, 0, 1170, 1155, 0, 1159, 0, 841, 66, 0,
	837, 0, 826, 828, 878, 879, 880, 881, 539, 543,
	0, 548, 0, 568, 569, 570, 551, 554, 0, 398,
	0, 464, 465, 479, 482, 0, 100, 0, 507, 508,
	0, 95, 228, 229, 230, 231, 233, 234, 0, 0,
	0, 106, 0, 0, 131, 0, 0, 0, 0, 141,
	142, 143, 144, 145, 123, 124, 125, 126, 127, 114,
	0, 0, 267, 0, 272, 273, 1209, 1251, -2, 0,
	149, 0, 150, 213, 0, 616, 646, 395, 396, 0,
	1222, 0, 619, 630, 632, 0, 639, 0, 1129, 46,
	94, 1004, 1006, 1005, 1007, 0, 0, 0, 1033, 1034,
	790, 0, 0, 1158, 0, 848, 839, 831, 544, 545,
	0, 547, 0, 409, 399, 400, 0, 541, 93, 0,
	0, 235, 236, 237, 238, 147, 148, 132, 133, 0,
	135, 136, 0, 0, 0, 275, 0, 271, 836, 0,
	1243, 0, 1245, 0, 1242, 0, 206, 882, 0, 0,
	0, 638, 0, 650, 0, 1134, 0, 772, 1013, 0,
	0, 0, 0, 0, 0, 787, 1168, -2, 546, 0,
	398, 99, 542, 101, 284, 93, 355, 356, 357, 358,
	359, 360, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 384, 0, 0, 0, 0,
	0, 137, 0, 139, 140, 274, 0, 36, 0, 1250,
	0, 1248, 0, 0, 1244, 0, 1129, 541, 0, 0,
	649, 0, 0, 800, 0, 0, 1045, 0, 1048, 783,
	791, 0, 794, 0, 0, 0, 805, 0, 792, 0,
	410, 93, 0, 0, 105, 0, 0, 1224, 0, 0,
	-2, -2, -2, 1227, 0, 353, 134, 138, 276, 1210,
	1211, 1252, 0, 0, 0, 1134, 621, 0, 541, 651,
	0, 44, 0, 1135, 1136, 1130, 1131, 1133, 1046, 0,
	795, 796, 797, 798, 799, 0, 0, 95, 285, 286,
	0, 295, 0, 0, 0, 0, 0, 309, 0, 0,
	1246, 1240, 207, 208, 209, 211, 800, 541, 641, 0,
	801, 802, 0, 0, 0, 0, 806, 574, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 1228, 239,
	354, 0, 42, 622, 0, 0, 0, 1132, 0, 793,
	575, 576, 0, 93, 287, 288, 289, 290, 291, 0,
	293, 0, 0, 0, 305, 306, 307, 0, 314, 316,
	317, 318, 0, 320, 321, 310, 210, 0, 803, 804,
	1047, 577, 0, 578, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 0, 302, 0, 308, 0, 319, 0,
	0, 589, 591, 592, 0, 0, 590, 0, 0, 297,
	298, 0, 0, 0, 303, 0, 315, 652, 653, 593,
	594, 595, 292, 294, 0, 300, 0, 0, 0, 0,
	0, 299, 0, 304, 301,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 606,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:537
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:541
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:548
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:583
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:589
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:595
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:606
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:622
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:629
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:633
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:646
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:658
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:667
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:671
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:689
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:699
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:715
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:729
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:749
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 63:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:761
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
			yyVAL.str = InsertStr
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:777
		{
			yyVAL.str = ReplaceStr
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:783
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:789
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:793
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:797
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:801
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:807
		{
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:811
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:821
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:831
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:835
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:840
		{
			yyVAL.partitions = nil
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:844
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:854
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:861
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:870
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:874
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:880
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:888
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:894
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:898
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:902
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:906
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:911
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:916
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:921
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:936
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:941
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:946
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 100:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:950
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:956
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:962
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:970
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 104:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:978
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 105:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:982
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:986
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1005
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1014
		{
			yyVAL.accountNames = nil
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1018
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1023
		{
			yyVAL.tlsOptionItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.tlsOptionItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1031
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1055
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1063
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1068
		{
			yyVAL.accountLimitItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1078
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1092
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1105
		{
			yyVAL.passLockItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1129
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1133
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1149
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1153
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1157
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1161
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1165
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1182
		{
			yyVAL.str = ""
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1197
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1202
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1206
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1210
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1216
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1221
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1225
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1229
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1233
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1237
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1243
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1251
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1378
		{
			yyVAL.strs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1382
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1388
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1397
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1405
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1409
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1431
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1436
		{
			yyVAL.grantAssumption = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1440
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1444
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1448
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1452
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1456
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1460
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1465
		{
			yyVAL.boolean = false
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1469
		{
			yyVAL.boolean = true
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1474
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1478
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1485
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1497
		{
			yyVAL.procedureParams = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1511
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1517
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1521
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1529
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1534
		{
			yyVAL.characteristics = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1548
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1554
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1558
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1562
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1582
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1590
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1596
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1602
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1606
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1662
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1684
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1734
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1738
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1742
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1748
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1760
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1768
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1774
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1778
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1782
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1792
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = BeforeStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = AfterStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = InsertStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = UpdateStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.str = DeleteStr
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1821
		{
			yyVAL.triggerOrder = nil
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1845
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1851
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1871
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1877
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 299:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1882
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1887
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1893
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1911
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1917
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1921
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1925
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 308:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1929
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1933
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1937
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1972
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1980
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1998
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2006
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2016
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2026
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2032
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &Resignal{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2096
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2108
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2119
		{
			yyVAL.exprs = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.exprs = nil
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2178
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2194
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2221
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2226
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2230
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2234
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2248
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2267
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2280
		{
			yyVAL.columnType = ColumnType{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2284
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2338
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2347
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2356
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2365
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2387
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2458
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2572
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2639
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2643
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2649
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2654
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2659
		{
			yyVAL.sqlVal = nil
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2663
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2668
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2672
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2680
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2684
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2690
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2698
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2711
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2755
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2759
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2764
		{
			yyVAL.boolean = false
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.boolean = true
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2773
		{
			yyVAL.charsetCollates = nil
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2783
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2787
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2791
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2795
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2799
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2803
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2809
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2813
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2817
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2821
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2827
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2831
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2837
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2843
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.colKeyOpt = colKey
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2851
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2859
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2871
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2881
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2889
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2909
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2913
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = ""
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = yyDollar[1].str
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2943
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2947
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2952
		{
			yyVAL.indexOptions = nil
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2962
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2987
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2991
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3003
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3011
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3015
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3024
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3032
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3042
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3046
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = yyDollar[1].str
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3094
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 574:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3118
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 575:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3122
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 576:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3126
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 577:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3130
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 578:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3134
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3140
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3144
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3148
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3158
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3168
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3173
		{
			yyVAL.str = ""
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3187
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3207
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3211
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3215
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3220
		{
			yyVAL.boolean = true
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.boolean = true
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3228
		{
			yyVAL.boolean = false
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3233
		{
			yyVAL.str = ""
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3241
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3249
		{
			yyVAL.str = yyDollar[1].str
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3253
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3257
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3263
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3267
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3271
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3276
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3280
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3285
		{
			yyVAL.str = string("")
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3289
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3298
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3321
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3328
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3339
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3348
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 622:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3352
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3356
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3361
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3366
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3376
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3381
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3390
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3394
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3401
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3423
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3428
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3432
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3436
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 641:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3446
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3452
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3456
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3461
		{
			yyVAL.columnOrder = nil
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3469
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3474
		{
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3476
		{
		}
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3480
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3486
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3490
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 652:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3496
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 653:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3500
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3506
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3510
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3516
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3520
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3532
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3538
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3546
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3550
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3558
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3566
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3574
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3582
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3590
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3598
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3607
		{

		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3611
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3621
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3625
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3631
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3637
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3642
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3646
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3650
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3654
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3658
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3663
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3667
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3671
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3687
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3695
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3699
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3707
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 693:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3711
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3716
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3721
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3725
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3729
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3733
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3737
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3743
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3751
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3755
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3760
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3764
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3769
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 706:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3773
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 707:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3777
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3781
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3785
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3791
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3797
		{
			yyVAL.boolean = false
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3801
		{
			yyVAL.boolean = true
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3807
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3817
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3831
		{
			yyVAL.showFilter = nil
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3835
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3839
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3843
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = ""
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = SessionStr
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = GlobalStr
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3863
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3867
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.statement = &Begin{}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3887
		{
			yyVAL.statement = &Begin{}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3891
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3895
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.statement = &Commit{}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.statement = &Rollback{}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3913
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3923
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3927
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3931
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3947
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3951
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3957
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = ""
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3980
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3986
		{
			setAllowComments(yylex, true)
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3990
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3996
		{
			yyVAL.bytes2 = nil
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4000
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = UnionStr
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = UnionAllStr
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = UnionDistinctStr
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4019
		{
			yyVAL.byt = 0
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.byt = 1
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4028
		{
			yyVAL.str = ""
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.str = SQLCacheStr
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = DistinctStr
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4054
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4058
		{
			yyVAL.str = StraightJoinHint
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4064
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4072
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4091
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4095
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4101
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4105
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4109
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4113
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4123
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4129
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4134
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.exprs = nil
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4151
		{
			yyVAL.over = nil
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.over = yyDollar[1].over
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4160
		{
			yyVAL.frame = nil
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4164
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4168
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4175
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4217
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4225
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4240
		{
			yyVAL.window = nil
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			yyVAL.window = yyDollar[2].window
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4252
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4258
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4276
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4306
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4316
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4330
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4346
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4353
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4359
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4363
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4374
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4389
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4393
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4401
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4412
		{
			yyVAL.expr = nil
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4416
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4421
		{
			yyVAL.columns = nil
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4425
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4435
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4445
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4451
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4464
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4468
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4472
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4482
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4484
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4488
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4490
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4494
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4496
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4499
		{
			yyVAL.empty = struct{}{}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.empty = struct{}{}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4506
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4516
		{
			yyVAL.str = JoinStr
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4520
		{
			yyVAL.str = JoinStr
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4524
		{
			yyVAL.str = JoinStr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4530
		{
			yyVAL.str = StraightJoinStr
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4536
		{
			yyVAL.str = LeftJoinStr
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4540
		{
			yyVAL.str = LeftJoinStr
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4544
		{
			yyVAL.str = RightJoinStr
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = RightJoinStr
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = NaturalJoinStr
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4558
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4572
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4584
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4588
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4608
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4614
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4619
		{
			yyVAL.indexHints = nil
		}
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4623
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4627
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4631
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4636
		{
			yyVAL.expr = nil
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4650
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4654
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4658
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4662
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4666
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4674
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4684
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4700
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4704
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4708
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4712
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4716
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4724
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4728
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4732
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4736
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.str = IsNullStr
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4746
		{
			yyVAL.str = IsNotNullStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.str = IsTrueStr
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4754
		{
			yyVAL.str = IsNotTrueStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4758
		{
			yyVAL.str = IsFalseStr
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4762
		{
			yyVAL.str = IsNotFalseStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4768
		{
			yyVAL.str = EqualStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4772
		{
			yyVAL.str = LessThanStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4776
		{
			yyVAL.str = GreaterThanStr
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4780
		{
			yyVAL.str = LessEqualStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4784
		{
			yyVAL.str = GreaterEqualStr
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.str = NotEqualStr
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4792
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4797
		{
			yyVAL.expr = nil
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4801
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4831
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4837
		{
			yyVAL.selectExprs = nil
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4844
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4848
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4854
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4880
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4888
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4892
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4896
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4900
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4904
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4908
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4912
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4916
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4920
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4924
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4928
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4932
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4936
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4940
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4944
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4948
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4952
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4956
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4964
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4978
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4982
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4986
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5006
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5010
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5020
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5024
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5032
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5036
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5040
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5044
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5048
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5052
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5056
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5060
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5064
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5068
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 982:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5072
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5076
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5080
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5084
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5093
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5097
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5101
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 989:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5105
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5109
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5113
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5117
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5121
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5125
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5129
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5133
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5144
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5148
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5152
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5156
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5160
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5164
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1003:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5168
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1004:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5172
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5176
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1006:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5180
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1007:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5188
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5192
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1010:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5196
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1011:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5200
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1012:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5204
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1013:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5208
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5212
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1015:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5216
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5220
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5224
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5234
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5238
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5242
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5252
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5257
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5263
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5268
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5272
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5277
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5281
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5285
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5290
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5295
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5300
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1033:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5304
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5308
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5319
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5329
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5333
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5337
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5341
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5345
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5349
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5355
		{
			yyVAL.str = ""
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = BooleanModeStr
		}
	case 1046:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5363
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1047:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5371
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5377
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5381
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.str = Armscii8Str
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.str = AsciiStr
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5395
		{
			yyVAL.str = Big5Str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5399
		{
			yyVAL.str = UBinaryStr
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = Cp1250Str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = Cp1251Str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5411
		{
			yyVAL.str = Cp1256Str
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.str = Cp1257Str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.str = Cp850Str
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.str = Cp852Str
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = Cp866Str
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5431
		{
			yyVAL.str = Cp932Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5435
		{
			yyVAL.str = Dec8Str
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.str = EucjpmsStr
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5443
		{
			yyVAL.str = EuckrStr
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
			yyVAL.str = Gb18030Str
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5451
		{
			yyVAL.str = Gb2312Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5455
		{
			yyVAL.str = GbkStr
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.str = Geostd8Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.str = GreekStr
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.str = HebrewStr
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = Hp8Str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = Keybcs2Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = Koi8rStr
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = Koi8uStr
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5487
		{
			yyVAL.str = Latin1Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.str = Latin2Str
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5495
		{
			yyVAL.str = Latin5Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5499
		{
			yyVAL.str = Latin7Str
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5503
		{
			yyVAL.str = MacceStr
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.str = MacromanStr
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.str = SjisStr
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5515
		{
			yyVAL.str = Swe7Str
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.str = Tis620Str
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5523
		{
			yyVAL.str = Ucs2Str
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5527
		{
			yyVAL.str = UjisStr
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5531
		{
			yyVAL.str = Utf16Str
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5535
		{
			yyVAL.str = Utf16leStr
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5539
		{
			yyVAL.str = Utf32Str
		}
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5543
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5547
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5551
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5557
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5561
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5565
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5569
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5573
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5587
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5595
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5599
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5603
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5607
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5612
		{
			yyVAL.expr = nil
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5616
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5621
		{
			yyVAL.str = string("")
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5625
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5631
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5635
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5641
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5646
		{
			yyVAL.expr = nil
		}
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5650
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5660
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5664
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5670
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5674
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5678
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5690
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5694
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5698
		{
			yyVAL.expr = &NullVal{}
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5704
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5708
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5712
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5717
		{
			yyVAL.exprs = nil
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5721
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5727
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5731
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5737
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5742
		{
			yyVAL.expr = nil
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5746
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5752
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5757
		{
			yyVAL.orderBy = nil
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5761
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5767
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5771
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5777
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5782
		{
			yyVAL.str = AscScr
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5786
		{
			yyVAL.str = AscScr
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5790
		{
			yyVAL.str = DescScr
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5795
		{
			yyVAL.limit = nil
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5799
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5803
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5807
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5813
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5817
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5822
		{
			yyVAL.str = ""
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5826
		{
			yyVAL.str = ForUpdateStr
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5830
		{
			yyVAL.str = ShareModeStr
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5843
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5847
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5851
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5855
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5860
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5864
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5868
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5874
		{
			yyVAL.columns = nil
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5878
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5884
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5888
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5892
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5896
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5901
		{
			yyVAL.assignExprs = nil
		}
	case 1168:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5905
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5911
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5915
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5921
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5925
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5931
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5937
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5947
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5951
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5957
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5960
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5966
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5976
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5987
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6000
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6013
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6019
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6023
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6029
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6033
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6037
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6043
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6047
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6051
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6058
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6065
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6069
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6073
		{
			yyVAL.expr = &Default{}
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6082
		{
			yyVAL.byt = 0
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6084
		{
			yyVAL.byt = 1
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6087
		{
			yyVAL.byt = 0
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6089
		{
			yyVAL.byt = 1
		}
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6092
		{
			yyVAL.byt = 0
		}
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6094
		{
			yyVAL.byt = 1
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6097
		{
			yyVAL.str = ""
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6099
		{
			yyVAL.str = IgnoreStr
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6102
		{
			yyVAL.sqlVal = nil
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6104
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6106
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			yyVAL.empty = struct{}{}
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6112
		{
			yyVAL.empty = struct{}{}
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6115
		{
			yyVAL.empty = struct{}{}
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6117
		{
			yyVAL.empty = struct{}{}
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6119
		{
			yyVAL.empty = struct{}{}
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6123
		{
			yyVAL.str = UniqueStr
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6125
		{
			yyVAL.str = FulltextStr
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6127
		{
			yyVAL.str = SpatialStr
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = ""
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6132
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6135
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6137
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6141
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6145
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6149
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6155
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6166
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6172
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6176
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6183
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6188
		{
			yyVAL.str = string("")
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6190
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6193
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6195
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6198
		{
			yyVAL.EnclosedBy = nil
		}
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6202
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6207
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6216
		{
			yyVAL.sqlVal = nil
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6220
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6225
		{
			yyVAL.sqlVal = nil
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6229
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6234
		{
			yyVAL.Fields = nil
		}
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6238
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6243
		{
			yyVAL.Lines = nil
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6247
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6252
		{
			yyVAL.sqlVal = nil
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6256
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6262
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6268
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6272
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6278
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6282
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6288
		{
			yyVAL.lockType = LockRead
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6292
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6296
		{
			yyVAL.lockType = LockWrite
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6300
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6306
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6312
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6316
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6320
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6920
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6929
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
