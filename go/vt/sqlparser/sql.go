// Code generated by goyacc -o sql.go -v y.output sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const MAXVALUE = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const TRIGGERS = 57551
const FUNCTION = 57552
const STATUS = 57553
const VARIABLES = 57554
const WARNINGS = 57555
const ERRORS = 57556
const KILL = 57557
const CONNECTION = 57558
const SEQUENCE = 57559
const ENABLE = 57560
const DISABLE = 57561
const EACH = 57562
const ROW = 57563
const BEFORE = 57564
const FOLLOWS = 57565
const PRECEDES = 57566
const DEFINER = 57567
const INVOKER = 57568
const INOUT = 57569
const OUT = 57570
const DETERMINISTIC = 57571
const CONTAINS = 57572
const READS = 57573
const MODIFIES = 57574
const SQL = 57575
const SECURITY = 57576
const TEMPORARY = 57577
const ALGORITHM = 57578
const MERGE = 57579
const TEMPTABLE = 57580
const UNDEFINED = 57581
const CLASS_ORIGIN = 57582
const SUBCLASS_ORIGIN = 57583
const MESSAGE_TEXT = 57584
const MYSQL_ERRNO = 57585
const CONSTRAINT_CATALOG = 57586
const CONSTRAINT_SCHEMA = 57587
const CONSTRAINT_NAME = 57588
const CATALOG_NAME = 57589
const SCHEMA_NAME = 57590
const TABLE_NAME = 57591
const COLUMN_NAME = 57592
const CURSOR_NAME = 57593
const SIGNAL = 57594
const RESIGNAL = 57595
const SQLSTATE = 57596
const DECLARE = 57597
const CONDITION = 57598
const CURSOR = 57599
const CONTINUE = 57600
const EXIT = 57601
const UNDO = 57602
const HANDLER = 57603
const FOUND = 57604
const SQLWARNING = 57605
const SQLEXCEPTION = 57606
const USER = 57607
const IDENTIFIED = 57608
const ROLE = 57609
const REUSE = 57610
const GRANT = 57611
const GRANTS = 57612
const REVOKE = 57613
const NONE = 57614
const ATTRIBUTE = 57615
const RANDOM = 57616
const PASSWORD = 57617
const INITIAL = 57618
const AUTHENTICATION = 57619
const SSL = 57620
const X509 = 57621
const CIPHER = 57622
const ISSUER = 57623
const SUBJECT = 57624
const ACCOUNT = 57625
const EXPIRE = 57626
const NEVER = 57627
const DAY = 57628
const OPTION = 57629
const OPTIONAL = 57630
const EXCEPT = 57631
const ADMIN = 57632
const PRIVILEGES = 57633
const MAX_QUERIES_PER_HOUR = 57634
const MAX_UPDATES_PER_HOUR = 57635
const MAX_CONNECTIONS_PER_HOUR = 57636
const MAX_USER_CONNECTIONS = 57637
const FLUSH = 57638
const FAILED_LOGIN_ATTEMPTS = 57639
const PASSWORD_LOCK_TIME = 57640
const REQUIRE = 57641
const PROXY = 57642
const ROUTINE = 57643
const TABLESPACE = 57644
const CLIENT = 57645
const SLAVE = 57646
const EVENT = 57647
const EXECUTE = 57648
const FILE = 57649
const RELOAD = 57650
const REPLICATION = 57651
const SHUTDOWN = 57652
const SUPER = 57653
const USAGE = 57654
const LOGS = 57655
const ENGINE = 57656
const ERROR = 57657
const GENERAL = 57658
const HOSTS = 57659
const OPTIMIZER_COSTS = 57660
const RELAY = 57661
const SLOW = 57662
const USER_RESOURCES = 57663
const NO_WRITE_TO_BINLOG = 57664
const CHANNEL = 57665
const BEGIN = 57666
const START = 57667
const TRANSACTION = 57668
const COMMIT = 57669
const ROLLBACK = 57670
const SAVEPOINT = 57671
const WORK = 57672
const RELEASE = 57673
const BIT = 57674
const TINYINT = 57675
const SMALLINT = 57676
const MEDIUMINT = 57677
const INT = 57678
const INTEGER = 57679
const BIGINT = 57680
const INTNUM = 57681
const SERIAL = 57682
const REAL = 57683
const DOUBLE = 57684
const FLOAT_TYPE = 57685
const DECIMAL = 57686
const NUMERIC = 57687
const DEC = 57688
const FIXED = 57689
const PRECISION = 57690
const TIME = 57691
const TIMESTAMP = 57692
const DATETIME = 57693
const YEAR = 57694
const CHAR = 57695
const VARCHAR = 57696
const BOOL = 57697
const CHARACTER = 57698
const VARBINARY = 57699
const NCHAR = 57700
const NVARCHAR = 57701
const NATIONAL = 57702
const VARYING = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const LONG = 57708
const BLOB = 57709
const TINYBLOB = 57710
const MEDIUMBLOB = 57711
const LONGBLOB = 57712
const JSON = 57713
const ENUM = 57714
const GEOMETRY = 57715
const POINT = 57716
const LINESTRING = 57717
const POLYGON = 57718
const GEOMETRYCOLLECTION = 57719
const MULTIPOINT = 57720
const MULTILINESTRING = 57721
const MULTIPOLYGON = 57722
const LOCAL = 57723
const LOW_PRIORITY = 57724
const NULLX = 57725
const AUTO_INCREMENT = 57726
const APPROXNUM = 57727
const SIGNED = 57728
const UNSIGNED = 57729
const ZEROFILL = 57730
const SRID = 57731
const COLLATION = 57732
const DATABASES = 57733
const SCHEMAS = 57734
const TABLES = 57735
const FULL = 57736
const PROCESSLIST = 57737
const COLUMNS = 57738
const FIELDS = 57739
const ENGINES = 57740
const PLUGINS = 57741
const NAMES = 57742
const CHARSET = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const ENCRYPTION = 57755
const CURRENT_TIMESTAMP = 57756
const DATABASE = 57757
const CURRENT_DATE = 57758
const CURRENT_USER = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const REPLACE = 57766
const CONVERT = 57767
const CAST = 57768
const SUBSTR = 57769
const SUBSTRING = 57770
const TRIM = 57771
const LEADING = 57772
const TRAILING = 57773
const BOTH = 57774
const GROUP_CONCAT = 57775
const SEPARATOR = 57776
const TIMESTAMPADD = 57777
const TIMESTAMPDIFF = 57778
const OVER = 57779
const WINDOW = 57780
const GROUPING = 57781
const CURRENT = 57782
const AVG = 57783
const BIT_AND = 57784
const BIT_OR = 57785
const BIT_XOR = 57786
const COUNT = 57787
const JSON_ARRAYAGG = 57788
const JSON_OBJECTAGG = 57789
const MAX = 57790
const MIN = 57791
const STDDEV_POP = 57792
const STDDEV = 57793
const STD = 57794
const STDDEV_SAMP = 57795
const SUM = 57796
const VAR_POP = 57797
const VARIANCE = 57798
const VAR_SAMP = 57799
const CUME_DIST = 57800
const DENSE_RANK = 57801
const FIRST_VALUE = 57802
const LAG = 57803
const LAST_VALUE = 57804
const LEAD = 57805
const NTH_VALUE = 57806
const NTILE = 57807
const ROW_NUMBER = 57808
const PERCENT_RANK = 57809
const RANK = 57810
const JSON_TABLE = 57811
const PATH = 57812
const AVG_ROW_LENGTH = 57813
const CHECKSUM = 57814
const COMPRESSION = 57815
const DIRECTORY = 57816
const DELAY_KEY_WRITE = 57817
const ENGINE_ATTRIBUTE = 57818
const INSERT_METHOD = 57819
const MAX_ROWS = 57820
const MIN_ROWS = 57821
const PACK_KEYS = 57822
const ROW_FORMAT = 57823
const SECONDARY_ENGINE_ATTRIBUTE = 57824
const STATS_AUTO_RECALC = 57825
const STATS_PERSISTENT = 57826
const STATS_SAMPLE_PAGES = 57827
const STORAGE = 57828
const DISK = 57829
const MEMORY = 57830
const DYNAMIC = 57831
const COMPRESSED = 57832
const REDUNDANT = 57833
const COMPACT = 57834
const MATCH = 57835
const AGAINST = 57836
const BOOLEAN = 57837
const LANGUAGE = 57838
const WITH = 57839
const QUERY = 57840
const EXPANSION = 57841
const ACCESSIBLE = 57842
const ASENSITIVE = 57843
const CUBE = 57844
const DAY_HOUR = 57845
const DAY_MICROSECOND = 57846
const DAY_MINUTE = 57847
const DAY_SECOND = 57848
const DELAYED = 57849
const DISTINCTROW = 57850
const DUAL = 57851
const EMPTY = 57852
const FETCH = 57853
const FLOAT4 = 57854
const FLOAT8 = 57855
const GET = 57856
const HIGH_PRIORITY = 57857
const HOUR_MICROSECOND = 57858
const HOUR_MINUTE = 57859
const HOUR_SECOND = 57860
const INSENSITIVE = 57861
const INT1 = 57862
const INT2 = 57863
const INT3 = 57864
const INT4 = 57865
const INT8 = 57866
const IO_AFTER_GTIDS = 57867
const IO_BEFORE_GTIDS = 57868
const ITERATE = 57869
const LEAVE = 57870
const LINEAR = 57871
const LOOP = 57872
const MASTER_BIND = 57873
const MASTER_SSL_VERIFY_SERVER_CERT = 57874
const MIDDLEINT = 57875
const MINUTE_MICROSECOND = 57876
const MINUTE_SECOND = 57877
const PURGE = 57878
const READ_WRITE = 57879
const REPEAT = 57880
const RETURN = 57881
const RLIKE = 57882
const SECOND_MICROSECOND = 57883
const SENSITIVE = 57884
const SPECIFIC = 57885
const SQL_BIG_RESULT = 57886
const SQL_SMALL_RESULT = 57887
const VARCHARACTER = 57888
const WHILE = 57889
const YEAR_MONTH = 57890
const UNUSED = 57891
const DESCRIPTION = 57892
const LATERAL = 57893
const MEMBER = 57894
const RECURSIVE = 57895
const BUCKETS = 57896
const CLONE = 57897
const COMPONENT = 57898
const DEFINITION = 57899
const ENFORCED = 57900
const EXCLUDE = 57901
const GEOMCOLLECTION = 57902
const GET_MASTER_PUBLIC_KEY = 57903
const HISTOGRAM = 57904
const HISTORY = 57905
const INACTIVE = 57906
const INVISIBLE = 57907
const LOCKED = 57908
const MASTER_COMPRESSION_ALGORITHMS = 57909
const MASTER_PUBLIC_KEY_PATH = 57910
const MASTER_TLS_CIPHERSUITES = 57911
const MASTER_ZSTD_COMPRESSION_LEVEL = 57912
const NESTED = 57913
const NETWORK_NAMESPACE = 57914
const NOWAIT = 57915
const NULLS = 57916
const OJ = 57917
const OLD = 57918
const ORDINALITY = 57919
const ORGANIZATION = 57920
const OTHERS = 57921
const PERSIST = 57922
const PERSIST_ONLY = 57923
const PRIVILEGE_CHECKS_USER = 57924
const PROCESS = 57925
const REFERENCE = 57926
const REQUIRE_ROW_FORMAT = 57927
const RESOURCE = 57928
const RESPECT = 57929
const RESTART = 57930
const RETAIN = 57931
const SECONDARY = 57932
const SECONDARY_ENGINE = 57933
const SECONDARY_LOAD = 57934
const SECONDARY_UNLOAD = 57935
const SKIP = 57936
const THREAD_PRIORITY = 57937
const TIES = 57938
const VCPU = 57939
const VISIBLE = 57940
const SYSTEM = 57941
const INFILE = 57942
const ACTIVE = 57943
const AGGREGATE = 57944
const ANY = 57945
const ARRAY = 57946
const ASCII = 57947
const AT = 57948
const AUTOEXTEND_SIZE = 57949
const ENDS = 57950
const EVENTS = 57951
const GENERATED = 57952
const ALWAYS = 57953
const STORED = 57954
const VIRTUAL = 57955
const NVAR = 57956
const PASSWORD_LOCK = 57957

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'0'",
	"'1'",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	636, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	191, 1320,
	192, 1339,
	-2, 249,
	-1, 47,
	231, 797,
	232, 797,
	-2, 786,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 495,
	179, 1709,
	-2, 987,
	-1, 496,
	179, 1349,
	-2, 1343,
	-1, 497,
	179, 1350,
	-2, 1344,
	-1, 527,
	179, 1817,
	-2, 1238,
	-1, 528,
	179, 1898,
	-2, 989,
	-1, 529,
	179, 1729,
	-2, 990,
	-1, 596,
	179, 1680,
	-2, 1208,
	-1, 599,
	179, 1697,
	-2, 1137,
	-1, 600,
	179, 1910,
	-2, 1137,
	-1, 601,
	179, 1909,
	-2, 1137,
	-1, 602,
	179, 1908,
	-2, 1137,
	-1, 603,
	179, 1797,
	-2, 1137,
	-1, 604,
	179, 1798,
	-2, 1137,
	-1, 605,
	179, 1695,
	-2, 1137,
	-1, 606,
	179, 1696,
	-2, 1137,
	-1, 607,
	179, 1698,
	-2, 1137,
	-1, 855,
	100, 2004,
	179, 2004,
	-2, 1304,
	-1, 856,
	100, 2106,
	179, 2106,
	-2, 1305,
	-1, 861,
	100, 2026,
	179, 2026,
	-2, 1306,
	-1, 862,
	100, 2067,
	179, 2067,
	-2, 1307,
	-1, 863,
	100, 2068,
	179, 2068,
	-2, 1308,
	-1, 864,
	100, 1947,
	179, 1947,
	-2, 1312,
	-1, 866,
	100, 2047,
	179, 2047,
	-2, 1314,
	-1, 1122,
	5, 61,
	-2, 44,
	-1, 1385,
	1, 523,
	636, 523,
	-2, 521,
	-1, 1387,
	1, 523,
	636, 523,
	-2, 521,
	-1, 1840,
	179, 1352,
	-2, 1348,
	-1, 1960,
	1, 898,
	5, 898,
	12, 898,
	13, 898,
	14, 898,
	15, 898,
	17, 898,
	19, 898,
	29, 898,
	30, 898,
	56, 898,
	57, 898,
	58, 898,
	59, 898,
	60, 898,
	62, 898,
	63, 898,
	66, 898,
	67, 898,
	69, 898,
	70, 898,
	87, 898,
	414, 898,
	458, 898,
	636, 898,
	-2, 931,
	-1, 1968,
	67, 78,
	69, 78,
	-2, 82,
	-1, 1985,
	179, 1821,
	-2, 1309,
	-1, 2092,
	1, 524,
	636, 524,
	-2, 521,
	-1, 2182,
	44, 679,
	198, 681,
	200, 679,
	201, 679,
	-2, 722,
	-1, 2231,
	5, 62,
	-2, 1019,
	-1, 2807,
	198, 682,
	-2, 680,
	-1, 2880,
	69, 1593,
	70, 1593,
	179, 1593,
	-2, 829,
	-1, 2906,
	1, 973,
	5, 973,
	12, 973,
	13, 973,
	14, 973,
	15, 973,
	17, 973,
	19, 973,
	29, 973,
	30, 973,
	56, 973,
	57, 973,
	58, 973,
	59, 973,
	60, 973,
	62, 973,
	63, 973,
	66, 973,
	67, 973,
	69, 973,
	70, 973,
	87, 973,
	414, 973,
	458, 973,
	636, 973,
	-2, 931,
	-1, 3053,
	5, 62,
	-2, 1270,
	-1, 3141,
	41, 1359,
	-2, 1357,
	-1, 3338,
	5, 62,
	-2, 1273,
	-1, 3353,
	281, 315,
	-2, 1414,
	-1, 3354,
	281, 316,
	-2, 1454,
	-1, 3355,
	281, 317,
	-2, 1630,
	-1, 3520,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3551,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 49841

var yyAct = [...]int{
	539, 76, 3357, 3471, 2448, 3512, 1136, 2590, 3501, 3358,
	3378, 3452, 3473, 3330, 469, 1219, 428, 3340, 2750, 3453,
	3268, 7, 3396, 3079, 3265, 3, 499, 3267, 6, 3415,
	3266, 5, 3260, 3198, 3141, 3238, 2616, 3328, 972, 2316,
	2900, 1220, 1420, 2873, 1315, 538, 3269, 8, 2702, 2544,
	2087, 3143, 2928, 2310, 2874, 506, 2314, 488, 2482, 2792,
	481, 2767, 2986, 2980, 2703, 503, 497, 79, 411, 414,
	3010, 2964, 2111, 1812, 3261, 465, 2870, 76, 1865, 1243,
	1983, 2617, 459, 2801, 91, 2389, 2030, 1006, 516, 2039,
	942, 2372, 478, 2464, 2882, 1800, 2891, 1805, 989, 2181,
	1030, 479, 1792, 453, 453, 1993, 104, 1925, 2299, 1957,
	2560, 1422, 130, 2026, 1956, 130, 1793, 1871, 2140, 2512,
	2371, 130, 2073, 1746, 2157, 2292, 1396, 2095, 2390, 2094,
	1717, 456, 456, 2069, 2439, 130, 2093, 1137, 857, 1293,
	1297, 1916, 1144, 1842, 935, 1960, 1038, 1059, 1140, 2385,
	2091, 1751, 1296, 2598, 1970, 860, 971, 934, 484, 130,
	944, 853, 1158, 854, 431, 430, 468, 1037, 955, 1391,
	100, 96, 67, 508, 1388, 473, 1148, 960, 2057, 130,
	456, 2620, 944, 3551, 2043, 3546, 985, 81, 2403, 3538,
	130, 3520, 3518, 2406, 3496, 3466, 3404, 78, 3200, 3199,
	2717, 1744, 2951, 3120, 3548, 3544, 3542, 2045, 2748, 2411,
	2410, 423, 3483, 39, 2965, 3326, 3446, 3246, 3133, 3118,
	2125, 2476, 2125, 3418, 2967, 83, 3314, 89, 36, 2764,
	36, 2407, 36, 1242, 3121, 3325, 1419, 2582, 2920, 2921,
	2700, 2354, 1794, 2688, 2353, 3425, 2413, 3451, 2396, 2418,
	467, 2611, 74, 1070, 494, 3245, 2397, 3218, 36, 36,
	3374, 2269, 2864, 954, 2455, 2659, 2660, 3169, 957, 2612,
	962, 963, 848, 849, 850, 939, 965, 1175, 1174, 1184,
	1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 2156,
	77, 1186, 77, 1979, 77, 87, 85, 86, 2658, 3178,
	2312, 2933, 1128, 2939, 2941, 2940, 2937, 2938, 2936, 2935,
	2934, 1298, 2334, 1299, 3334, 2333, 1980, 1981, 2335, 3191,
	77, 77, 2942, 2943, 3334, 1802, 1803, 993, 994, 1010,
	1011, 997, 3329, 1750, 1768, 1088, 446, 422, 440, 451,
	434, 2970, 421, 1096, 930, 2415, 2041, 2042, 463, 2807,
	2155, 2384, 3331, 1056, 1747, 2058, 2850, 1748, 1749, 2848,
	441, 3034, 3331, 2409, 995, 996, 2412, 2049, 2051, 2046,
	2050, 2063, 425, 2058, 2301, 2304, 2305, 2306, 2302, 2070,
	2303, 2308, 2968, 2969, 2971, 2972, 2973, 1376, 405, 1009,
	420, 2301, 2304, 2305, 2306, 2302, 1016, 2303, 2308, 1730,
	2046, 2892, 2893, 2637, 2347, 2305, 2306, 464, 76, 76,
	2366, 475, 2508, 3510, 1789, 1788, 1787, 3335, 1786, 1785,
	1784, 3440, 2373, 2374, 1028, 1092, 1093, 3335, 1025, 2375,
	2471, 2500, 1024, 479, 3360, 1027, 3302, 1020, 1026, 2987,
	2988, 2989, 2990, 2774, 130, 3147, 2791, 2505, 2189, 2183,
	2184, 2981, 2182, 2185, 2186, 2169, 3359, 1017, 1018, 2984,
	3007, 2475, 1072, 3304, 3222, 1063, 76, 2998, 3509, 2170,
	1126, 1779, 3367, 2982, 2983, 2473, 2112, 1131, 1103, 3505,
	951, 1104, 951, 118, 114, 115, 2996, 116, 130, 2192,
	3401, 3113, 3399, 3400, 1394, 3112, 1195, 3212, 3119, 1197,
	3111, 3110, 1199, 2191, 2190, 106, 2453, 415, 1377, 3109,
	1377, 1072, 433, 432, 435, 3220, 3137, 2765, 951, 3468,
	120, 119, 439, 2768, 2769, 2770, 2771, 2772, 3461, 3107,
	2777, 1211, 412, 130, 1214, 1215, 1216, 1217, 1218, 443,
	1223, 106, 3115, 406, 447, 112, 1377, 130, 961, 3108,
	416, 2454, 111, 3384, 1196, 959, 958, 1161, 450, 3204,
	1095, 3208, 3209, 2456, 479, 1403, 1404, 1402, 1005, 2408,
	3263, 2561, 992, 1007, 2405, 1008, 1010, 1011, 121, 3068,
	122, 961, 2690, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 2643, 1240, 1241,
	1244, 1244, 1244, 1250, 1244, 1244, 1250, 1244, 1250, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1122, 113,
	2106, 2107, 2419, 2377, 1002, 1072, 2346, 3214, 1001, 2966,
	3345, 3346, 3442, 2563, 424, 436, 437, 438, 444, 1758,
	448, 449, 452, 3413, 108, 2058, 1964, 2474, 2793, 2188,
	2163, 3196, 1165, 2376, 3170, 3533, 1731, 1003, 1004, 2072,
	1246, 1248, 2424, 1252, 1254, 1110, 1257, 1073, 1080, 1081,
	1083, 1084, 1085, 1086, 1087, 2747, 1089, 1090, 1091, 3332,
	1094, 3462, 1097, 1098, 1099, 1100, 1101, 3244, 97, 3332,
	1064, 3424, 124, 2048, 1021, 1071, 3303, 1123, 413, 3134,
	3511, 410, 2477, 1105, 2689, 2691, 2692, 2693, 117, 1130,
	1082, 88, 2307, 1750, 413, 3219, 3136, 3516, 131, 480,
	131, 480, 132, 68, 132, 133, 134, 133, 134, 2307,
	2776, 135, 413, 135, 3116, 2102, 408, 1748, 1749, 932,
	1752, 2307, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 480,
	480, 1079, 2490, 2491, 3213, 3477, 131, 951, 3472, 969,
	132, 1120, 2518, 133, 134, 2101, 3011, 3012, 2679, 135,
	983, 2680, 409, 2681, 3475, 2404, 1754, 2706, 2806, 1753,
	2565, 2038, 951, 3552, 951, 2569, 2036, 2564, 2036, 2562,
	99, 3549, 3539, 3521, 2567, 2768, 2769, 2770, 2771, 2772,
	110, 109, 951, 956, 974, 941, 3224, 2566, 2319, 2321,
	474, 1068, 1077, 3022, 1245, 1247, 1249, 1251, 1253, 1255,
	1256, 1258, 2568, 2570, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 2038, 2789, 3080, 1701,
	2499, 1116, 1078, 3021, 1074, 106, 108, 2495, 94, 2479,
	2530, 2478, 3082, 2164, 1408, 107, 111, 1406, 1022, 2090,
	953, 2038, 2650, 1115, 1111, 1112, 1113, 1114, 1117, 1118,
	1119, 1121, 2038, 2649, 2648, 3025, 952, 2493, 1075, 1076,
	2038, 1127, 964, 377, 2244, 101, 1873, 102, 2393, 2319,
	2321, 1201, 1202, 3514, 2241, 2887, 3515, 130, 3513, 860,
	77, 1200, 1198, 2836, 860, 2657, 944, 2497, 2496, 2338,
	2223, 2212, 2179, 442, 2105, 3217, 1175, 1174, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 2037, 2103,
	1186, 1975, 1815, 1203, 2525, 2518, 1309, 1067, 1213, 2522,
	2320, 1212, 2521, 2524, 1166, 1175, 1174, 1184, 1185, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1176, 413, 984, 1186,
	1398, 1808, 1372, 1373, 1374, 1375, 3474, 3476, 1186, 3101,
	490, 2958, 1301, 3081, 1203, 2122, 2956, 1302, 1310, 1421,
	2121, 1984, 453, 2037, 2736, 1397, 1984, 3095, 2330, 1401,
	2518, 1984, 3093, 1019, 951, 1984, 2945, 2519, 2036, 944,
	130, 453, 110, 109, 1288, 1289, 1984, 2739, 2037, 456,
	456, 1200, 1379, 456, 2141, 3020, 2786, 1291, 1727, 2037,
	130, 2320, 2529, 130, 986, 3239, 2526, 2037, 456, 456,
	3026, 130, 3102, 3362, 2959, 98, 1984, 2735, 1725, 2957,
	3048, 130, 130, 130, 130, 130, 2537, 2737, 3123, 2248,
	1984, 2731, 2293, 1201, 1202, 1984, 2727, 1984, 2437, 1314,
	1424, 2342, 456, 1201, 1202, 94, 130, 1702, 1060, 1179,
	1180, 1181, 1182, 1183, 1176, 1157, 1742, 1186, 1984, 2435,
	1713, 1714, 1715, 1716, 1984, 2433, 3124, 453, 1984, 2431,
	1984, 2428, 1761, 1176, 3385, 3386, 1186, 3382, 3383, 1311,
	3249, 3248, 1718, 973, 2132, 1384, 1383, 2889, 1135, 1849,
	93, 3363, 76, 1399, 456, 456, 456, 76, 1721, 944,
	1722, 1777, 991, 1400, 1847, 1848, 1846, 1804, 999, 1154,
	1418, 1783, 2888, 2886, 1417, 1739, 479, 1155, 1156, 1154,
	1410, 1706, 1707, 1012, 1704, 3541, 1157, 1307, 1029, 456,
	92, 1813, 1814, 967, 456, 456, 1157, 966, 1175, 1174,
	1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176,
	2584, 130, 1186, 944, 130, 1155, 1156, 1154, 76, 1917,
	1734, 1735, 3537, 3465, 1737, 1386, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1176, 1157, 1843, 1186, 1756, 3463, 130,
	1740, 1719, 479, 2133, 1223, 1844, 1161, 2715, 1876, 1878,
	3419, 1341, 1757, 1760, 1155, 1156, 1154, 2997, 990, 1893,
	976, 977, 978, 979, 980, 981, 982, 1000, 479, 1155,
	1156, 1154, 2236, 1157, 2235, 1778, 3543, 3398, 1781, 1014,
	2991, 1917, 1840, 2257, 2445, 944, 3027, 944, 1157, 1724,
	944, 3403, 1151, 1155, 1156, 1154, 2151, 944, 1834, 944,
	944, 2597, 1155, 1156, 1154, 2832, 1155, 1156, 1154, 130,
	1961, 1790, 1157, 3397, 3524, 3502, 3523, 2237, 1902, 1905,
	1806, 1157, 3307, 1806, 1759, 1157, 1918, 1817, 1797, 1122,
	1175, 1174, 1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1176, 1831, 3534, 1186, 1762, 944, 944, 1765, 1766,
	1767, 1818, 1769, 1770, 1819, 3300, 1771, 1328, 2209, 2210,
	2211, 1165, 1772, 1955, 1782, 1965, 1773, 1774, 3299, 1775,
	1776, 1155, 1156, 1154, 3215, 130, 130, 130, 3257, 2586,
	2697, 860, 1155, 1156, 1154, 1155, 1156, 1154, 1156, 1154,
	1157, 1990, 77, 3397, 3131, 3429, 1141, 3428, 3535, 1142,
	944, 1157, 3301, 1845, 1157, 1931, 1157, 1933, 1881, 3130,
	1145, 1885, 1886, 1887, 1888, 1889, 1827, 1829, 1830, 3129,
	1167, 3216, 2695, 3128, 1828, 1840, 3122, 2698, 1866, 1835,
	1867, 3394, 2950, 2949, 1914, 2718, 2685, 2675, 2668, 1342,
	2444, 1989, 2442, 1841, 2416, 1920, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1869, 2035, 1875, 1062, 1061, 1221, 1973, 2119, 2696,
	2117, 2118, 2336, 1982, 2337, 1882, 1884, 1977, 2027, 1976,
	1035, 3486, 2079, 2080, 2081, 2082, 130, 2083, 2084, 2085,
	1991, 2024, 130, 130, 456, 456, 456, 1969, 3450, 130,
	3406, 3405, 3364, 1034, 3361, 3313, 3211, 3210, 2912, 1908,
	3195, 2075, 2076, 2077, 2078, 939, 3138, 3106, 3075, 1921,
	2071, 3044, 2994, 1239, 2993, 2992, 2960, 2947, 2919, 2918,
	2059, 2060, 2061, 2062, 2798, 2724, 2694, 986, 2686, 2678,
	2676, 2672, 2671, 2670, 2540, 2539, 2440, 2152, 2066, 2067,
	2068, 2047, 2127, 2052, 2053, 2054, 2055, 2056, 2099, 1175,
	1174, 1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1176, 1736, 1988, 1186, 1355, 1358, 1359, 1360, 1361, 1362,
	1363, 3393, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	3221, 1343, 1344, 1345, 1346, 1322, 1326, 1356, 1323, 1329,
	1325, 1327, 1324, 3193, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 2857, 521, 520, 523, 524, 525, 526,
	3155, 2393, 3149, 522, 1877, 1170, 1135, 1173, 1135, 3018,
	1382, 2869, 2826, 2822, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 2808, 1171, 1172, 1169, 2778, 2485, 2484, 2145, 2239,
	986, 2221, 1135, 1414, 1175, 1174, 1184, 1185, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1176, 3148, 2129, 1186, 2128,
	2581, 1708, 1709, 1710, 1711, 1712, 1175, 1174, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 2867, 1868,
	1186, 1174, 1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1176, 1732, 2866, 1186, 2856, 2341, 1729, 1416, 1415,
	1387, 1385, 1057, 987, 1175, 1174, 1184, 1185, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1176, 419, 1357, 1186, 417,
	3089, 3426, 3097, 2855, 2923, 3411, 3096, 1250, 1409, 1175,
	1174, 1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1176, 3389, 1135, 1186, 1175, 1174, 1184, 1185, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1176, 2854, 1971, 1186, 2923,
	3370, 2757, 2154, 3319, 1135, 2729, 2148, 1102, 130, 1175,
	1174, 1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1176, 2923, 3315, 1186, 2728, 130, 130, 130, 3089, 3254,
	2923, 3202, 2176, 2725, 1801, 1068, 1175, 1174, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 2871, 2130,
	1186, 2885, 130, 1972, 130, 1974, 2134, 1106, 944, 1822,
	1066, 2139, 2138, 944, 1175, 1174, 1184, 1185, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1176, 2213, 2483, 1186, 3089,
	1135, 3089, 3184, 3089, 3088, 944, 80, 1965, 944, 3057,
	1135, 2178, 1135, 2923, 2922, 2745, 2744, 1175, 1174, 1184,
	1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 2741,
	2742, 1186, 1971, 944, 2741, 2740, 2296, 1135, 2221, 1135,
	2295, 2161, 2580, 2166, 2165, 2147, 1891, 2149, 1891, 1135,
	1313, 1312, 1843, 2153, 2296, 2325, 3443, 1701, 1705, 2483,
	2221, 3417, 1844, 2168, 1134, 2885, 2171, 2160, 2549, 2110,
	1065, 1840, 1810, 1066, 1107, 3051, 1891, 2296, 2125, 1723,
	2296, 2902, 2758, 2743, 2538, 2511, 2340, 1989, 1972, 1978,
	1701, 2221, 2263, 2262, 1738, 2124, 1811, 2175, 1175, 1174,
	1184, 1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176,
	2109, 1124, 1186, 77, 2201, 1954, 2885, 1968, 2199, 2200,
	2143, 1221, 2313, 1809, 1780, 1745, 1701, 2322, 2323, 2218,
	931, 1961, 1068, 1407, 1961, 1405, 1295, 3342, 3316, 2318,
	2901, 3235, 3152, 3065, 2952, 2044, 479, 2074, 2146, 2224,
	2214, 1175, 1174, 1184, 1185, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1176, 2892, 2893, 1186, 1184, 1185, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1176, 2046, 1965, 1186, 2714,
	130, 2070, 2167, 2383, 2326, 1072, 1965, 2327, 130, 1965,
	2104, 130, 77, 2065, 2064, 1380, 1054, 130, 2088, 2142,
	130, 130, 130, 860, 3532, 2309, 3530, 3490, 3488, 3454,
	2895, 2871, 2756, 2446, 1755, 1412, 1108, 2256, 1835, 1069,
	427, 1823, 1824, 1825, 2636, 2633, 2113, 2208, 2899, 2635,
	2634, 1424, 2115, 2116, 2898, 2631, 2897, 2630, 2629, 2123,
	2632, 485, 486, 2268, 2270, 3380, 3324, 2541, 2198, 2379,
	2276, 2277, 2278, 2279, 2324, 1149, 1150, 1821, 3372, 3054,
	2206, 2205, 2215, 2216, 2217, 3175, 3017, 2926, 2821, 2820,
	2723, 2722, 2721, 2395, 2328, 2387, 1301, 2708, 2380, 2331,
	1379, 3226, 3229, 3312, 1147, 3311, 458, 3142, 2339, 3140,
	1221, 3207, 3206, 418, 1733, 1898, 1899, 2536, 2427, 2535,
	2430, 2432, 2434, 2436, 3125, 3126, 2752, 1138, 2666, 2429,
	2345, 1308, 1397, 1052, 1036, 944, 1033, 130, 1139, 2489,
	1032, 2388, 988, 2391, 2249, 2250, 2251, 3436, 2481, 2382,
	944, 944, 944, 3159, 3158, 2097, 456, 76, 1813, 1814,
	2999, 453, 3049, 2098, 2392, 2394, 1411, 3000, 3444, 3305,
	3144, 130, 456, 2931, 1031, 2751, 1149, 1150, 482, 94,
	2441, 479, 2089, 1791, 1132, 1133, 2443, 2204, 3435, 456,
	3434, 3433, 3103, 2174, 1987, 2203, 1015, 3366, 3365, 3323,
	2452, 3309, 2450, 3230, 2417, 3174, 2420, 944, 483, 2451,
	80, 456, 2426, 944, 3322, 3241, 2472, 2487, 2483, 456,
	3492, 3491, 2438, 3029, 2796, 944, 944, 2458, 2459, 2460,
	477, 2506, 2504, 2503, 2245, 2242, 2421, 2422, 2423, 2425,
	2172, 1720, 1152, 3491, 3492, 3251, 2720, 1807, 2486, 130,
	2591, 931, 3279, 50, 3281, 19, 2492, 3508, 2494, 944,
	3280, 18, 3282, 20, 82, 2498, 53, 2086, 3283, 21,
	3278, 15, 1, 2613, 2615, 2509, 2515, 1961, 1961, 1961,
	1961, 1961, 2162, 2520, 1763, 2531, 2532, 2979, 2614, 2534,
	2978, 2513, 2523, 2528, 2313, 2571, 2644, 479, 2573, 1840,
	2985, 2547, 2583, 2763, 2639, 2766, 1961, 2516, 2470, 1893,
	3277, 14, 2646, 2995, 2548, 2553, 944, 1395, 479, 2551,
	3271, 10, 3294, 34, 3292, 33, 3291, 32, 2572, 3290,
	28, 3114, 1965, 1965, 1965, 1965, 1965, 970, 2647, 2108,
	1797, 2618, 1058, 130, 130, 130, 130, 130, 2126, 1965,
	3289, 27, 3288, 26, 3286, 23, 130, 3285, 22, 2654,
	130, 1965, 3310, 2653, 130, 2655, 2656, 2137, 3287, 24,
	3276, 13, 130, 3273, 12, 3225, 2488, 3272, 11, 3270,
	9, 2501, 3227, 3139, 2716, 944, 3002, 2625, 2626, 2507,
	2628, 2624, 1060, 2963, 2627, 2962, 2379, 2638, 2463, 2462,
	1053, 1743, 2510, 2514, 2379, 2592, 2593, 2594, 2595, 2596,
	2651, 2517, 2120, 2187, 3237, 2173, 1109, 2028, 2687, 1992,
	3339, 2669, 933, 90, 2131, 2380, 2661, 998, 385, 2677,
	944, 2025, 2401, 2380, 3228, 2546, 1055, 2400, 2414, 2040,
	2092, 2096, 2662, 2399, 2663, 2664, 1835, 2398, 3223, 2402,
	1319, 2707, 1317, 2709, 2550, 2083, 1318, 2085, 1316, 1321,
	1320, 2682, 2683, 2684, 3485, 3423, 389, 1303, 3352, 2868,
	2773, 2699, 1153, 532, 105, 54, 2574, 2575, 2726, 2576,
	2577, 2730, 2701, 2578, 3019, 2527, 461, 2734, 462, 95,
	2759, 103, 453, 130, 1820, 391, 1194, 2587, 2588, 2738,
	2202, 2332, 2780, 858, 859, 851, 2194, 1125, 3247, 3373,
	3414, 3344, 1143, 944, 944, 944, 3375, 2710, 2711, 2712,
	456, 2713, 3321, 3240, 2255, 130, 456, 1238, 2775, 1915,
	505, 2642, 3047, 3377, 1826, 519, 518, 517, 514, 515,
	130, 3333, 456, 1816, 944, 2610, 456, 1168, 2746, 502,
	456, 456, 492, 456, 1959, 1952, 2150, 2300, 2652, 2803,
	2298, 2546, 2297, 2862, 1413, 1292, 2894, 2782, 2811, 2816,
	944, 2890, 2311, 1963, 130, 944, 1958, 1962, 2803, 38,
	2732, 944, 2833, 3028, 944, 944, 1013, 2543, 407, 2863,
	1379, 2799, 3168, 2876, 76, 2825, 2207, 84, 476, 487,
	2294, 2805, 25, 17, 1146, 1023, 16, 2180, 968, 2877,
	40, 42, 2733, 2457, 2100, 3351, 3470, 1039, 479, 3500,
	3395, 2831, 31, 30, 2904, 1890, 1892, 29, 2872, 2908,
	2909, 2910, 3284, 1897, 3293, 3275, 3274, 3456, 2875, 3455,
	4, 2719, 1129, 2804, 75, 35, 929, 2, 0, 0,
	125, 2783, 0, 404, 0, 2884, 0, 2618, 0, 125,
	944, 0, 944, 0, 0, 0, 2907, 0, 2846, 2903,
	0, 1929, 1930, 470, 0, 0, 0, 0, 1936, 1937,
	1938, 1939, 0, 2813, 2818, 0, 0, 0, 491, 0,
	0, 944, 0, 2914, 868, 0, 2879, 125, 1145, 0,
	0, 2913, 0, 0, 2896, 0, 0, 0, 0, 0,
	0, 0, 2785, 0, 2379, 0, 2790, 125, 0, 2905,
	2794, 2795, 0, 2797, 2915, 0, 2843, 2844, 125, 2845,
	0, 76, 2847, 0, 2849, 0, 2954, 2449, 0, 2917,
	0, 0, 0, 2380, 0, 0, 2953, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 0, 0,
	0, 944, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2480, 0, 0, 2927, 1797, 0, 0, 2230, 0,
	0, 0, 0, 0, 2835, 2975, 2976, 2977, 0, 2932,
	0, 0, 0, 2944, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 2258, 944, 0, 0, 0, 0,
	0, 0, 1926, 0, 2859, 2860, 2861, 0, 0, 0,
	0, 0, 0, 0, 0, 3004, 0, 3013, 3014, 0,
	3006, 0, 2974, 0, 0, 3015, 456, 0, 0, 0,
	0, 0, 0, 456, 0, 0, 0, 2803, 0, 2542,
	0, 3003, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3001, 3030, 3031, 3009, 0, 0, 0, 0, 2924,
	2925, 3016, 0, 2803, 2707, 0, 3023, 0, 2083, 0,
	2906, 0, 0, 944, 0, 0, 0, 0, 0, 0,
	3024, 0, 0, 0, 0, 0, 0, 0, 0, 2946,
	0, 2948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3091, 0, 1244, 1244, 1244, 1250, 1244, 1244,
	1250, 1244, 1250, 1259, 1260, 0, 3070, 0, 130, 3050,
	0, 2618, 3058, 0, 3067, 0, 0, 0, 3099, 0,
	0, 3072, 3073, 3074, 0, 0, 0, 3059, 944, 0,
	0, 2930, 0, 3100, 3076, 944, 944, 944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3083, 0,
	944, 3071, 0, 0, 0, 3077, 0, 3078, 3084, 3085,
	0, 3098, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3104, 0, 1246, 1248, 0, 1252, 1254, 944,
	1257, 0, 0, 3033, 0, 0, 3005, 3092, 3160, 3094,
	1961, 0, 0, 3008, 0, 3105, 0, 0, 0, 0,
	0, 0, 0, 3117, 0, 0, 125, 0, 3127, 0,
	0, 0, 2876, 3132, 0, 2876, 3180, 0, 3146, 0,
	0, 0, 0, 0, 0, 3145, 0, 0, 530, 2904,
	3135, 3179, 0, 0, 0, 0, 3086, 3087, 0, 2546,
	479, 0, 0, 3162, 2318, 1965, 3187, 3161, 3163, 944,
	0, 470, 0, 0, 0, 3157, 130, 2875, 3177, 0,
	2875, 76, 3192, 3150, 3151, 470, 3176, 0, 0, 3035,
	3036, 3037, 3038, 2749, 3185, 3173, 3203, 3042, 3183, 3182,
	0, 3045, 3046, 3205, 944, 479, 3186, 2579, 0, 0,
	0, 0, 944, 0, 0, 0, 130, 0, 130, 0,
	0, 0, 0, 0, 0, 2779, 0, 0, 0, 0,
	0, 0, 0, 2144, 0, 0, 944, 0, 867, 0,
	2784, 0, 936, 0, 2585, 0, 3153, 3154, 1245, 1247,
	1249, 1251, 1253, 1255, 1256, 1258, 0, 0, 0, 2876,
	0, 76, 0, 0, 975, 0, 0, 3231, 0, 0,
	0, 0, 3256, 0, 2823, 0, 3253, 3232, 0, 0,
	0, 3233, 0, 0, 3234, 479, 76, 0, 3262, 0,
	0, 456, 0, 3242, 0, 3264, 3250, 0, 2177, 944,
	0, 0, 3252, 0, 2875, 0, 0, 3255, 0, 0,
	2193, 0, 0, 0, 0, 0, 1175, 1174, 1184, 1185,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3308, 0, 0, 130, 3306, 0, 0, 0, 0, 3347,
	0, 0, 1175, 1174, 1184, 1185, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1176, 3317, 3192, 1186, 3336, 3337, 0,
	0, 0, 0, 3343, 2220, 0, 2222, 0, 0, 76,
	0, 0, 944, 0, 0, 0, 944, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2618, 0, 2231,
	2232, 2233, 2234, 944, 0, 0, 2238, 2240, 0, 0,
	2243, 0, 0, 2246, 2247, 0, 0, 0, 2252, 2253,
	0, 0, 0, 3381, 2259, 2260, 3201, 2261, 3368, 3392,
	2264, 2265, 0, 2266, 2267, 3371, 0, 2271, 2272, 2273,
	2274, 2275, 3387, 0, 944, 3369, 2280, 2281, 2282, 2283,
	2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 0, 0,
	0, 0, 0, 944, 3410, 0, 3390, 0, 0, 0,
	2781, 0, 504, 0, 0, 3391, 0, 3402, 0, 76,
	0, 3432, 0, 3412, 0, 76, 453, 3422, 0, 944,
	0, 3427, 0, 3236, 3439, 0, 0, 0, 3430, 0,
	0, 0, 0, 2961, 0, 0, 0, 0, 3445, 0,
	76, 0, 3464, 3447, 456, 76, 3449, 0, 126, 0,
	2827, 944, 0, 3480, 3441, 2591, 3467, 126, 3460, 0,
	3469, 490, 3482, 0, 944, 3459, 944, 3479, 3458, 479,
	3493, 471, 76, 3484, 3494, 3489, 76, 76, 3497, 3495,
	944, 76, 3487, 3481, 3457, 1294, 3439, 0, 868, 453,
	3503, 0, 869, 868, 0, 126, 937, 0, 130, 0,
	0, 0, 0, 2865, 0, 0, 0, 76, 3517, 3341,
	76, 0, 3522, 0, 0, 126, 3439, 456, 3527, 3525,
	944, 0, 0, 0, 0, 130, 126, 0, 0, 76,
	0, 76, 0, 0, 0, 76, 0, 3540, 3439, 130,
	3439, 0, 0, 0, 0, 0, 0, 0, 0, 76,
	3356, 0, 76, 0, 3547, 0, 0, 76, 3439, 0,
	0, 0, 76, 0, 0, 2219, 3439, 0, 0, 0,
	0, 3439, 0, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 1390, 1393, 1175, 1174, 1184, 1185, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1176, 0, 125, 1186,
	0, 125, 0, 0, 1390, 1393, 0, 0, 0, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	125, 125, 125, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 3341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1728, 0, 3437, 0, 0, 0,
	2554, 2555, 2556, 2557, 2558, 2559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3478, 2343, 2344, 0, 0, 2348, 2349, 2350, 2351,
	2352, 0, 0, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 0, 2367, 2368, 2369, 2370, 0,
	2381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3506, 2640, 2641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3531, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 1221, 0, 0, 0, 0, 0, 0,
	0, 1423, 0, 3060, 3061, 3062, 3063, 0, 0, 3064,
	0, 0, 3066, 0, 0, 0, 0, 0, 0, 0,
	0, 1221, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2837, 2838, 2839,
	2840, 2841, 0, 0, 0, 0, 0, 470, 0, 1874,
	1874, 1874, 0, 0, 0, 1874, 1874, 1874, 1874, 471,
	1874, 1874, 0, 3258, 0, 868, 1874, 0, 0, 0,
	0, 0, 0, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 2533, 1874, 1874, 1874, 1874,
	0, 0, 1874, 1874, 1874, 1874, 1874, 0, 0, 0,
	0, 1874, 1874, 1874, 1874, 1874, 1874, 1874, 1874, 1874,
	1874, 1874, 1874, 125, 125, 125, 531, 0, 0, 0,
	868, 0, 867, 0, 0, 0, 0, 867, 1304, 0,
	0, 0, 400, 0, 1423, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 2834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2842, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2851, 2852, 2853,
	0, 0, 0, 0, 2858, 0, 0, 0, 0, 127,
	938, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1381, 0, 0, 125, 0, 0, 1389, 1392, 127,
	125, 125, 1870, 0, 0, 378, 0, 125, 0, 2878,
	127, 0, 2665, 0, 2667, 0, 0, 0, 1389, 1392,
	2673, 2674, 0, 0, 0, 0, 0, 1894, 1895, 1896,
	0, 0, 0, 1900, 1901, 1904, 1907, 0, 1912, 1913,
	0, 0, 0, 0, 1919, 0, 0, 2911, 0, 0,
	0, 1221, 381, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 398, 399, 1924, 0, 1927, 1928, 0, 0,
	0, 1932, 0, 1934, 1935, 0, 0, 0, 0, 1940,
	1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950,
	1951, 0, 0, 0, 0, 0, 0, 387, 0, 0,
	388, 0, 0, 396, 397, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2753, 2754, 2755, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 0, 0, 0, 0,
	393, 0, 0, 2004, 0, 1799, 0, 0, 0, 0,
	0, 0, 3348, 3349, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3376,
	3379, 0, 0, 0, 0, 1799, 0, 0, 2001, 0,
	0, 0, 0, 126, 0, 0, 869, 0, 0, 0,
	0, 869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 1799,
	0, 0, 1879, 0, 0, 0, 379, 0, 0, 1880,
	0, 1799, 1799, 0, 0, 3039, 3040, 3041, 0, 3043,
	0, 2000, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 3052, 3053, 3431, 3055, 0, 0, 3056, 867,
	392, 382, 383, 0, 403, 0, 0, 0, 384, 386,
	0, 380, 402, 401, 3379, 0, 125, 0, 1922, 1923,
	0, 3069, 0, 0, 1378, 0, 0, 0, 127, 0,
	0, 0, 0, 2135, 2136, 125, 126, 0, 0, 2005,
	0, 0, 0, 0, 0, 0, 3090, 0, 0, 2011,
	0, 0, 0, 2916, 867, 395, 126, 0, 0, 126,
	125, 0, 470, 0, 0, 0, 0, 0, 1799, 0,
	0, 0, 936, 0, 0, 0, 0, 126, 126, 126,
	126, 126, 0, 2003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1164, 0, 3526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 2955,
	0, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 3164, 3165, 3166, 3167, 0, 0, 0, 0, 0,
	0, 3171, 3172, 0, 0, 0, 0, 0, 0, 2022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 0, 0, 3188, 3189,
	3190, 0, 2017, 0, 0, 0, 1874, 0, 0, 0,
	1874, 1874, 1874, 1874, 1874, 0, 0, 471, 0, 1795,
	126, 36, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1997, 0, 57, 0, 0, 0, 1874,
	0, 73, 0, 0, 39, 126, 0, 0, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 0, 0, 1837,
	0, 1995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 77, 0, 0, 125, 0, 0, 470,
	2007, 0, 0, 0, 3243, 125, 0, 0, 125, 2329,
	1423, 0, 868, 0, 0, 0, 0, 0, 0, 3295,
	0, 0, 3499, 3502, 3498, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3259, 1341, 0,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1996, 1999,
	2002, 0, 2006, 2009, 2010, 2012, 2013, 2014, 2016, 2018,
	2019, 2020, 2021, 3318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3327, 0, 0, 0, 0, 0, 3338,
	0, 126, 126, 126, 0, 0, 0, 0, 869, 0,
	0, 0, 0, 0, 0, 0, 0, 41, 69, 44,
	43, 46, 1837, 0, 0, 0, 937, 0, 0, 0,
	0, 0, 3296, 0, 0, 125, 0, 0, 2225, 2226,
	2227, 2228, 2229, 0, 0, 0, 0, 0, 0, 47,
	72, 71, 0, 0, 1328, 0, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2254, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3388, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3194, 0,
	0, 0, 0, 0, 1994, 0, 0, 55, 56, 0,
	3297, 0, 126, 0, 0, 0, 0, 0, 126, 126,
	0, 0, 0, 0, 64, 126, 65, 0, 0, 0,
	0, 0, 0, 0, 3421, 0, 1342, 0, 0, 0,
	2159, 0, 0, 0, 0, 2159, 0, 125, 0, 0,
	0, 66, 0, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 1874, 2159, 1423, 0,
	2159, 0, 0, 0, 0, 0, 0, 0, 0, 3298,
	70, 0, 51, 52, 59, 0, 60, 0, 0, 0,
	127, 0, 0, 0, 0, 2197, 0, 36, 37, 0,
	0, 0, 0, 0, 1799, 0, 0, 0, 0, 0,
	127, 57, 0, 127, 0, 0, 0, 73, 0, 0,
	39, 61, 62, 0, 0, 0, 0, 0, 58, 0,
	0, 127, 127, 127, 127, 127, 0, 0, 0, 0,
	868, 125, 125, 125, 125, 125, 0, 0, 0, 0,
	0, 0, 3528, 3529, 470, 48, 0, 0, 125, 77,
	0, 0, 470, 0, 0, 0, 0, 1874, 0, 0,
	125, 1355, 1358, 1359, 1360, 1361, 1362, 1363, 0, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 0, 1343, 1344,
	1345, 1346, 1322, 1326, 1356, 1323, 1329, 1325, 1327, 1324,
	0, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	0, 0, 36, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 73, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 127, 0, 867, 0, 0, 0,
	0, 0, 0, 41, 69, 44, 43, 46, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 127,
	0, 125, 0, 0, 0, 0, 1164, 0, 0, 0,
	0, 0, 0, 1836, 0, 47, 72, 71, 0, 0,
	3295, 0, 45, 0, 126, 3550, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 63, 0, 0, 0,
	0, 0, 0, 126, 1357, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	471, 0, 0, 55, 56, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 2447, 0, 0,
	64, 0, 65, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 2461, 2465, 2469, 0, 0, 0, 41, 69,
	44, 43, 46, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 3296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 127, 127, 1837, 0,
	47, 72, 71, 0, 0, 49, 70, 45, 51, 52,
	59, 0, 60, 0, 0, 0, 1836, 0, 0, 2159,
	938, 0, 0, 0, 0, 2502, 868, 0, 36, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 1799, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 73, 0,
	0, 39, 0, 0, 0, 0, 0, 0, 55, 56,
	0, 3297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1799, 0, 0, 0, 64, 0, 65, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 127, 127, 0, 0, 3295, 0, 0, 127,
	0, 3545, 0, 0, 0, 0, 0, 0, 2589, 0,
	3298, 70, 0, 51, 52, 59, 126, 60, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 471, 0, 0,
	0, 0, 0, 126, 867, 0, 126, 0, 0, 0,
	869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	0, 0, 0, 0, 41, 69, 44, 43, 46, 0,
	0, 0, 2386, 0, 0, 0, 0, 0, 0, 3296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 47, 72, 71, 0,
	36, 0, 2704, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	73, 0, 0, 39, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 56, 470, 3297, 0, 0,
	868, 0, 77, 68, 0, 0, 0, 126, 0, 0,
	0, 64, 0, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2760, 2761, 2762, 3295, 0,
	0, 0, 0, 3536, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2788, 0, 0, 0,
	0, 1795, 0, 0, 0, 0, 3298, 70, 0, 51,
	52, 59, 0, 60, 0, 0, 0, 0, 0, 0,
	36, 0, 2819, 0, 0, 126, 0, 2824, 0, 0,
	0, 0, 0, 2828, 57, 0, 2829, 2830, 0, 0,
	73, 0, 0, 39, 0, 0, 1837, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 41, 69, 44, 43,
	46, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 3296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 125, 491, 0, 0, 47, 72,
	71, 0, 127, 0, 0, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3295, 0,
	867, 0, 1799, 3519, 2883, 0, 0, 0, 2619, 126,
	126, 126, 126, 126, 470, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 0, 0, 126, 0, 0, 0,
	471, 0, 0, 2883, 0, 0, 55, 56, 126, 3297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 64, 0, 65, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 0, 0, 0, 0, 41, 69, 44, 43,
	46, 0, 0, 0, 0, 0, 2705, 0, 0, 0,
	0, 3296, 0, 2929, 0, 0, 0, 0, 3298, 70,
	0, 51, 52, 59, 0, 60, 0, 0, 47, 72,
	71, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 2465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 36, 0, 0, 0,
	0, 0, 0, 0, 36, 0, 55, 56, 0, 3297,
	57, 0, 0, 0, 0, 0, 73, 0, 57, 39,
	127, 126, 0, 64, 73, 65, 868, 39, 127, 0,
	0, 0, 0, 0, 0, 0, 126, 127, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 0, 0, 0, 1799, 0, 0, 77, 3504,
	0, 0, 2386, 0, 2810, 2815, 77, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 3298, 70,
	0, 51, 52, 59, 3295, 60, 0, 0, 0, 0,
	0, 0, 3295, 0, 0, 0, 0, 3438, 0, 0,
	0, 0, 0, 0, 867, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	2929, 0, 0, 0, 0, 0, 0, 2929, 2929, 2929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2619, 0, 1795, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2704, 41, 69, 44, 43, 46, 0, 0, 0,
	41, 69, 44, 43, 46, 0, 0, 3296, 0, 0,
	0, 127, 0, 0, 0, 3296, 470, 0, 0, 0,
	0, 0, 0, 0, 47, 72, 71, 0, 0, 0,
	0, 45, 47, 72, 71, 0, 0, 0, 0, 45,
	0, 0, 0, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 470, 0, 0,
	0, 3156, 0, 0, 0, 1796, 0, 0, 0, 0,
	57, 68, 0, 0, 0, 0, 73, 0, 0, 39,
	0, 0, 55, 56, 0, 3297, 0, 0, 0, 127,
	55, 56, 0, 3297, 0, 0, 3181, 0, 0, 64,
	0, 65, 0, 0, 2929, 0, 0, 64, 0, 65,
	1836, 0, 0, 0, 0, 0, 0, 0, 77, 126,
	0, 0, 0, 0, 0, 0, 66, 0, 3197, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3298, 70, 0, 51, 52, 59,
	0, 60, 3298, 70, 0, 51, 52, 59, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 127, 127, 0, 0,
	0, 2704, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 41, 69, 44, 43, 46, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 3296, 2619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 72, 71, 0, 0, 0,
	0, 45, 0, 0, 2704, 0, 0, 0, 3320, 0,
	0, 0, 0, 0, 0, 0, 2705, 0, 0, 0,
	867, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2705, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 3297, 0, 68, 0, 0,
	0, 0, 0, 127, 0, 68, 1799, 0, 0, 64,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 2929, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 3298, 70, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 2812, 2817,
	0, 0, 0, 3416, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3420, 0, 1799, 0,
	0, 0, 471, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 1799, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2705, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 827, 0, 346, 589, 831,
	674, 697, 840, 703, 705, 768, 650, 745, 284, 694,
	651, 0, 0, 642, 498, 643, 675, 206, 495, 801,
	746, 829, 731, 761, 771, 205, 194, 738, 737, 818,
	686, 685, 766, 814, 828, 0, 0, 597, 249, 0,
	0, 368, 334, 268, 0, 0, 729, 0, 582, 583,
	714, 770, 662, 757, 833, 695, 762, 834, 77, 0,
	0, 0, 496, 521, 520, 523, 524, 525, 526, 0,
	0, 137, 522, 527, 528, 529, 0, 724, 767, 845,
	641, 493, 512, 646, 596, 0, 819, 682, 683, 209,
	0, 0, 0, 0, 0, 0, 0, 727, 744, 786,
	711, 0, 0, 363, 773, 782, 796, 704, 300, 223,
	0, 0, 0, 0, 509, 510, 489, 0, 0, 0,
	612, 0, 511, 127, 656, 507, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 513, 0,
	0, 0, 661, 639, 680, 788, 640, 638, 269, 653,
	585, 817, 712, 238, 154, 823, 710, 610, 776, 657,
	805, 698, 246, 655, 155, 652, 658, 696, 280, 785,
	791, 594, 158, 248, 802, 676, 689, 195, 0, 310,
	763, 362, 501, 749, 309, 250, 355, 777, 825, 361,
	699, 341, 369, 373, 216, 732, 186, 331, 207, 203,
	681, 795, 645, 224, 299, 198, 242, 715, 769, 677,
	191, 780, 756, 807, 330, 352, 160, 265, 353, 372,
	177, 347, 266, 273, 188, 190, 189, 172, 324, 351,
	182, 193, 803, 790, 809, 672, 659, 664, 660, 688,
	826, 233, 225, 810, 808, 366, 144, 319, 318, 702,
	232, 793, 145, 136, 306, 146, 239, 163, 813, 375,
	176, 244, 348, 500, 219, 279, 197, 765, 288, 687,
	157, 302, 261, 263, 260, 264, 222, 140, 147, 789,
	304, 321, 350, 178, 337, 138, 139, 141, 149, 312,
	150, 151, 832, 255, 211, 215, 226, 236, 764, 308,
	338, 367, 758, 173, 166, 340, 360, 183, 320, 323,
	374, 787, 168, 821, 804, 751, 717, 723, 647, 0,
	167, 783, 679, 691, 671, 759, 670, 221, 775, 358,
	359, 196, 376, 588, 836, 169, 654, 835, 276, 283,
	275, 838, 354, 822, 752, 741, 739, 648, 820, 750,
	740, 245, 214, 228, 297, 252, 298, 229, 271, 270,
	272, 253, 743, 0, 164, 0, 335, 830, 847, 339,
	180, 665, 797, 349, 143, 303, 181, 220, 212, 296,
	274, 174, 231, 333, 243, 251, 779, 844, 287, 311,
	185, 364, 332, 208, 599, 611, 605, 607, 606, 603,
	604, 602, 601, 600, 613, 586, 587, 590, 591, 592,
	734, 824, 649, 595, 800, 608, 609, 772, 842, 584,
	192, 533, 625, 626, 627, 534, 628, 629, 535, 536,
	630, 631, 632, 633, 537, 634, 635, 636, 614, 615,
	616, 617, 618, 619, 620, 621, 624, 622, 623, 730,
	293, 165, 175, 184, 202, 200, 213, 240, 262, 267,
	292, 322, 327, 342, 343, 344, 345, 204, 0, 0,
	0, 0, 0, 593, 159, 170, 247, 843, 305, 218,
	637, 644, 663, 666, 667, 668, 669, 673, 678, 0,
	684, 690, 692, 693, 701, 706, 707, 708, 709, 716,
	718, 719, 720, 721, 722, 725, 726, 728, 735, 736,
	742, 747, 748, 754, 755, 0, 778, 781, 598, 792,
	794, 798, 799, 806, 811, 812, 837, 841, 846, 365,
	201, 733, 753, 784, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 148, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 816,
	713, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	700, 161, 815, 839, 760, 774, 827, 0, 346, 589,
	831, 674, 697, 840, 703, 705, 768, 650, 745, 284,
	694, 651, 0, 0, 642, 498, 643, 675, 206, 495,
	801, 746, 829, 731, 761, 771, 205, 194, 738, 737,
	818, 686, 685, 766, 814, 828, 0, 0, 597, 249,
	0, 0, 368, 334, 268, 0, 0, 729, 0, 582,
	583, 714, 770, 662, 757, 833, 695, 762, 834, 77,
	0, 1135, 0, 496, 521, 520, 523, 524, 525, 526,
	0, 0, 137, 522, 527, 528, 529, 0, 724, 767,
	845, 641, 493, 512, 646, 596, 0, 819, 682, 683,
	209, 0, 0, 0, 0, 0, 0, 0, 727, 744,
	786, 711, 0, 0, 363, 773, 782, 796, 704, 300,
	223, 0, 0, 0, 0, 509, 510, 0, 0, 0,
	0, 612, 0, 511, 0, 656, 507, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 513,
	0, 0, 0, 661, 639, 680, 788, 640, 638, 269,
	653, 585, 817, 712, 238, 154, 823, 710, 610, 776,
	657, 805, 698, 246, 655, 155, 652, 658, 696, 280,
	785, 791, 594, 158, 248, 802, 676, 689, 195, 0,
	310, 763, 362, 501, 749, 309, 250, 355, 777, 825,
	361, 699, 341, 369, 373, 216, 732, 186, 331, 207,
	203, 681, 795, 645, 224, 299, 198, 242, 715, 769,
	677, 191, 780, 756, 807, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 803, 790, 809, 672, 659, 664, 660,
	688, 826, 233, 225, 810, 808, 366, 144, 319, 318,
	702, 232, 793, 145, 136, 306, 146, 239, 163, 813,
	375, 176, 244, 348, 500, 219, 279, 197, 765, 288,
	687, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	789, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 832, 255, 211, 215, 226, 236, 764,
	308, 338, 367, 758, 173, 166, 340, 360, 183, 320,
	323, 374, 787, 168, 821, 804, 751, 717, 723, 647,
	0, 167, 783, 679, 691, 671, 759, 670, 221, 775,
	358, 359, 196, 376, 588, 836, 169, 654, 835, 276,
	283, 275, 838, 354, 822, 752, 741, 739, 648, 820,
	750, 740, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 743, 0, 164, 0, 335, 830, 847,
	339, 180, 665, 797, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 779, 844, 287,
	311, 185, 364, 332, 208, 599, 611, 605, 607, 606,
	603, 604, 602, 601, 600, 613, 586, 587, 590, 591,
	592, 734, 824, 649, 595, 800, 608, 609, 772, 842,
	584, 192, 533, 625, 626, 627, 534, 628, 629, 535,
	536, 630, 631, 632, 633, 537, 634, 635, 636, 614,
	615, 616, 617, 618, 619, 620, 621, 624, 622, 623,
	730, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 593, 159, 170, 247, 843, 305,
	218, 637, 644, 663, 666, 667, 668, 669, 673, 678,
	0, 684, 690, 692, 693, 701, 706, 707, 708, 709,
	716, 718, 719, 720, 721, 722, 725, 726, 728, 735,
	736, 742, 747, 748, 754, 755, 0, 778, 781, 598,
	792, 794, 798, 799, 806, 811, 812, 837, 841, 846,
	365, 201, 733, 753, 784, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 148, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	816, 713, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 700, 161, 815, 839, 760, 774, 827, 0, 346,
	589, 831, 674, 697, 840, 703, 705, 768, 650, 745,
	284, 694, 651, 0, 0, 642, 498, 643, 675, 206,
	495, 801, 746, 829, 731, 761, 771, 205, 194, 738,
	737, 818, 686, 685, 766, 814, 828, 0, 0, 597,
	249, 0, 0, 368, 334, 268, 0, 0, 729, 0,
	582, 583, 714, 770, 662, 757, 833, 695, 762, 834,
	77, 0, 0, 0, 496, 521, 520, 523, 524, 525,
	526, 0, 0, 137, 522, 527, 528, 529, 0, 724,
	767, 845, 641, 493, 512, 646, 596, 0, 819, 682,
	683, 209, 0, 0, 0, 0, 0, 0, 0, 727,
	744, 786, 711, 0, 0, 363, 773, 782, 796, 704,
	300, 223, 0, 0, 0, 0, 509, 510, 1872, 0,
	0, 0, 612, 0, 511, 0, 656, 507, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	513, 0, 0, 0, 661, 639, 680, 788, 640, 638,
	269, 653, 585, 817, 712, 238, 154, 823, 710, 610,
	776, 657, 805, 698, 246, 655, 155, 652, 658, 696,
	280, 785, 791, 594, 158, 248, 802, 676, 689, 195,
	0, 310, 763, 362, 501, 749, 309, 250, 355, 777,
	825, 361, 699, 341, 369, 373, 216, 732, 186, 331,
	207, 203, 681, 795, 645, 224, 299, 198, 242, 715,
	769, 677, 191, 780, 756, 807, 330, 352, 160, 265,
	353, 372, 177, 347, 266, 273, 188, 190, 189, 172,
	324, 351, 182, 193, 803, 790, 809, 672, 659, 664,
	660, 688, 826, 233, 225, 810, 808, 366, 144, 319,
	318, 702, 232, 793, 145, 136, 306, 146, 239, 163,
	813, 375, 176, 244, 348, 500, 219, 279, 197, 765,
	288, 687, 157, 302, 261, 263, 260, 264, 222, 140,
	147, 789, 304, 321, 350, 178, 337, 138, 139, 141,
	149, 312, 150, 151, 832, 255, 211, 215, 226, 236,
	764, 308, 338, 367, 758, 173, 166, 340, 360, 183,
	320, 323, 374, 787, 168, 821, 804, 751, 717, 723,
	647, 0, 167, 783, 679, 691, 671, 759, 670, 221,
	775, 358, 359, 196, 376, 588, 836, 169, 654, 835,
	276, 283, 275, 838, 354, 822, 752, 741, 739, 648,
	820, 750, 740, 245, 214, 228, 297, 252, 298, 229,
	271, 270, 272, 253, 743, 0, 164, 0, 335, 830,
	847, 339, 180, 665, 797, 349, 143, 303, 181, 220,
	212, 296, 274, 174, 231, 333, 243, 251, 779, 844,
	287, 311, 185, 364, 332, 208, 599, 611, 605, 607,
	606, 603, 604, 602, 601, 600, 613, 586, 587, 590,
	591, 592, 734, 824, 649, 595, 800, 608, 609, 772,
	842, 584, 192, 533, 625, 626, 627, 534, 628, 629,
	535, 536, 630, 631, 632, 633, 537, 634, 635, 636,
	614, 615, 616, 617, 618, 619, 620, 621, 624, 622,
	623, 730, 293, 165, 175, 184, 202, 200, 213, 240,
	262, 267, 292, 322, 327, 342, 343, 344, 345, 204,
	0, 0, 0, 0, 0, 593, 159, 170, 247, 843,
	305, 218, 637, 644, 663, 666, 667, 668, 669, 673,
	678, 0, 684, 690, 692, 693, 701, 706, 707, 708,
	709, 716, 718, 719, 720, 721, 722, 725, 726, 728,
	735, 736, 742, 747, 748, 754, 755, 0, 778, 781,
	598, 792, 794, 798, 799, 806, 811, 812, 837, 841,
	846, 365, 201, 733, 753, 784, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 148, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 816, 713, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 700, 161, 815, 839, 760, 774, 827, 0,
	346, 589, 831, 674, 697, 840, 703, 705, 768, 650,
	745, 284, 694, 651, 0, 0, 642, 498, 643, 675,
	206, 495, 801, 746, 829, 731, 761, 771, 205, 194,
	738, 737, 818, 686, 685, 766, 814, 828, 0, 0,
	597, 249, 0, 0, 368, 334, 268, 0, 0, 729,
	0, 582, 583, 714, 770, 662, 757, 833, 695, 1985,
	834, 77, 0, 0, 0, 496, 521, 520, 523, 524,
	525, 526, 0, 0, 137, 522, 527, 528, 529, 1986,
	724, 767, 845, 641, 493, 512, 646, 596, 0, 819,
	682, 683, 209, 0, 0, 0, 0, 0, 0, 0,
	727, 744, 786, 711, 0, 0, 363, 773, 782, 796,
	704, 300, 223, 0, 0, 0, 0, 509, 510, 0,
	0, 0, 0, 612, 0, 511, 0, 656, 507, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 513, 0, 0, 0, 661, 639, 680, 788, 640,
	638, 269, 653, 585, 817, 712, 238, 154, 823, 710,
	610, 776, 657, 805, 698, 246, 655, 155, 652, 658,
	696, 280, 785, 791, 594, 158, 248, 802, 676, 689,
	195, 0, 310, 763, 362, 501, 749, 309, 250, 355,
	777, 825, 361, 699, 341, 369, 373, 216, 732, 186,
	331, 207, 203, 681, 795, 645, 224, 299, 198, 242,
	715, 769, 677, 191, 780, 756, 807, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 803, 790, 809, 672, 659,
	664, 660, 688, 826, 233, 225, 810, 808, 366, 144,
	319, 318, 702, 232, 793, 145, 136, 306, 146, 239,
	163, 813, 375, 176, 244, 348, 500, 219, 279, 197,
	765, 288, 687, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 789, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 832, 255, 211, 215, 226,
	236, 764, 308, 338, 367, 758, 173, 166, 340, 360,
	183, 320, 323, 374, 787, 168, 821, 804, 751, 717,
	723, 647, 0, 167, 783, 679, 691, 671, 759, 670,
	221, 775, 358, 359, 196, 376, 588, 836, 169, 654,
	835, 276, 283, 275, 838, 354, 822, 752, 741, 739,
	648, 820, 750, 740, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 743, 0, 164, 0, 335,
	830, 847, 339, 180, 665, 797, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 779,
	844, 287, 311, 185, 364, 332, 208, 599, 611, 605,
	607, 606, 603, 604, 602, 601, 600, 613, 586, 587,
	590, 591, 592, 734, 824, 649, 595, 800, 608, 609,
	772, 842, 584, 192, 533, 625, 626, 627, 534, 628,
	629, 535, 536, 630, 631, 632, 633, 537, 634, 635,
	636, 614, 615, 616, 617, 618, 619, 620, 621, 624,
	622, 623, 730, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 345,
	204, 0, 0, 0, 0, 0, 593, 159, 170, 247,
	843, 305, 218, 637, 644, 663, 666, 667, 668, 669,
	673, 678, 0, 684, 690, 692, 693, 701, 706, 707,
	708, 709, 716, 718, 719, 720, 721, 722, 725, 726,
	728, 735, 736, 742, 747, 748, 754, 755, 0, 778,
	781, 598, 792, 794, 798, 799, 806, 811, 812, 837,
	841, 846, 365, 201, 733, 753, 784, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 148, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 816, 713, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 700, 161, 815, 839, 760, 774, 827,
	0, 346, 589, 831, 674, 697, 840, 703, 705, 768,
	650, 745, 284, 694, 651, 0, 0, 642, 887, 643,
	675, 206, 885, 801, 746, 829, 731, 761, 771, 205,
	194, 738, 737, 818, 686, 685, 766, 814, 828, 0,
	0, 597, 249, 0, 0, 368, 334, 268, 0, 0,
	729, 0, 582, 583, 714, 770, 662, 757, 833, 695,
	762, 834, 77, 0, 1135, 0, 496, 521, 520, 523,
	524, 525, 526, 0, 0, 137, 522, 527, 528, 529,
	0, 724, 767, 845, 641, 904, 512, 646, 596, 0,
	819, 682, 683, 209, 0, 0, 0, 0, 0, 0,
	0, 727, 744, 786, 711, 0, 0, 363, 773, 782,
	796, 704, 300, 223, 0, 0, 0, 0, 509, 510,
	0, 0, 0, 0, 612, 0, 511, 0, 656, 507,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 513, 0, 0, 0, 661, 639, 680, 788,
	640, 638, 269, 653, 585, 817, 712, 238, 154, 823,
	710, 610, 776, 657, 805, 698, 246, 655, 155, 652,
	658, 696, 280, 785, 791, 594, 158, 248, 802, 676,
	689, 195, 0, 310, 763, 362, 501, 749, 309, 250,
	355, 777, 825, 361, 699, 341, 369, 373, 216, 732,
	186, 331, 207, 203, 681, 795, 645, 224, 299, 198,
	242, 715, 769, 677, 191, 780, 756, 807, 330, 352,
	160, 265, 353, 372, 177, 347, 266, 273, 188, 190,
	189, 172, 324, 351, 182, 193, 803, 790, 809, 672,
	659, 664, 660, 688, 826, 233, 225, 810, 808, 366,
	144, 319, 318, 702, 232, 793, 145, 136, 306, 146,
	239, 163, 813, 375, 176, 244, 348, 500, 219, 279,
	197, 765, 288, 687, 157, 302, 261, 263, 260, 264,
	222, 140, 147, 789, 304, 321, 350, 178, 337, 138,
	139, 141, 149, 312, 150, 151, 832, 255, 211, 215,
	226, 236, 764, 308, 338, 367, 758, 173, 166, 340,
	360, 183, 320, 323, 374, 787, 168, 821, 804, 751,
	717, 723, 647, 0, 167, 783, 679, 691, 671, 759,
	670, 221, 775, 358, 359, 196, 376, 588, 836, 169,
	654, 835, 276, 283, 275, 838, 354, 822, 752, 741,
	739, 648, 820, 750, 740, 245, 214, 228, 297, 252,
	298, 229, 271, 270, 272, 253, 743, 0, 164, 0,
	335, 830, 847, 339, 180, 665, 797, 349, 143, 303,
	181, 220, 212, 296, 274, 174, 231, 333, 243, 251,
	779, 844, 287, 311, 185, 364, 332, 208, 599, 611,
	605, 607, 606, 603, 604, 602, 601, 600, 613, 586,
	587, 590, 591, 592, 734, 824, 649, 595, 800, 608,
	609, 772, 842, 584, 192, 533, 625, 626, 627, 534,
	628, 629, 535, 536, 630, 631, 632, 633, 537, 634,
	635, 636, 614, 615, 616, 617, 618, 619, 620, 621,
	624, 622, 623, 730, 293, 165, 175, 184, 202, 200,
	213, 240, 262, 267, 292, 322, 327, 342, 343, 344,
	345, 204, 0, 0, 0, 0, 0, 593, 159, 170,
	247, 843, 305, 218, 637, 644, 663, 666, 667, 668,
	669, 673, 678, 0, 684, 690, 692, 693, 701, 706,
	707, 708, 709, 716, 718, 719, 720, 721, 722, 725,
	726, 728, 735, 736, 742, 747, 748, 754, 755, 0,
	778, 781, 598, 792, 794, 798, 799, 806, 811, 812,
	837, 841, 846, 365, 201, 733, 753, 784, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 148, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 816, 713, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 700, 161, 815, 839, 760, 774,
	827, 0, 346, 589, 831, 674, 697, 840, 703, 705,
	768, 650, 745, 284, 694, 651, 0, 0, 642, 498,
	643, 675, 206, 495, 801, 746, 829, 731, 761, 771,
	205, 194, 738, 737, 818, 686, 685, 766, 814, 828,
	0, 0, 597, 249, 0, 0, 368, 334, 268, 0,
	0, 729, 0, 582, 583, 714, 770, 662, 757, 833,
	695, 762, 834, 77, 0, 0, 0, 496, 521, 1906,
	523, 524, 525, 526, 0, 0, 137, 522, 527, 528,
	529, 0, 724, 767, 845, 641, 493, 512, 646, 596,
	0, 819, 682, 683, 209, 0, 0, 0, 0, 0,
	0, 0, 727, 744, 786, 711, 0, 0, 363, 773,
	782, 796, 704, 300, 223, 0, 0, 0, 0, 509,
	510, 1872, 0, 0, 0, 612, 0, 511, 0, 656,
	507, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 513, 0, 0, 0, 661, 639, 680,
	788, 640, 638, 269, 653, 585, 817, 712, 238, 154,
	823, 710, 610, 776, 657, 805, 698, 246, 655, 155,
	652, 658, 696, 280, 785, 791, 594, 158, 248, 802,
	676, 689, 195, 0, 310, 763, 362, 501, 749, 309,
	250, 355, 777, 825, 361, 699, 341, 369, 373, 216,
	732, 186, 331, 207, 203, 681, 795, 645, 224, 299,
	198, 242, 715, 769, 677, 191, 780, 756, 807, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 803, 790, 809,
	672, 659, 664, 660, 688, 826, 233, 225, 810, 808,
	366, 144, 319, 318, 702, 232, 793, 145, 136, 306,
	146, 239, 163, 813, 375, 176, 244, 348, 500, 219,
	279, 197, 765, 288, 687, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 789, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 832, 255, 211,
	215, 226, 236, 764, 308, 338, 367, 758, 173, 166,
	340, 360, 183, 320, 323, 374, 787, 168, 821, 804,
	751, 717, 723, 647, 0, 167, 783, 679, 691, 671,
	759, 670, 221, 775, 358, 359, 196, 376, 588, 836,
	169, 654, 835, 276, 283, 275, 838, 354, 822, 752,
	741, 739, 648, 820, 750, 740, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 743, 0, 164,
	0, 335, 830, 847, 339, 180, 665, 797, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 779, 844, 287, 311, 185, 364, 332, 208, 599,
	611, 605, 607, 606, 603, 604, 602, 601, 600, 613,
	586, 587, 590, 591, 592, 734, 824, 649, 595, 800,
	608, 609, 772, 842, 584, 192, 533, 625, 626, 627,
	534, 628, 629, 535, 536, 630, 631, 632, 633, 537,
	634, 635, 636, 614, 615, 616, 617, 618, 619, 620,
	621, 624, 622, 623, 730, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 593, 159,
	170, 247, 843, 305, 218, 637, 644, 663, 666, 667,
	668, 669, 673, 678, 0, 684, 690, 692, 693, 701,
	706, 707, 708, 709, 716, 718, 719, 720, 721, 722,
	725, 726, 728, 735, 736, 742, 747, 748, 754, 755,
	0, 778, 781, 598, 792, 794, 798, 799, 806, 811,
	812, 837, 841, 846, 365, 201, 733, 753, 784, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 148, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 816, 713, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 700, 161, 815, 839, 760,
	774, 827, 0, 346, 589, 831, 674, 697, 840, 703,
	705, 768, 650, 745, 284, 694, 651, 0, 0, 642,
	498, 643, 675, 206, 495, 801, 746, 829, 731, 761,
	771, 205, 194, 738, 737, 818, 686, 685, 766, 814,
	828, 0, 0, 597, 249, 0, 0, 368, 334, 268,
	0, 0, 729, 0, 582, 583, 714, 770, 662, 757,
	833, 695, 762, 834, 77, 0, 0, 0, 496, 521,
	1903, 523, 524, 525, 526, 0, 0, 137, 522, 527,
	528, 529, 0, 724, 767, 845, 641, 493, 512, 646,
	596, 0, 819, 682, 683, 209, 0, 0, 0, 0,
	0, 0, 0, 727, 744, 786, 711, 0, 0, 363,
	773, 782, 796, 704, 300, 223, 0, 0, 0, 0,
	509, 510, 1872, 0, 0, 0, 612, 0, 511, 0,
	656, 507, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 513, 0, 0, 0, 661, 639,
	680, 788, 640, 638, 269, 653, 585, 817, 712, 238,
	154, 823, 710, 610, 776, 657, 805, 698, 246, 655,
	155, 652, 658, 696, 280, 785, 791, 594, 158, 248,
	802, 676, 689, 195, 0, 310, 763, 362, 501, 749,
	309, 250, 355, 777, 825, 361, 699, 341, 369, 373,
	216, 732, 186, 331, 207, 203, 681, 795, 645, 224,
	299, 198, 242, 715, 769, 677, 191, 780, 756, 807,
	330, 352, 160, 265, 353, 372, 177, 347, 266, 273,
	188, 190, 189, 172, 324, 351, 182, 193, 803, 790,
	809, 672, 659, 664, 660, 688, 826, 233, 225, 810,
	808, 366, 144, 319, 318, 702, 232, 793, 145, 136,
	306, 146, 239, 163, 813, 375, 176, 244, 348, 500,
	219, 279, 197, 765, 288, 687, 157, 302, 261, 263,
	260, 264, 222, 140, 147, 789, 304, 321, 350, 178,
	337, 138, 139, 141, 149, 312, 150, 151, 832, 255,
	211, 215, 226, 236, 764, 308, 338, 367, 758, 173,
	166, 340, 360, 183, 320, 323, 374, 787, 168, 821,
	804, 751, 717, 723, 647, 0, 167, 783, 679, 691,
	671, 759, 670, 221, 775, 358, 359, 196, 376, 588,
	836, 169, 654, 835, 276, 283, 275, 838, 354, 822,
	752, 741, 739, 648, 820, 750, 740, 245, 214, 228,
	297, 252, 298, 229, 271, 270, 272, 253, 743, 0,
	164, 0, 335, 830, 847, 339, 180, 665, 797, 349,
	143, 303, 181, 220, 212, 296, 274, 174, 231, 333,
	243, 251, 779, 844, 287, 311, 185, 364, 332, 208,
	599, 611, 605, 607, 606, 603, 604, 602, 601, 600,
	613, 586, 587, 590, 591, 592, 734, 824, 649, 595,
	800, 608, 609, 772, 842, 584, 192, 533, 625, 626,
	627, 534, 628, 629, 535, 536, 630, 631, 632, 633,
	537, 634, 635, 636, 614, 615, 616, 617, 618, 619,
	620, 621, 624, 622, 623, 730, 293, 165, 175, 184,
	202, 200, 213, 240, 262, 267, 292, 322, 327, 342,
	343, 344, 345, 204, 0, 0, 0, 0, 0, 593,
	159, 170, 247, 843, 305, 218, 637, 644, 663, 666,
	667, 668, 669, 673, 678, 0, 684, 690, 692, 693,
	701, 706, 707, 708, 709, 716, 718, 719, 720, 721,
	722, 725, 726, 728, 735, 736, 742, 747, 748, 754,
	755, 0, 778, 781, 598, 792, 794, 798, 799, 806,
	811, 812, 837, 841, 846, 365, 201, 733, 753, 784,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 148,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 816, 713, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 700, 161, 815, 839,
	760, 774, 827, 36, 346, 589, 831, 674, 697, 840,
	703, 705, 768, 650, 745, 284, 694, 651, 0, 0,
	642, 498, 643, 675, 206, 495, 801, 746, 829, 731,
	761, 771, 205, 194, 738, 737, 818, 686, 685, 766,
	814, 828, 0, 0, 597, 249, 0, 0, 368, 334,
	268, 0, 0, 729, 0, 582, 583, 714, 770, 662,
	757, 833, 695, 762, 834, 77, 0, 0, 0, 496,
	521, 520, 523, 524, 525, 526, 0, 0, 137, 522,
	527, 528, 529, 0, 724, 767, 845, 641, 493, 512,
	646, 596, 0, 819, 682, 683, 209, 0, 0, 0,
	0, 0, 0, 0, 727, 744, 786, 711, 0, 0,
	363, 773, 782, 796, 704, 300, 223, 0, 0, 0,
	0, 509, 510, 0, 0, 0, 0, 612, 0, 511,
	0, 656, 507, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 513, 0, 0, 0, 661,
	639, 680, 788, 640, 638, 269, 653, 585, 817, 712,
	238, 154, 823, 710, 610, 776, 657, 805, 698, 246,
	655, 155, 652, 658, 696, 280, 785, 791, 594, 158,
	248, 802, 676, 689, 195, 0, 310, 763, 362, 501,
	749, 309, 250, 355, 777, 825, 361, 699, 341, 369,
	373, 216, 732, 186, 331, 207, 203, 681, 795, 645,
	224, 299, 198, 242, 715, 769, 677, 191, 780, 756,
	807, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 803,
	790, 809, 672, 659, 664, 660, 688, 826, 233, 225,
	810, 808, 366, 144, 319, 318, 702, 232, 793, 145,
	136, 306, 146, 239, 163, 813, 375, 176, 244, 348,
	500, 219, 279, 197, 765, 288, 687, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 789, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 832,
	255, 211, 215, 226, 236, 764, 308, 338, 367, 758,
	173, 166, 340, 360, 183, 320, 323, 374, 787, 168,
	821, 804, 751, 717, 723, 647, 0, 167, 783, 679,
	691, 671, 759, 670, 221, 775, 358, 359, 196, 376,
	588, 836, 169, 654, 835, 276, 283, 275, 838, 354,
	822, 752, 741, 739, 648, 820, 750, 740, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 743,
	0, 164, 0, 335, 830, 847, 339, 180, 665, 797,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 779, 844, 287, 311, 185, 364, 332,
	208, 599, 611, 605, 607, 606, 603, 604, 602, 601,
	600, 613, 586, 587, 590, 591, 592, 734, 824, 649,
	595, 800, 608, 609, 772, 842, 584, 192, 533, 625,
	626, 627, 534, 628, 629, 535, 536, 630, 631, 632,
	633, 537, 634, 635, 636, 614, 615, 616, 617, 618,
	619, 620, 621, 624, 622, 623, 730, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	593, 159, 170, 247, 1222, 305, 218, 637, 644, 663,
	666, 667, 668, 669, 673, 678, 0, 684, 690, 692,
	693, 701, 706, 707, 708, 709, 716, 718, 719, 720,
	721, 722, 725, 726, 728, 735, 736, 742, 747, 748,
	754, 755, 0, 778, 781, 598, 792, 794, 798, 799,
	806, 811, 812, 837, 841, 846, 365, 201, 733, 753,
	784, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	148, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 816, 713, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 700, 161, 815,
	839, 760, 774, 827, 0, 346, 589, 831, 674, 697,
	840, 703, 705, 768, 650, 745, 284, 694, 651, 0,
	0, 642, 498, 643, 675, 206, 495, 801, 746, 829,
	731, 761, 771, 205, 194, 738, 737, 818, 686, 685,
	766, 814, 828, 0, 0, 597, 249, 0, 0, 368,
	334, 268, 0, 0, 729, 0, 582, 583, 714, 770,
	662, 757, 833, 695, 762, 834, 77, 0, 1741, 0,
	496, 521, 520, 523, 524, 525, 526, 0, 0, 137,
	522, 527, 528, 529, 0, 724, 767, 845, 641, 493,
	512, 646, 596, 0, 819, 682, 683, 209, 0, 0,
	0, 0, 0, 0, 0, 727, 744, 786, 711, 0,
	0, 363, 773, 782, 796, 704, 300, 223, 0, 0,
	0, 0, 509, 510, 0, 0, 0, 0, 612, 0,
	511, 0, 656, 507, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 513, 0, 0, 0,
	661, 639, 680, 788, 640, 638, 269, 653, 585, 817,
	712, 238, 154, 823, 710, 610, 776, 657, 805, 698,
	246, 655, 155, 652, 658, 696, 280, 785, 791, 594,
	158, 248, 802, 676, 689, 195, 0, 310, 763, 362,
	501, 749, 309, 250, 355, 777, 825, 361, 699, 341,
	369, 373, 216, 732, 186, 331, 207, 203, 681, 795,
	645, 224, 299, 198, 242, 715, 769, 677, 191, 780,
	756, 807, 330, 352, 160, 265, 353, 372, 177, 347,
	266, 273, 188, 190, 189, 172, 324, 351, 182, 193,
	803, 790, 809, 672, 659, 664, 660, 688, 826, 233,
	225, 810, 808, 366, 144, 319, 318, 702, 232, 793,
	145, 136, 306, 146, 239, 163, 813, 375, 176, 244,
	348, 500, 219, 279, 197, 765, 288, 687, 157, 302,
	261, 263, 260, 264, 222, 140, 147, 789, 304, 321,
	350, 178, 337, 138, 139, 141, 149, 312, 150, 151,
	832, 255, 211, 215, 226, 236, 764, 308, 338, 367,
	758, 173, 166, 340, 360, 183, 320, 323, 374, 787,
	168, 821, 804, 751, 717, 723, 647, 0, 167, 783,
	679, 691, 671, 759, 670, 221, 775, 358, 359, 196,
	376, 588, 836, 169, 654, 835, 276, 283, 275, 838,
	354, 822, 752, 741, 739, 648, 820, 750, 740, 245,
	214, 228, 297, 252, 298, 229, 271, 270, 272, 253,
	743, 0, 164, 0, 335, 830, 847, 339, 180, 665,
	797, 349, 143, 303, 181, 220, 212, 296, 274, 174,
	231, 333, 243, 251, 779, 844, 287, 311, 185, 364,
	332, 208, 599, 611, 605, 607, 606, 603, 604, 602,
	601, 600, 613, 586, 587, 590, 591, 592, 734, 824,
	649, 595, 800, 608, 609, 772, 842, 584, 192, 533,
	625, 626, 627, 534, 628, 629, 535, 536, 630, 631,
	632, 633, 537, 634, 635, 636, 614, 615, 616, 617,
	618, 619, 620, 621, 624, 622, 623, 730, 293, 165,
	175, 184, 202, 200, 213, 240, 262, 267, 292, 322,
	327, 342, 343, 344, 345, 204, 0, 0, 0, 0,
	0, 593, 159, 170, 247, 843, 305, 218, 637, 644,
	663, 666, 667, 668, 669, 673, 678, 0, 684, 690,
	692, 693, 701, 706, 707, 708, 709, 716, 718, 719,
	720, 721, 722, 725, 726, 728, 735, 736, 742, 747,
	748, 754, 755, 0, 778, 781, 598, 792, 794, 798,
	799, 806, 811, 812, 837, 841, 846, 365, 201, 733,
	753, 784, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 148, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 816, 713, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 700, 161,
	815, 839, 760, 774, 827, 0, 346, 589, 831, 674,
	697, 840, 703, 705, 768, 650, 745, 284, 694, 651,
	0, 0, 642, 887, 643, 675, 206, 885, 801, 746,
	829, 731, 761, 771, 205, 194, 738, 737, 818, 686,
	685, 766, 814, 828, 0, 0, 597, 249, 0, 0,
	368, 334, 268, 0, 0, 729, 0, 582, 583, 714,
	770, 662, 757, 833, 695, 762, 834, 77, 0, 0,
	0, 496, 521, 520, 523, 524, 525, 526, 0, 0,
	137, 522, 527, 528, 529, 0, 724, 767, 845, 641,
	904, 512, 646, 596, 0, 819, 682, 683, 209, 0,
	0, 0, 0, 0, 0, 0, 727, 744, 786, 711,
	0, 0, 363, 773, 782, 796, 704, 300, 223, 0,
	0, 0, 0, 509, 510, 0, 0, 0, 0, 612,
	0, 511, 0, 656, 507, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 513, 0, 0,
	0, 661, 639, 680, 788, 640, 638, 269, 653, 585,
	817, 712, 238, 154, 823, 710, 610, 776, 657, 805,
	698, 246, 655, 155, 652, 658, 696, 280, 785, 791,
	594, 158, 248, 802, 676, 689, 195, 0, 310, 763,
	362, 501, 749, 309, 250, 355, 777, 825, 361, 699,
	341, 369, 373, 216, 732, 186, 331, 207, 203, 681,
	795, 645, 224, 299, 198, 242, 715, 769, 677, 191,
	780, 756, 807, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 803, 790, 809, 672, 659, 664, 660, 688, 826,
	233, 225, 810, 808, 366, 144, 319, 318, 702, 232,
	793, 145, 136, 306, 146, 239, 163, 813, 375, 176,
	244, 348, 500, 219, 279, 197, 765, 288, 687, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 789, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 832, 255, 211, 215, 226, 236, 764, 308, 338,
	367, 758, 173, 166, 340, 360, 183, 320, 323, 374,
	787, 168, 821, 804, 751, 717, 723, 647, 0, 167,
	783, 679, 691, 671, 759, 670, 221, 775, 358, 359,
	196, 376, 588, 836, 169, 654, 835, 276, 283, 275,
	838, 354, 822, 752, 741, 739, 648, 820, 750, 740,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 743, 0, 164, 0, 335, 830, 847, 339, 180,
	665, 797, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 779, 844, 287, 311, 185,
	364, 332, 208, 599, 611, 605, 607, 606, 603, 604,
	602, 601, 600, 613, 586, 587, 590, 591, 592, 734,
	824, 649, 595, 800, 608, 609, 772, 842, 584, 192,
	533, 625, 626, 627, 534, 628, 629, 535, 536, 630,
	631, 632, 633, 537, 634, 635, 636, 614, 615, 616,
	617, 618, 619, 620, 621, 624, 622, 623, 730, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 593, 159, 170, 247, 843, 305, 218, 637,
	644, 663, 666, 667, 668, 669, 673, 678, 0, 684,
	690, 692, 693, 701, 706, 707, 708, 709, 716, 718,
	719, 720, 721, 722, 725, 726, 728, 735, 736, 742,
	747, 748, 754, 755, 0, 778, 781, 598, 792, 794,
	798, 799, 806, 811, 812, 837, 841, 846, 365, 201,
	733, 753, 784, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 148, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 816, 713,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 700,
	161, 815, 839, 760, 774, 827, 0, 346, 589, 831,
	674, 697, 840, 703, 705, 768, 650, 745, 284, 694,
	651, 0, 0, 642, 498, 643, 675, 206, 495, 801,
	746, 829, 731, 761, 771, 205, 194, 738, 737, 818,
	686, 685, 766, 814, 828, 0, 0, 597, 249, 0,
	0, 368, 334, 268, 0, 0, 729, 0, 582, 583,
	714, 770, 662, 757, 833, 695, 762, 834, 77, 0,
	0, 0, 496, 521, 520, 523, 524, 525, 526, 0,
	0, 137, 522, 527, 528, 529, 0, 724, 767, 845,
	641, 493, 512, 646, 596, 0, 819, 682, 683, 209,
	0, 0, 0, 0, 0, 0, 0, 727, 744, 786,
	711, 0, 0, 363, 773, 782, 796, 704, 300, 223,
	0, 0, 0, 0, 509, 510, 0, 0, 0, 0,
	612, 0, 511, 0, 656, 507, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 513, 0,
	0, 0, 661, 639, 680, 788, 640, 638, 269, 653,
	585, 817, 712, 238, 154, 823, 710, 610, 776, 657,
	805, 698, 246, 655, 155, 652, 658, 696, 280, 785,
	791, 594, 158, 248, 802, 676, 689, 195, 0, 310,
	763, 362, 501, 749, 309, 250, 355, 777, 825, 361,
	699, 341, 369, 373, 216, 732, 186, 331, 207, 203,
	681, 795, 645, 224, 299, 198, 242, 715, 769, 677,
	191, 780, 756, 807, 330, 352, 160, 265, 353, 372,
	177, 347, 266, 273, 188, 190, 189, 172, 324, 351,
	182, 193, 803, 790, 809, 672, 659, 664, 660, 688,
	826, 233, 225, 810, 808, 366, 144, 319, 318, 702,
	232, 793, 145, 136, 306, 146, 239, 163, 813, 375,
	176, 244, 348, 500, 219, 279, 197, 765, 288, 687,
	157, 302, 261, 263, 260, 264, 222, 140, 147, 789,
	304, 321, 350, 178, 337, 138, 139, 141, 149, 312,
	150, 151, 832, 255, 211, 215, 226, 236, 764, 308,
	338, 367, 758, 173, 166, 340, 360, 183, 320, 323,
	374, 787, 168, 821, 804, 751, 717, 723, 647, 0,
	167, 783, 679, 691, 671, 759, 670, 221, 775, 358,
	359, 196, 376, 588, 836, 169, 654, 835, 276, 283,
	275, 838, 354, 822, 752, 741, 739, 648, 820, 750,
	740, 245, 214, 228, 297, 252, 298, 229, 271, 270,
	272, 253, 743, 0, 164, 0, 335, 830, 847, 339,
	180, 665, 797, 349, 143, 303, 181, 220, 212, 296,
	274, 174, 231, 333, 243, 251, 779, 844, 287, 311,
	185, 364, 332, 208, 599, 611, 605, 607, 606, 603,
	604, 602, 601, 600, 613, 586, 587, 590, 591, 592,
	734, 824, 649, 595, 800, 608, 609, 772, 842, 584,
	192, 533, 625, 626, 627, 534, 628, 629, 535, 536,
	630, 631, 632, 633, 537, 634, 635, 636, 614, 615,
	616, 617, 618, 619, 620, 621, 624, 622, 623, 730,
	293, 165, 175, 184, 202, 200, 213, 240, 262, 267,
	292, 322, 327, 342, 343, 344, 345, 204, 0, 0,
	0, 0, 0, 593, 159, 170, 247, 843, 305, 218,
	637, 644, 663, 666, 667, 668, 669, 673, 678, 0,
	684, 690, 692, 693, 701, 706, 707, 708, 709, 716,
	718, 719, 720, 721, 722, 725, 726, 728, 735, 736,
	742, 747, 748, 754, 755, 0, 778, 781, 598, 792,
	794, 798, 799, 806, 811, 812, 837, 841, 846, 365,
	201, 733, 753, 784, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 148, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 816,
	713, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	700, 161, 815, 839, 760, 774, 827, 0, 346, 589,
	831, 674, 697, 840, 703, 705, 768, 650, 745, 284,
	694, 651, 0, 0, 642, 887, 643, 675, 206, 885,
	801, 746, 829, 731, 761, 771, 205, 194, 738, 737,
	818, 686, 685, 766, 814, 828, 0, 0, 597, 249,
	0, 0, 368, 334, 268, 0, 0, 729, 0, 582,
	583, 714, 770, 662, 757, 833, 695, 762, 834, 77,
	0, 0, 0, 496, 521, 520, 523, 524, 525, 526,
	0, 0, 137, 522, 527, 528, 529, 0, 724, 767,
	845, 641, 904, 512, 646, 596, 0, 819, 682, 683,
	209, 0, 0, 0, 0, 0, 0, 0, 727, 744,
	786, 711, 0, 0, 363, 773, 782, 796, 704, 300,
	223, 0, 0, 0, 0, 509, 510, 0, 0, 0,
	0, 612, 0, 511, 0, 656, 507, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 513,
	0, 0, 0, 661, 639, 680, 788, 640, 638, 269,
	653, 585, 817, 712, 238, 154, 823, 710, 610, 776,
	657, 805, 698, 246, 655, 155, 652, 658, 696, 280,
	785, 791, 594, 158, 248, 802, 676, 689, 195, 0,
	310, 763, 362, 501, 3507, 309, 250, 355, 777, 825,
	361, 699, 341, 369, 373, 216, 732, 186, 331, 207,
	203, 681, 795, 645, 224, 299, 198, 242, 715, 769,
	677, 191, 780, 756, 807, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 803, 790, 809, 672, 659, 664, 660,
	688, 826, 233, 225, 810, 808, 366, 144, 319, 318,
	702, 232, 793, 145, 136, 306, 146, 239, 163, 813,
	375, 176, 244, 348, 500, 219, 279, 197, 765, 288,
	687, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	789, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 832, 255, 211, 215, 226, 236, 764,
	308, 338, 367, 758, 173, 166, 340, 360, 183, 320,
	323, 374, 787, 168, 821, 804, 751, 717, 723, 647,
	0, 167, 783, 679, 691, 671, 759, 670, 221, 775,
	358, 359, 196, 376, 588, 836, 169, 654, 835, 276,
	283, 275, 838, 354, 822, 752, 741, 739, 648, 820,
	750, 740, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 743, 0, 164, 0, 335, 830, 847,
	339, 180, 665, 797, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 779, 844, 287,
	311, 185, 364, 332, 208, 599, 611, 605, 607, 606,
	603, 604, 602, 601, 600, 613, 586, 587, 590, 591,
	592, 734, 824, 649, 595, 800, 608, 609, 772, 842,
	584, 192, 533, 625, 626, 627, 534, 628, 629, 535,
	536, 630, 631, 632, 633, 537, 634, 635, 636, 614,
	615, 616, 617, 618, 619, 620, 621, 624, 622, 623,
	730, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 593, 159, 170, 247, 843, 305,
	218, 637, 644, 663, 666, 667, 668, 669, 673, 678,
	0, 684, 690, 692, 693, 701, 706, 707, 708, 709,
	716, 718, 719, 720, 721, 722, 725, 726, 728, 735,
	736, 742, 747, 748, 754, 755, 0, 778, 781, 598,
	792, 794, 798, 799, 806, 811, 812, 837, 841, 846,
	365, 201, 733, 753, 784, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 148, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	816, 713, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 700, 161, 815, 839, 760, 774, 827, 0, 346,
	589, 831, 674, 697, 840, 703, 705, 768, 650, 745,
	284, 694, 651, 0, 0, 642, 887, 643, 675, 206,
	885, 801, 746, 829, 731, 761, 771, 205, 194, 738,
	737, 818, 686, 685, 766, 814, 828, 0, 0, 597,
	249, 0, 0, 368, 334, 268, 0, 0, 729, 0,
	582, 583, 714, 770, 662, 757, 833, 695, 762, 834,
	77, 0, 0, 0, 496, 521, 520, 523, 524, 525,
	526, 0, 0, 137, 522, 527, 528, 529, 0, 724,
	767, 845, 641, 904, 512, 646, 596, 0, 819, 682,
	683, 209, 0, 0, 0, 0, 0, 0, 0, 727,
	744, 786, 711, 0, 0, 363, 773, 782, 796, 704,
	300, 223, 0, 0, 0, 0, 509, 510, 0, 0,
	0, 0, 612, 0, 511, 0, 656, 507, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	513, 0, 0, 0, 661, 639, 680, 788, 640, 638,
	269, 653, 585, 817, 712, 238, 154, 823, 710, 610,
	776, 657, 805, 698, 246, 655, 155, 652, 658, 696,
	280, 785, 791, 594, 158, 248, 802, 676, 689, 195,
	0, 310, 763, 362, 501, 749, 309, 250, 355, 777,
	825, 361, 699, 341, 369, 373, 216, 732, 186, 331,
	207, 203, 681, 795, 645, 224, 299, 198, 242, 715,
	769, 677, 191, 780, 756, 807, 330, 352, 160, 265,
	353, 372, 177, 347, 266, 273, 188, 190, 189, 172,
	324, 351, 182, 193, 803, 790, 809, 672, 659, 664,
	660, 688, 826, 233, 225, 810, 808, 366, 144, 319,
	318, 702, 232, 793, 145, 136, 306, 146, 239, 163,
	813, 375, 176, 244, 348, 500, 219, 279, 197, 765,
	288, 687, 157, 302, 261, 263, 260, 264, 222, 140,
	147, 789, 304, 321, 350, 178, 337, 138, 139, 141,
	149, 312, 150, 151, 832, 255, 211, 215, 226, 236,
	764, 308, 338, 367, 758, 173, 166, 340, 360, 183,
	320, 323, 374, 787, 168, 821, 804, 751, 717, 723,
	647, 0, 167, 783, 679, 691, 671, 759, 670, 221,
	775, 358, 359, 196, 376, 588, 836, 169, 654, 835,
	276, 283, 275, 838, 354, 822, 752, 741, 739, 648,
	820, 750, 740, 245, 214, 228, 297, 252, 298, 229,
	271, 270, 272, 253, 743, 0, 164, 0, 335, 830,
	847, 339, 180, 665, 797, 349, 143, 303, 181, 220,
	212, 296, 274, 174, 231, 333, 243, 251, 779, 844,
	287, 311, 185, 364, 332, 208, 599, 611, 605, 607,
	606, 603, 604, 602, 601, 600, 613, 586, 587, 590,
	591, 592, 1909, 1910, 1911, 595, 800, 608, 609, 772,
	842, 584, 192, 533, 625, 626, 627, 534, 628, 629,
	535, 536, 630, 631, 632, 633, 537, 634, 635, 636,
	614, 615, 616, 617, 618, 619, 620, 621, 624, 622,
	623, 730, 293, 165, 175, 184, 202, 200, 213, 240,
	262, 267, 292, 322, 327, 342, 343, 344, 345, 204,
	0, 0, 0, 0, 0, 593, 159, 170, 247, 843,
	305, 218, 637, 644, 663, 666, 667, 668, 669, 673,
	678, 0, 684, 690, 692, 693, 701, 706, 707, 708,
	709, 716, 718, 719, 720, 721, 722, 725, 726, 728,
	735, 736, 742, 747, 748, 754, 755, 0, 778, 781,
	598, 792, 794, 798, 799, 806, 811, 812, 837, 841,
	846, 365, 201, 733, 753, 784, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 294, 295, 301, 148, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 816, 713, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 700, 161, 815, 839, 760, 774, 1672, 2880,
	346, 1527, 1676, 1477, 1506, 1693, 1512, 1515, 1596, 1443,
	1565, 284, 1503, 1444, 1427, 1482, 1431, 1494, 1432, 1479,
	206, 1475, 1637, 1568, 1674, 1547, 1589, 1599, 205, 194,
	1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673, 1546, 0,
	1683, 249, 1648, 947, 368, 334, 268, 950, 949, 1542,
	1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678, 1504, 1590,
	1679, 77, 0, 1135, 0, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 1586, 1670, 1497, 948,
	1537, 1595, 1698, 1430, 1582, 0, 1435, 1446, 1692, 1663,
	1488, 1489, 209, 0, 0, 0, 0, 0, 0, 0,
	1540, 1564, 1616, 1522, 0, 0, 363, 1601, 1611, 1629,
	1514, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 1579, 0, 0, 0, 1451, 1437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 0, 0, 1458, 1428, 1486, 1618, 1429,
	1426, 269, 1447, 1631, 1661, 1523, 238, 154, 1667, 1521,
	1520, 1605, 1452, 1641, 1507, 246, 1450, 155, 1445, 1453,
	1505, 280, 1615, 1623, 142, 158, 248, 1638, 1480, 1496,
	195, 1798, 310, 1591, 362, 946, 1572, 309, 250, 355,
	1606, 1669, 361, 1508, 341, 369, 373, 216, 1548, 186,
	331, 207, 203, 1487, 1628, 1434, 224, 299, 198, 242,
	1526, 1597, 1481, 191, 1609, 1580, 1643, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 1639, 1622, 1645, 1474, 1454,
	1465, 1455, 1495, 1671, 233, 225, 1646, 1644, 366, 144,
	319, 318, 1511, 232, 1625, 145, 136, 306, 146, 239,
	163, 1650, 375, 176, 244, 348, 945, 219, 279, 197,
	1593, 288, 1493, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 1621, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 1677, 255, 211, 215, 226,
	236, 1592, 308, 338, 367, 1583, 173, 166, 340, 360,
	183, 320, 323, 374, 1617, 168, 1665, 1640, 1574, 1529,
	1535, 1436, 0, 167, 1613, 1485, 1500, 1473, 1587, 1472,
	221, 1604, 358, 359, 196, 376, 1448, 1685, 169, 1449,
	1684, 276, 283, 275, 1688, 354, 1666, 1575, 1560, 1558,
	1441, 1664, 1573, 1559, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 1562, 0, 164, 0, 335,
	1675, 1700, 339, 180, 1467, 1632, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 1608,
	1697, 287, 311, 185, 364, 332, 208, 1463, 1466, 1461,
	1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620, 1456, 0,
	1658, 1659, 0, 1553, 1668, 1442, 0, 1636, 152, 153,
	1600, 1695, 1513, 192, 131, 1438, 1439, 1440, 132, 1543,
	1544, 133, 134, 1654, 1653, 1652, 1655, 135, 1689, 1687,
	1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584, 1585, 1630,
	1603, 1612, 1545, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 345,
	204, 0, 0, 0, 0, 0, 1571, 159, 170, 247,
	2881, 305, 218, 1425, 1433, 1460, 1468, 1469, 1470, 1471,
	1476, 1483, 0, 1490, 1498, 1501, 1502, 1510, 1516, 1517,
	1518, 1519, 1528, 1530, 1531, 1532, 1533, 1534, 1538, 1539,
	1541, 1554, 1555, 1561, 1569, 1570, 1577, 1578, 0, 1607,
	1610, 1619, 1624, 1627, 1633, 1635, 1642, 1647, 1649, 1686,
	1694, 1699, 365, 201, 1551, 1576, 1614, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 148, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 1660, 1524, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 1509, 161, 1656, 1691, 1588, 1602, 1672,
	1634, 346, 1527, 1676, 1477, 1506, 1693, 1512, 1515, 1596,
	1443, 1565, 284, 1503, 1444, 1427, 1482, 1431, 1494, 1432,
	1479, 206, 1475, 1637, 1568, 1674, 1547, 1589, 1599, 205,
	194, 1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673, 1546,
	0, 1683, 249, 1648, 947, 368, 334, 268, 950, 949,
	1542, 1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678, 1504,
	1590, 1679, 0, 0, 0, 0, 943, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 1586, 1670, 1497,
	948, 1537, 1595, 1698, 1430, 1582, 0, 1435, 1446, 1692,
	1663, 1488, 1489, 209, 0, 0, 0, 0, 0, 0,
	0, 1540, 1564, 1616, 1522, 0, 0, 363, 1601, 1611,
	1629, 1514, 300, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 1484, 0, 1579, 0, 0, 0, 1451, 1437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 0, 0, 1458, 1428, 1486, 1618,
	1429, 1426, 269, 1447, 1631, 1661, 1523, 238, 154, 1667,
	1521, 1520, 1605, 1452, 1641, 1507, 246, 1450, 155, 1445,
	1453, 1505, 280, 1615, 1623, 142, 158, 248, 1638, 1480,
	1496, 195, 1798, 310, 1591, 362, 946, 1572, 309, 250,
	355, 1606, 1669, 361, 1508, 341, 369, 373, 216, 1548,
	186, 331, 207, 203, 1487, 1628, 1434, 224, 299, 198,
	242, 1526, 1597, 1481, 191, 1609, 1580, 1643, 330, 352,
	160, 265, 353, 372, 177, 347, 266, 273, 188, 190,
	189, 172, 324, 351, 182, 193, 1639, 1622, 1645, 1474,
	1454, 1465, 1455, 1495, 1671, 233, 225, 1646, 1644, 366,
	144, 319, 318, 1511, 232, 1625, 145, 136, 306, 146,
	239, 163, 1650, 375, 176, 244, 348, 945, 219, 279,
	197, 1593, 288, 1493, 157, 302, 261, 263, 260, 264,
	222, 140, 147, 1621, 304, 321, 350, 178, 337, 138,
	139, 141, 149, 312, 150, 151, 1677, 255, 211, 215,
	226, 236, 1592, 308, 338, 367, 1583, 173, 166, 340,
	360, 183, 320, 323, 374, 1617, 168, 1665, 1640, 1574,
	1529, 1535, 1436, 0, 167, 1613, 1485, 1500, 1473, 1587,
	1472, 221, 1604, 358, 359, 196, 376, 1448, 1685, 169,
	1449, 1684, 276, 283, 275, 1688, 354, 1666, 1575, 1560,
	1558, 1441, 1664, 1573, 1559, 245, 214, 228, 297, 252,
	298, 229, 271, 270, 272, 253, 1562, 0, 164, 0,
	335, 1675, 1700, 339, 180, 1467, 1632, 349, 143, 303,
	181, 220, 212, 296, 274, 174, 231, 333, 243, 251,
	1608, 1697, 287, 311, 185, 364, 332, 208, 1463, 1466,
	1461, 1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620, 1456,
	0, 1658, 1659, 0, 1553, 1668, 1442, 0, 1636, 152,
	153, 1600, 1695, 1513, 192, 131, 1438, 1439, 1440, 132,
	1543, 1544, 133, 134, 1654, 1653, 1652, 1655, 135, 1689,
	1687, 1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584, 1585,
	1630, 1603, 1612, 1545, 293, 165, 175, 184, 202, 200,
	213, 240, 262, 267, 292, 322, 327, 342, 343, 344,
	345, 204, 0, 0, 0, 0, 0, 1571, 159, 170,
	247, 1696, 305, 218, 1425, 1433, 1460, 1468, 1469, 1470,
	1471, 1476, 1483, 0, 1490, 1498, 1501, 1502, 1510, 1516,
	1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533, 1534, 1538,
	1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577, 1578, 0,
	1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642, 1647, 1649,
	1686, 1694, 1699, 365, 201, 1551, 1576, 1614, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 148, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 1660, 1524, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1509, 161, 1656, 1691, 1588, 1602,
	1672, 1634, 346, 1527, 1676, 1477, 1506, 1693, 1512, 1515,
	1596, 1443, 1565, 284, 1503, 1444, 1427, 1482, 1431, 1494,
	1432, 1479, 206, 1475, 1637, 1568, 1674, 1547, 1589, 1599,
	205, 194, 1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673,
	1546, 0, 1683, 249, 1648, 0, 368, 334, 268, 0,
	0, 1542, 1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678,
	1504, 1590, 1679, 0, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 1586, 1670,
	1497, 0, 1537, 1595, 1698, 1430, 1582, 0, 1435, 1446,
	1692, 1663, 1488, 1489, 209, 0, 0, 0, 0, 0,
	0, 0, 1540, 1564, 1616, 1522, 0, 0, 363, 1601,
	1611, 1629, 1514, 300, 223, 0, 0, 0, 0, 0,
	0, 2552, 0, 1484, 0, 1579, 0, 0, 0, 1451,
	1437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 1458, 1428, 1486,
	1618, 1429, 1426, 269, 1447, 1631, 1661, 1523, 238, 154,
	1667, 1521, 1520, 1605, 1452, 1641, 1507, 246, 1450, 155,
	1445, 1453, 1505, 280, 1615, 1623, 142, 158, 248, 1638,
	1480, 1496, 195, 0, 310, 1591, 362, 1839, 1572, 309,
	250, 355, 1606, 1669, 361, 1508, 341, 369, 373, 216,
	1548, 186, 331, 207, 203, 1487, 1628, 1434, 224, 299,
	198, 242, 1526, 1597, 1481, 191, 1609, 1580, 1643, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 1639, 1622, 1645,
	1474, 1454, 1465, 1455, 1495, 1671, 233, 225, 1646, 1644,
	366, 144, 319, 318, 1511, 232, 1625, 145, 136, 306,
	146, 239, 163, 1650, 375, 176, 244, 348, 1838, 219,
	279, 197, 1593, 288, 1493, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 1621, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 1677, 255, 211,
	215, 226, 236, 1592, 308, 338, 367, 1583, 173, 166,
	340, 360, 183, 320, 323, 374, 1617, 168, 1665, 1640,
	1574, 1529, 1535, 1436, 0, 167, 1613, 1485, 1500, 1473,
	1587, 1472, 221, 1604, 358, 359, 196, 376, 1448, 1685,
	169, 1449, 1684, 276, 283, 275, 1688, 354, 1666, 1575,
	1560, 1558, 1441, 1664, 1573, 1559, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 1562, 0, 164,
	0, 335, 1675, 1700, 339, 180, 1467, 1632, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 1608, 1697, 287, 311, 185, 364, 332, 208, 1463,
	1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620,
	1456, 0, 1658, 1659, 0, 1553, 1668, 1442, 0, 1636,
	152, 153, 1600, 1695, 1513, 192, 131, 1438, 1439, 1440,
	132, 1543, 1544, 133, 134, 1654, 1653, 1652, 1655, 135,
	1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584,
	1585, 1630, 1603, 1612, 1545, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 1571, 159,
	170, 247, 1696, 305, 218, 1425, 1433, 1460, 1468, 1469,
	1470, 1471, 1476, 1483, 0, 1490, 1498, 1501, 1502, 1510,
	1516, 1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533, 1534,
	1538, 1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577, 1578,
	0, 1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642, 1647,
	1649, 1686, 1694, 1699, 365, 201, 1551, 1576, 1614, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 148, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 1660, 1524, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 1509, 161, 1656, 1691, 1588,
	1602, 1672, 1634, 346, 1527, 1676, 1477, 1506, 1693, 1512,
	1515, 1596, 1443, 1565, 284, 1503, 1444, 1427, 1482, 1431,
	1494, 1432, 1479, 206, 1475, 1637, 1568, 1674, 1547, 1589,
	1599, 205, 194, 1557, 1556, 1662, 1492, 1491, 1594, 1651,
	1673, 1546, 0, 1683, 249, 1648, 0, 368, 334, 268,
	0, 0, 1542, 1657, 1563, 1626, 1525, 1598, 1459, 1581,
	1678, 1504, 1590, 1679, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 1586,
	1670, 1497, 0, 1537, 1595, 1698, 1430, 1582, 0, 1435,
	1446, 1692, 1663, 1488, 1489, 209, 0, 0, 0, 0,
	0, 0, 0, 1540, 1564, 1616, 1522, 0, 0, 363,
	1601, 1611, 1629, 1514, 300, 223, 0, 0, 0, 0,
	0, 0, 1833, 0, 1484, 0, 1579, 0, 0, 0,
	1451, 1437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 0, 0, 1458, 1428,
	1486, 1618, 1429, 1426, 269, 1447, 1631, 1661, 1523, 238,
	154, 1667, 1521, 1520, 1605, 1452, 1641, 1507, 246, 1450,
	155, 1445, 1453, 1505, 280, 1615, 1623, 142, 158, 248,
	1638, 1480, 1496, 195, 0, 310, 1591, 362, 1839, 1572,
	309, 250, 355, 1606, 1669, 361, 1508, 341, 369, 373,
	216, 1548, 186, 331, 207, 203, 1487, 1628, 1434, 224,
	299, 198, 242, 1526, 1597, 1481, 191, 1609, 1580, 1643,
	330, 352, 160, 265, 353, 372, 177, 347, 266, 273,
	188, 190, 189, 172, 324, 351, 182, 193, 1639, 1622,
	1645, 1474, 1454, 1465, 1455, 1495, 1671, 233, 225, 1646,
	1644, 366, 144, 319, 318, 1511, 232, 1625, 145, 136,
	306, 146, 239, 163, 1650, 375, 176, 244, 348, 1838,
	219, 279, 197, 1593, 288, 1493, 157, 302, 261, 263,
	260, 264, 222, 140, 147, 1621, 304, 321, 350, 178,
	337, 138, 139, 141, 149, 312, 150, 151, 1677, 255,
	211, 215, 226, 236, 1592, 308, 338, 367, 1583, 173,
	166, 340, 360, 183, 320, 323, 374, 1617, 168, 1665,
	1640, 1574, 1529, 1535, 1436, 0, 167, 1613, 1485, 1500,
	1473, 1587, 1472, 221, 1604, 358, 359, 196, 376, 1448,
	1685, 169, 1449, 1684, 276, 283, 275, 1688, 354, 1666,
	1575, 1560, 1558, 1441, 1664, 1573, 1559, 245, 214, 228,
	297, 252, 298, 229, 271, 270, 272, 253, 1562, 0,
	164, 0, 335, 1675, 1700, 339, 180, 1467, 1632, 349,
	143, 303, 181, 220, 212, 296, 274, 174, 231, 333,
	243, 251, 1608, 1697, 287, 311, 185, 364, 332, 208,
	1463, 1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681, 1682,
	1620, 1456, 0, 1658, 1659, 0, 1553, 1668, 1442, 0,
	1636, 152, 153, 1600, 1695, 1513, 192, 131, 1438, 1439,
	1440, 132, 1543, 1544, 133, 134, 1654, 1653, 1652, 1655,
	135, 1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550, 1552,
	1584, 1585, 1630, 1603, 1612, 1545, 293, 165, 175, 184,
	202, 200, 213, 240, 262, 267, 292, 322, 327, 342,
	343, 344, 345, 204, 0, 0, 0, 0, 0, 1571,
	159, 170, 247, 1696, 305, 218, 1425, 1433, 1460, 1468,
	1469, 1470, 1471, 1476, 1483, 0, 1490, 1498, 1501, 1502,
	1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533,
	1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577,
	1578, 0, 1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642,
	1647, 1649, 1686, 1694, 1699, 365, 201, 1551, 1576, 1614,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 148,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 1660, 1524, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1509, 161, 1656, 1691,
	1588, 1602, 1672, 1634, 346, 1527, 1676, 1477, 1506, 1693,
	1512, 1515, 1596, 1443, 1565, 284, 1503, 1444, 1427, 1482,
	1431, 1494, 1432, 1479, 206, 1475, 1637, 1568, 1674, 1547,
	1589, 1599, 205, 194, 1557, 1556, 1662, 1492, 1491, 1594,
	1651, 1673, 1546, 0, 1683, 249, 1648, 0, 368, 334,
	268, 0, 0, 1542, 1657, 1563, 1626, 1525, 1598, 1459,
	1581, 1678, 1504, 1590, 1679, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1586, 1670, 1497, 0, 1537, 1595, 1698, 1430, 1582, 0,
	1435, 1446, 1692, 1663, 1488, 1489, 209, 0, 0, 0,
	0, 0, 0, 0, 1540, 1564, 1616, 1522, 0, 0,
	363, 1601, 1611, 1629, 1514, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 1484, 0, 1579, 0, 0,
	0, 1451, 1437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 1458,
	1428, 1486, 1618, 1429, 1426, 269, 1447, 1631, 1661, 1523,
	238, 154, 1667, 1521, 1520, 1605, 1452, 1641, 1507, 246,
	1450, 155, 1445, 1453, 1505, 280, 1615, 1623, 142, 158,
	248, 1638, 1480, 1496, 195, 0, 310, 1591, 362, 1839,
	1572, 309, 250, 355, 1606, 1669, 361, 1508, 341, 369,
	373, 216, 1548, 186, 331, 207, 203, 1487, 1628, 1434,
	224, 299, 198, 242, 1526, 1597, 1481, 191, 1609, 1580,
	1643, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 1639,
	1622, 1645, 1474, 1454, 1465, 1455, 1495, 1671, 233, 225,
	1646, 1644, 366, 144, 319, 318, 1511, 232, 1625, 145,
	136, 306, 146, 239, 163, 1650, 375, 176, 244, 348,
	1838, 219, 279, 197, 1593, 288, 1493, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 1621, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 1677,
	255, 211, 215, 226, 236, 1592, 308, 338, 367, 1583,
	173, 166, 340, 360, 183, 320, 323, 374, 1617, 168,
	1665, 1640, 1574, 1529, 1535, 1436, 0, 167, 1613, 1485,
	1500, 1473, 1587, 1472, 221, 1604, 358, 359, 196, 376,
	1448, 1685, 169, 1449, 1684, 276, 283, 275, 1688, 354,
	1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 1562,
	0, 164, 0, 335, 1675, 1700, 339, 180, 1467, 1632,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 1608, 1697, 287, 311, 185, 364, 332,
	208, 1463, 1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681,
	1682, 1620, 1456, 0, 1658, 1659, 0, 1553, 1668, 1442,
	0, 1636, 152, 153, 1600, 1695, 1513, 192, 131, 1438,
	1439, 1440, 132, 1543, 1544, 133, 134, 1654, 1653, 1652,
	1655, 135, 1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550,
	1552, 1584, 1585, 1630, 1603, 1612, 1545, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	1571, 159, 170, 247, 1696, 305, 218, 1425, 1433, 1460,
	1468, 1469, 1470, 1471, 1476, 1483, 0, 1490, 1498, 1501,
	1502, 1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531, 1532,
	1533, 1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569, 1570,
	1577, 1578, 0, 1607, 1610, 1619, 1624, 1627, 1633, 1635,
	1642, 1647, 1649, 1686, 1694, 1699, 365, 201, 1551, 1576,
	1614, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	148, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 1660, 1524, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 1509, 161, 1656,
	1691, 1588, 1602, 827, 0, 346, 892, 831, 674, 697,
	840, 703, 705, 768, 650, 745, 284, 694, 651, 0,
	0, 642, 887, 643, 675, 206, 885, 801, 746, 829,
	731, 761, 771, 205, 194, 738, 737, 818, 686, 685,
	766, 814, 828, 0, 0, 925, 249, 0, 947, 368,
	334, 268, 950, 949, 729, 0, 899, 912, 714, 770,
	662, 757, 833, 695, 762, 834, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 907, 921, 888, 948, 724, 767, 845, 641, 904,
	0, 646, 876, 0, 819, 682, 683, 209, 0, 0,
	0, 0, 0, 0, 0, 727, 744, 786, 711, 0,
	0, 363, 773, 782, 796, 704, 300, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 903, 0,
	0, 0, 656, 872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 893, 0, 0, 0,
	661, 639, 680, 788, 640, 638, 269, 653, 914, 817,
	712, 238, 154, 823, 710, 891, 776, 657, 805, 698,
	246, 655, 155, 652, 658, 696, 280, 785, 791, 142,
	158, 248, 802, 676, 689, 195, 2621, 310, 763, 362,
	2623, 749, 309, 250, 355, 777, 825, 361, 699, 341,
	369, 373, 216, 732, 186, 331, 207, 203, 681, 795,
	645, 224, 299, 198, 242, 715, 769, 677, 191, 780,
	756, 807, 330, 352, 160, 265, 353, 372, 177, 347,
	266, 273, 188, 190, 189, 172, 324, 351, 182, 193,
	803, 790, 809, 672, 659, 664, 660, 688, 826, 233,
	225, 810, 808, 366, 144, 319, 318, 702, 232, 793,
	145, 136, 306, 146, 239, 163, 813, 375, 176, 244,
	348, 2622, 219, 279, 197, 765, 288, 687, 157, 302,
	261, 263, 260, 264, 222, 140, 147, 789, 304, 321,
	350, 178, 337, 138, 139, 141, 149, 312, 150, 151,
	832, 255, 211, 215, 226, 236, 764, 308, 338, 367,
	758, 173, 166, 340, 360, 183, 320, 323, 374, 787,
	168, 821, 804, 751, 717, 723, 647, 0, 167, 783,
	679, 691, 671, 759, 670, 221, 775, 358, 359, 196,
	376, 877, 836, 169, 654, 835, 276, 283, 275, 838,
	354, 822, 752, 741, 739, 648, 820, 750, 740, 245,
	214, 228, 297, 252, 298, 229, 271, 270, 272, 253,
	743, 0, 164, 0, 335, 830, 847, 339, 180, 665,
	797, 349, 143, 303, 181, 220, 212, 296, 274, 174,
	231, 333, 243, 251, 779, 844, 287, 311, 185, 364,
	332, 208, 882, 884, 880, 883, 881, 900, 901, 922,
	923, 924, 911, 878, 0, 919, 920, 0, 734, 824,
	649, 0, 800, 152, 153, 772, 842, 890, 192, 131,
	873, 874, 875, 132, 894, 895, 133, 134, 917, 916,
	915, 918, 135, 927, 926, 928, 879, 886, 889, 896,
	897, 898, 905, 906, 913, 908, 909, 730, 293, 165,
	175, 184, 202, 200, 213, 240, 262, 267, 292, 322,
	327, 342, 343, 344, 345, 204, 0, 0, 0, 0,
	0, 902, 159, 170, 247, 843, 305, 218, 637, 644,
	663, 666, 667, 668, 669, 673, 678, 0, 684, 690,
	692, 693, 701, 706, 707, 708, 709, 716, 718, 719,
	720, 721, 722, 725, 726, 728, 735, 736, 742, 747,
	748, 754, 755, 0, 778, 781, 910, 792, 794, 798,
	799, 806, 811, 812, 837, 841, 846, 365, 201, 733,
	753, 784, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 148, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 816, 713, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 700, 161,
	815, 839, 760, 774, 827, 0, 346, 892, 831, 674,
	697, 840, 703, 705, 768, 650, 745, 284, 694, 651,
	0, 0, 642, 887, 643, 675, 206, 885, 801, 746,
	829, 731, 761, 771, 205, 194, 738, 737, 818, 686,
	685, 766, 814, 828, 0, 0, 925, 249, 0, 0,
	368, 334, 268, 0, 0, 729, 0, 899, 912, 714,
	770, 662, 757, 833, 695, 762, 834, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 907, 921, 888, 0, 724, 767, 845, 641,
	904, 0, 646, 876, 0, 819, 682, 683, 209, 0,
	0, 0, 0, 0, 0, 0, 727, 744, 786, 711,
	0, 0, 363, 773, 782, 796, 704, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 903,
	0, 0, 0, 656, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 893, 0, 0,
	0, 661, 639, 680, 788, 640, 638, 269, 653, 914,
	817, 712, 238, 154, 823, 710, 891, 776, 657, 805,
	698, 246, 655, 155, 652, 658, 696, 280, 785, 791,
	142, 158, 248, 802, 676, 689, 195, 0, 310, 763,
	362, 871, 749, 309, 250, 355, 777, 825, 361, 699,
	341, 369, 373, 216, 732, 186, 331, 207, 203, 681,
	795, 645, 224, 299, 198, 242, 715, 769, 677, 191,
	780, 756, 807, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 803, 790, 809, 672, 659, 664, 660, 688, 826,
	233, 225, 810, 808, 366, 144, 319, 318, 702, 232,
	793, 145, 136, 306, 146, 239, 163, 813, 375, 176,
	244, 348, 870, 219, 279, 197, 765, 288, 687, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 789, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 832, 255, 211, 215, 226, 236, 764, 308, 338,
	367, 758, 173, 166, 340, 360, 183, 320, 323, 374,
	787, 168, 821, 804, 751, 717, 723, 647, 0, 167,
	783, 679, 691, 671, 759, 670, 221, 775, 358, 359,
	196, 376, 877, 836, 169, 654, 835, 276, 283, 275,
	838, 354, 822, 752, 741, 739, 648, 820, 750, 740,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 743, 0, 164, 0, 335, 830, 847, 339, 180,
	665, 797, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 779, 844, 287, 311, 185,
	364, 332, 208, 882, 884, 880, 883, 881, 900, 901,
	922, 923, 924, 911, 878, 0, 919, 920, 0, 734,
	824, 649, 0, 800, 152, 153, 772, 842, 890, 192,
	131, 873, 874, 875, 132, 894, 895, 133, 134, 917,
	916, 915, 918, 135, 927, 926, 928, 879, 886, 889,
	896, 897, 898, 905, 906, 913, 908, 909, 730, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 902, 159, 170, 247, 843, 305, 218, 637,
	644, 663, 666, 667, 668, 669, 673, 678, 0, 684,
	690, 692, 693, 701, 706, 707, 708, 709, 716, 718,
	719, 720, 721, 722, 725, 726, 728, 735, 736, 742,
	747, 748, 754, 755, 0, 778, 781, 910, 792, 794,
	798, 799, 806, 811, 812, 837, 841, 846, 365, 201,
	733, 753, 784, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 148, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 816, 713,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 700,
	161, 815, 839, 760, 774, 827, 0, 346, 892, 831,
	674, 697, 840, 703, 705, 768, 650, 745, 284, 694,
	651, 0, 0, 642, 887, 643, 675, 206, 885, 801,
	746, 829, 731, 761, 771, 205, 194, 738, 737, 818,
	686, 685, 766, 814, 828, 0, 0, 925, 249, 0,
	0, 368, 334, 268, 0, 0, 729, 0, 899, 912,
	714, 770, 662, 757, 833, 695, 762, 834, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 907, 921, 888, 0, 724, 767, 845,
	641, 904, 0, 646, 876, 0, 819, 682, 683, 209,
	0, 0, 0, 0, 0, 0, 0, 727, 744, 786,
	711, 0, 0, 363, 773, 782, 796, 704, 300, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	903, 0, 0, 0, 656, 872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 893, 0,
	0, 0, 661, 639, 680, 788, 640, 638, 269, 653,
	914, 817, 712, 238, 154, 823, 710, 891, 776, 657,
	805, 698, 246, 655, 155, 652, 658, 696, 280, 785,
	791, 142, 158, 248, 802, 676, 689, 195, 0, 310,
	763, 362, 871, 749, 309, 250, 355, 777, 825, 361,
	699, 341, 369, 373, 216, 732, 186, 331, 207, 203,
	681, 795, 645, 224, 299, 198, 242, 715, 769, 677,
	191, 780, 756, 807, 330, 352, 160, 265, 353, 372,
	177, 347, 266, 273, 188, 190, 189, 172, 324, 351,
	182, 193, 803, 790, 809, 672, 659, 664, 660, 688,
	826, 233, 225, 810, 808, 366, 144, 319, 318, 702,
	232, 793, 145, 136, 306, 146, 239, 163, 813, 375,
	176, 244, 348, 870, 219, 279, 197, 765, 288, 687,
	157, 302, 261, 263, 260, 264, 222, 140, 147, 789,
	304, 321, 350, 178, 337, 138, 139, 141, 149, 312,
	150, 151, 832, 255, 211, 215, 226, 236, 764, 308,
	338, 367, 758, 173, 166, 340, 360, 183, 320, 323,
	374, 787, 168, 821, 804, 751, 717, 723, 647, 0,
	167, 783, 679, 691, 671, 759, 670, 221, 775, 358,
	359, 196, 376, 877, 836, 169, 865, 835, 276, 283,
	275, 838, 354, 822, 752, 741, 739, 648, 820, 750,
	740, 245, 214, 228, 297, 252, 298, 229, 271, 270,
	272, 861, 743, 0, 164, 0, 335, 830, 847, 339,
	180, 665, 797, 349, 143, 303, 181, 220, 212, 296,
	866, 864, 855, 856, 243, 251, 779, 844, 287, 311,
	185, 364, 332, 208, 882, 884, 880, 883, 881, 900,
	901, 922, 923, 924, 911, 878, 0, 919, 920, 0,
	734, 824, 649, 0, 800, 152, 153, 772, 842, 890,
	192, 131, 873, 874, 875, 132, 894, 895, 133, 134,
	917, 916, 915, 918, 135, 927, 926, 928, 879, 886,
	889, 896, 897, 898, 905, 906, 913, 908, 909, 730,
	293, 165, 175, 184, 202, 200, 213, 240, 262, 267,
	292, 322, 327, 342, 343, 344, 345, 204, 0, 0,
	0, 0, 0, 902, 159, 170, 247, 843, 305, 218,
	637, 644, 663, 666, 667, 668, 669, 673, 678, 0,
	684, 690, 692, 693, 701, 706, 707, 708, 709, 716,
	718, 719, 720, 721, 722, 725, 726, 728, 735, 736,
	742, 747, 748, 754, 755, 0, 778, 781, 910, 792,
	794, 798, 799, 806, 811, 812, 837, 841, 846, 365,
	201, 733, 753, 784, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	862, 863, 301, 148, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 816,
	713, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	700, 161, 815, 839, 760, 774, 827, 0, 346, 892,
	831, 674, 697, 840, 703, 705, 768, 650, 745, 284,
	694, 651, 0, 0, 642, 887, 643, 675, 206, 885,
	801, 746, 829, 731, 761, 771, 205, 194, 738, 737,
	818, 686, 685, 766, 814, 828, 0, 0, 925, 249,
	0, 0, 368, 334, 268, 0, 0, 729, 0, 899,
	912, 714, 770, 662, 757, 833, 695, 762, 834, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 907, 921, 888, 0, 724, 767,
	845, 641, 904, 0, 646, 876, 0, 819, 682, 683,
	209, 0, 0, 0, 0, 0, 0, 0, 727, 744,
	786, 711, 0, 0, 363, 773, 782, 796, 704, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 903, 0, 0, 0, 656, 872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 893,
	0, 0, 0, 661, 639, 680, 788, 640, 638, 269,
	653, 914, 817, 712, 238, 154, 823, 710, 891, 776,
	657, 805, 698, 246, 655, 155, 652, 658, 696, 280,
	785, 791, 142, 158, 248, 802, 676, 689, 195, 0,
	310, 763, 362, 871, 749, 309, 250, 355, 777, 825,
	361, 699, 341, 369, 373, 216, 732, 186, 331, 207,
	203, 681, 795, 645, 224, 299, 198, 242, 715, 769,
	677, 191, 780, 756, 807, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 803, 790, 809, 672, 659, 664, 660,
	688, 826, 233, 225, 810, 808, 366, 144, 319, 318,
	702, 232, 793, 145, 136, 306, 146, 239, 163, 813,
	375, 176, 244, 348, 870, 219, 279, 197, 765, 288,
	687, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	789, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 832, 255, 211, 215, 226, 236, 764,
	308, 338, 367, 758, 173, 166, 340, 1300, 183, 320,
	323, 374, 787, 168, 821, 804, 751, 717, 723, 647,
	0, 167, 783, 679, 691, 671, 759, 670, 221, 775,
	358, 359, 196, 376, 877, 836, 169, 654, 835, 276,
	283, 275, 838, 354, 822, 752, 741, 739, 648, 820,
	750, 740, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 743, 0, 164, 0, 335, 830, 847,
	339, 180, 665, 797, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 779, 844, 287,
	311, 185, 364, 332, 208, 882, 884, 880, 883, 881,
	900, 901, 922, 923, 924, 911, 878, 0, 919, 920,
	0, 734, 824, 649, 0, 800, 152, 153, 772, 842,
	890, 192, 131, 873, 874, 875, 132, 894, 895, 133,
	134, 917, 916, 915, 918, 135, 927, 926, 928, 879,
	886, 889, 896, 897, 898, 905, 906, 913, 908, 909,
	730, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 902, 159, 170, 247, 843, 305,
	218, 637, 644, 663, 666, 667, 668, 669, 673, 678,
	0, 684, 690, 692, 693, 701, 706, 707, 708, 709,
	716, 718, 719, 720, 721, 722, 725, 726, 728, 735,
	736, 742, 747, 748, 754, 755, 0, 778, 781, 910,
	792, 794, 798, 799, 806, 811, 812, 837, 841, 846,
	365, 201, 733, 753, 784, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 148, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	816, 713, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 700, 161, 815, 839, 760, 774, 827, 0, 346,
	892, 831, 674, 697, 840, 703, 705, 768, 650, 745,
	284, 694, 651, 0, 0, 642, 887, 643, 675, 206,
	885, 801, 746, 829, 731, 761, 771, 205, 194, 738,
	737, 818, 686, 685, 766, 814, 828, 0, 0, 925,
	249, 0, 0, 368, 334, 268, 0, 0, 729, 0,
	899, 912, 714, 770, 662, 757, 833, 695, 762, 834,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 907, 921, 888, 0, 724,
	767, 845, 641, 904, 0, 646, 876, 0, 819, 682,
	683, 209, 0, 0, 0, 0, 0, 0, 0, 727,
	744, 786, 711, 0, 0, 363, 773, 782, 796, 704,
	300, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 903, 0, 0, 0, 656, 872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	893, 0, 0, 0, 661, 639, 680, 788, 640, 638,
	269, 653, 914, 817, 712, 238, 154, 823, 710, 891,
	776, 657, 805, 698, 246, 655, 155, 652, 658, 696,
	280, 785, 791, 142, 158, 248, 802, 676, 689, 195,
	0, 310, 763, 362, 871, 749, 309, 250, 355, 777,
	825, 361, 699, 341, 369, 373, 216, 732, 186, 331,
	207, 203, 681, 795, 645, 224, 299, 198, 242, 715,
	769, 677, 191, 780, 756, 807, 330, 352, 160, 265,
	353, 372, 177, 347, 266, 273, 188, 190, 189, 172,
	324, 351, 182, 193, 803, 790, 809, 672, 659, 664,
	660, 688, 826, 233, 225, 810, 808, 366, 144, 319,
	318, 702, 232, 793, 145, 136, 306, 146, 239, 163,
	813, 375, 176, 244, 348, 870, 219, 279, 197, 765,
	288, 687, 157, 302, 261, 263, 260, 264, 222, 140,
	147, 789, 304, 321, 350, 178, 337, 138, 139, 141,
	149, 312, 150, 151, 832, 255, 211, 215, 226, 236,
	764, 308, 338, 367, 758, 173, 166, 340, 852, 183,
	320, 323, 374, 787, 168, 821, 804, 751, 717, 723,
	647, 0, 167, 783, 679, 691, 671, 759, 670, 221,
	775, 358, 359, 196, 376, 877, 836, 169, 865, 835,
	276, 283, 275, 838, 354, 822, 752, 741, 739, 648,
	820, 750, 740, 245, 214, 228, 297, 252, 298, 229,
	271, 270, 272, 861, 743, 0, 164, 0, 335, 830,
	847, 339, 180, 665, 797, 349, 143, 303, 181, 220,
	212, 296, 866, 864, 855, 856, 243, 251, 779, 844,
	287, 311, 185, 364, 332, 208, 882, 884, 880, 883,
	881, 900, 901, 922, 923, 924, 911, 878, 0, 919,
	920, 0, 734, 824, 649, 0, 800, 152, 153, 772,
	842, 890, 192, 131, 873, 874, 875, 132, 894, 895,
	133, 134, 917, 916, 915, 918, 135, 927, 926, 928,
	879, 886, 889, 896, 897, 898, 905, 906, 913, 908,
	909, 730, 293, 165, 175, 184, 202, 200, 213, 240,
	262, 267, 292, 322, 327, 342, 343, 344, 345, 204,
	0, 0, 0, 0, 0, 902, 159, 170, 247, 843,
	305, 218, 637, 644, 663, 666, 667, 668, 669, 673,
	678, 0, 684, 690, 692, 693, 701, 706, 707, 708,
	709, 716, 718, 719, 720, 721, 722, 725, 726, 728,
	735, 736, 742, 747, 748, 754, 755, 0, 778, 781,
	910, 792, 794, 798, 799, 806, 811, 812, 837, 841,
	846, 365, 201, 733, 753, 784, 171, 179, 187, 199,
	210, 217, 227, 230, 234, 235, 237, 241, 254, 256,
	257, 258, 259, 277, 278, 281, 282, 285, 286, 289,
	290, 291, 862, 863, 301, 148, 307, 313, 314, 315,
	316, 317, 325, 326, 328, 329, 336, 356, 357, 370,
	371, 816, 713, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 700, 161, 815, 839, 760, 774, 1672, 1634,
	346, 1527, 1676, 1477, 1506, 1693, 1512, 1515, 1596, 1443,
	1565, 284, 1503, 1444, 1427, 1482, 1431, 1494, 1432, 1479,
	206, 1475, 1637, 1568, 1674, 1547, 1589, 1599, 205, 194,
	1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673, 1546, 0,
	1683, 249, 1648, 0, 368, 334, 268, 0, 0, 1542,
	1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678, 1504, 1590,
	1679, 0, 0, 0, 0, 2378, 0, 2373, 2374, 0,
	0, 0, 0, 0, 2375, 0, 1586, 1670, 1497, 0,
	1537, 1595, 1698, 1430, 1582, 0, 1435, 1446, 1692, 1663,
	1488, 1489, 209, 0, 0, 0, 0, 0, 0, 0,
	1540, 1564, 1616, 1522, 0, 0, 363, 1601, 1611, 1629,
	1514, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 1579, 0, 0, 0, 1451, 1437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 0, 0, 1458, 1428, 1486, 1618, 1429,
	1426, 269, 1447, 1631, 1661, 1523, 238, 0, 1667, 1521,
	1520, 1605, 1452, 1641, 1507, 246, 1450, 155, 1445, 1453,
	1505, 280, 1615, 1623, 0, 158, 248, 1638, 1480, 1496,
	195, 0, 310, 1591, 362, 0, 1572, 309, 250, 355,
	1606, 1669, 361, 1508, 341, 369, 373, 216, 1548, 186,
	331, 207, 203, 1487, 1628, 1434, 224, 299, 198, 242,
	1526, 1597, 1481, 191, 1609, 1580, 1643, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 1639, 1622, 1645, 1474, 1454,
	1465, 1455, 1495, 1671, 233, 225, 1646, 1644, 366, 0,
	319, 318, 1511, 232, 1625, 0, 0, 306, 2377, 239,
	163, 1650, 375, 176, 244, 348, 0, 219, 279, 197,
	1593, 288, 1493, 157, 302, 261, 263, 260, 264, 222,
	0, 0, 1621, 304, 321, 350, 178, 337, 2376, 0,
	0, 0, 312, 0, 0, 1677, 255, 211, 215, 226,
	236, 1592, 308, 338, 367, 1583, 173, 166, 340, 360,
	183, 320, 323, 374, 1617, 168, 1665, 1640, 1574, 1529,
	1535, 1436, 0, 167, 1613, 1485, 1500, 1473, 1587, 1472,
	221, 1604, 358, 359, 196, 376, 1448, 1685, 169, 1449,
	1684, 276, 283, 275, 1688, 354, 1666, 1575, 1560, 1558,
	1441, 1664, 1573, 1559, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 1562, 0, 164, 0, 335,
	1675, 1700, 339, 180, 1467, 1632, 349, 0, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 1608,
	1697, 287, 311, 185, 364, 332, 208, 1463, 1466, 1461,
	1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620, 1456, 0,
	1658, 1659, 0, 1553, 1668, 1442, 0, 1636, 0, 0,
	1600, 1695, 1513, 192, 0, 1438, 1439, 1440, 0, 1543,
	1544, 0, 0, 1654, 1653, 1652, 1655, 0, 1689, 1687,
	1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584, 1585, 1630,
	1603, 1612, 1545, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 345,
	204, 0, 0, 0, 0, 0, 1571, 159, 170, 247,
	1696, 305, 218, 1425, 1433, 1460, 1468, 1469, 1470, 1471,
	1476, 1483, 0, 1490, 1498, 1501, 1502, 1510, 1516, 1517,
	1518, 1519, 1528, 1530, 1531, 1532, 1533, 1534, 1538, 1539,
	1541, 1554, 1555, 1561, 1569, 1570, 1577, 1578, 0, 1607,
	1610, 1619, 1624, 1627, 1633, 1635, 1642, 1647, 1649, 1686,
	1694, 1699, 365, 201, 1551, 1576, 1614, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 0, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 1660, 1524, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 1509, 161, 1656, 1691, 1588, 1602, 1672,
	1634, 346, 1527, 1676, 1477, 1506, 1693, 1512, 1515, 1596,
	1443, 1565, 284, 1503, 1444, 1427, 1482, 1431, 1494, 1432,
	1479, 206, 1475, 1637, 1568, 1674, 1547, 1589, 1599, 205,
	194, 1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673, 1546,
	0, 1683, 249, 1648, 0, 368, 334, 268, 0, 0,
	1542, 1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678, 1504,
	1590, 1679, 0, 0, 0, 0, 943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1586, 1670, 1497,
	0, 1537, 1595, 1698, 1430, 1582, 0, 1435, 1446, 1692,
	1663, 1488, 1489, 209, 0, 0, 0, 0, 0, 0,
	0, 1540, 1564, 1616, 1522, 0, 0, 363, 1601, 1611,
	1629, 1514, 300, 223, 0, 0, 0, 0, 0, 0,
	3032, 0, 1484, 0, 1579, 0, 0, 0, 1451, 1437,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 0, 0, 1458, 1428, 1486, 1618,
	1429, 1426, 269, 1447, 1631, 1661, 1523, 238, 0, 1667,
	1521, 1520, 1605, 1452, 1641, 1507, 246, 1450, 155, 1445,
	1453, 1505, 280, 1615, 1623, 0, 158, 248, 1638, 1480,
	1496, 195, 0, 310, 1591, 362, 0, 1572, 309, 250,
	355, 1606, 1669, 361, 1508, 341, 369, 373, 216, 1548,
	186, 331, 207, 203, 1487, 1628, 1434, 224, 299, 198,
	242, 1526, 1597, 1481, 191, 1609, 1580, 1643, 330, 352,
	160, 265, 353, 372, 177, 347, 266, 273, 188, 190,
	189, 172, 324, 351, 182, 193, 1639, 1622, 1645, 1474,
	1454, 1465, 1455, 1495, 1671, 233, 225, 1646, 1644, 366,
	0, 319, 318, 1511, 232, 1625, 0, 0, 306, 0,
	239, 163, 1650, 375, 176, 244, 348, 0, 219, 279,
	197, 1593, 288, 1493, 157, 302, 261, 263, 260, 264,
	222, 0, 0, 1621, 304, 321, 350, 178, 337, 0,
	0, 0, 0, 312, 0, 0, 1677, 255, 211, 215,
	226, 236, 1592, 308, 338, 367, 1583, 173, 166, 340,
	360, 183, 320, 323, 374, 1617, 168, 1665, 1640, 1574,
	1529, 1535, 1436, 0, 167, 1613, 1485, 1500, 1473, 1587,
	1472, 221, 1604, 358, 359, 196, 376, 1448, 1685, 169,
	1449, 1684, 276, 283, 275, 1688, 354, 1666, 1575, 1560,
	1558, 1441, 1664, 1573, 1559, 245, 214, 228, 297, 252,
	298, 229, 271, 270, 272, 253, 1562, 0, 164, 0,
	335, 1675, 1700, 339, 180, 1467, 1632, 349, 0, 303,
	181, 220, 212, 296, 274, 174, 231, 333, 243, 251,
	1608, 1697, 287, 311, 185, 364, 332, 208, 1463, 1466,
	1461, 1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620, 1456,
	0, 1658, 1659, 0, 1553, 1668, 1442, 0, 1636, 0,
	0, 1600, 1695, 1513, 192, 0, 1438, 1439, 1440, 0,
	1543, 1544, 0, 0, 1654, 1653, 1652, 1655, 0, 1689,
	1687, 1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584, 1585,
	1630, 1603, 1612, 1545, 293, 165, 175, 184, 202, 200,
	213, 240, 262, 267, 292, 322, 327, 342, 343, 344,
	345, 204, 0, 0, 0, 0, 0, 1571, 159, 170,
	247, 1696, 305, 218, 1425, 1433, 1460, 1468, 1469, 1470,
	1471, 1476, 1483, 0, 1490, 1498, 1501, 1502, 1510, 1516,
	1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533, 1534, 1538,
	1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577, 1578, 0,
	1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642, 1647, 1649,
	1686, 1694, 1699, 365, 201, 1551, 1576, 1614, 171, 179,
	187, 199, 210, 217, 227, 230, 234, 235, 237, 241,
	254, 256, 257, 258, 259, 277, 278, 281, 282, 285,
	286, 289, 290, 291, 294, 295, 301, 0, 307, 313,
	314, 315, 316, 317, 325, 326, 328, 329, 336, 356,
	357, 370, 371, 1660, 1524, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1509, 161, 1656, 1691, 1588, 1602,
	1672, 1634, 346, 1527, 1676, 1477, 1506, 1693, 1512, 1515,
	1596, 1443, 1565, 284, 1503, 1444, 1427, 1482, 1431, 1494,
	1432, 1479, 206, 1475, 1637, 1568, 1674, 1547, 1589, 1599,
	205, 194, 1557, 1556, 1662, 1492, 1491, 1594, 1651, 1673,
	1546, 0, 1683, 249, 1648, 0, 368, 334, 268, 0,
	0, 1542, 1657, 1563, 1626, 1525, 1598, 1459, 1581, 1678,
	1504, 1590, 1679, 0, 0, 0, 0, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1586, 1670,
	1497, 0, 1537, 1595, 1698, 1430, 1582, 0, 1435, 1446,
	1692, 1663, 1488, 1489, 209, 0, 0, 0, 0, 0,
	0, 0, 1540, 1564, 1616, 1522, 0, 0, 363, 1601,
	1611, 1629, 1514, 300, 223, 0, 0, 0, 0, 0,
	0, 2545, 0, 1484, 0, 1579, 0, 0, 0, 1451,
	1437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 1458, 1428, 1486,
	1618, 1429, 1426, 269, 1447, 1631, 1661, 1523, 238, 0,
	1667, 1521, 1520, 1605, 1452, 1641, 1507, 246, 1450, 155,
	1445, 1453, 1505, 280, 1615, 1623, 0, 158, 248, 1638,
	1480, 1496, 195, 0, 310, 1591, 362, 0, 1572, 309,
	250, 355, 1606, 1669, 361, 1508, 341, 369, 373, 216,
	1548, 186, 331, 207, 203, 1487, 1628, 1434, 224, 299,
	198, 242, 1526, 1597, 1481, 191, 1609, 1580, 1643, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 1639, 1622, 1645,
	1474, 1454, 1465, 1455, 1495, 1671, 233, 225, 1646, 1644,
	366, 0, 319, 318, 1511, 232, 1625, 0, 0, 306,
	0, 239, 163, 1650, 375, 176, 244, 348, 0, 219,
	279, 197, 1593, 288, 1493, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 1621, 304, 321, 350, 178, 337,
	0, 0, 0, 0, 312, 0, 0, 1677, 255, 211,
	215, 226, 236, 1592, 308, 338, 367, 1583, 173, 166,
	340, 360, 183, 320, 323, 374, 1617, 168, 1665, 1640,
	1574, 1529, 1535, 1436, 0, 167, 1613, 1485, 1500, 1473,
	1587, 1472, 221, 1604, 358, 359, 196, 376, 1448, 1685,
	169, 1449, 1684, 276, 283, 275, 1688, 354, 1666, 1575,
	1560, 1558, 1441, 1664, 1573, 1559, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 1562, 0, 164,
	0, 335, 1675, 1700, 339, 180, 1467, 1632, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 1608, 1697, 287, 311, 185, 364, 332, 208, 1463,
	1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681, 1682, 1620,
	1456, 0, 1658, 1659, 0, 1553, 1668, 1442, 0, 1636,
	0, 0, 1600, 1695, 1513, 192, 0, 1438, 1439, 1440,
	0, 1543, 1544, 0, 0, 1654, 1653, 1652, 1655, 0,
	1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550, 1552, 1584,
	1585, 1630, 1603, 1612, 1545, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 1571, 159,
	170, 247, 1696, 305, 218, 1425, 1433, 1460, 1468, 1469,
	1470, 1471, 1476, 1483, 0, 1490, 1498, 1501, 1502, 1510,
	1516, 1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533, 1534,
	1538, 1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577, 1578,
	0, 1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642, 1647,
	1649, 1686, 1694, 1699, 365, 201, 1551, 1576, 1614, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 0, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 1660, 1524, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 1509, 161, 1656, 1691, 1588,
	1602, 1672, 1634, 346, 1527, 1676, 1477, 1506, 1693, 1512,
	1515, 1596, 1443, 1565, 284, 1503, 1444, 1427, 1482, 1431,
	1494, 1432, 1479, 206, 1475, 1637, 1568, 1674, 1547, 1589,
	1599, 205, 194, 1557, 1556, 1662, 1492, 1491, 1594, 1651,
	1673, 1546, 0, 1683, 249, 1648, 0, 368, 334, 268,
	0, 0, 1542, 1657, 1563, 1626, 1525, 1598, 1459, 1581,
	1678, 1504, 1590, 1679, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1586,
	1670, 1497, 0, 1537, 1595, 1698, 1430, 1582, 0, 1435,
	1446, 1692, 1663, 1488, 1489, 209, 0, 0, 0, 0,
	0, 0, 0, 1540, 1564, 1616, 1522, 0, 0, 363,
	1601, 1611, 1629, 1514, 300, 223, 0, 0, 0, 0,
	0, 0, 2330, 0, 1484, 0, 1579, 0, 0, 0,
	1451, 1437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1536, 0, 0, 0, 1458, 1428,
	1486, 1618, 1429, 1426, 269, 1447, 1631, 1661, 1523, 238,
	0, 1667, 1521, 1520, 1605, 1452, 1641, 1507, 246, 1450,
	155, 1445, 1453, 1505, 280, 1615, 1623, 0, 158, 248,
	1638, 1480, 1496, 195, 0, 310, 1591, 362, 0, 1572,
	309, 250, 355, 1606, 1669, 361, 1508, 341, 369, 373,
	216, 1548, 186, 331, 207, 203, 1487, 1628, 1434, 224,
	299, 198, 242, 1526, 1597, 1481, 191, 1609, 1580, 1643,
	330, 352, 160, 265, 353, 372, 177, 347, 266, 273,
	188, 190, 189, 172, 324, 351, 182, 193, 1639, 1622,
	1645, 1474, 1454, 1465, 1455, 1495, 1671, 233, 225, 1646,
	1644, 366, 0, 319, 318, 1511, 232, 1625, 0, 0,
	306, 0, 239, 163, 1650, 375, 176, 244, 348, 0,
	219, 279, 197, 1593, 288, 1493, 157, 302, 261, 263,
	260, 264, 222, 0, 0, 1621, 304, 321, 350, 178,
	337, 0, 0, 0, 0, 312, 0, 0, 1677, 255,
	211, 215, 226, 236, 1592, 308, 338, 367, 1583, 173,
	166, 340, 360, 183, 320, 323, 374, 1617, 168, 1665,
	1640, 1574, 1529, 1535, 1436, 0, 167, 1613, 1485, 1500,
	1473, 1587, 1472, 221, 1604, 358, 359, 196, 376, 1448,
	1685, 169, 1449, 1684, 276, 283, 275, 1688, 354, 1666,
	1575, 1560, 1558, 1441, 1664, 1573, 1559, 245, 214, 228,
	297, 252, 298, 229, 271, 270, 272, 253, 1562, 0,
	164, 0, 335, 1675, 1700, 339, 180, 1467, 1632, 349,
	0, 303, 181, 220, 212, 296, 274, 174, 231, 333,
	243, 251, 1608, 1697, 287, 311, 185, 364, 332, 208,
	1463, 1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681, 1682,
	1620, 1456, 0, 1658, 1659, 0, 1553, 1668, 1442, 0,
	1636, 0, 0, 1600, 1695, 1513, 192, 0, 1438, 1439,
	1440, 0, 1543, 1544, 0, 0, 1654, 1653, 1652, 1655,
	0, 1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550, 1552,
	1584, 1585, 1630, 1603, 1612, 1545, 293, 165, 175, 184,
	202, 200, 213, 240, 262, 267, 292, 322, 327, 342,
	343, 344, 345, 204, 0, 0, 0, 0, 0, 1571,
	159, 170, 247, 1696, 305, 218, 1425, 1433, 1460, 1468,
	1469, 1470, 1471, 1476, 1483, 0, 1490, 1498, 1501, 1502,
	1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531, 1532, 1533,
	1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569, 1570, 1577,
	1578, 0, 1607, 1610, 1619, 1624, 1627, 1633, 1635, 1642,
	1647, 1649, 1686, 1694, 1699, 365, 201, 1551, 1576, 1614,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 0,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 1660, 1524, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1509, 161, 1656, 1691,
	1588, 1602, 1672, 1634, 346, 1527, 1676, 1477, 1506, 1693,
	1512, 1515, 1596, 1443, 1565, 284, 1503, 1444, 1427, 1482,
	1431, 1494, 1432, 1479, 206, 1475, 1637, 1568, 1674, 1547,
	1589, 1599, 205, 194, 1557, 1556, 1662, 1492, 1491, 1594,
	1651, 1673, 1546, 0, 1683, 249, 1648, 0, 368, 334,
	268, 0, 0, 1542, 1657, 1563, 1626, 1525, 1598, 1459,
	1581, 1678, 1504, 1590, 1679, 0, 0, 0, 0, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1586, 1670, 1497, 0, 1537, 1595, 1698, 1430, 1582, 0,
	1435, 1446, 1692, 1663, 1488, 1489, 209, 0, 0, 0,
	0, 0, 0, 0, 1540, 1564, 1616, 1522, 0, 0,
	363, 1601, 1611, 1629, 1514, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 1484, 0, 1579, 0, 0,
	0, 1451, 1437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1536, 0, 0, 0, 1458,
	1428, 1486, 1618, 1429, 1426, 269, 1447, 1631, 1661, 1523,
	238, 0, 1667, 1521, 1520, 1605, 1452, 1641, 1507, 246,
	1450, 155, 1445, 1453, 1505, 280, 1615, 1623, 0, 158,
	248, 1638, 1480, 1496, 195, 0, 310, 1591, 362, 0,
	1572, 309, 250, 355, 1606, 1669, 361, 1508, 341, 369,
	373, 216, 1548, 186, 331, 207, 203, 1487, 1628, 1434,
	224, 299, 198, 242, 1526, 1597, 1481, 191, 1609, 1580,
	1643, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 1639,
	1622, 1645, 1474, 1454, 1465, 1455, 1495, 1671, 233, 225,
	1646, 1644, 366, 0, 319, 318, 1511, 232, 1625, 0,
	0, 306, 0, 239, 163, 1650, 375, 176, 244, 348,
	0, 219, 279, 197, 1593, 288, 1493, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 1621, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 1677,
	255, 211, 215, 226, 236, 1592, 308, 338, 367, 1583,
	173, 166, 340, 360, 183, 320, 323, 374, 1617, 168,
	1665, 1640, 1574, 1529, 1535, 1436, 0, 167, 1613, 1485,
	1500, 1473, 1587, 1472, 221, 1604, 358, 359, 196, 376,
	1448, 1685, 169, 1449, 1684, 276, 283, 275, 1688, 354,
	1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 1562,
	0, 164, 0, 335, 1675, 1700, 339, 180, 1467, 1632,
	349, 1883, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 1608, 1697, 287, 311, 185, 364, 332,
	208, 1463, 1466, 1461, 1464, 1462, 1566, 1567, 1680, 1681,
	1682, 1620, 1456, 0, 1658, 1659, 0, 1553, 1668, 1442,
	0, 1636, 0, 0, 1600, 1695, 1513, 192, 0, 1438,
	1439, 1440, 0, 1543, 1544, 0, 0, 1654, 1653, 1652,
	1655, 0, 1689, 1687, 1690, 1457, 1478, 1499, 1549, 1550,
	1552, 1584, 1585, 1630, 1603, 1612, 1545, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	1571, 159, 170, 247, 1696, 305, 218, 1425, 1433, 1460,
	1468, 1469, 1470, 1471, 1476, 1483, 0, 1490, 1498, 1501,
	1502, 1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531, 1532,
	1533, 1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569, 1570,
	1577, 1578, 0, 1607, 1610, 1619, 1624, 1627, 1633, 1635,
	1642, 1647, 1649, 1686, 1694, 1699, 365, 201, 1551, 1576,
	1614, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	0, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 1660, 1524, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 1509, 161, 1656,
	1691, 1588, 1602, 1672, 1634, 346, 1527, 1676, 1477, 1506,
	1693, 1512, 1515, 1596, 1443, 1565, 284, 1503, 1444, 1427,
	1482, 1431, 1494, 1432, 1479, 206, 1475, 1637, 1568, 1674,
	1547, 1589, 1599, 205, 194, 1557, 1556, 1662, 1492, 1491,
	1594, 1651, 1673, 1546, 0, 1683, 249, 1648, 0, 368,
	334, 268, 0, 0, 1542, 1657, 1563, 1626, 1525, 1598,
	1459, 1581, 1678, 1504, 1590, 1679, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1586, 1670, 1497, 0, 1537, 1595, 1698, 1430, 1582,
	0, 1435, 1446, 1692, 1663, 1488, 1489, 209, 0, 0,
	0, 0, 0, 0, 0, 1540, 1564, 1616, 1522, 0,
	0, 363, 1601, 1611, 1629, 1514, 300, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 1484, 0, 1579, 0,
	0, 0, 1451, 1437, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1536, 0, 0, 0,
	1458, 1428, 1486, 1618, 1429, 1426, 269, 1447, 1631, 1661,
	1523, 238, 0, 1667, 1521, 1520, 1605, 1452, 1641, 1507,
	246, 1450, 155, 1445, 1453, 1505, 280, 1615, 1623, 0,
	158, 248, 1638, 1480, 1496, 195, 0, 310, 1591, 362,
	0, 1572, 309, 250, 355, 1606, 1669, 361, 1508, 341,
	369, 373, 216, 1548, 186, 331, 207, 203, 1487, 1628,
	1434, 224, 299, 198, 242, 1526, 1597, 1481, 191, 1609,
	1580, 1643, 330, 352, 160, 265, 353, 372, 177, 347,
	266, 273, 188, 190, 189, 172, 324, 351, 182, 193,
	1639, 1622, 1645, 1474, 1454, 1465, 1455, 1495, 1671, 233,
	225, 1646, 1644, 366, 0, 319, 318, 1511, 232, 1625,
	0, 0, 306, 0, 239, 163, 1650, 375, 176, 244,
	348, 0, 219, 279, 197, 1593, 288, 1493, 157, 302,
	261, 263, 260, 264, 222, 0, 0, 1621, 304, 321,
	350, 178, 337, 0, 0, 0, 0, 312, 0, 0,
	1677, 255, 211, 215, 226, 236, 1592, 308, 338, 367,
	1583, 173, 166, 340, 360, 183, 320, 323, 374, 1617,
	168, 1665, 1640, 1574, 1529, 1535, 1436, 0, 167, 1613,
	1485, 1500, 1473, 1587, 1472, 221, 1604, 358, 359, 196,
	376, 1448, 1685, 169, 1449, 1684, 276, 283, 275, 1688,
	354, 1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559, 245,
	214, 228, 297, 252, 298, 229, 271, 270, 272, 253,
	1562, 0, 164, 0, 335, 1675, 1700, 339, 180, 1467,
	1632, 349, 0, 303, 181, 220, 212, 296, 274, 174,
	231, 333, 243, 251, 1608, 1697, 287, 311, 185, 364,
	332, 208, 1463, 1466, 1461, 1464, 1462, 1566, 1567, 1680,
	1681, 1682, 1620, 1456, 0, 1658, 1659, 0, 1553, 1668,
	1442, 0, 1636, 0, 0, 1600, 1695, 1513, 192, 0,
	1438, 1439, 1440, 0, 1543, 1544, 0, 0, 1654, 1653,
	1652, 1655, 0, 1689, 1687, 1690, 1457, 1478, 1499, 1549,
	1550, 1552, 1584, 1585, 1630, 1603, 1612, 1545, 293, 165,
	175, 184, 202, 200, 213, 240, 262, 267, 292, 322,
	327, 342, 343, 344, 345, 204, 0, 0, 0, 0,
	0, 1571, 159, 170, 247, 1696, 305, 218, 1425, 1433,
	1460, 1468, 1469, 1470, 1471, 1476, 1483, 0, 1490, 1498,
	1501, 1502, 1510, 1516, 1517, 1518, 1519, 1528, 1530, 1531,
	1532, 1533, 1534, 1538, 1539, 1541, 1554, 1555, 1561, 1569,
	1570, 1577, 1578, 0, 1607, 1610, 1619, 1624, 1627, 1633,
	1635, 1642, 1647, 1649, 1686, 1694, 1699, 365, 201, 1551,
	1576, 1614, 171, 179, 187, 199, 210, 217, 227, 230,
	234, 235, 237, 241, 254, 256, 257, 258, 259, 277,
	278, 281, 282, 285, 286, 289, 290, 291, 294, 295,
	301, 0, 307, 313, 314, 315, 316, 317, 325, 326,
	328, 329, 336, 356, 357, 370, 371, 1660, 1524, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1509, 161,
	1656, 1691, 1588, 1602, 1672, 1634, 346, 1527, 1676, 1477,
	1506, 1693, 1512, 1515, 1596, 1443, 1565, 284, 1503, 1444,
	1427, 1482, 1431, 1494, 1432, 1479, 206, 1475, 1637, 1568,
	1674, 1547, 1589, 1599, 205, 194, 1557, 1556, 1662, 1492,
	1491, 1594, 1651, 1673, 1546, 0, 1683, 249, 1648, 0,
	368, 334, 268, 0, 0, 1542, 1657, 1563, 1626, 1525,
	1598, 1459, 1581, 1678, 1504, 1590, 1679, 0, 0, 0,
	0, 3350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1586, 1670, 1497, 0, 1537, 1595, 1698, 1430,
	1582, 0, 1435, 1446, 1692, 1663, 1488, 1489, 209, 0,
	0, 0, 0, 0, 0, 0, 1540, 1564, 1616, 1522,
	0, 0, 363, 1601, 1611, 1629, 1514, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 1484, 0, 1579,
	0, 0, 0, 1451, 1437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 1458, 1428, 1486, 1618, 1429, 1426, 269, 1447, 1631,
	1661, 1523, 238, 0, 1667, 1521, 1520, 1605, 1452, 1641,
	1507, 246, 1450, 155, 1445, 1453, 1505, 280, 1615, 1623,
	0, 158, 248, 1638, 1480, 1496, 195, 0, 310, 1591,
	362, 0, 1572, 309, 250, 355, 1606, 1669, 361, 1508,
	341, 369, 373, 216, 1548, 186, 331, 207, 203, 1487,
	1628, 1434, 224, 299, 198, 242, 1526, 1597, 1481, 191,
	1609, 1580, 1643, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 1639, 1622, 1645, 1474, 1454, 1465, 3353, 3354, 3355,
	233, 225, 1646, 1644, 366, 0, 319, 318, 1511, 232,
	1625, 0, 0, 306, 0, 239, 163, 1650, 375, 176,
	244, 348, 0, 219, 279, 197, 1593, 288, 1493, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 1621, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 1677, 255, 211, 215, 226, 236, 1592, 308, 338,
	367, 1583, 173, 166, 340, 360, 183, 320, 323, 374,
	1617, 168, 1665, 1640, 1574, 1529, 1535, 1436, 0, 167,
	1613, 1485, 1500, 1473, 1587, 1472, 221, 1604, 358, 359,
	196, 376, 1448, 1685, 169, 1449, 1684, 276, 283, 275,
	1688, 354, 1666, 1575, 1560, 1558, 1441, 1664, 1573, 1559,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 1562, 0, 164, 0, 335, 1675, 1700, 339, 180,
	1467, 1632, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 1608, 1697, 287, 311, 185,
	364, 332, 208, 1463, 1466, 1461, 1464, 1462, 1566, 1567,
	1680, 1681, 1682, 1620, 1456, 0, 1658, 1659, 0, 1553,
	1668, 1442, 0, 1636, 0, 0, 1600, 1695, 1513, 192,
	0, 1438, 1439, 1440, 0, 1543, 1544, 0, 0, 1654,
	1653, 1652, 1655, 0, 1689, 1687, 1690, 1457, 1478, 1499,
	1549, 1550, 1552, 1584, 1585, 1630, 1603, 1612, 1545, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 1571, 159, 170, 247, 1696, 305, 218, 1425,
	1433, 1460, 1468, 1469, 1470, 1471, 1476, 1483, 0, 1490,
	1498, 1501, 1502, 1510, 1516, 1517, 1518, 1519, 1528, 1530,
	1531, 1532, 1533, 1534, 1538, 1539, 1541, 1554, 1555, 1561,
	1569, 1570, 1577, 1578, 0, 1607, 1610, 1619, 1624, 1627,
	1633, 1635, 1642, 1647, 1649, 1686, 1694, 1699, 365, 201,
	1551, 1576, 1614, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 0, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 1660, 1524,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 1509,
	161, 1656, 1691, 1588, 1602, 1672, 1634, 346, 1527, 1676,
	1477, 1506, 1693, 1512, 1515, 1596, 1443, 1565, 284, 1503,
	1444, 1427, 1482, 1431, 1494, 1432, 1479, 206, 1475, 1637,
	1568, 1674, 1547, 1589, 1599, 205, 194, 1557, 1556, 1662,
	1492, 1491, 1594, 1651, 1673, 1546, 0, 1683, 249, 1648,
	0, 368, 334, 268, 0, 0, 1542, 1657, 1563, 1626,
	1525, 1598, 1459, 1581, 1678, 1504, 1590, 1679, 0, 0,
	0, 0, 2378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1586, 1670, 1497, 0, 1537, 1595, 1698,
	1430, 1582, 0, 1435, 1446, 1692, 1663, 1488, 1489, 209,
	0, 0, 0, 0, 0, 0, 0, 1540, 1564, 1616,
	1522, 0, 0, 363, 1601, 1611, 1629, 1514, 300, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 1484, 0,
	1579, 0, 0, 0, 1451, 1437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1536, 0,
	0, 0, 1458, 1428, 1486, 1618, 1429, 1426, 269, 1447,
	1631, 1661, 1523, 238, 0, 1667, 1521, 1520, 1605, 1452,
	1641, 1507, 246, 1450, 155, 1445, 1453, 1505, 280, 1615,
	1623, 0, 158, 248, 1638, 1480, 1496, 195, 0, 310,
	1591, 362, 0, 1572, 309, 250, 355, 1606, 1669, 361,
	1508, 341, 369, 373, 216, 1548, 186, 331, 207, 203,
	1487, 1628, 1434, 224, 299, 198, 242, 1526, 1597, 1481,
	191, 1609, 1580, 1643, 330, 352, 160, 265, 353, 372,
	177, 347, 266, 273, 188, 190, 189, 172, 324, 351,
	182, 193, 1639, 1622, 1645, 1474, 1454, 1465, 1455, 1495,
	1671, 233, 225, 1646, 1644, 366, 0, 319, 318, 1511,
	232, 1625, 0, 0, 306, 0, 239, 163, 1650, 375,
	176, 244, 348, 0, 219, 279, 197, 1593, 288, 1493,
	157, 302, 261, 263, 260, 264, 222, 0, 0, 1621,
	304, 321, 350, 178, 337, 0, 0, 0, 0, 312,
	0, 0, 1677, 255, 211, 215, 226, 236, 1592, 308,
	338, 367, 1583, 173, 166, 340, 360, 183, 320, 323,
	374, 1617, 168, 1665, 1640, 1574, 1529, 1535, 1436, 0,
	167, 1613, 1485, 1500, 1473, 1587, 1472, 221, 1604, 358,
	359, 196, 376, 1448, 1685, 169, 1449, 1684, 276, 283,
	275, 1688, 354, 1666, 1575, 1560, 1558, 1441, 1664, 1573,
	1559, 245, 214, 228, 297, 252, 298, 229, 271, 270,
	272, 253, 1562, 0, 164, 0, 335, 1675, 1700, 339,
	180, 1467, 1632, 349, 0, 303, 181, 220, 212, 296,
	274, 174, 231, 333, 243, 251, 1608, 1697, 287, 311,
	185, 364, 332, 208, 1463, 1466, 1461, 1464, 1462, 1566,
	1567, 1680, 1681, 1682, 1620, 1456, 0, 1658, 1659, 0,
	1553, 1668, 1442, 0, 1636, 0, 0, 1600, 1695, 1513,
	192, 0, 1438, 1439, 1440, 0, 1543, 1544, 0, 0,
	1654, 1653, 1652, 1655, 0, 1689, 1687, 1690, 1457, 1478,
	1499, 1549, 1550, 1552, 1584, 1585, 1630, 1603, 1612, 1545,
	293, 165, 175, 184, 202, 200, 213, 240, 262, 267,
	292, 322, 327, 342, 343, 344, 345, 204, 0, 0,
	0, 0, 0, 1571, 159, 170, 247, 1696, 305, 218,
	1425, 1433, 1460, 1468, 1469, 1470, 1471, 1476, 1483, 0,
	1490, 1498, 1501, 1502, 1510, 1516, 1517, 1518, 1519, 1528,
	1530, 1531, 1532, 1533, 1534, 1538, 1539, 1541, 1554, 1555,
	1561, 1569, 1570, 1577, 1578, 0, 1607, 1610, 1619, 1624,
	1627, 1633, 1635, 1642, 1647, 1649, 1686, 1694, 1699, 365,
	201, 1551, 1576, 1614, 171, 179, 187, 199, 210, 217,
	227, 230, 234, 235, 237, 241, 254, 256, 257, 258,
	259, 277, 278, 281, 282, 285, 286, 289, 290, 291,
	294, 295, 301, 0, 307, 313, 314, 315, 316, 317,
	325, 326, 328, 329, 336, 356, 357, 370, 371, 1660,
	1524, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1509, 161, 1656, 1691, 1588, 1602, 1672, 1634, 346, 1527,
	1676, 1477, 1506, 1693, 1512, 1515, 1596, 1443, 1565, 284,
	1503, 1444, 1427, 1482, 1431, 1494, 1432, 1479, 206, 1475,
	1637, 1568, 1674, 1547, 1589, 1599, 205, 194, 1557, 1556,
	1662, 1492, 1491, 1594, 1651, 1673, 1546, 0, 1683, 249,
	1648, 0, 368, 334, 268, 0, 0, 1542, 1657, 1563,
	1626, 1525, 1598, 1459, 1581, 1678, 1504, 1590, 1679, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 1670, 1497, 0, 1537, 1595,
	1698, 1430, 1582, 0, 1435, 1446, 1692, 1663, 1488, 1489,
	209, 0, 0, 0, 0, 0, 0, 0, 1540, 1564,
	1616, 1522, 0, 0, 363, 1601, 1611, 1629, 1514, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	0, 1579, 0, 0, 0, 1451, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 0, 0, 1458, 1428, 1486, 1618, 1429, 1426, 269,
	1447, 1631, 1661, 1523, 238, 0, 1667, 1521, 1520, 1605,
	1452, 1641, 1507, 246, 1450, 155, 1445, 1453, 1505, 280,
	1615, 1623, 0, 158, 248, 1638, 1480, 1496, 195, 0,
	310, 1591, 362, 0, 1572, 309, 250, 355, 1606, 1669,
	361, 1508, 341, 369, 373, 216, 1548, 186, 331, 207,
	203, 1487, 1628, 1434, 224, 299, 198, 242, 1526, 1597,
	1481, 191, 1609, 1580, 1643, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 1639, 1622, 1645, 1474, 1454, 1465, 1455,
	1495, 1671, 233, 225, 1646, 1644, 366, 0, 319, 318,
	1511, 232, 1625, 0, 0, 306, 0, 239, 163, 1650,
	375, 176, 244, 348, 0, 219, 279, 197, 1593, 288,
	1493, 157, 302, 261, 263, 260, 264, 222, 0, 0,
	1621, 304, 321, 350, 178, 337, 0, 0, 0, 0,
	312, 0, 0, 1677, 255, 211, 215, 226, 236, 1592,
	308, 338, 367, 1583, 173, 166, 340, 360, 183, 320,
	323, 374, 1617, 168, 1665, 1640, 1574, 1529, 1535, 1436,
	0, 167, 1613, 1485, 1500, 1473, 1587, 1472, 221, 1604,
	358, 359, 196, 376, 1448, 1685, 169, 1449, 1684, 276,
	283, 275, 1688, 354, 1666, 1575, 1560, 1558, 1441, 1664,
	1573, 1559, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 1562, 0, 164, 0, 335, 1675, 1700,
	339, 180, 1467, 1632, 349, 0, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 1608, 1697, 287,
	311, 185, 364, 332, 208, 1463, 1466, 1461, 1464, 1462,
	1566, 1567, 1680, 1681, 1682, 1620, 1456, 0, 1658, 1659,
	0, 1553, 1668, 1442, 0, 1636, 0, 0, 1600, 1695,
	1513, 192, 0, 1438, 1439, 1440, 0, 1543, 1544, 0,
	0, 1654, 1653, 1652, 1655, 0, 1689, 1687, 1690, 1457,
	1478, 1499, 1549, 1550, 1552, 1584, 1585, 1630, 1603, 1612,
	1545, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 1571, 159, 170, 247, 1696, 305,
	218, 1425, 1433, 1460, 1468, 1469, 1470, 1471, 1476, 1483,
	0, 1490, 1498, 1501, 1502, 1510, 1516, 1517, 1518, 1519,
	1528, 1530, 1531, 1532, 1533, 1534, 1538, 1539, 1541, 1554,
	1555, 1561, 1569, 1570, 1577, 1578, 0, 1607, 1610, 1619,
	1624, 1627, 1633, 1635, 1642, 1647, 1649, 1686, 1694, 1699,
	365, 201, 1551, 1576, 1614, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 0, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	1660, 1524, 156, 0, 0, 162, 346, 0, 0, 0,
	0, 1509, 161, 1656, 1691, 1588, 1602, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 2034, 2038, 0, 0, 249, 0, 947,
	368, 334, 268, 950, 949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 2037, 238, 154, 0, 0, 0, 2031, 0, 2032,
	2033, 246, 951, 155, 0, 2029, 2036, 280, 0, 0,
	142, 158, 248, 0, 0, 0, 195, 940, 310, 0,
	362, 946, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 144, 319, 318, 0, 232,
	0, 145, 136, 306, 146, 239, 163, 0, 375, 176,
	244, 348, 945, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 0, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 148, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 1159, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 947, 368, 334, 268, 950, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1160, 0, 1163, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 948, 0, 1155,
	1156, 1154, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 1157, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 154, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 142, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 946, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 144, 319, 318,
	0, 232, 0, 145, 136, 306, 146, 239, 163, 0,
	375, 176, 244, 348, 945, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	0, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 0, 0,
	0, 192, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 0, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 148, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 947, 368, 334, 268, 950, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 154, 0, 0,
	0, 0, 0, 0, 0, 246, 951, 155, 0, 941,
	0, 280, 0, 0, 142, 158, 248, 0, 0, 0,
	195, 940, 310, 0, 362, 946, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 144,
	319, 318, 0, 232, 0, 145, 136, 306, 146, 239,
	163, 0, 375, 176, 244, 348, 945, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 0, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 153,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 345,
	204, 0, 0, 0, 0, 0, 0, 159, 170, 247,
	0, 305, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 148, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 346, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 284, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 947, 368, 334, 268, 950,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 1163,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 238, 154,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 142, 158, 248, 0,
	0, 0, 195, 1832, 310, 0, 362, 946, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 144, 319, 318, 0, 232, 0, 145, 136, 306,
	146, 239, 163, 0, 375, 176, 244, 348, 945, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 0, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 192, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 148, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 947, 368, 334,
	268, 950, 949, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2814,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 154, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 142, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 946,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 144, 319, 318, 0, 232, 0, 145,
	136, 306, 146, 239, 163, 0, 375, 176, 244, 348,
	945, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 0, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 0, 0, 0, 192, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	148, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 947,
	368, 334, 268, 950, 949, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2809, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 154, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	142, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 946, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 144, 319, 318, 0, 232,
	0, 145, 136, 306, 146, 239, 163, 0, 375, 176,
	244, 348, 945, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 0, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 148, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 0, 0,
	156, 36, 346, 162, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2312, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 0, 0, 1966, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 238, 154,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 142, 158, 248, 0,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 144, 319, 318, 0, 232, 0, 145, 136, 306,
	146, 239, 163, 0, 375, 176, 244, 348, 128, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 0, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 192, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1967, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 480, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 148, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 368, 334,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 1966,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 154, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 142, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 0,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 144, 319, 318, 0, 232, 0, 145,
	136, 306, 146, 239, 163, 0, 375, 176, 244, 348,
	128, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 0, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 0, 0, 0, 192, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	148, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	368, 334, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 154, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	142, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 2114, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 144, 319, 318, 0, 232,
	0, 145, 136, 306, 146, 239, 163, 0, 375, 176,
	244, 348, 128, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 140, 147, 0, 304,
	321, 350, 178, 337, 138, 139, 141, 149, 312, 150,
	151, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 143, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 148, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 368, 334, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 154, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 142, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 0, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 144, 319, 318,
	0, 232, 0, 145, 136, 306, 146, 239, 163, 0,
	375, 176, 244, 348, 128, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 140, 147,
	0, 304, 321, 350, 178, 337, 138, 139, 141, 149,
	312, 150, 151, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 143, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 0, 0,
	0, 192, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 0, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 148, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 1290, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 368, 334, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 154, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 155, 0, 0,
	0, 280, 0, 0, 142, 158, 248, 0, 0, 0,
	195, 0, 310, 0, 362, 0, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 144,
	319, 318, 0, 232, 0, 145, 136, 306, 146, 239,
	163, 0, 375, 176, 244, 348, 128, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	140, 147, 0, 304, 321, 350, 178, 337, 138, 139,
	141, 149, 312, 150, 151, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 143, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 153,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 345,
	204, 0, 0, 0, 0, 0, 0, 159, 170, 247,
	0, 305, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 148, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 346, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 284, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 123, 0, 238, 154,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 142, 158, 248, 0,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 144, 319, 318, 0, 232, 0, 145, 136, 306,
	146, 239, 163, 0, 375, 176, 244, 348, 128, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 140, 147, 0, 304, 321, 350, 178, 337,
	138, 139, 141, 149, 312, 150, 151, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 143,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 192, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 148, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 368, 334,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 154, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 142, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 0,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 144, 319, 318, 0, 232, 0, 145,
	136, 306, 146, 239, 163, 0, 375, 176, 244, 348,
	128, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 140, 147, 0, 304, 321, 350,
	178, 337, 138, 139, 141, 149, 312, 150, 151, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 143, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 0, 0, 0, 192, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	148, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 0, 0, 156, 0,
	0, 162, 446, 346, 440, 451, 434, 0, 161, 0,
	0, 0, 0, 0, 284, 0, 0, 457, 0, 0,
	0, 0, 0, 206, 0, 0, 441, 0, 0, 0,
	0, 205, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 368, 334, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 0, 300, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 433, 432,
	435, 0, 0, 0, 269, 0, 0, 0, 439, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	155, 0, 0, 0, 280, 443, 0, 0, 158, 248,
	447, 0, 0, 195, 0, 310, 0, 362, 0, 0,
	309, 250, 355, 0, 450, 361, 0, 341, 369, 373,
	216, 0, 186, 331, 207, 203, 0, 0, 0, 224,
	299, 198, 242, 0, 0, 0, 191, 0, 0, 0,
	330, 352, 160, 265, 353, 372, 177, 347, 266, 273,
	188, 190, 189, 172, 324, 351, 182, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 225, 0,
	0, 366, 0, 319, 318, 0, 232, 0, 0, 0,
	306, 0, 239, 163, 0, 375, 176, 244, 348, 0,
	219, 279, 197, 0, 288, 0, 157, 302, 261, 263,
	260, 264, 222, 0, 0, 0, 460, 321, 350, 178,
	337, 436, 437, 438, 444, 445, 448, 449, 452, 255,
	211, 215, 226, 236, 0, 308, 338, 367, 0, 173,
	166, 340, 360, 183, 320, 323, 374, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 221, 0, 358, 359, 196, 376, 0,
	0, 169, 0, 0, 276, 283, 275, 0, 354, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 214, 228,
	297, 252, 298, 229, 271, 270, 272, 253, 0, 0,
	164, 0, 335, 0, 0, 339, 180, 0, 0, 349,
	0, 303, 181, 220, 212, 296, 274, 174, 231, 333,
	243, 251, 0, 0, 287, 311, 185, 364, 332, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 165, 175, 184,
	202, 200, 213, 240, 262, 267, 292, 322, 327, 342,
	343, 344, 345, 204, 0, 0, 0, 0, 0, 0,
	159, 170, 247, 0, 305, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 365, 201, 0, 0, 0,
	171, 179, 187, 199, 210, 217, 227, 230, 234, 235,
	237, 241, 254, 256, 257, 258, 259, 277, 278, 281,
	282, 285, 286, 289, 290, 291, 294, 295, 301, 442,
	307, 313, 314, 315, 316, 317, 325, 326, 328, 329,
	336, 356, 357, 370, 371, 0, 0, 156, 0, 0,
	162, 446, 346, 440, 451, 434, 0, 161, 0, 0,
	0, 0, 0, 284, 0, 0, 426, 0, 0, 0,
	0, 0, 206, 0, 0, 441, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 455, 0, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 433, 432, 435,
	0, 0, 0, 269, 0, 0, 0, 439, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 443, 0, 0, 158, 248, 447,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 450, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 0, 319, 318, 0, 232, 0, 0, 0, 306,
	0, 239, 163, 0, 375, 176, 244, 348, 0, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 0, 429, 321, 350, 178, 337,
	436, 437, 438, 444, 445, 448, 449, 452, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 442, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 368, 334,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 1175, 1174, 1184,
	1185, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1176, 0,
	0, 1186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 0, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 0,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 0, 319, 318, 0, 232, 0, 0,
	0, 306, 0, 239, 163, 0, 375, 176, 244, 348,
	0, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 0, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 0, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	0, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 2317, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	368, 334, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2319, 2321, 0, 0, 0, 0, 0,
	0, 129, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 2315, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 0, 0, 2320, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	0, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 0, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 0, 319, 318, 0, 232,
	0, 0, 0, 306, 0, 239, 163, 0, 375, 176,
	244, 348, 0, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 0, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 0, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 2317, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 368, 334, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2319, 2321, 0, 0, 0,
	0, 0, 0, 129, 0, 472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 0, 0, 2320, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 0, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 0, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 0, 319, 318,
	0, 232, 0, 0, 0, 306, 0, 239, 163, 0,
	375, 176, 244, 348, 0, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 0, 0,
	0, 304, 321, 350, 178, 337, 0, 0, 0, 0,
	312, 0, 0, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 0, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 0, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 0, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 368, 334, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 155, 0, 0,
	0, 280, 0, 0, 0, 158, 248, 0, 0, 0,
	195, 0, 310, 0, 362, 0, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 0,
	319, 318, 0, 232, 0, 0, 0, 306, 0, 239,
	163, 0, 375, 176, 244, 348, 0, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	0, 0, 0, 304, 321, 350, 178, 337, 0, 0,
	0, 0, 312, 0, 0, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 0, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 345,
	204, 0, 0, 0, 0, 0, 0, 159, 170, 247,
	0, 305, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 201, 0, 0, 466, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 0, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 346, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 284, 161, 0, 0, 0, 3448, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 472,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 0, 158, 248, 0,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 0, 319, 318, 0, 232, 0, 0, 0, 306,
	0, 239, 163, 0, 375, 176, 244, 348, 0, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 0, 304, 321, 350, 178, 337,
	0, 0, 0, 0, 312, 0, 0, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 0, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	2645, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 368, 334,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 0, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 0,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 0, 319, 318, 0, 232, 0, 0,
	0, 306, 0, 239, 163, 0, 375, 176, 244, 348,
	0, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 0, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 0, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	0, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	368, 334, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	0, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 0, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 0, 319, 318, 0, 232,
	0, 0, 0, 306, 0, 239, 163, 0, 375, 176,
	244, 348, 0, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 0, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 0, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 368, 334, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 0, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 0, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 0, 319, 318,
	0, 232, 0, 0, 0, 306, 0, 239, 163, 0,
	375, 176, 244, 348, 0, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 0, 0,
	0, 304, 321, 350, 178, 337, 0, 0, 0, 0,
	312, 0, 0, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 0, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 0, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 0, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 3409, 0, 0, 0, 0, 0,
	206, 3407, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 368, 334, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 455, 0, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 155, 0, 0,
	0, 280, 0, 0, 0, 158, 248, 0, 0, 0,
	195, 0, 310, 0, 362, 0, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 0,
	319, 318, 0, 232, 0, 3408, 0, 306, 0, 239,
	163, 0, 375, 176, 244, 348, 0, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	0, 0, 0, 304, 321, 350, 178, 337, 0, 0,
	0, 0, 312, 0, 0, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 0, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 345,
	204, 0, 0, 0, 0, 0, 0, 159, 170, 247,
	0, 305, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 0, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 346, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 284, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2466, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 0, 158, 248, 0,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 2467, 2468, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 0, 319, 318, 0, 232, 0, 0, 0, 306,
	0, 239, 163, 0, 375, 176, 244, 348, 0, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 0, 304, 321, 350, 178, 337,
	0, 0, 0, 0, 312, 0, 0, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 0, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 368, 334,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 455,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 0, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 0,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 0, 319, 318, 0, 232, 0, 0,
	0, 306, 0, 239, 163, 0, 375, 176, 244, 348,
	0, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 0, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 0, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	0, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 0, 0, 0, 0, 206, 1306, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	368, 334, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 943, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	0, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 0, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 0, 319, 318, 0, 232,
	0, 0, 0, 306, 0, 239, 163, 0, 375, 176,
	244, 348, 0, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 0, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 0, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 368, 334, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 455, 0, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 0, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 0, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 0, 319, 318,
	0, 232, 0, 0, 0, 306, 0, 239, 163, 0,
	375, 176, 244, 348, 0, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 0, 0,
	0, 304, 321, 350, 178, 337, 0, 0, 0, 0,
	312, 0, 0, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 0, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 0, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 0, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 368, 334, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2800, 0, 0, 0, 2802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 155, 0, 0,
	0, 280, 0, 0, 0, 158, 248, 0, 0, 0,
	195, 0, 310, 0, 362, 0, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 0,
	319, 318, 0, 232, 0, 0, 0, 306, 0, 239,
	163, 0, 375, 176, 244, 348, 0, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	0, 0, 0, 304, 321, 350, 178, 337, 0, 0,
	0, 0, 312, 0, 0, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 0, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 345,
	204, 0, 0, 0, 0, 0, 0, 159, 170, 247,
	0, 305, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 0, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 346, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 284, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 2787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 0, 158, 248, 0,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 0, 319, 318, 0, 232, 0, 0, 0, 306,
	0, 239, 163, 0, 375, 176, 244, 348, 0, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 0, 304, 321, 350, 178, 337,
	0, 0, 0, 0, 312, 0, 0, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 0, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 368, 334,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 0, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 0,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 0, 319, 318, 0, 232, 0, 0,
	0, 306, 0, 239, 163, 0, 375, 176, 244, 348,
	0, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 0, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 0, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	0, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	368, 334, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 2158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	0, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 0, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 0, 319, 318, 0, 232,
	0, 0, 0, 306, 0, 239, 163, 0, 375, 176,
	244, 348, 0, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 0, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 0, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 346, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 284,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 2195, 2196, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 368, 334, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 300,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 155, 0, 0, 0, 280,
	0, 0, 0, 158, 248, 0, 0, 0, 195, 0,
	310, 0, 362, 0, 0, 309, 250, 355, 0, 0,
	361, 0, 341, 369, 373, 216, 0, 186, 331, 207,
	203, 0, 0, 0, 224, 299, 198, 242, 0, 0,
	0, 191, 0, 0, 0, 330, 352, 160, 265, 353,
	372, 177, 347, 266, 273, 188, 190, 189, 172, 324,
	351, 182, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 225, 0, 0, 366, 0, 319, 318,
	0, 232, 0, 0, 0, 306, 0, 239, 163, 0,
	375, 176, 244, 348, 0, 219, 279, 197, 0, 288,
	0, 157, 302, 261, 263, 260, 264, 222, 0, 0,
	0, 304, 321, 350, 178, 337, 0, 0, 0, 0,
	312, 0, 0, 0, 255, 211, 215, 226, 236, 0,
	308, 338, 367, 0, 173, 166, 340, 360, 183, 320,
	323, 374, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 221, 0,
	358, 359, 196, 376, 0, 0, 169, 0, 0, 276,
	283, 275, 0, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 214, 228, 297, 252, 298, 229, 271,
	270, 272, 253, 0, 0, 164, 0, 335, 0, 0,
	339, 180, 0, 0, 349, 0, 303, 181, 220, 212,
	296, 274, 174, 231, 333, 243, 251, 0, 0, 287,
	311, 185, 364, 332, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 165, 175, 184, 202, 200, 213, 240, 262,
	267, 292, 322, 327, 342, 343, 344, 345, 204, 0,
	0, 0, 0, 0, 0, 159, 170, 247, 0, 305,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 234, 235, 237, 241, 254, 256, 257,
	258, 259, 277, 278, 281, 282, 285, 286, 289, 290,
	291, 294, 295, 301, 0, 307, 313, 314, 315, 316,
	317, 325, 326, 328, 329, 336, 356, 357, 370, 371,
	346, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 284, 161, 0, 0, 0, 0, 0, 0, 0,
	206, 0, 0, 0, 0, 0, 0, 0, 205, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 368, 334, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 0,
	0, 300, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 155, 0, 0,
	0, 280, 0, 0, 0, 158, 248, 0, 0, 0,
	195, 0, 310, 0, 362, 0, 0, 309, 250, 355,
	0, 0, 361, 0, 341, 369, 373, 216, 0, 186,
	331, 207, 203, 0, 0, 0, 224, 299, 198, 242,
	0, 0, 0, 191, 0, 0, 0, 330, 352, 160,
	265, 353, 372, 177, 347, 266, 273, 188, 190, 189,
	172, 324, 351, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 366, 0,
	319, 318, 0, 232, 0, 0, 0, 306, 0, 239,
	163, 0, 375, 176, 244, 348, 0, 219, 279, 197,
	0, 288, 0, 157, 302, 261, 263, 260, 264, 222,
	0, 0, 0, 304, 321, 350, 178, 337, 0, 0,
	0, 0, 312, 0, 0, 0, 255, 211, 215, 226,
	236, 0, 308, 338, 367, 0, 173, 166, 340, 360,
	183, 320, 323, 374, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 358, 359, 196, 376, 0, 0, 169, 0,
	0, 276, 283, 275, 0, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 214, 228, 297, 252, 298,
	229, 271, 270, 272, 253, 0, 0, 164, 0, 335,
	0, 0, 339, 180, 0, 0, 349, 0, 303, 181,
	220, 212, 296, 274, 174, 231, 333, 243, 251, 0,
	0, 287, 311, 185, 364, 332, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 165, 175, 184, 202, 200, 213,
	240, 262, 267, 292, 322, 327, 342, 343, 344, 345,
	204, 0, 0, 0, 0, 0, 0, 159, 170, 247,
	0, 305, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 365, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 234, 235, 237, 241, 254,
	256, 257, 258, 259, 277, 278, 281, 282, 285, 286,
	289, 290, 291, 294, 295, 301, 0, 307, 313, 314,
	315, 316, 317, 325, 326, 328, 329, 336, 356, 357,
	370, 371, 346, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 284, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 368, 334, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 0, 0, 300, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 155,
	0, 0, 0, 280, 0, 0, 0, 158, 248, 0,
	0, 0, 195, 0, 310, 0, 362, 0, 0, 309,
	250, 355, 0, 0, 361, 0, 341, 369, 373, 216,
	0, 186, 331, 207, 203, 0, 0, 0, 224, 299,
	198, 242, 0, 0, 0, 191, 0, 0, 0, 330,
	352, 160, 265, 353, 372, 177, 347, 266, 273, 188,
	190, 189, 172, 324, 351, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	366, 0, 319, 318, 0, 232, 0, 0, 0, 306,
	0, 239, 163, 0, 375, 176, 244, 348, 0, 219,
	279, 197, 0, 288, 0, 157, 302, 261, 263, 260,
	264, 222, 0, 0, 0, 304, 321, 350, 178, 337,
	0, 0, 0, 0, 312, 0, 0, 0, 255, 211,
	215, 226, 236, 0, 308, 338, 367, 0, 173, 166,
	340, 360, 183, 320, 323, 374, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 358, 359, 196, 376, 0, 0,
	169, 0, 0, 276, 283, 275, 0, 354, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 214, 228, 297,
	252, 298, 229, 271, 270, 272, 253, 0, 0, 164,
	0, 335, 0, 0, 339, 180, 0, 0, 349, 0,
	303, 181, 220, 212, 296, 274, 174, 231, 333, 243,
	251, 0, 0, 287, 311, 185, 364, 332, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 165, 175, 184, 202,
	200, 213, 240, 262, 267, 292, 322, 327, 342, 343,
	344, 345, 204, 0, 0, 0, 0, 0, 0, 159,
	170, 247, 0, 305, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 234, 235, 237,
	241, 254, 256, 257, 258, 259, 277, 278, 281, 282,
	285, 286, 289, 290, 291, 294, 295, 301, 0, 307,
	313, 314, 315, 316, 317, 325, 326, 328, 329, 336,
	356, 357, 370, 371, 346, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 284, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 368, 334,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 0, 0, 300, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 155, 0, 0, 0, 280, 0, 0, 0, 158,
	248, 0, 0, 0, 195, 0, 310, 0, 362, 0,
	0, 309, 250, 355, 0, 0, 361, 0, 341, 369,
	373, 216, 0, 186, 331, 207, 203, 0, 0, 0,
	224, 299, 198, 242, 0, 0, 0, 191, 0, 0,
	0, 330, 352, 160, 265, 353, 372, 177, 347, 266,
	273, 188, 190, 189, 172, 324, 351, 182, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 225,
	0, 0, 366, 0, 319, 318, 0, 232, 0, 0,
	0, 306, 0, 239, 163, 0, 375, 176, 244, 348,
	0, 219, 279, 197, 0, 288, 0, 157, 302, 261,
	263, 260, 264, 222, 0, 0, 0, 304, 321, 350,
	178, 337, 0, 0, 0, 0, 312, 0, 0, 0,
	255, 211, 215, 226, 236, 0, 308, 338, 367, 0,
	173, 166, 340, 360, 183, 320, 323, 374, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 221, 0, 358, 359, 196, 376,
	0, 0, 169, 0, 0, 276, 283, 275, 0, 354,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 214,
	228, 297, 252, 298, 229, 271, 270, 272, 253, 0,
	0, 164, 0, 335, 0, 0, 339, 180, 0, 0,
	349, 0, 303, 181, 220, 212, 296, 274, 174, 231,
	333, 243, 251, 0, 0, 287, 311, 185, 364, 332,
	208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 165, 175,
	184, 202, 200, 213, 240, 262, 267, 292, 322, 327,
	342, 343, 344, 345, 204, 0, 0, 0, 0, 0,
	0, 159, 170, 247, 0, 305, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 201, 0, 0,
	0, 171, 179, 187, 199, 210, 217, 227, 230, 234,
	235, 237, 241, 254, 256, 257, 258, 259, 277, 278,
	281, 282, 285, 286, 289, 290, 291, 294, 295, 301,
	0, 307, 313, 314, 315, 316, 317, 325, 326, 328,
	329, 336, 356, 357, 370, 371, 346, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 284, 161, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 205, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	368, 334, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 0, 0, 300, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 155, 0, 0, 0, 280, 0, 0,
	0, 158, 248, 0, 0, 0, 195, 0, 310, 0,
	362, 0, 0, 309, 250, 355, 0, 0, 361, 0,
	341, 369, 373, 216, 0, 186, 331, 207, 203, 0,
	0, 0, 224, 299, 198, 242, 0, 0, 0, 191,
	0, 0, 0, 330, 352, 160, 265, 353, 372, 177,
	347, 266, 273, 188, 190, 189, 172, 324, 351, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 366, 0, 319, 318, 0, 232,
	0, 0, 0, 306, 0, 239, 163, 0, 375, 176,
	244, 348, 0, 219, 279, 197, 0, 288, 0, 157,
	302, 261, 263, 260, 264, 222, 0, 0, 0, 304,
	321, 350, 178, 337, 0, 0, 0, 0, 312, 0,
	0, 0, 255, 211, 215, 226, 236, 0, 308, 338,
	367, 0, 173, 166, 340, 360, 183, 320, 323, 374,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 358, 359,
	196, 376, 0, 0, 169, 0, 0, 276, 283, 275,
	0, 354, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 214, 228, 297, 252, 298, 229, 271, 270, 272,
	253, 0, 0, 164, 0, 335, 0, 0, 339, 180,
	0, 0, 349, 0, 303, 181, 220, 212, 296, 274,
	174, 231, 333, 243, 251, 0, 0, 287, 311, 185,
	364, 332, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	165, 175, 184, 202, 200, 213, 240, 262, 267, 292,
	322, 327, 342, 343, 344, 345, 204, 0, 0, 0,
	0, 0, 0, 159, 170, 247, 0, 305, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 234, 235, 237, 241, 254, 256, 257, 258, 259,
	277, 278, 281, 282, 285, 286, 289, 290, 291, 294,
	295, 301, 0, 307, 313, 314, 315, 316, 317, 325,
	326, 328, 329, 336, 356, 357, 370, 371, 0, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	161,
}

var yyPact = [...]int{
	4871, -1000, -439, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2215, -1000, -1000, 287, -1000,
	1062, 620, -1000, 354, 293, 33895, 712, 3900, 48597, -1000,
	-1000, -1000, 193, 570, 34507, 460, 478, 1647, 2097, 1644,
	41, -71, -76, 136, 35745, 35126, 6, -1000, 38193, 634,
	65, -1000, -1000, -1000, -1000, 2245, 224, -1000, -1000, 2181,
	2212, 2027, -1000, 6980, -1000, -1000, -1000, -1000, -1000, 20862,
	-1000, 2265, 34507, 28383, -1000, 704, 686, -181, 626, 626,
	328, 626, 626, 711, -1000, 260, 1077, -1000, -1000, -1000,
	-1000, 1073, 34507, 43701, 627, 47373, 627, 627, 627, 627,
	627, 627, 627, 34507, -1000, 799, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34507, 1631, 2133,
	1130, 137, -1000, -1000, -1000, 1137, -1000, 417, 413, 446,
	337, 160, 1151, 2197, -1000, 1885, 2181, 2181, -1000, -1000,
	-1000, -1000, -1000, -1000, 886, 365, 683, 226, 224, 1068,
	2171, 2131, 2127, 1409, 2125, 584, 2124, 1968, -48, -1000,
	1630, 34507, -1000, -1000, 1370, 1369, 399, 1844, 762, 1993,
	-1000, -1000, 394, 577, 1957, 443, 1957, 1957, 1957, 1957,
	1957, -78, 1957, 1957, 1957, 102, 1957, 149, 1957, 1957,
	1957, 1957, 1957, 1696, -1000, -1000, -1000, 412, 1751, 1903,
	1990, 550, -1000, -1000, -1000, 1964, 40029, 1882, -1000, 1885,
	-1000, -1000, -1000, 710, -1000, -124, 1964, 2183, 1548, -1000,
	38193, 2128, 1301, 13290, 2074, -1000, -1000, 1192, 2251, -1000,
	27771, 785, -1000, 13290, 1524, 1885, -1000, -1000, 1885, -1000,
	743, 852, -1000, 731, 774, -1000, -1000, 12659, 12659, 12659,
	12659, 12659, 12659, 12659, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1885, 782, 779, 1885, 1885, 1885, 1885, 1885, -1000, 11397,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885,
	1885, 1885, 1885, 1885, 1885, 1885, 13290, 1885, 1885, 1885,
	1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885,
	1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885,
	1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885, 1885,
	1885, 1885, 1885, 1885, 1885, 1885, 1885, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 634, 634,
	33283, 1907, -113, 20231, -1000, -1000, -1000, -1000, 18969, 43089,
	1067, -1000, -1000, -1000, -1000, 2122, -1000, -1000, 777, 774,
	743, 742, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2215, -1000, -1000, 1821, 619, -1000, 4599, 4599, 4599, 4599,
	4599, 315, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1967, 47373, 34507, 296, 1629, 1114, 1628, 49209, 49209,
	-1000, 240, 43701, 43701, 626, 295, 43701, 308, 1906, 682,
	1904, 679, 1657, 34507, 2162, 1989, 34507, 1627, 1626, 49209,
	49209, 43701, 43701, -1000, 26541, 1897, -1000, -1000, 1130, -1000,
	6410, 13290, 626, 626, 34507, 34507, 34507, 34507, 34507, -1000,
	-1000, 1130, 1130, 1130, 1130, 1111, 2250, 1111, -1000, 1111,
	-1000, -1000, 13290, -1000, 12659, 42477, 912, -1000, -1000, 48597,
	-1000, 1625, 327, -1000, -1000, -1000, -1000, -1000, -1000, 1620,
	-1000, 2101, 584, 584, -1000, 1477, 584, 1865, -1000, 1055,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 584, -1000, 12028, -419, -1000, -1000, 1896, -1000,
	331, -1000, -1000, 569, 1988, 569, 330, 43701, 43701, 43701,
	-1000, 1957, 47373, -1000, 1957, 1957, 1957, -79, 1957, 1957,
	-1000, -1000, 1957, -1000, -1000, -1000, -1000, -1000, 1957, -1000,
	-1000, -1000, 1957, 1957, -1000, 1957, 1957, -1000, -1000, -1000,
	-1000, -1000, 43701, 569, 182, 1895, 569, 43701, 43701, -1000,
	87, 86, 85, 83, -1000, -1000, -1000, -1000, 82, 81,
	-1000, -1000, -1000, 1882, 40029, 2180, 15814, 34507, -102, -1000,
	-1000, 224, -1000, -1000, -1000, -1000, 1964, 1213, 2258, 871,
	1894, -1000, -1000, 1867, -1000, 1146, 773, 1256, 2048, -1000,
	-1000, -1000, 34507, -1000, 13290, 13290, 13290, 1313, -1000, 28995,
	-1000, -1000, -1000, -1000, -1000, -1000, 17076, 988, 12659, 1304,
	1036, 12659, 12659, 12659, 12659, 12659, 12659, 12659, 12659, 12659,
	12659, 12659, 12659, 12659, 12659, 12659, 1336, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1607, -1000, 224, 24648, 8242,
	24648, 1531, 1531, 47373, 854, 854, 854, 854, 854, 854,
	36357, 2175, 24017, 24648, 2175, 2175, 2175, 2175, 2175, 1548,
	1819, 1277, 38193, 11397, 8242, 8242, 8242, 1548, 13290, 13290,
	8242, 8242, 10766, 10135, 14552, 8242, 8242, 2175, 1104, 1277,
	18969, 8242, -1000, -1000, 9504, -1000, -1000, -1000, -1000, -1000,
	1548, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47373,
	47373, 8242, 8242, 8242, 8242, 1548, 1548, 8242, 8242, 8242,
	8242, 8242, 1548, 1548, 1548, 1548, 8242, 8242, 8242, 8242,
	8242, 8242, 8242, 8242, 8242, 8242, 8242, 8242, 32671, 31447,
	34507, 1861, 1746, -1000, 772, 19600, 1860, -1000, -132, -111,
	-113, -1000, -1000, 867, -1000, -1000, -1000, 8873, -1000, 17707,
	2181, 2027, 4157, 27159, -1000, -1000, -60, -1000, -1000, -1000,
	1917, -1000, 1948, 332, -6, 1948, 1948, 1948, 1948, 1948,
	-21, -21, -21, -21, -3, -1000, -1000, -1000, -1000, -1000,
	1966, 1965, -1000, 1917, 1917, 1917, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1953, 311, 1919, 1919, 1919,
	1919, 1919, -1000, -1000, -1000, -1000, 574, 574, 574, -1000,
	13290, 1971, 2179, 685, 295, 2147, 2159, 2147, 543, -1000,
	770, 1962, -1000, 755, 395, 1881, -1000, 190, 1726, 32059,
	-1000, -1000, -1000, -1000, -1000, 34507, 34507, 43701, 43701, 43701,
	790, -1000, 34507, 1866, -1000, -1000, -1000, -1000, -1000, 1849,
	-1000, 1726, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 34507, -1000, -1000, 1458, 1277, 1587, 1585, 2171, -1000,
	-1000, -1000, 1113, -1000, -1000, -1000, -1000, 1130, 48597, 48597,
	34507, 2171, 1130, 1277, 816, 1972, 1885, 1548, -1000, -1000,
	-1000, 1566, -1000, 12659, 1865, 1865, -1000, 1865, 584, 1531,
	1865, -1000, 1817, 1189, 1453, 34507, -1000, 40029, -51, -1000,
	-138, 46149, -1000, -1000, -1000, 569, 46149, -1000, 102, 153,
	-1000, 678, -1000, 1814, -1000, -1000, -1000, -1000, 1957, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 46149, 148,
	180, 46149, 1849, 2249, -1000, -1000, -1000, -1000, 2194, -1000,
	-1000, 1885, 1782, -1000, 753, -1000, -1000, -1000, -1000, -1000,
	-1000, 265, -1000, -1000, 1548, -1000, 46761, -1000, 2036, 1301,
	1301, 13290, -1000, -1000, -1000, 17707, 2196, -1000, 2054, 2053,
	2010, -1000, -1000, 988, 1279, 1059, -1000, -1000, 1255, -1000,
	-1000, -1000, -1000, -1000, 752, 1885, -1000, -1000, -1000, -1000,
	-1000, 3152, -1000, -1000, -1000, -1000, 1304, 12659, 12659, 12659,
	816, 3152, 3465, 1884, 1560, 854, 963, 963, 982, 982,
	982, 982, 982, 1082, 1082, -1000, -1000, -1000, 1548, -1000,
	1809, -1000, -1000, 1277, 751, -1000, -1000, -1000, -1000, -1000,
	-1000, 8242, -1000, -1000, -1000, 8242, 8242, 8242, 8242, 8242,
	-1000, 13290, -1000, 1548, 1809, 1809, 1809, -1000, 1185, 1274,
	1572, 1809, 903, 2244, 1809, 893, 2243, 1809, 1058, 12659,
	12659, 12659, 1809, 1809, 8242, 1166, -1000, 13290, 1548, 1809,
	-1000, 1546, 1864, 1863, 1809, 1548, 1862, 1809, 1809, -196,
	-196, 1548, 1809, 1548, 1809, 1809, -196, -196, -196, -196,
	1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
	1809, 1809, 958, 34507, -1000, 1851, 318, -1000, -1000, -1000,
	2176, 30835, -1000, -1000, 36969, -1000, 1885, 1885, 958, 1828,
	31447, -1000, -1000, 31447, 48597, 23386, -1000, 18969, -113, -114,
	-1000, -1000, 1860, -1000, 1380, -1000, -1000, 1277, -1000, 750,
	2128, 2175, 1857, -1000, 981, 981, 981, 2121, 270, 981,
	981, 981, 981, 981, -250, -253, 981, 981, 981, 981,
	981, 981, 981, 981, 981, 981, 981, 64, 981, 981,
	981, 981, 21493, 981, 619, -1000, -1000, -1000, 1955, 279,
	-1000, 2070, 855, 855, 836, 1539, 2068, -1000, -1000, 165,
	-63, -1000, -1000, -1000, 1349, -21, 174, -21, 1948, 1948,
	301, 1948, -1000, -21, -1000, -1000, -1000, 976, 2120, 974,
	970, 964, 943, -21, 1452, 1452, -1000, -1000, -1000, -1000,
	1347, -1000, 1953, -1000, 1345, -1000, -1000, -1000, -1000, 165,
	165, 165, 165, -1000, -1000, -1000, 1194, 1987, 47373, -1000,
	34507, -1000, 2147, -1000, -1000, -1000, 130, -1000, -1000, -1000,
	2239, -1000, -1000, 47373, 41865, 47373, -1000, -1000, 111, 43701,
	188, 371, 205, -1000, -1000, 676, -1000, 674, -1000, -1000,
	-1000, -1000, -1000, -1000, 34507, 43701, -1000, -1000, -1000, -1000,
	-1000, 2226, 1565, 1564, -1000, -1000, -1000, 1111, 1130, -1000,
	-1000, 12659, 43701, -1000, 539, -1000, 3152, -1000, -1000, -1000,
	958, 706, -1000, -1000, -69, -1000, -1000, 672, 749, 748,
	46149, 665, -1000, 121, 43701, -1000, 47373, -1000, 2242, 2241,
	140, 2240, 43701, -1000, 69, -1000, 253, -1000, 15814, 24648,
	1856, -1000, 811, 756, 847, 583, 583, -1000, 981, 583,
	2107, 2105, 952, -1000, 1855, 1451, 1450, -1000, 2034, -1000,
	-1000, -1000, 34507, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22755, 8242, -1000, 816, 3152, 1818, -1000, 12659,
	-1000, 8242, -1000, 16445, 1548, 1809, 1809, 1809, 1809, 1809,
	1277, -1000, -1000, -1000, -1000, 436, 1336, 436, -1000, 1336,
	-1000, 12659, 12659, -1000, 12659, 12659, -1000, -1000, 12659, 3116,
	1871, 1649, -277, -1000, 1831, 1091, -1000, 13290, 1263, -1000,
	-1000, -1000, 12659, 12659, -1000, -1000, -1000, -1000, -1000, 45537,
	-1000, -196, -196, -196, -196, -196, -1000, -1000, -1000, -1000,
	-196, -196, -196, -196, -196, -196, -196, -196, -196, -196,
	-196, -196, 222, 1885, -1000, 18338, 31447, 31447, 31447, 31447,
	31447, -1000, 2022, 2021, -1000, 2019, 2009, 2008, 347, 40029,
	1807, 1548, 356, 30835, -1000, 1885, -1000, 39417, 764, 702,
	701, 690, 8242, 12659, 2226, 31447, 1825, 1825, -1000, 746,
	-1000, -1000, -1000, -128, -165, -1000, -1000, -1000, 24648, -1000,
	4157, 348, -1000, 348, 348, 981, 2119, 981, 1343, 25910,
	1449, 1448, 1447, 981, 981, 1342, 1446, 25910, 1445, 580,
	348, 348, 348, 1341, 1444, 215, -1000, 1442, 1374, 1332,
	348, -1000, -266, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 348, -1000, 40641, 599, 2073, 601, 1539, 1539, 1539,
	-1000, 1539, -1000, -1000, -1000, 1951, -1000, 1144, -1000, -1000,
	-1000, -1000, -1000, 1885, -431, 1340, 12659, 2257, -1000, 2067,
	-1000, 2066, 2065, 1441, -1000, -1000, 1723, 941, 1714, 1695,
	936, -21, -1000, -1000, 1948, -1000, 922, -1000, -1000, 932,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 892, 1805,
	-1000, 1800, 1854, -1000, 1786, 117, 34507, -1000, -1000, 2172,
	-1000, -1000, -1000, 2117, 981, 981, 981, 1986, -1000, -1000,
	-1000, -1000, 1691, 1853, -1000, 4599, 47373, 47373, 47373, -1000,
	-288, 225, -1000, 43701, 146, 190, 456, 1563, 34507, 43701,
	-1000, -1000, -1000, 13290, -1000, -1000, 2171, -1000, 3152, 1726,
	-1000, -1000, -21, 34507, -1000, 43701, 910, 44925, 662, 43701,
	139, 151, -1000, 43701, 43701, 2233, 43701, 1849, 1440, -1000,
	-1000, 265, 44313, 1539, 822, -1000, -1000, 600, -1000, 277,
	1559, 30219, 29607, 47373, 2064, 2063, 1551, 34507, 47373, -1000,
	-1000, 47985, 1550, 13290, 47373, -1000, -1000, 47373, 47373, -1000,
	-1000, -1000, -1000, 1216, 6980, -1000, -1000, 1548, -1000, 12659,
	3152, -1000, -1000, 744, -1000, -196, -196, -196, -196, -196,
	1548, 1917, 1917, -1000, 1917, 1919, -1000, 1917, 2, 1917,
	-1, 1548, 1548, 1548, 1737, 1704, 1676, 1584, 1546, 12659,
	12659, 12659, 1885, -192, -1000, 1277, 13290, 1624, 1609, -1000,
	-1000, 1549, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1985, 18338, 1885, 15183, -1000, 47373, 1887, -1000, 1053, 815,
	1052, 1027, 743, 742, 318, 1937, 1984, 335, -1000, -1000,
	-1000, -1000, 2020, -1000, 2018, 2012, -1000, -1000, -1000, 1912,
	-1000, -1000, 1852, 1885, 47373, 12659, 764, -1000, 1885, 1885,
	1885, 1548, 1419, 2215, 1825, -1000, -1000, 882, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1336, 981, 25910, -1000, -1000,
	-1000, -1000, -1000, 1435, 1434, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-269, -1000, 1784, -1000, 1917, 1917, 2062, -1000, 855, -1000,
	-1000, -1000, -1000, -1000, 47373, -1000, 12659, 2170, -1000, 3152,
	-133, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 881, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-21, 1433, -21, 1338, -1000, 1337, -1000, -1000, -376, 1916,
	224, -1000, 981, 924, 919, 1432, 34507, 133, 41865, -1000,
	4599, 4599, 4599, 156, 127, -1000, 1170, -1000, -1000, -1000,
	1431, 1430, 1428, 1726, 200, 1147, 172, -1000, 2164, -1000,
	-1000, 1277, 1130, -87, -1000, 151, -1000, -1000, -1000, 43701,
	151, -1000, -1000, 171, 1849, 1849, 43701, 1849, -1000, -1000,
	47985, 575, 4599, 4599, 1971, 855, 2061, 601, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1547, -1000, 840, -1000, 638, 575, 47985, 1277, 866, 1179,
	-1000, 2232, -1000, -1000, -1000, 3152, 22124, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 289, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 12659, 12659, 12659, 12659, -1000, 1546,
	1546, 1546, 12659, 1548, 1427, 1277, 12659, 12659, 946, -1000,
	-1000, 2155, 1742, 1846, -1000, -1000, 7611, 1548, 2052, 1782,
	-1000, 38193, 1780, -1000, 2215, 18338, 13290, 13290, 13290, 13290,
	-1000, -1000, 13290, 1915, -1000, 13290, -1000, -1000, -1000, -1000,
	-1000, 47373, 338, -1000, 13290, 1780, 845, -1000, 47373, 47373,
	47373, -1000, 1424, 2181, -1000, -1000, 1336, -1000, -1000, -1000,
	-1000, -1000, 791, 40641, 2153, 2153, 1539, 1539, 1774, -1000,
	1546, 1885, -1000, 1885, 1885, 1885, 1885, 1885, 1885, 1885,
	1885, 1885, 1885, 1885, -1000, -1000, 877, -1000, 872, 1656,
	1652, -1000, 40641, -1000, -1000, 917, -1000, -1000, -1000, -1000,
	-1000, 2193, -1000, 133, -1000, 1423, 276, 300, -1000, 256,
	248, 247, 242, 237, -1000, -1000, -1000, -1000, 461, 156,
	-1000, -85, 1331, 993, 2114, 127, -1000, 1328, 1324, 1314,
	1299, 517, -1000, -1000, -1000, -1000, 202, 190, -1000, 442,
	1422, -1000, 2091, 2088, 2167, 151, 2167, 138, 1849, 1586,
	-1000, -1000, 1540, -1000, -1000, 1914, 1539, 1539, -1000, 1538,
	-1000, -1000, 47373, -1000, 575, 2146, 2145, 1885, 2226, 31447,
	6980, -1000, -1000, -1000, -1000, 1546, 1546, 1546, 1546, -1000,
	-1000, -1000, 157, -1000, -1000, 1546, 1546, 2215, 2209, 2060,
	-1000, 1885, -1000, -1000, 1885, 252, -1000, 47373, 2181, -1000,
	1277, 1277, 1277, 1277, 1277, 47373, 1277, 1772, 1885, 37581,
	-1000, 40029, 1770, 1770, 1770, -97, -1000, -1000, 791, -1000,
	1511, 981, 1416, -1000, -1000, -1000, -1000, -1000, 462, 47373,
	-434, 12659, -1000, -1000, -1000, -1000, -1000, -1000, 1721, -1000,
	224, -1000, -1000, 319, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2096, 2095, 316, -1000, 1413, 1412, -1000, 469, 1326,
	757, -203, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 441, 1498, -1000, 169, -1000, -1000, 630,
	2078, 2080, 2207, -1000, 43701, 2167, -1000, -1000, -1000, -1000,
	165, 165, 40641, 1971, 1913, -1000, -1000, -1000, 12659, -1000,
	931, 2222, 1848, -1000, -1000, -1000, -1000, -1000, 1548, 192,
	-301, -1000, -1000, 1005, 13290, 2256, -1000, 1846, 1885, -1000,
	224, -1000, -1000, 1719, -1000, -1000, -1000, 764, -1000, -1000,
	-1000, 1885, -1000, -1000, 1283, -1000, 34507, -1000, -1000, -1000,
	-1000, 1546, 791, -1000, 329, 6080, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1273, -1000, -1000, 1307, 408, 168,
	-1000, 2166, -1000, 1912, 1227, 2088, 2205, 2085, 2082, -1000,
	1411, -291, -1000, 1712, 1910, 40641, 3152, 1694, -1000, 47373,
	2220, 2203, -1000, -1000, 2033, -281, -304, 1548, 239, 239,
	1847, 18338, 1846, 1548, -1000, -1000, 24648, -1000, 1909, -434,
	-1000, 791, -1000, 407, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 13290, 13290, 25279, 6080, 150,
	-1000, 128, -1000, -1000, -1000, 1410, -1000, 1015, -1000, 1408,
	-1000, 2202, 2201, -1000, 185, 791, 40641, 1690, -1000, 931,
	2051, -198, 13290, 13290, -1000, 2032, -1000, -1000, -1000, 249,
	-1000, 999, 312, 996, -1000, 1531, -1000, 1836, -1000, 1672,
	-1000, 4599, 47373, -1000, -1000, 1489, 1339, -1000, 1198, 1161,
	216, 209, 1202, -1000, -1000, -1000, -1000, -440, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1407, 1406, 41253, -1000, 1655,
	791, -1000, 438, -1000, 47373, -1000, 1277, 1832, -1000, 1277,
	-294, 1140, -1000, -1000, -1000, -1000, -1000, 47373, 1548, 24648,
	221, 1651, -1000, -1000, -1000, 1278, -1000, 13290, 6080, 2192,
	2191, 2189, 2139, 24648, 5848, -1000, -1000, -1000, -1000, 112,
	1726, 791, -1000, 426, 1827, -1000, 2165, 13290, -302, 249,
	-1000, 38805, -1000, -1000, 1404, -243, 1983, 184, 1124, 6080,
	-1000, 1107, -441, 444, 224, 703, 12659, -1000, -1000, -1000,
	43701, -1000, 1885, 47373, 1885, -1000, -307, -1000, 40029, -1000,
	-1000, 1387, 1982, 1981, 2231, -1000, -1000, -1000, -1000, -1000,
	-1000, 6080, 38193, -1000, -442, 6080, 4515, -1000, -1000, -1000,
	5840, -1000, -1000, -1000, -1000, 197, -1000, -1000, 3152, 1726,
	13921, -1000, -1000, -1000, -1000, 385, -1000, -1000, 2255, -1000,
	2253, 708, 708, -1000, -444, -1000, 5584, -445, 616, 6080,
	1197, -1000, 13290, -1000, 703, -1000, 1546, 1548, -1000, 1980,
	12659, 1978, -1000, -1000, -1000, 471, 1295, -1000, 5444, 1108,
	6080, -1000, -447, 615, 6080, -1000, 1069, -1000, -1000, -1000,
	-324, 1190, -325, -1000, -1000, -1000, -1000, -1000, 5232, -1000,
	-451, 6080, -1000, -326, -1000, 614, 4996, -453, -1000, -1000,
	606, 6080, -1000,
}

var yyPgo = [...]int{
	0, 2667, 2666, 24, 172, 2665, 252, 2664, 2662, 15,
	2660, 30, 27, 20, 46, 2659, 2399, 2397, 2393, 2390,
	2388, 2657, 9, 2656, 2655, 2377, 2654, 2652, 2374, 2372,
	2370, 2349, 2647, 2643, 2642, 2346, 2344, 2342, 2, 2640,
	22, 2639, 8, 146, 167, 2637, 3, 2636, 2635, 12,
	2634, 2633, 2340, 2631, 2630, 2628, 99, 2627, 2330, 2290,
	2626, 2288, 2282, 2625, 2623, 2280, 2274, 2272, 2622, 187,
	2619, 2618, 2617, 176, 2616, 158, 2612, 2609, 2608, 118,
	2607, 2832, 107, 57, 117, 906, 2606, 10, 53, 250,
	2603, 6, 2599, 114, 2597, 109, 2596, 2593, 166, 2592,
	145, 55, 96, 2591, 2586, 186, 2585, 2584, 2582, 108,
	2580, 2577, 174, 666, 2576, 2575, 139, 2574, 56, 169,
	39, 58, 2572, 2569, 2568, 2567, 2565, 26, 254, 2563,
	100, 148, 2561, 2559, 88, 2558, 2557, 79, 2556, 2555,
	2554, 143, 41, 2553, 2552, 43, 2551, 45, 54, 2550,
	65, 2549, 141, 2547, 2544, 2543, 2542, 2536, 67, 2532,
	70, 2531, 142, 153, 1281, 2530, 2529, 29, 7, 2528,
	37, 13, 4, 49, 18, 73, 60, 137, 116, 102,
	2527, 52, 40, 125, 94, 2526, 97, 76, 36, 2525,
	152, 2524, 81, 163, 138, 140, 161, 2523, 2521, 2520,
	175, 2516, 130, 87, 2515, 98, 1123, 168, 2514, 2511,
	106, 2509, 2508, 2506, 2505, 2504, 84, 119, 2495, 2494,
	170, 177, 171, 95, 2493, 66, 3392, 3916, 181, 3068,
	242, 162, 2492, 50, 2489, 2488, 2487, 2624, 111, 14,
	78, 173, 2486, 110, 44, 89, 2485, 2484, 2480, 2479,
	2478, 2476, 2472, 2470, 207, 184, 2469, 2468, 2467, 2463,
	178, 80, 2461, 136, 129, 127, 2460, 150, 33, 2459,
	2458, 133, 122, 2457, 2456, 2454, 2452, 134, 83, 157,
	17, 2451, 113, 144, 128, 2448, 85, 2447, 2444, 149,
	1696, 2443, 2442, 2440, 2439, 105, 120, 2438, 2437, 64,
	48, 23, 74, 32, 2436, 2435, 86, 90, 2434, 35,
	2433, 5, 11, 19, 2432, 2431, 2423, 2421, 2420, 2419,
	2418, 93, 2415, 2413, 71, 2406, 2403, 2402, 34, 2395,
	2382, 2362, 147, 123, 42, 164, 236, 16, 2359, 2357,
	38, 2351, 126, 2337, 72, 2333, 61, 2328, 2325, 62,
	2323, 2320, 63, 2310, 2307, 165, 2060, 253, 2304, 151,
	124, 51, 59, 2302, 91, 2292, 0, 1425, 154, 233,
	2286, 2284, 2277,
}

var yyR1 = [...]int{
	0, 365, 365, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 91, 91, 6, 90, 90,
	186, 186, 186, 186, 185, 185, 92, 92, 89, 89,
	98, 7, 7, 8, 8, 11, 11, 72, 72, 12,
	13, 13, 13, 13, 368, 368, 107, 107, 105, 105,
	106, 106, 183, 183, 14, 14, 14, 190, 190, 195,
	195, 195, 198, 198, 198, 198, 172, 173, 174, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 338, 338, 347, 347, 347, 348, 348, 346, 346,
	346, 346, 346, 350, 350, 351, 351, 349, 349, 349,
	349, 353, 353, 354, 354, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 341,
	341, 341, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 356, 356, 357, 357, 358, 358,
	359, 359, 359, 359, 360, 360, 360, 360, 360, 361,
	361, 361, 361, 361, 361, 361, 362, 362, 363, 363,
	2, 319, 319, 320, 320, 321, 321, 321, 321, 322,
	322, 323, 323, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 26, 222, 222, 219, 219, 219, 220,
	220, 221, 221, 221, 340, 340, 340, 334, 334, 334,
	336, 336, 335, 335, 335, 337, 337, 342, 342, 342,
	342, 342, 344, 344, 344, 344, 344, 344, 345, 345,
	345, 343, 343, 50, 50, 51, 51, 51, 161, 161,
	161, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 318, 318, 318, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 291, 292, 292, 292, 292, 292, 292, 292, 292,
	278, 278, 279, 279, 279, 279, 279, 268, 268, 268,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 244, 244, 244, 244, 250, 250, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 249, 249, 249,
	249, 249, 249, 249, 249, 251, 251, 251, 251, 251,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 253, 253, 253,
	253, 253, 253, 253, 253, 277, 277, 255, 255, 254,
	254, 254, 271, 271, 272, 272, 272, 269, 269, 269,
	270, 270, 258, 259, 273, 260, 260, 260, 261, 261,
	261, 262, 262, 267, 267, 266, 266, 266, 266, 266,
	266, 263, 263, 263, 263, 264, 264, 265, 276, 276,
	276, 276, 276, 256, 37, 304, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 305, 305, 212,
	212, 213, 213, 281, 281, 303, 303, 302, 302, 301,
	301, 301, 290, 290, 298, 298, 298, 298, 298, 298,
	298, 298, 285, 285, 285, 284, 284, 286, 286, 289,
	289, 300, 300, 299, 299, 282, 282, 282, 306, 306,
	306, 306, 306, 283, 283, 283, 283, 283, 307, 287,
	287, 288, 288, 288, 312, 313, 311, 311, 311, 311,
	311, 124, 124, 124, 294, 294, 294, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 296, 296, 296, 296, 296,
	297, 297, 297, 297, 297, 297, 364, 364, 364, 316,
	316, 315, 315, 52, 53, 57, 57, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 160,
	160, 160, 217, 217, 310, 308, 308, 309, 309, 17,
	17, 55, 55, 339, 339, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 314, 314, 314, 19, 19, 58,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 86, 204, 204, 203, 203,
	202, 202, 202, 205, 205, 205, 205, 242, 242, 242,
	60, 60, 60, 64, 64, 67, 67, 67, 65, 66,
	29, 30, 30, 30, 30, 31, 218, 218, 62, 62,
	63, 63, 63, 63, 78, 78, 370, 370, 61, 371,
	69, 70, 70, 71, 71, 71, 208, 208, 75, 75,
	75, 73, 73, 73, 74, 74, 80, 80, 84, 84,
	84, 84, 83, 83, 83, 83, 163, 163, 168, 234,
	234, 144, 144, 164, 164, 169, 169, 169, 170, 170,
	171, 171, 171, 171, 171, 166, 166, 165, 165, 167,
	132, 132, 232, 232, 232, 232, 231, 231, 231, 231,
	231, 231, 88, 88, 93, 93, 95, 95, 95, 95,
	95, 95, 99, 146, 146, 117, 117, 118, 118, 118,
	118, 118, 130, 130, 182, 182, 181, 181, 184, 184,
	94, 96, 96, 96, 96, 102, 102, 103, 103, 104,
	104, 216, 216, 239, 239, 239, 108, 108, 108, 110,
	109, 109, 109, 109, 109, 109, 111, 111, 97, 97,
	293, 293, 280, 246, 246, 247, 372, 372, 372, 372,
	112, 112, 114, 115, 115, 113, 113, 113, 113, 113,
	119, 119, 116, 120, 120, 120, 120, 121, 121, 85,
	85, 85, 85, 85, 85, 85, 85, 201, 201, 123,
	123, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 140, 140, 140, 140, 140, 140, 125, 125, 125,
	125, 125, 125, 125, 79, 79, 141, 141, 141, 101,
	100, 100, 82, 82, 81, 81, 142, 142, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 135, 135, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 369, 369, 137,
	136, 136, 136, 136, 136, 136, 76, 76, 76, 76,
	76, 240, 240, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 153, 153,
	77, 77, 151, 151, 152, 154, 154, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 127, 127, 127, 127, 127, 127, 127, 127, 129,
	129, 129, 155, 155, 143, 143, 87, 156, 156, 157,
	158, 158, 159, 159, 162, 175, 175, 175, 176, 176,
	176, 176, 131, 131, 177, 177, 177, 126, 126, 126,
	126, 126, 126, 126, 180, 180, 179, 179, 178, 178,
	178, 178, 178, 178, 187, 187, 145, 145, 148, 148,
	147, 149, 188, 188, 192, 192, 192, 192, 189, 189,
	193, 193, 193, 193, 196, 196, 197, 197, 197, 194,
	194, 194, 191, 191, 191, 236, 236, 236, 199, 199,
	209, 209, 206, 206, 207, 207, 200, 200, 257, 257,
	257, 215, 215, 214, 214, 214, 210, 210, 210, 211,
	211, 233, 233, 229, 229, 235, 235, 230, 230, 237,
	237, 238, 238, 317, 317, 274, 274, 327, 327, 275,
	275, 328, 328, 330, 330, 325, 325, 326, 326, 329,
	329, 32, 331, 331, 332, 332, 333, 333, 333, 333,
	33, 34, 34, 34, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 228,
	228, 228, 228, 228, 228, 226, 226, 226, 226, 226,
	366, 367,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 4, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 4, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 4, 4, 4, 4, 4, 2, 1,
	2, 1, 2, 2, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 3, 1,
	1, 0, 1, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 3, 5, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 3, 3, 3,
	4, 5, 3, 3, 4, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	2, 2, 4, 4, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 1, 5, 1, 3, 5, 4, 3,
	5, 3, 8, 10, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 9, 2, 2, 0,
	1, 2, 0, 1, 7, 1, 3, 8, 8, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	3, 4, 3, 5, 5, 5, 4, 4, 4, 2,
	2, 2, 6, 2, 4, 4, 4, 5, 8, 6,
	3, 5, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 3, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 3, 2, 0, 1, 1,
	2, 4, 1, 1, 1, 2, 4, 4, 1, 1,
	2, 3, 4, 4, 5, 3, 1, 1, 3, 3,
	1, 1, 1, 1, 0, 3, 1, 1, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 0, 1,
	1, 0, 1, 1, 0, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 2, 6, 0,
	1, 0, 3, 0, 1, 0, 2, 2, 4, 1,
	2, 2, 2, 2, 2, 0, 2, 1, 3, 3,
	1, 3, 0, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 4, 1, 3,
	1, 1, 2, 2, 4, 2, 6, 1, 4, 6,
	3, 2, 0, 3, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 3, 2, 2, 2, 12, 11,
	1, 3, 3, 4, 3, 0, 0, 3, 4, 3,
	1, 3, 3, 2, 1, 1, 3, 1, 1, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 1, 1, 5, 6, 6, 6, 5, 5,
	5, 6, 5, 5, 6, 5, 5, 5, 5, 6,
	5, 5, 5, 4, 4, 5, 5, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 3, 6,
	6, 4, 6, 6, 4, 8, 8, 8, 8, 4,
	6, 7, 7, 7, 9, 4, 7, 5, 4, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 1, 3, 1, 0, 2, 1,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 1, 1, 0, 2, 4, 2, 4, 1,
	3, 5, 4, 6, 0, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 3, 3, 3, 1, 3,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 3,
	3, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	3, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 2, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -365, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -92, 29,
	-54, 182, -53, 185, 184, 221, 186, 214, 64, 344,
	-67, 347, 348, -370, -218, 272, 273, 20, 37, 349,
	351, 30, 31, 235, 289, 291, 316, -4, 517, 183,
	345, 216, 215, 26, -6, -7, -366, 68, 636, -158,
	15, -69, -371, -69, -72, 9, 10, 8, 444, -69,
	-291, -216, 108, 68, 23, -211, -222, 88, 435, 190,
	-220, 285, 287, -209, -210, -219, 245, 255, 44, 201,
	200, 256, 191, 285, 191, 192, 194, 435, 190, 228,
	227, 285, 287, 191, -113, -237, -226, -227, 303, 72,
	-225, 461, 465, 468, 469, 474, 293, 81, 325, 326,
	317, 327, 211, 414, 286, 292, 295, 318, 603, 328,
	330, 331, 455, 456, 194, 204, 621, 310, 212, 514,
	256, 631, 624, 297, 404, 491, 344, 360, 352, 375,
	515, 574, 267, 343, 421, 492, 300, 260, 323, 575,
	410, 416, 270, 347, 493, 430, 236, 576, 264, 266,
	265, 250, 460, 271, 36, 217, 371, 306, 245, 577,
	495, 570, 494, 239, 507, 35, 27, 238, 433, 99,
	578, 334, 418, 496, 392, 335, 234, 579, 519, 304,
	417, 367, 316, 119, 243, 282, 336, 580, 393, 397,
	581, 422, 290, 281, 582, 583, 337, 584, 193, 296,
	497, 585, 246, 424, 301, 391, 202, 516, 213, 48,
	225, 425, 395, 401, 586, 333, 587, 588, 589, 590,
	314, 312, 498, 313, 315, 257, 262, 499, 53, 188,
	399, 398, 400, 263, 420, 380, 378, 591, 592, 305,
	208, 593, 594, 379, 18, 595, 596, 428, 308, 597,
	598, 599, 500, 490, 600, 601, 419, 394, 396, 244,
	118, 602, 311, 415, 320, 518, 294, 604, 339, 224,
	219, 429, 329, 605, 606, 607, 608, 609, 288, 287,
	348, 321, 501, 349, 268, 610, 611, 502, 612, 613,
	254, 237, 432, 423, 52, 406, 614, 324, 340, 409,
	345, 231, 503, 504, 505, 506, 7, 261, 302, 413,
	322, 269, 255, 258, 382, 226, 615, 616, 369, 370,
	346, 229, 221, 113, 431, 569, 285, 341, 51, 232,
	617, 618, 259, 233, 350, 299, 372, 191, 135, 376,
	421, 182, 411, 412, 418, -285, 419, 227, 230, -242,
	191, -204, 410, 290, 311, 465, 233, 234, 192, 193,
	32, 423, 422, 414, -237, 195, 350, -78, 186, 222,
	-113, -49, 72, 274, -49, 29, 72, 72, 36, 72,
	349, 413, 413, 75, 518, 236, 21, -356, -337, 320,
	-355, -335, 183, 182, 10, 184, 325, 326, 327, 192,
	8, 30, 603, 209, 328, 329, 6, 214, 330, 331,
	228, 9, 332, -340, 74, 72, -225, 21, -356, -337,
	320, -213, -212, 342, 401, -91, 573, -89, -98, -239,
	-237, -226, 74, -200, 196, 346, -71, 5, -9, -3,
	517, -176, 17, 16, -75, 54, 55, -70, -83, 126,
	-85, -237, -122, 91, -128, 28, 72, -225, 24, -127,
	303, 222, -123, -150, -226, -149, -101, 135, -241, 124,
	125, 132, 92, 178, -135, -133, -134, -136, -138, -139,
	74, 73, 82, 75, 76, 77, 78, 83, 84, 85,
	-229, -227, -224, 461, 465, 468, 469, 474, -147, -366,
	136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 58, 59, 459, 190, 445, 446, 373, 8,
	447, 448, 449, 513, 211, 453, 94, 47, 558, 434,
	443, 442, 441, 439, 440, 436, 438, 437, 455, 456,
	197, 435, 130, 444, 478, 479, 480, 481, 482, 483,
	484, 485, 487, 488, 486, 462, 463, 464, 466, 467,
	470, 471, 472, 473, 475, 476, 477, 520, 187, 183,
	186, 90, 23, 25, 521, 242, 93, 358, 387, 452,
	16, 20, 205, 189, 376, 203, 134, 199, 206, 276,
	278, 182, 62, 522, 277, 411, 523, 524, 525, 526,
	366, 364, 275, 527, 10, 26, 215, 249, 528, 362,
	184, 240, 97, 98, 530, 41, 40, 309, 279, 216,
	531, 363, 532, 533, 19, 65, 207, 11, 201, 230,
	630, 534, 289, 13, 117, 14, 535, 536, 537, 538,
	196, 110, 192, 620, 60, 247, 539, 356, 540, 541,
	542, 543, 544, 357, 87, 545, 546, 107, 547, 56,
	489, 32, 235, 571, 450, 548, 549, 38, 37, 386,
	390, 385, 550, 402, 108, 17, 30, 551, 552, 223,
	389, 355, 384, 572, 553, 554, 252, 63, 342, 365,
	634, 33, 66, 220, 338, 307, 42, 88, 15, 248,
	61, 34, 457, 114, 635, 368, 198, 227, 556, 426,
	251, 557, 115, 361, 573, 209, 109, 351, 185, 319,
	273, 210, 559, 291, 560, 241, 116, 412, 561, 562,
	454, 29, 214, 272, 354, 200, 563, 253, 284, 274,
	283, 564, 565, 298, 43, 632, 619, 191, 39, 96,
	388, 353, 383, 195, 451, 228, 280, 5, 44, 31,
	407, 9, 332, 64, 67, 377, 374, 566, 381, 633,
	12, 567, 458, 517, 427, 89, 568, 408, -69, -69,
	-69, -189, 346, -196, -193, 422, 423, -194, -197, -191,
	-150, 401, 600, 601, 421, 376, 420, -229, -237, -226,
	303, 222, 135, 462, 463, 464, 94, 373, 445, 478,
	436, 438, 434, 437, 435, 28, 479, 24, 85, 480,
	459, 197, 8, 178, 466, 467, 481, 482, 483, 58,
	439, 440, 513, 130, 91, 484, 485, 83, 487, 488,
	558, 444, 59, 486, 190, 472, 471, 470, 473, 447,
	448, 84, 441, 442, 443, 47, 476, 475, 477, -2,
	-6, 6, -113, -292, -279, -283, -229, -226, -227, -228,
	218, 206, -307, 72, -225, 303, 222, 50, 86, 55,
	54, 203, 192, 194, 444, -207, 197, -207, 228, 227,
	-221, 253, -207, -207, 191, -220, 100, 100, -55, -113,
	-339, -334, -340, -206, 197, -229, -206, -206, -206, -206,
	-206, -206, -206, -113, 179, -105, -113, 72, 29, -205,
	108, 12, 435, 190, 191, 227, 228, 194, -287, 11,
	110, 231, 231, 231, 232, 231, -203, 413, 415, 229,
	416, 417, 12, -86, 108, 19, -366, -176, -176, 127,
	72, 349, 195, -63, -3, -13, -11, -12, -9, 100,
	-130, 23, 29, 29, 74, 51, 29, -44, -43, -45,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 29, -318, 68, -274, 401, 72, -331, -332,
	-113, 75, 75, 66, 311, 66, 69, 195, 69, 66,
	-357, 321, 68, -357, 287, 321, 322, 255, 285, 194,
	-357, -357, 287, -357, -357, -357, -357, -357, 413, -357,
	-357, -357, 323, 324, -357, 411, 194, -357, -357, -357,
	-357, -357, 71, 66, 69, 311, 66, 11, 66, -304,
	135, 334, 335, 336, 337, 333, 311, 338, 339, 340,
	231, 341, -4, -89, 69, -180, -366, 191, 426, -8,
	-6, -366, 21, 22, -367, 70, -91, -177, 19, 30,
	-131, 75, 78, -159, -162, -85, -237, 50, -73, 21,
	22, 80, 11, -232, 90, 88, 89, 107, -231, 23,
	72, -225, -226, 74, -227, -228, 179, -85, -125, 110,
	91, 108, 109, 93, 121, 120, 131, 124, 125, 126,
	127, 128, 129, 130, 122, 123, 134, 100, 101, 102,
	103, 104, 105, 106, -201, -366, -101, -366, 179, -366,
	179, 180, 181, 179, -128, -128, -128, -128, -128, -128,
	-128, -366, 179, 179, -366, -366, -366, -366, -366, -9,
	-142, -85, 517, -366, -366, -366, -366, -366, -366, -366,
	-366, -366, -366, -366, -366, -366, -366, -366, -153, -85,
	-366, -366, -369, -137, -366, -369, -137, -369, -137, -369,
	-366, -369, -137, -369, -137, -369, -369, -137, -369, -366,
	-366, -366, -366, -366, -366, -366, -366, -366, -366, -366,
	-366, -366, -366, -366, -366, -366, -366, -366, -366, -366,
	-366, -366, -366, -366, -366, -366, -366, -366, -200, -200,
	11, -105, -106, -116, -237, 69, -190, -195, 424, 426,
	346, -194, -194, -236, -229, 74, 28, 100, 29, 179,
	-158, -69, 70, 69, -283, -244, -250, -252, -251, -253,
	-248, -249, 373, 376, 380, 378, 374, 379, 135, 377,
	382, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 29, 217, 369, 370, 371, 372, 393, 394, 395,
	396, 397, 398, 399, 400, 352, 375, 515, 353, 354,
	355, 356, 357, 358, 360, 361, 362, 363, 364, 365,
	366, 367, -244, -244, -244, -244, 72, 231, -226, -307,
	68, -229, -113, -222, -220, 72, 91, 72, -112, -229,
	-237, -119, -229, -237, 254, -343, -342, -334, -337, -207,
	-221, -334, 259, 257, 258, 69, 195, 69, 195, 71,
	-105, 24, 66, -107, -113, 72, 72, -112, -119, -336,
	-334, -337, -238, -237, -223, 520, 187, 21, 183, 186,
	90, 23, 25, 521, 242, 93, 358, 135, 462, 463,
	464, 387, 452, 16, 20, 205, 94, 189, 373, 376,
	203, 134, 199, 206, 276, 278, 445, 478, 182, 62,
	522, 436, 438, 434, 437, 277, 435, 411, 523, 524,
	525, 526, 366, 364, 275, 28, 527, 10, 479, 26,
	215, 249, 22, 528, 128, 362, 184, 240, 97, 98,
	530, 41, 40, 309, 24, 279, 216, 85, 531, 480,
	363, 532, 533, 19, 65, 207, 11, 201, 230, 630,
	534, 289, 13, 459, 117, 14, 535, 536, 537, 538,
	197, 196, 110, 192, 620, 60, 247, 8, 539, 356,
	540, 541, 542, 543, 544, 357, 178, 87, 545, 546,
	107, 547, 56, 466, 467, 489, 45, 32, 235, 481,
	482, 571, 483, 450, 548, 549, 38, 37, 386, 390,
	385, 550, 402, 58, 108, 17, 439, 440, 30, 551,
	552, 513, 223, 389, 355, 384, 572, 553, 554, 130,
	252, 63, 91, 342, 484, 485, 83, 365, 634, 33,
	66, 220, 338, 307, 42, 88, 15, 248, 61, 34,
	457, 114, 635, 487, 368, 198, 227, 556, 426, 251,
	557, 115, 488, 361, 573, 209, 109, 351, 185, 558,
	444, 319, 273, 210, 559, 291, 59, 560, 241, 116,
	486, 190, 412, 561, 6, 562, 454, 29, 214, 272,
	354, 200, 563, 253, 284, 274, 283, 564, 49, 565,
	298, 43, 472, 471, 470, 473, 632, 57, 447, 448,
	619, 191, 39, 96, 388, 353, 383, 195, 451, 228,
	84, 280, 5, 44, 31, 407, 9, 332, 64, 67,
	441, 442, 443, 47, 377, 374, 566, 476, 381, 475,
	477, 633, 95, 12, 567, 458, 517, 427, 89, 568,
	408, 69, -205, 74, -241, -85, -207, -207, -113, -113,
	-113, -113, -113, -205, -205, -205, -205, -202, 11, 110,
	11, -202, -202, -85, -128, -334, 437, 126, -237, 72,
	72, 349, 72, 33, -44, -44, 74, -44, 69, 100,
	-44, 70, -142, -317, 620, 69, -333, 23, 426, 427,
	402, -359, 191, 230, 227, 66, -359, -355, 329, -336,
	-335, -334, -357, -358, -229, -357, -357, -357, 413, -357,
	-357, -357, -357, -357, -357, -357, -357, -340, -359, 289,
	69, -359, -336, -334, 333, 333, 333, 333, 333, 333,
	-98, 23, -179, -178, -230, -226, -227, -228, 218, -229,
	-223, -113, 427, 428, -9, -186, 87, 9, 110, 69,
	18, 69, -175, 25, 26, 179, -129, 51, 75, 78,
	-208, 49, -113, -85, -85, -85, -140, 83, 91, 84,
	85, -231, 218, 126, -238, -230, -227, -226, 303, 222,
	-223, -128, -141, -147, -101, 79, 110, 108, 109, 93,
	-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
	-128, -128, -128, -128, -128, -240, 72, 74, 72, -230,
	-81, -84, 126, -85, -237, -230, -127, 83, -127, -229,
	-229, -73, -230, 414, -230, -73, -73, -73, -73, -73,
	-367, 69, -367, -9, -81, -81, -81, -367, -85, -85,
	-81, -81, -150, 74, -81, -150, 74, -81, -128, 450,
	451, 452, -81, -81, -73, -151, -152, 95, -150, -81,
	-367, -128, -229, -229, -81, -82, -81, -81, -81, -367,
	-367, -84, -81, -84, -81, -81, -367, -367, -367, -367,
	-81, -81, -81, -81, -81, -81, -81, -81, -81, -81,
	-81, -81, -115, 87, -113, -88, -93, -95, -96, -117,
	-100, -366, -94, -97, -113, -101, 72, 489, -113, -105,
	-368, 11, 67, -368, 69, 179, -193, -196, 69, 425,
	427, 428, -190, -261, 134, 66, 86, -85, -230, -238,
	-176, -75, -294, -295, 627, 404, 491, 376, 28, 492,
	134, 81, 493, 236, 36, 192, 495, 433, 334, 496,
	497, 202, 498, 499, 500, 295, 501, 345, 502, 503,
	504, 505, 322, 5, -279, -281, -282, -283, -298, 206,
	-306, 198, 200, 201, 44, -284, 207, 192, 45, -245,
	-269, 406, 407, -255, 68, -254, 68, -254, 381, 373,
	376, 374, -254, -254, -254, -254, -254, -260, 376, -260,
	-260, -260, -260, 374, 68, 68, -255, -255, -255, -271,
	68, -271, 368, -272, 68, -272, -272, -272, -272, -245,
	-245, -245, -245, -307, -307, -307, -85, -233, 67, 23,
	194, -267, -266, -263, -264, -265, -262, 28, 24, -267,
	-50, 242, 212, 179, 68, 179, 245, 246, -338, 69,
	28, -344, 286, -113, 222, -113, -113, -334, -334, -340,
	-314, 210, 205, -113, 69, 69, -113, 74, 72, 72,
	-130, -288, 11, 110, -205, -237, -237, -113, -130, -205,
	-79, 218, 67, -369, -367, 72, -128, -43, -127, 70,
	-114, 87, 74, -332, -239, 401, 427, -360, 126, -229,
	-359, -360, -363, 517, 195, 70, 69, -357, -360, 307,
	289, -360, 11, -305, 19, -100, -366, -367, 69, 179,
	-57, -56, 187, 184, 185, 188, 189, -310, 404, 183,
	239, 238, 224, -367, -185, 34, 35, -229, 52, -131,
	-131, -162, -199, 19, 11, 47, 47, -74, 57, 83,
	84, 85, 179, -366, -141, -128, -128, -128, -79, 90,
	-367, 69, -367, 179, -82, -81, -81, -81, -81, -81,
	-85, -367, -367, -367, -367, 69, 67, 23, -367, 67,
	-367, 11, 11, -367, 11, 11, -367, -367, 11, -128,
	-128, -128, -367, -367, -81, -154, -152, 97, -85, -367,
	-367, -367, 69, 69, -367, -367, -367, -367, -163, 457,
	-163, -367, -367, -367, -367, -367, -163, -163, -163, -163,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-367, -367, -183, 114, -113, 29, 69, -108, -110, -109,
	-111, 56, 60, 62, 57, 58, 59, 414, 63, -216,
	-88, -99, 47, -366, -118, 114, -120, 23, -239, 64,
	196, 65, -366, -366, -183, 67, -88, -88, -116, -237,
	126, -195, -198, 429, 426, 432, 72, 74, 179, -177,
	69, -290, 100, -290, -290, 29, 376, 134, -290, -290,
	-290, -290, -290, 494, 494, -290, -290, -290, -290, -290,
	-290, -290, -290, -290, -290, -290, 346, -290, -290, -290,
	-290, -296, -364, 74, 75, 81, 325, 295, 72, -225,
	-223, -290, -283, 68, 72, -289, -226, 45, -284, -286,
	-284, -284, -289, 72, -289, 45, 83, 91, -258, -259,
	-273, -276, -256, 23, 630, 409, 28, 66, 404, 198,
	45, 44, 201, 81, -270, 408, 75, -260, 75, 468,
	-260, -254, -254, -254, 381, -254, -260, -261, 135, 29,
	-261, 135, -261, 135, -261, 135, -261, 135, -260, -277,
	74, -277, 75, -271, 75, 70, 66, -229, -172, -113,
	-264, -263, -265, 376, 421, 134, 433, -51, 8, 9,
	10, -229, -319, -320, -321, -229, 110, 247, 248, -229,
	-347, 319, -342, 287, 296, 90, 16, 517, 195, 195,
	-113, -334, -121, 12, 72, 72, -202, -205, -128, -337,
	233, 234, -183, 191, -333, 195, 179, 179, -360, 195,
	310, -336, -229, 11, 11, 307, 11, -336, 343, -178,
	-230, 69, -217, -284, -316, -282, -283, -315, 199, 206,
	-217, 206, 203, -284, 207, 198, 199, -214, -284, 195,
	23, -217, -217, -290, -217, 32, 32, 114, 69, 74,
	74, 53, -113, -80, -173, 126, -230, -82, -79, 90,
	-128, -84, 126, -238, -367, -367, -367, -367, -367, -367,
	-243, 135, 373, 217, 371, 364, 391, 378, 406, 369,
	407, -240, -243, -240, -128, -128, -128, -128, -128, 11,
	11, 11, 514, -158, 99, -85, 96, -128, -128, -229,
	-168, -366, -163, -163, -163, -163, -163, -164, -163, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -164, -164,
	-126, 29, 47, -366, -9, -366, -188, -192, -150, -226,
	-228, 218, 303, 222, -93, -95, -95, -93, -95, 56,
	56, 56, 61, 56, 61, 61, 56, 56, -109, -239,
	-367, -367, -146, 241, -366, 33, -239, -120, 192, 192,
	192, -82, -128, -121, -88, -121, -121, 179, 426, 430,
	431, -295, -296, -296, -296, -290, 29, -290, 75, -364,
	74, 74, 74, -290, -290, 75, 74, -364, 74, 208,
	211, 213, -296, -296, -296, 75, 74, -297, 28, 509,
	367, 510, 511, 512, 74, 28, 75, 28, 75, -296,
	506, -296, -300, -299, -229, -226, 198, -306, 44, -306,
	-289, -289, -289, -289, 68, 83, -366, 631, 75, -128,
	9, 45, 45, 45, 74, 70, -261, 135, 70, 70,
	-261, 135, -260, -254, -261, 135, 72, 135, -261, 135,
	70, 69, 70, 69, 70, 69, -124, 578, 91, -113,
	-174, 23, 29, -290, -290, -290, 66, 70, 69, -244,
	-229, -229, -229, -350, 517, 292, -348, -346, 298, 299,
	300, 301, 302, -337, 297, -344, 294, 74, 72, -113,
	-334, -85, -130, -260, -113, -336, 126, 126, -229, 195,
	-336, 307, -362, 517, -336, -336, 11, -336, 74, -56,
	68, -278, 72, -225, -289, -210, 198, 72, 72, 72,
	-226, -225, -227, -228, 72, -226, -225, -227, -228, -229,
	45, 45, 72, -113, -229, -278, 72, -85, -229, -229,
	-229, -186, 69, -83, -367, -128, 179, -164, -164, -164,
	-164, -164, -367, -255, -255, -255, -272, -255, 357, -255,
	357, -367, -367, -367, 19, 19, 19, 19, -367, -128,
	-128, -128, -366, -77, 454, -85, 69, 69, -234, 72,
	-187, 66, -188, -145, -148, -147, -366, -9, -367, -179,
	6, 517, -184, -229, -121, 69, 100, 100, 100, 100,
	-103, -102, 66, 67, -104, 66, -102, 56, 56, 56,
	-182, 68, 69, -147, -366, -184, -128, -120, -366, -366,
	-366, -367, 69, -158, -121, -240, -290, -364, 74, 74,
	507, 508, 70, 69, -255, -255, 45, -286, -181, -229,
	-128, 23, -134, 434, 443, 442, 441, 439, 440, 436,
	438, 437, 455, 456, -261, 135, -260, 74, -260, 75,
	75, 578, 68, -9, -172, -290, 72, 135, 72, 135,
	74, -113, -322, -323, -324, 81, 516, 91, 249, 250,
	208, 251, 252, 253, -321, -244, -244, -244, -353, -354,
	-352, 295, 317, 318, 303, -351, -349, 312, 313, 314,
	315, 90, 74, 74, 74, -345, 286, 90, 295, 16,
	23, -205, -325, -203, -362, -336, -362, 289, -336, -278,
	-160, 211, 212, -244, -244, -233, -286, 45, 72, -215,
	195, 23, 195, -160, -278, 29, 184, 87, -90, 11,
	-173, -173, 126, -260, 72, -128, -128, -128, -128, -367,
	-367, -367, -128, -367, 74, -128, -128, -144, 114, 27,
	-187, 69, -367, -367, 47, -367, -367, 69, -158, -192,
	-85, -85, -85, -85, -85, 68, -85, -181, 241, -367,
	-120, -216, -181, -181, -181, 74, -176, -240, -302, -301,
	67, 202, 81, -299, -175, -175, -289, -289, 70, 69,
	-367, -366, -261, 135, -261, 135, 70, 70, -300, -172,
	-174, 72, 135, 19, -173, -324, 74, 253, 249, 253,
	253, 253, 253, 254, -341, 81, 293, -352, 304, 583,
	288, 319, 75, 75, 113, 30, 31, -349, 75, 75,
	75, 75, -346, 16, 517, -344, 294, 74, 74, -326,
	38, -328, 39, -361, 23, -362, -361, 307, 70, 72,
	-245, -245, 68, -289, -289, 72, -229, -160, 28, 28,
	-366, -121, -88, -83, -367, -367, -367, -367, -76, 110,
	517, -367, -367, -158, 16, 45, -148, -145, 47, -9,
	-366, -229, -176, -181, 70, -147, -118, -239, -367, -367,
	-367, 416, -301, 72, -290, 74, 209, -229, -268, 633,
	632, -128, 70, -9, 240, -174, 36, 36, 245, 246,
	74, 74, 28, 305, 178, 28, 75, 178, 460, 294,
	74, 72, 295, -257, 196, -329, 43, -327, -275, 42,
	16, -334, -361, -300, -233, 68, -128, -308, -309, 114,
	-155, 13, -173, -367, 515, 63, 518, -169, 116, 115,
	-142, 9, -145, -9, 70, -120, -366, 75, -113, -367,
	-303, -302, -172, 241, -22, -3, -11, -12, -13, -14,
	-16, -52, -17, -18, -23, -24, -19, -58, -59, -67,
	-65, -66, -62, -61, -27, -25, -28, -20, -29, -30,
	-31, -35, -36, -26, -37, 94, 197, 275, 344, 75,
	28, 75, 28, 308, 295, 23, -182, 75, -328, 16,
	-330, 40, 41, 74, 517, 70, 68, -300, -367, 69,
	-229, -156, 14, 16, 53, 516, 519, -367, -170, 93,
	-171, 113, 460, -132, 75, 178, -170, -188, -367, -293,
	-280, -230, 68, -268, -161, 243, 244, -172, -85, -85,
	72, -48, -235, 278, 279, 280, -230, -38, -22, 306,
	306, 74, 38, 116, 74, 16, 16, 287, -303, -300,
	70, -309, 47, -166, 458, -157, -85, -143, -87, -85,
	53, -171, 118, 119, 241, 118, 119, -127, -367, 69,
	-244, -181, -172, 72, 72, -39, -40, 95, 96, 276,
	277, 281, -244, 69, 636, 74, 74, 28, 292, 21,
	-337, 70, -303, 225, -165, -167, -229, 69, 517, 90,
	-229, -367, -280, -246, 490, 24, 70, -174, 99, 97,
	-40, -85, -38, 19, 19, 19, 28, -230, 99, -22,
	309, -303, 226, 69, 23, -87, 518, -171, 23, -239,
	74, 490, -312, -313, 66, -15, -21, -14, -11, -12,
	-13, 344, 517, 94, -38, 96, 636, -49, 75, -9,
	-47, -46, 75, -49, 283, 91, 284, 72, -128, -337,
	-366, -167, -168, 519, -239, -247, 74, -313, 66, -312,
	66, 10, 9, -172, -38, -91, 636, -38, 99, 97,
	-41, -42, 98, -22, 69, 282, -128, 223, -372, 83,
	28, 335, -311, 210, 205, 208, 29, -311, 636, 99,
	636, 197, -38, 99, 97, -42, -85, -46, -367, -367,
	66, -128, 66, 204, 28, 83, 99, 94, 636, 197,
	-38, 96, 530, 66, 530, 99, 636, -38, 530, 197,
	99, 636, 197,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1250, 829, 829, 0, 829,
	931, -2, 683, 0, 0, 0, 0, -2, 802, 803,
	804, 808, 809, 824, 826, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, -2, 0, 1326,
	0, 827, 816, 817, 41, 0, 0, 2180, 2, 1258,
	0, 838, 831, 0, 829, 829, 829, 67, 68, 0,
	99, 0, 0, 0, 932, 0, 0, 0, 1324, 1324,
	251, 1324, 1324, 0, 1340, 249, 0, 1321, 1336, 1337,
	1338, 0, 0, 0, 1322, 0, 1322, 1322, 1322, 1322,
	1322, 1322, 1322, 0, 748, 965, 967, 968, 969, 1349,
	1350, 2175, 2176, 2177, 2178, 2179, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 0, 0, 0,
	793, 0, 759, 760, 761, 0, 763, 0, 0, 0,
	0, 0, 773, 776, 780, 0, 1258, 1258, 582, 583,
	584, 798, 799, 787, 800, 0, 0, 56, 0, 0,
	912, 326, 328, 0, 348, 0, 351, 354, 1355, 810,
	0, 0, 1380, 1381, 0, 0, 0, 0, 0, 2077,
	194, 265, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 0, 196, 196, 196, 2085, 196, 0, 196, 196,
	196, 196, 196, 264, 254, 255, 256, 0, 0, 0,
	2077, 0, 562, 559, 560, 57, 0, 46, 58, 1274,
	933, 934, 935, 0, 1327, 805, 0, 833, 0, 39,
	0, 1264, 0, 0, 841, 839, 840, 830, 0, 852,
	882, 0, 979, 1813, 985, -2, -2, -2, 1726, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1671, 0, 0,
	0, 0, 0, 1768, 1058, 1059, 1060, 1061, 1062, 1063,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, -2, -2, -2,
	1217, 1218, 0, 2175, 2176, 2177, 2178, 2179, 1291, 0,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1794, 1857, 1745, 1862, 1690, 0, 1682, 1759,
	1886, 1887, 0, 1802, 2156, 0, -2, 1911, 1850, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 2166, 2167,
	1752, 1700, 1810, 1851, 1691, 1712, 1731, 1780, 1781, 1783,
	1815, 1816, 1834, 1843, 1861, 1672, 1673, 1674, 1775, 1776,
	1883, 1882, 1881, 1884, 1917, 1915, 1918, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1675, 1676,
	1677, 1678, 1679, 1681, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1692, 1693, 1694, 1699, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1710, 1711, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728,
	1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1750, 1751,
	1753, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1763,
	1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774,
	1777, 1778, 1779, 1782, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1795, 1796, 1799, 1800, 1801, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1814, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1852,
	1853, 1854, 1855, 1856, 1858, 1859, 1860, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1885, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1916, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1326, 1326,
	0, 84, 2133, 0, 1298, -2, -2, 1300, 0, 0,
	0, -2, -2, -2, -2, 1683, -2, 1217, 0, 0,
	0, 0, 1671, 1672, 1673, 1674, 1680, 1682, 1690, 1691,
	1695, 1696, 1697, 1698, 1700, 1709, 1712, 1726, 1729, 1731,
	1745, 1752, 1759, 1768, 1775, 1776, 1780, 1781, 1783, 1794,
	1797, 1798, 1802, 1810, 1813, 1815, 1816, 1817, 1834, 1843,
	1850, 1851, 1857, 1861, 1862, 1881, 1882, 1883, 1884, 1886,
	1887, 1898, 1908, 1909, 1910, 1911, 1915, 1917, 1918, 100,
	1250, 829, 101, 0, 392, 393, 0, 0, 0, 0,
	0, 0, 607, 1343, 1344, 2169, 2170, 2171, 2172, 2173,
	2174, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 1324, 251, 0, 0, 729, 0,
	730, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 747, 0, 749, 78, 750, 793, 752,
	0, 0, 1324, 1324, 0, 0, 0, 0, 0, 609,
	610, 793, 793, 793, 793, 790, 0, 790, 770, 790,
	788, 789, 0, 775, 0, 0, 0, 783, 784, 0,
	811, 0, 0, 818, 820, 821, 822, 823, 819, 0,
	828, 0, 0, 0, 330, 0, 0, 350, 332, 0,
	335, 336, 337, 338, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 353, 0, 1353, 1356, 815, 1371, 1372,
	0, 1382, 1383, 200, 0, 200, 0, 0, 0, 0,
	163, 196, 0, 165, 196, 196, 196, 0, 196, 196,
	172, 173, 196, 175, 176, 177, 178, 179, 196, 181,
	182, 183, 196, 196, 186, 196, 196, 189, 190, 191,
	192, 193, 263, 200, 0, 0, 200, 0, 0, 544,
	0, 0, 0, 0, 549, 550, 551, 552, 0, 0,
	555, 556, -2, 45, 0, 0, 0, 0, 0, 42,
	63, 0, 834, 835, 62, 2181, 0, 50, 0, 0,
	1259, 1262, 1263, 1251, 1252, 1255, 0, 0, 836, 842,
	843, 832, 0, 853, 0, 0, 0, 0, 883, 0,
	886, 887, 888, 889, 890, 891, 0, 983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 986, 0, 1000, 0, 0, 0,
	0, 0, 0, 0, 1051, 1052, 1053, 1054, 1055, 1056,
	0, 841, 0, 0, 841, 841, 841, 841, 841, 0,
	0, 1026, 1923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 841, 0, 1209,
	0, 0, 1120, 1129, 0, 1121, 1130, 1122, 1131, 1123,
	0, 1124, 1132, 1125, 1133, 1126, 1127, 1134, 1128, 0,
	0, 0, 1022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 965, 0, 85, 87, 0, 0,
	2133, 1301, 1302, 518, 1315, 1316, 1317, 0, 1313, 0,
	1258, 838, 624, 0, 394, 410, 507, 422, 423, 424,
	497, 426, 499, 499, 0, 499, 499, 499, 499, 499,
	515, 515, 515, 515, 515, 468, 469, 470, 471, 472,
	0, 0, 445, 497, 497, 497, 449, 487, 488, 489,
	490, 491, 492, 493, 494, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 502, 502, 504, 504, 504,
	504, 504, 410, 410, 410, 410, 0, 0, 0, 606,
	0, 1341, 0, 0, 251, -2, 0, -2, 0, 960,
	0, 0, 970, 0, 0, 111, 281, 267, 110, 0,
	245, 250, 246, 247, 248, 0, 0, 0, 0, 258,
	744, 1323, 0, 737, 76, 738, 739, 740, 741, 742,
	260, 743, 966, 1351, 1352, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 0, 751, 794, 0, 796, 0, 0, 912, 756,
	757, 758, 611, 764, 765, 766, 772, 793, 0, 0,
	0, 912, 793, 774, 1014, 777, 1137, 0, 801, 813,
	812, 0, 825, 0, 327, 329, 331, 349, 0, 0,
	352, 355, 0, 0, 0, 0, 1374, 0, 1376, 1378,
	0, 0, 201, 202, 203, 200, 0, 195, 0, 218,
	266, 0, 164, 0, 198, 166, 167, 168, 196, 170,
	171, 174, 180, 184, 185, 187, 188, 262, 0, 0,
	0, 0, 161, 0, 545, 546, 547, 548, 557, 554,
	59, 0, 0, 1276, 1279, 1280, 1281, 1282, 1283, 1347,
	1348, 0, 806, 807, 0, 37, 0, 1265, 0, 0,
	0, 0, 1254, 1256, 1257, 0, 0, 1239, 0, 0,
	844, 837, 40, 980, 981, 982, 984, 1001, 0, 1003,
	1005, 884, 885, 854, 0, 1219, 1220, 1221, 1222, 1223,
	-2, 991, 992, 1016, 1017, 1018, 0, 0, 0, 0,
	1014, 996, 0, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1050, 1151, 1152, 0, 1228,
	0, 1024, 848, 849, 0, 1229, 1048, 1238, 1049, 1224,
	1057, 1022, 1226, 1227, 1225, 0, 0, 0, 0, 0,
	1019, 0, 1290, 0, 0, 0, 0, 1098, 0, 0,
	0, 0, 1032, 1231, 0, 1032, 1231, 0, 0, 1784,
	1896, 1676, 0, 0, 0, 1215, 1212, 0, 0, 0,
	1138, 0, 0, 0, 0, 0, 1023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 964, 0, 892, 894, 895, 896,
	-2, 0, 900, 901, 973, 1020, 1349, 0, -2, 0,
	0, 74, 75, 0, 0, 0, 1299, 0, 0, 0,
	90, 91, 86, 1303, 0, -2, 1310, 1311, 1219, 0,
	1264, 841, 391, 625, 572, 572, 572, 0, 0, 572,
	572, 572, 572, 572, 0, 0, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 0, 572, 572,
	572, 572, 0, 572, 395, 397, 398, 399, 0, 589,
	597, 0, 0, 587, 589, 589, 0, 585, 586, 402,
	510, 508, 509, 425, 0, 515, 0, 515, 499, 499,
	499, 499, 454, 515, 457, 460, 461, 518, 0, 518,
	518, 518, 518, 515, 0, 0, 446, 447, 448, 437,
	0, 438, 502, 440, 0, 441, 442, 443, 444, 403,
	404, 405, 406, 603, 604, 605, 0, 0, 0, 96,
	0, 105, -2, 525, 526, 527, 0, 522, 1325, 106,
	0, 283, 284, 0, 221, 0, 252, 253, 113, 0,
	0, 268, 0, 389, 390, 0, 731, 0, 733, 257,
	735, 745, 746, 736, 0, 0, 79, 795, 753, 754,
	755, 977, 0, 0, 767, 791, 792, 790, 793, 771,
	785, 0, 0, 778, 0, 814, 913, 333, 334, 356,
	82, 0, 1354, 1373, 0, 1377, 1379, 0, 204, 206,
	0, 0, 155, 0, 0, 197, 0, 169, 0, 0,
	0, 0, 0, 553, 0, 60, 0, 1275, 0, 0,
	684, 685, -2, 722, 1333, 722, 722, 708, 572, 722,
	0, 0, 0, 64, 51, 0, 1978, 54, 0, 1260,
	1261, 1253, 0, 1318, 1319, 1240, 1241, 97, 845, 1002,
	1004, 1006, 0, 1022, 993, 1014, 997, 0, 994, 0,
	988, 0, 1096, 0, 0, 0, 0, 0, 0, 0,
	1027, -2, 1094, 1095, 1097, 0, 0, 0, 1101, 0,
	1104, 0, 0, 1144, 0, 0, 1145, 1109, 0, 0,
	0, 0, 0, 1115, 1250, 0, 1213, 0, 0, 1118,
	1119, 1139, 0, 0, 1140, 1141, 1142, 1143, 1083, 0,
	1084, 0, 0, 0, 0, 0, 1090, 1091, 1092, 1093,
	863, 863, 863, 863, 863, 863, 863, 863, 863, 863,
	863, 863, 0, 0, 963, 0, 0, 0, 0, 0,
	0, 936, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 905, 0, 907, 0, 973, 0,
	0, 0, 1022, 0, 977, 0, 977, 977, 81, 0,
	972, 88, 89, 0, 0, 95, 519, 520, 0, 220,
	0, 0, 573, 0, 0, 572, 0, 572, 0, 0,
	0, 0, 0, 572, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 0,
	0, 660, 661, 665, 666, 667, 668, 669, 676, 677,
	678, 0, 396, 0, 590, 0, 0, 589, 589, 589,
	588, 589, 580, 590, 581, 0, 411, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 0, 514, 0,
	539, 541, 0, 0, 421, 511, 0, 518, 0, 0,
	518, 515, 452, 453, 499, 458, 518, 462, 479, 0,
	463, 480, 464, 481, 465, 482, 466, 483, 518, 0,
	495, 0, 0, 439, 0, 621, 0, 1342, 98, 0,
	528, 529, 530, 0, 572, 572, 572, 0, 285, 286,
	287, 961, 0, 222, 223, 0, 0, 0, 0, 971,
	123, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	77, 261, 762, 0, 612, 613, 912, 769, 1015, 779,
	781, 782, 515, 0, 1375, 0, 0, 0, 0, 0,
	0, 216, 199, 0, 0, 0, 0, 162, 0, 1277,
	1278, 0, 0, 589, 0, 709, 710, 0, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	1335, 0, 0, 0, 0, 717, 718, 0, 0, 52,
	53, 1266, 38, 50, 0, 855, 1230, 0, 995, 0,
	998, 1025, 850, 0, 1064, 863, 863, 863, 863, 863,
	0, 497, 497, 1198, 497, 504, 1201, 497, 1203, 497,
	1206, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 1117, 1216, 0, 0, 0, 856,
	857, 859, 1085, 1086, 1087, 1088, 1089, 1068, 864, 1069,
	1070, 1072, 1073, 1075, 1076, 1077, 1078, 1080, 1081, 1082,
	1284, 0, 0, 0, 1269, 0, 977, 1292, 0, 0,
	0, 0, 2169, 2170, 893, 927, 929, 0, 924, 937,
	938, 940, 0, 942, 0, 0, 945, 946, 947, 914,
	899, 1021, 902, 0, 0, 0, 973, 911, 0, 0,
	0, 0, 0, 1250, 977, 72, 73, 0, 92, 93,
	94, 626, 627, 628, 629, 0, 572, 0, 632, 633,
	635, 636, 637, 0, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 670, 671,
	672, 673, 674, 675, 654, 655, 656, 657, 658, 659,
	0, 664, 0, 591, 497, 497, 0, 595, 587, 596,
	574, 576, 577, 579, 0, 412, 0, 0, 420, 512,
	0, 538, 540, 542, 543, 498, 450, 475, 500, 501,
	451, 476, 518, 459, 455, 477, 516, 517, 467, 484,
	515, 0, 515, 0, 505, 0, 608, 622, 0, 0,
	0, 96, 572, 0, 0, 0, 0, 229, 0, 225,
	0, 0, 0, 131, 0, 114, 115, 116, 118, 119,
	0, 0, 0, 112, 0, 270, 0, 273, 274, 732,
	734, 978, 793, 1365, 962, 216, 205, 207, 208, 0,
	216, 219, 156, 0, 157, 159, 0, 158, 558, 686,
	0, 719, 0, 0, 1341, 587, 0, -2, 689, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	0, 715, 0, 691, 0, 719, 0, 712, 0, 0,
	55, 48, 97, 97, 1065, 999, 0, 1067, 1071, 1066,
	1074, 1079, 1099, 1195, 515, 1199, 1200, 1202, 1204, 1205,
	1207, 1103, 1100, 1102, 0, 0, 0, 0, 1110, 0,
	0, 0, 0, 0, 0, 1214, 0, 0, 861, 860,
	65, 0, 1284, 1267, 1286, 1288, 0, 0, 0, 0,
	-2, 1655, 0, 918, 1250, 0, 0, 0, 0, 0,
	921, 928, 0, 0, 922, 0, 923, 941, 943, 944,
	897, 0, 0, 903, 0, 0, -2, 910, 0, 0,
	0, 920, 0, 1258, 71, 630, 0, 634, 638, 639,
	662, 663, 564, 0, 1255, 1255, 589, 589, 0, 916,
	0, 0, 513, 1137, 1137, 1137, 1137, 1137, 1137, 1137,
	1137, 1137, 0, 0, 456, 478, 518, 496, 518, 0,
	0, 623, 0, 96, 98, 0, 533, 534, 535, 536,
	537, 0, 97, 230, 231, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 224, 226, 227, 228, 149, 132,
	133, 0, 0, 0, 0, 124, 125, 0, 0, 0,
	0, 0, 120, 121, 122, 269, 0, 0, 272, 0,
	0, 768, 1367, 1361, 209, 216, 209, 0, 160, 0,
	688, 720, 0, 410, 410, 0, 589, 589, 711, 0,
	1331, 1332, 0, 706, 719, 0, 0, 0, 977, 0,
	0, 846, 851, 1196, 1197, 0, 0, 0, 0, 1111,
	1112, 1113, 1146, 1116, 1211, 0, 0, 1250, 0, 0,
	66, 0, 1289, -2, 0, 0, 83, 0, 1258, 1293,
	1294, 1295, 1296, 1297, 925, 0, 930, 0, 0, 973,
	908, 0, 0, 0, 0, 0, 70, 631, 563, 567,
	0, 572, 0, 592, 593, 594, 575, 578, 0, 0,
	407, 0, 473, 485, 474, 486, 503, 506, 0, 103,
	0, 531, 532, 0, 98, 232, 233, 234, 235, 237,
	238, 0, 0, 0, 109, 0, 0, 134, 0, 0,
	0, 0, 144, 145, 146, 147, 148, 126, 127, 128,
	129, 130, 117, 0, 0, 271, 0, 276, 277, 1328,
	1369, -2, 0, 152, 0, 209, 154, 217, 687, 721,
	400, 401, 0, 1341, 0, 690, 705, 707, 0, 714,
	0, 1242, 49, 97, 1105, 1107, 1106, 1108, 0, 0,
	0, 1135, 1136, 865, 0, 0, 1287, 1268, 0, 1272,
	0, 919, 69, 0, 915, 904, 906, 973, 974, 975,
	976, 0, 568, 569, 0, 571, 0, 917, 418, 408,
	409, 0, 565, 96, 0, 56, 239, 240, 241, 242,
	150, 151, 135, 136, 0, 138, 139, 0, 0, 0,
	279, 0, 275, 914, 0, 1361, 0, 1363, 0, 1360,
	0, 210, 153, 0, 0, 0, 713, 0, 725, 0,
	1247, 0, 847, 1114, 0, 0, 0, 0, 0, 0,
	862, 0, 1271, 0, 926, 909, 0, 570, 0, 407,
	102, 566, 104, 288, 96, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	384, 385, 386, 387, 388, 0, 0, 0, 56, 0,
	140, 0, 142, 143, 278, 0, 36, 0, 1368, 0,
	1366, 0, 0, 1362, 0, 565, 0, 0, 724, 0,
	0, 875, 0, 0, 1147, 0, 1150, 858, 866, 0,
	869, 0, 0, 0, 880, 0, 867, 1285, -2, 0,
	950, 0, 0, 419, 96, 0, 0, 108, 0, 0,
	1343, 0, 0, -2, -2, -2, 1345, 0, 357, 137,
	141, 280, 1329, 1330, 1370, 0, 0, 0, 692, 0,
	565, 726, 0, 47, 0, 1248, 1249, 1243, 1244, 1246,
	1148, 0, 870, 871, 872, 873, 874, 0, 0, 0,
	0, 0, 98, 289, 290, 0, 299, 0, 56, 0,
	0, 0, 313, 0, 56, 1364, 1358, 211, 212, 213,
	215, 565, 716, 0, 876, 877, 0, 0, 0, 0,
	881, 0, 951, 952, 0, 0, 598, 56, 0, 56,
	300, 0, 0, 0, 0, 0, 0, 1346, 243, 358,
	0, 693, 0, 0, 0, 1245, 0, 868, 0, 949,
	955, 0, 599, 600, 0, 96, 291, 292, 293, 294,
	295, 56, 0, 297, 0, 56, 56, 309, 310, 311,
	56, 318, 320, 321, 322, 0, 324, 325, 314, 214,
	0, 878, 879, 1149, 948, 956, 954, 601, 0, 602,
	0, 0, 0, 107, 0, 57, 56, 0, 0, 56,
	0, 306, 0, 312, 0, 323, 0, 1803, 953, 0,
	0, 0, 614, 616, 617, 0, 0, 615, 56, 0,
	-2, 302, 0, 0, 56, 307, 0, 319, 727, 728,
	0, 0, 0, 618, 619, 620, 296, 298, 56, 304,
	0, 56, 957, 0, 959, 0, 56, 0, 958, 303,
	0, -2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 129, 121, 3,
	68, 70, 126, 124, 69, 125, 179, 127, 111, 112,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 636,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 131, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 132,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 113, 114, 115, 116, 117, 118, 119, 122, 123,
	128, 130, 133, 134, 135, 136, 137, 138, 139, 140,
	141, 142, 143, 144, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
	272, 273, 274, 275, 276, 277,
}

var yyTok3 = [...]int{
	57600, 278, 57601, 279, 57602, 280, 57603, 281, 57604, 282,
	57605, 283, 57606, 284, 57607, 285, 57608, 286, 57609, 287,
	57610, 288, 57611, 289, 57612, 290, 57613, 291, 57614, 292,
	57615, 293, 57616, 294, 57617, 295, 57618, 296, 57619, 297,
	57620, 298, 57621, 299, 57622, 300, 57623, 301, 57624, 302,
	57625, 303, 57626, 304, 57627, 305, 57628, 306, 57629, 307,
	57630, 308, 57631, 309, 57632, 310, 57633, 311, 57634, 312,
	57635, 313, 57636, 314, 57637, 315, 57638, 316, 57639, 317,
	57640, 318, 57641, 319, 57642, 320, 57643, 321, 57644, 322,
	57645, 323, 57646, 324, 57647, 325, 57648, 326, 57649, 327,
	57650, 328, 57651, 329, 57652, 330, 57653, 331, 57654, 332,
	57655, 333, 57656, 334, 57657, 335, 57658, 336, 57659, 337,
	57660, 338, 57661, 339, 57662, 340, 57663, 341, 57664, 342,
	57665, 343, 57666, 344, 57667, 345, 57668, 346, 57669, 347,
	57670, 348, 57671, 349, 57672, 350, 57673, 351, 57674, 352,
	57675, 353, 57676, 354, 57677, 355, 57678, 356, 57679, 357,
	57680, 358, 57681, 359, 57682, 360, 57683, 361, 57684, 362,
	57685, 363, 57686, 364, 57687, 365, 57688, 366, 57689, 367,
	57690, 368, 57691, 369, 57692, 370, 57693, 371, 57694, 372,
	57695, 373, 57696, 374, 57697, 375, 57698, 376, 57699, 377,
	57700, 378, 57701, 379, 57702, 380, 57703, 381, 57704, 382,
	57705, 383, 57706, 384, 57707, 385, 57708, 386, 57709, 387,
	57710, 388, 57711, 389, 57712, 390, 57713, 391, 57714, 392,
	57715, 393, 57716, 394, 57717, 395, 57718, 396, 57719, 397,
	57720, 398, 57721, 399, 57722, 400, 57723, 401, 57724, 402,
	57725, 403, 57726, 404, 57727, 405, 57728, 406, 57729, 407,
	57730, 408, 57731, 409, 57732, 410, 57733, 411, 57734, 412,
	57735, 413, 57736, 414, 57737, 415, 57738, 416, 57739, 417,
	57740, 418, 57741, 419, 57742, 420, 57743, 421, 57744, 422,
	57745, 423, 57746, 424, 57747, 425, 57748, 426, 57749, 427,
	57750, 428, 57751, 429, 57752, 430, 57753, 431, 57754, 432,
	57755, 433, 57756, 434, 57757, 435, 57758, 436, 57759, 437,
	57760, 438, 57761, 439, 57762, 440, 57763, 441, 57764, 442,
	57765, 443, 57766, 444, 57767, 445, 57768, 446, 57769, 447,
	57770, 448, 57771, 449, 57772, 450, 57773, 451, 57774, 452,
	57775, 453, 57776, 454, 57777, 455, 57778, 456, 57779, 457,
	57780, 458, 57781, 459, 57782, 460, 57783, 461, 57784, 462,
	57785, 463, 57786, 464, 57787, 465, 57788, 466, 57789, 467,
	57790, 468, 57791, 469, 57792, 470, 57793, 471, 57794, 472,
	57795, 473, 57796, 474, 57797, 475, 57798, 476, 57799, 477,
	57800, 478, 57801, 479, 57802, 480, 57803, 481, 57804, 482,
	57805, 483, 57806, 484, 57807, 485, 57808, 486, 57809, 487,
	57810, 488, 57811, 489, 57812, 490, 57813, 491, 57814, 492,
	57815, 493, 57816, 494, 57817, 495, 57818, 496, 57819, 497,
	57820, 498, 57821, 499, 57822, 500, 57823, 501, 57824, 502,
	57825, 503, 57826, 504, 57827, 505, 57828, 506, 57829, 507,
	57830, 508, 57831, 509, 57832, 510, 57833, 511, 57834, 512,
	57835, 513, 57836, 514, 57837, 515, 57838, 516, 57839, 517,
	57840, 518, 57841, 519, 57842, 520, 57843, 521, 57844, 522,
	57845, 523, 57846, 524, 57847, 525, 57848, 526, 57849, 527,
	57850, 528, 57851, 529, 57852, 530, 57853, 531, 57854, 532,
	57855, 533, 57856, 534, 57857, 535, 57858, 536, 57859, 537,
	57860, 538, 57861, 539, 57862, 540, 57863, 541, 57864, 542,
	57865, 543, 57866, 544, 57867, 545, 57868, 546, 57869, 547,
	57870, 548, 57871, 549, 57872, 550, 57873, 551, 57874, 552,
	57875, 553, 57876, 554, 57877, 555, 57878, 556, 57879, 557,
	57880, 558, 57881, 559, 57882, 560, 57883, 561, 57884, 562,
	57885, 563, 57886, 564, 57887, 565, 57888, 566, 57889, 567,
	57890, 568, 57891, 569, 57892, 570, 57893, 571, 57894, 572,
	57895, 573, 57896, 574, 57897, 575, 57898, 576, 57899, 577,
	57900, 578, 57901, 579, 57902, 580, 57903, 581, 57904, 582,
	57905, 583, 57906, 584, 57907, 585, 57908, 586, 57909, 587,
	57910, 588, 57911, 589, 57912, 590, 57913, 591, 57914, 592,
	57915, 593, 57916, 594, 57917, 595, 57918, 596, 57919, 597,
	57920, 598, 57921, 599, 57922, 600, 57923, 601, 57924, 602,
	57925, 603, 57926, 604, 57927, 605, 57928, 606, 57929, 607,
	57930, 608, 57931, 609, 57932, 610, 57933, 611, 57934, 612,
	57935, 613, 57936, 614, 57937, 615, 57938, 616, 57939, 617,
	57940, 618, 57941, 619, 57942, 620, 57943, 621, 57944, 622,
	57945, 623, 57946, 624, 57947, 625, 57948, 626, 57949, 627,
	57950, 628, 57951, 629, 57952, 630, 57953, 631, 57954, 632,
	57955, 633, 57956, 634, 57957, 635, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:553
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:560
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:595
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:601
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:607
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:618
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:634
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:671
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:679
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:692
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:710
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:719
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:729
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:733
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:739
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:753
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:759
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:767
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:773
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:786
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:802
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:808
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:818
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:822
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:826
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:831
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:836
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:840
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:846
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:850
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:865
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:869
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:879
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:886
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:919
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:923
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:931
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:936
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:941
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:946
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:952
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:961
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:966
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:971
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:975
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:981
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:987
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:995
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1003
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1007
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1011
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1030
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1039
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1043
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1048
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1062
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1072
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1093
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1125
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1130
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1158
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1162
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1170
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1174
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1178
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1182
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1211
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1222
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1227
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1232
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1236
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1240
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1246
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1251
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1255
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1259
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1263
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1267
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1281
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1297
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1305
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1317
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1341
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1377
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1408
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1427
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1457
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1461
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1466
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1470
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1474
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1478
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1482
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1486
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1490
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1495
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1499
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1504
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1515
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1527
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1551
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1564
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1608
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1620
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1626
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1636
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1692
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1700
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1728
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1764
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1768
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1772
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1778
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1782
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1786
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1790
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1794
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1798
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1804
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1808
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1812
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1822
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1851
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1875
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1881
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1885
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1901
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1907
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1912
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1917
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1923
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1941
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1947
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1951
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1955
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1959
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1967
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1974
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1992
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2028
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2036
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2046
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2138
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2149
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2167
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2208
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2222
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2238
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2255
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2261
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2265
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2270
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2274
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2326
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2334
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2343
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2369
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2387
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2405
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2423
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2432
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2441
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2778
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2783
		{
			yyVAL.sqlVal = nil
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2787
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2792
		{
			yyVAL.sqlVal = nil
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2796
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2800
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2806
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2810
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2818
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2822
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2828
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2836
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2844
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2849
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2859
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2902
		{
			yyVAL.boolean = false
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.boolean = true
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2911
		{
			yyVAL.charsetCollates = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2937
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2947
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2951
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2955
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2959
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2965
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2969
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2975
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2985
		{
			yyVAL.colKeyOpt = colKey
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2993
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3003
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3009
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3015
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3035
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3064
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3075
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3081
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3085
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3090
		{
			yyVAL.indexOptions = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3104
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3125
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3137
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3141
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3145
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3149
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3153
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3162
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3166
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3170
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = yyDollar[1].str
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3246
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 598:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3252
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3256
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3260
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 601:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3264
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 602:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3268
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3274
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3283
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3297
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3303
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3346
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3350
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3359
		{
			yyVAL.boolean = true
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.boolean = true
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3367
		{
			yyVAL.boolean = false
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3372
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3390
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3394
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3398
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3402
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3410
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3414
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3430
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3434
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3438
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3446
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3450
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3454
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3458
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3462
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3474
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3478
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3482
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3486
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3494
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3498
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3502
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3518
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3540
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3544
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3563
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3567
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3571
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3575
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3579
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3649
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3653
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3658
		{
			yyVAL.str = string("")
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3671
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3694
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3701
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3708
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3712
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3716
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 692:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3721
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 693:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3725
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3729
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3749
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3764
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3769
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3774
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3783
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3787
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3794
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3810
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3816
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3821
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 713:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3825
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3829
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3833
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 716:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3839
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3845
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3854
		{
			yyVAL.columnOrder = nil
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3862
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3867
		{
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
		}
	case 724:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3873
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3883
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 727:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3889
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 728:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3893
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3899
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3903
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3909
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3913
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3925
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3931
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3939
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3943
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3951
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3959
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3967
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3975
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3983
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3991
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{

		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4004
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4014
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4024
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4030
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4035
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4039
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4043
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4047
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4051
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4056
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4060
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4064
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4068
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4072
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4076
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 762:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4080
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4084
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4088
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4092
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4096
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4100
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 768:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4104
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 769:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4109
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4114
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4118
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4122
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4126
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4130
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4136
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4148
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4153
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4157
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4162
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 781:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4166
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 782:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4170
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4174
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4178
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4184
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4190
		{
			yyVAL.boolean = false
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.boolean = true
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = ""
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.showFilter = nil
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4228
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4232
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4242
		{
			yyVAL.str = ""
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.str = SessionStr
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.str = GlobalStr
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4256
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4260
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.statement = &Begin{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4274
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4280
		{
			yyVAL.statement = &Begin{}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4284
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4288
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.statement = &Commit{}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4300
		{
			yyVAL.statement = &Rollback{}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4312
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4316
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4320
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4324
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4330
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4336
		{
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4340
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4344
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = ""
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4362
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			setAllowComments(yylex, true)
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4383
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.bytes2 = nil
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4393
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = UnionStr
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = UnionAllStr
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = UnionDistinctStr
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4412
		{
			yyVAL.byt = 0
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.byt = 1
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4421
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = SQLCacheStr
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4434
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = ""
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = DistinctStr
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = StraightJoinHint
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4457
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4465
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4488
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4498
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4502
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 855:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4506
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4512
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4516
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4522
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4527
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4530
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4535
		{
			yyVAL.exprs = nil
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4539
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4544
		{
			yyVAL.over = nil
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.over = yyDollar[1].over
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4553
		{
			yyVAL.frame = nil
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4557
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4561
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4568
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4610
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4614
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4625
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4633
		{
			yyVAL.window = nil
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4636
		{
			yyVAL.window = yyDollar[2].window
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4645
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4651
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4669
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4677
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4699
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4707
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4713
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4717
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4731
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4747
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4755
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4761
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4765
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4771
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4776
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4791
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4795
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4803
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4814
		{
			yyVAL.expr = nil
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4818
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4823
		{
			yyVAL.columns = nil
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4827
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4843
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4853
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4867
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4871
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4875
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4885
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4887
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4891
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4897
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4899
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4902
		{
			yyVAL.empty = struct{}{}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.empty = struct{}{}
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4909
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4913
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = JoinStr
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = JoinStr
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.str = JoinStr
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4933
		{
			yyVAL.str = StraightJoinStr
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4939
		{
			yyVAL.str = LeftJoinStr
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.str = LeftJoinStr
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4947
		{
			yyVAL.str = RightJoinStr
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4951
		{
			yyVAL.str = RightJoinStr
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4959
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4965
		{
			yyVAL.str = NaturalJoinStr
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4969
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 948:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4979
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 949:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4983
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4989
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5002
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5014
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5018
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5024
		{

		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5042
		{

		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5046
		{

		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5050
		{

		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5054
		{

		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5060
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5064
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5070
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5076
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5086
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5090
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5094
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5102
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5108
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5112
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5118
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5123
		{
			yyVAL.indexHints = nil
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5127
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5131
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5135
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5140
		{
			yyVAL.expr = nil
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5144
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5154
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5158
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5162
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5170
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5174
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = ""
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5188
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5194
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5198
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5204
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5208
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5212
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5216
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5220
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5224
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5228
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5232
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5236
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5240
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = IsNullStr
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5250
		{
			yyVAL.str = IsNotNullStr
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5254
		{
			yyVAL.str = IsTrueStr
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5258
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5262
		{
			yyVAL.str = IsFalseStr
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5266
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5272
		{
			yyVAL.str = EqualStr
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5276
		{
			yyVAL.str = LessThanStr
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5280
		{
			yyVAL.str = GreaterThanStr
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5284
		{
			yyVAL.str = LessEqualStr
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5288
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5292
		{
			yyVAL.str = NotEqualStr
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5301
		{
			yyVAL.expr = nil
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5305
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5311
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5315
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5325
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5335
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5341
		{
			yyVAL.selectExprs = nil
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5348
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5352
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5362
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5376
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5380
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5384
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5388
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5392
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5396
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5400
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5404
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5408
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5412
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5416
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5420
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5424
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5428
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5432
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5436
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5440
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5444
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5448
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5452
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5456
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5460
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5464
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5468
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5476
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5490
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5494
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5498
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5518
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5522
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5532
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1067:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5536
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5540
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5544
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5548
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1071:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5552
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5556
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5560
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5564
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5568
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5572
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5576
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5580
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5588
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5592
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5596
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5605
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5609
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5613
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5617
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1087:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5621
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5625
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5629
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5633
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5637
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5641
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5645
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5656
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5660
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5664
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5668
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5672
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5676
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5680
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5684
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5688
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5692
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5696
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1105:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5700
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1106:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5704
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5708
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1108:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5712
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5716
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5720
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1111:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5724
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1112:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5728
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1113:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5732
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1114:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5736
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5740
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1116:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5744
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5748
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5752
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5756
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5766
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5770
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5774
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5779
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5784
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5789
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5795
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5800
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5804
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5809
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5813
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5817
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5822
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5827
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5832
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5836
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5840
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5851
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5861
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5865
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5869
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5873
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5877
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5881
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5887
		{
			yyVAL.str = ""
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5891
		{
			yyVAL.str = BooleanModeStr
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5895
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1149:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5899
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5903
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5909
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5913
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5919
		{
			yyVAL.str = Armscii8Str
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5923
		{
			yyVAL.str = AsciiStr
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5927
		{
			yyVAL.str = Big5Str
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5931
		{
			yyVAL.str = UBinaryStr
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5935
		{
			yyVAL.str = Cp1250Str
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5939
		{
			yyVAL.str = Cp1251Str
		}
	case 1159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5943
		{
			yyVAL.str = Cp1256Str
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5947
		{
			yyVAL.str = Cp1257Str
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5951
		{
			yyVAL.str = Cp850Str
		}
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5955
		{
			yyVAL.str = Cp852Str
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5959
		{
			yyVAL.str = Cp866Str
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5963
		{
			yyVAL.str = Cp932Str
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5967
		{
			yyVAL.str = Dec8Str
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5971
		{
			yyVAL.str = EucjpmsStr
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5975
		{
			yyVAL.str = EuckrStr
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5979
		{
			yyVAL.str = Gb18030Str
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5983
		{
			yyVAL.str = Gb2312Str
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			yyVAL.str = GbkStr
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5991
		{
			yyVAL.str = Geostd8Str
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5995
		{
			yyVAL.str = GreekStr
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5999
		{
			yyVAL.str = HebrewStr
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6003
		{
			yyVAL.str = Hp8Str
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6007
		{
			yyVAL.str = Keybcs2Str
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6011
		{
			yyVAL.str = Koi8rStr
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = Koi8uStr
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6019
		{
			yyVAL.str = Latin1Str
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6023
		{
			yyVAL.str = Latin2Str
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6027
		{
			yyVAL.str = Latin5Str
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6031
		{
			yyVAL.str = Latin7Str
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6035
		{
			yyVAL.str = MacceStr
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6039
		{
			yyVAL.str = MacromanStr
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6043
		{
			yyVAL.str = SjisStr
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6047
		{
			yyVAL.str = Swe7Str
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6051
		{
			yyVAL.str = Tis620Str
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6055
		{
			yyVAL.str = Ucs2Str
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6059
		{
			yyVAL.str = UjisStr
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6063
		{
			yyVAL.str = Utf16Str
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6067
		{
			yyVAL.str = Utf16leStr
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6071
		{
			yyVAL.str = Utf32Str
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6075
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6079
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6083
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6089
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6093
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6097
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6101
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6105
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6109
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6115
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6119
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6123
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6127
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6131
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6135
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6139
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6144
		{
			yyVAL.expr = nil
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6148
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6153
		{
			yyVAL.str = string("")
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6157
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6167
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6173
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6178
		{
			yyVAL.expr = nil
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6182
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6188
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6192
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6196
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6200
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6204
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6208
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6212
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6216
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6220
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6224
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6228
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6232
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6236
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6240
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6246
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6250
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6254
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6258
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6262
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6266
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6270
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6274
		{
			yyVAL.expr = &NullVal{}
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6280
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6284
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6288
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6293
		{
			yyVAL.exprs = nil
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6297
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6303
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6307
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6313
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6318
		{
			yyVAL.expr = nil
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6322
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6328
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6333
		{
			yyVAL.orderBy = nil
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6337
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6343
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6347
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6353
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6358
		{
			yyVAL.str = AscScr
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6362
		{
			yyVAL.str = AscScr
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6366
		{
			yyVAL.str = DescScr
		}
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6371
		{
			yyVAL.limit = nil
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6375
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6379
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6383
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6389
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6393
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6398
		{
			yyVAL.str = ""
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6402
		{
			yyVAL.str = ForUpdateStr
		}
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6406
		{
			yyVAL.str = ShareModeStr
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6419
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6423
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6427
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6431
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6436
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6440
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6444
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6450
		{
			yyVAL.columns = nil
		}
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6454
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6460
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6464
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6470
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6474
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6478
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6482
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6486
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6490
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6495
		{
			yyVAL.assignExprs = nil
		}
	case 1285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6499
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6505
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6509
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6515
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6519
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6525
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6531
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6541
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6545
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6551
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6554
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6558
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6562
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6568
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6572
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6578
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6589
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6602
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6615
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6621
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6625
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6631
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6635
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6639
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6645
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6649
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6653
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6660
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6667
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6671
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6675
		{
			yyVAL.expr = &Default{}
		}
	case 1320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6684
		{
			yyVAL.byt = 0
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6686
		{
			yyVAL.byt = 1
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6689
		{
			yyVAL.byt = 0
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6691
		{
			yyVAL.byt = 1
		}
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6694
		{
			yyVAL.byt = 0
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6696
		{
			yyVAL.byt = 1
		}
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6699
		{
			yyVAL.str = ""
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6701
		{
			yyVAL.str = IgnoreStr
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6704
		{
			yyVAL.sqlVal = nil
		}
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6706
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6708
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6712
		{
			yyVAL.empty = struct{}{}
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6714
		{
			yyVAL.empty = struct{}{}
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6717
		{
			yyVAL.empty = struct{}{}
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6719
		{
			yyVAL.empty = struct{}{}
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6721
		{
			yyVAL.empty = struct{}{}
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6725
		{
			yyVAL.str = UniqueStr
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6727
		{
			yyVAL.str = FulltextStr
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6729
		{
			yyVAL.str = SpatialStr
		}
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6732
		{
			yyVAL.str = ""
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6734
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6737
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6739
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6743
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6747
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6753
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6757
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6764
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6770
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6774
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6781
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6786
		{
			yyVAL.str = string("")
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6788
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6791
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6793
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6796
		{
			yyVAL.EnclosedBy = nil
		}
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6800
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6805
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6809
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6814
		{
			yyVAL.sqlVal = nil
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6818
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6823
		{
			yyVAL.sqlVal = nil
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6827
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6832
		{
			yyVAL.Fields = nil
		}
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6836
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6841
		{
			yyVAL.Lines = nil
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6845
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6850
		{
			yyVAL.sqlVal = nil
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6854
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6860
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6866
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6870
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6876
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6880
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6886
		{
			yyVAL.lockType = LockRead
		}
	case 1377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6890
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6894
		{
			yyVAL.lockType = LockWrite
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6898
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6904
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6910
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6914
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6918
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7756
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7765
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
