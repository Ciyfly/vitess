// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const SHOW = 57535
const DESCRIBE = 57536
const EXPLAIN = 57537
const DATE = 57538
const ESCAPE = 57539
const REPAIR = 57540
const OPTIMIZE = 57541
const TRUNCATE = 57542
const FORMAT = 57543
const MAXVALUE = 57544
const REORGANIZE = 57545
const LESS = 57546
const THAN = 57547
const PROCEDURE = 57548
const TRIGGER = 57549
const TRIGGERS = 57550
const FUNCTION = 57551
const STATUS = 57552
const VARIABLES = 57553
const WARNINGS = 57554
const ERRORS = 57555
const KILL = 57556
const CONNECTION = 57557
const SEQUENCE = 57558
const ENABLE = 57559
const DISABLE = 57560
const EACH = 57561
const ROW = 57562
const BEFORE = 57563
const FOLLOWS = 57564
const PRECEDES = 57565
const DEFINER = 57566
const INVOKER = 57567
const INOUT = 57568
const OUT = 57569
const DETERMINISTIC = 57570
const CONTAINS = 57571
const READS = 57572
const MODIFIES = 57573
const SQL = 57574
const SECURITY = 57575
const TEMPORARY = 57576
const ALGORITHM = 57577
const MERGE = 57578
const TEMPTABLE = 57579
const UNDEFINED = 57580
const CLASS_ORIGIN = 57581
const SUBCLASS_ORIGIN = 57582
const MESSAGE_TEXT = 57583
const MYSQL_ERRNO = 57584
const CONSTRAINT_CATALOG = 57585
const CONSTRAINT_SCHEMA = 57586
const CONSTRAINT_NAME = 57587
const CATALOG_NAME = 57588
const SCHEMA_NAME = 57589
const TABLE_NAME = 57590
const COLUMN_NAME = 57591
const CURSOR_NAME = 57592
const SIGNAL = 57593
const RESIGNAL = 57594
const SQLSTATE = 57595
const DECLARE = 57596
const CONDITION = 57597
const CURSOR = 57598
const CONTINUE = 57599
const EXIT = 57600
const UNDO = 57601
const HANDLER = 57602
const FOUND = 57603
const SQLWARNING = 57604
const SQLEXCEPTION = 57605
const USER = 57606
const IDENTIFIED = 57607
const ROLE = 57608
const REUSE = 57609
const GRANT = 57610
const GRANTS = 57611
const REVOKE = 57612
const NONE = 57613
const ATTRIBUTE = 57614
const RANDOM = 57615
const PASSWORD = 57616
const INITIAL = 57617
const AUTHENTICATION = 57618
const SSL = 57619
const X509 = 57620
const CIPHER = 57621
const ISSUER = 57622
const SUBJECT = 57623
const ACCOUNT = 57624
const EXPIRE = 57625
const NEVER = 57626
const DAY = 57627
const OPTION = 57628
const OPTIONAL = 57629
const EXCEPT = 57630
const ADMIN = 57631
const PRIVILEGES = 57632
const MAX_QUERIES_PER_HOUR = 57633
const MAX_UPDATES_PER_HOUR = 57634
const MAX_CONNECTIONS_PER_HOUR = 57635
const MAX_USER_CONNECTIONS = 57636
const FLUSH = 57637
const FAILED_LOGIN_ATTEMPTS = 57638
const PASSWORD_LOCK_TIME = 57639
const REQUIRE = 57640
const PROXY = 57641
const ROUTINE = 57642
const TABLESPACE = 57643
const CLIENT = 57644
const SLAVE = 57645
const EVENT = 57646
const EXECUTE = 57647
const FILE = 57648
const RELOAD = 57649
const REPLICATION = 57650
const SHUTDOWN = 57651
const SUPER = 57652
const USAGE = 57653
const LOGS = 57654
const ENGINE = 57655
const ERROR = 57656
const GENERAL = 57657
const HOSTS = 57658
const OPTIMIZER_COSTS = 57659
const RELAY = 57660
const SLOW = 57661
const USER_RESOURCES = 57662
const NO_WRITE_TO_BINLOG = 57663
const CHANNEL = 57664
const BEGIN = 57665
const START = 57666
const TRANSACTION = 57667
const COMMIT = 57668
const ROLLBACK = 57669
const SAVEPOINT = 57670
const WORK = 57671
const RELEASE = 57672
const BIT = 57673
const TINYINT = 57674
const SMALLINT = 57675
const MEDIUMINT = 57676
const INT = 57677
const INTEGER = 57678
const BIGINT = 57679
const INTNUM = 57680
const SERIAL = 57681
const REAL = 57682
const DOUBLE = 57683
const FLOAT_TYPE = 57684
const DECIMAL = 57685
const NUMERIC = 57686
const DEC = 57687
const FIXED = 57688
const PRECISION = 57689
const TIME = 57690
const TIMESTAMP = 57691
const DATETIME = 57692
const YEAR = 57693
const CHAR = 57694
const VARCHAR = 57695
const BOOL = 57696
const CHARACTER = 57697
const VARBINARY = 57698
const NCHAR = 57699
const NVARCHAR = 57700
const NATIONAL = 57701
const VARYING = 57702
const TEXT = 57703
const TINYTEXT = 57704
const MEDIUMTEXT = 57705
const LONGTEXT = 57706
const LONG = 57707
const BLOB = 57708
const TINYBLOB = 57709
const MEDIUMBLOB = 57710
const LONGBLOB = 57711
const JSON = 57712
const ENUM = 57713
const GEOMETRY = 57714
const POINT = 57715
const LINESTRING = 57716
const POLYGON = 57717
const GEOMETRYCOLLECTION = 57718
const MULTIPOINT = 57719
const MULTILINESTRING = 57720
const MULTIPOLYGON = 57721
const LOCAL = 57722
const LOW_PRIORITY = 57723
const NULLX = 57724
const AUTO_INCREMENT = 57725
const APPROXNUM = 57726
const SIGNED = 57727
const UNSIGNED = 57728
const ZEROFILL = 57729
const COLLATION = 57730
const DATABASES = 57731
const SCHEMAS = 57732
const TABLES = 57733
const FULL = 57734
const PROCESSLIST = 57735
const COLUMNS = 57736
const FIELDS = 57737
const ENGINES = 57738
const PLUGINS = 57739
const NAMES = 57740
const CHARSET = 57741
const GLOBAL = 57742
const SESSION = 57743
const ISOLATION = 57744
const LEVEL = 57745
const READ = 57746
const WRITE = 57747
const ONLY = 57748
const REPEATABLE = 57749
const COMMITTED = 57750
const UNCOMMITTED = 57751
const SERIALIZABLE = 57752
const ENCRYPTION = 57753
const CURRENT_TIMESTAMP = 57754
const DATABASE = 57755
const CURRENT_DATE = 57756
const CURRENT_USER = 57757
const CURRENT_TIME = 57758
const LOCALTIME = 57759
const LOCALTIMESTAMP = 57760
const UTC_DATE = 57761
const UTC_TIME = 57762
const UTC_TIMESTAMP = 57763
const REPLACE = 57764
const CONVERT = 57765
const CAST = 57766
const SUBSTR = 57767
const SUBSTRING = 57768
const TRIM = 57769
const LEADING = 57770
const TRAILING = 57771
const BOTH = 57772
const GROUP_CONCAT = 57773
const SEPARATOR = 57774
const TIMESTAMPADD = 57775
const TIMESTAMPDIFF = 57776
const OVER = 57777
const WINDOW = 57778
const GROUPING = 57779
const CURRENT = 57780
const AVG = 57781
const BIT_AND = 57782
const BIT_OR = 57783
const BIT_XOR = 57784
const COUNT = 57785
const JSON_ARRAYAGG = 57786
const JSON_OBJECTAGG = 57787
const MAX = 57788
const MIN = 57789
const STDDEV_POP = 57790
const STDDEV = 57791
const STD = 57792
const STDDEV_SAMP = 57793
const SUM = 57794
const VAR_POP = 57795
const VARIANCE = 57796
const VAR_SAMP = 57797
const CUME_DIST = 57798
const DENSE_RANK = 57799
const FIRST_VALUE = 57800
const LAG = 57801
const LAST_VALUE = 57802
const LEAD = 57803
const NTH_VALUE = 57804
const NTILE = 57805
const ROW_NUMBER = 57806
const PERCENT_RANK = 57807
const RANK = 57808
const MATCH = 57809
const AGAINST = 57810
const BOOLEAN = 57811
const LANGUAGE = 57812
const WITH = 57813
const QUERY = 57814
const EXPANSION = 57815
const UNUSED = 57816
const ARRAY = 57817
const DESCRIPTION = 57818
const EMPTY = 57819
const JSON_TABLE = 57820
const LATERAL = 57821
const MEMBER = 57822
const RECURSIVE = 57823
const ACTIVE = 57824
const BUCKETS = 57825
const CLONE = 57826
const COMPONENT = 57827
const DEFINITION = 57828
const ENFORCED = 57829
const EXCLUDE = 57830
const GEOMCOLLECTION = 57831
const GET_MASTER_PUBLIC_KEY = 57832
const HISTOGRAM = 57833
const HISTORY = 57834
const INACTIVE = 57835
const INVISIBLE = 57836
const LOCKED = 57837
const MASTER_COMPRESSION_ALGORITHMS = 57838
const MASTER_PUBLIC_KEY_PATH = 57839
const MASTER_TLS_CIPHERSUITES = 57840
const MASTER_ZSTD_COMPRESSION_LEVEL = 57841
const NESTED = 57842
const NETWORK_NAMESPACE = 57843
const NOWAIT = 57844
const NULLS = 57845
const OJ = 57846
const OLD = 57847
const ORDINALITY = 57848
const ORGANIZATION = 57849
const OTHERS = 57850
const PATH = 57851
const PERSIST = 57852
const PERSIST_ONLY = 57853
const PRIVILEGE_CHECKS_USER = 57854
const PROCESS = 57855
const REFERENCE = 57856
const REQUIRE_ROW_FORMAT = 57857
const RESOURCE = 57858
const RESPECT = 57859
const RESTART = 57860
const RETAIN = 57861
const SECONDARY = 57862
const SECONDARY_ENGINE = 57863
const SECONDARY_LOAD = 57864
const SECONDARY_UNLOAD = 57865
const SKIP = 57866
const SRID = 57867
const THREAD_PRIORITY = 57868
const TIES = 57869
const VCPU = 57870
const VISIBLE = 57871
const SYSTEM = 57872
const INFILE = 57873
const GENERATED = 57874
const ALWAYS = 57875
const STORED = 57876
const VIRTUAL = 57877
const NVAR = 57878
const PASSWORD_LOCK = 57879

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 58,
	-2, 1132,
	-1, 43,
	189, 1196,
	190, 1214,
	-2, 245,
	-1, 49,
	228, 719,
	229, 719,
	-2, 708,
	-1, 559,
	177, 1224,
	-2, 1218,
	-1, 560,
	177, 1225,
	-2, 1219,
	-1, 705,
	100, 1513,
	177, 1513,
	-2, 1180,
	-1, 706,
	100, 1632,
	177, 1632,
	-2, 1181,
	-1, 711,
	100, 1537,
	177, 1537,
	-2, 1182,
	-1, 712,
	100, 1585,
	177, 1585,
	-2, 1183,
	-1, 713,
	100, 1586,
	177, 1586,
	-2, 1184,
	-1, 714,
	100, 1458,
	177, 1458,
	-2, 1188,
	-1, 716,
	100, 1562,
	177, 1562,
	-2, 1190,
	-1, 1239,
	1, 816,
	5, 816,
	12, 816,
	13, 816,
	14, 816,
	15, 816,
	17, 816,
	19, 816,
	29, 816,
	30, 816,
	56, 816,
	57, 816,
	58, 816,
	59, 816,
	60, 816,
	62, 816,
	63, 816,
	66, 816,
	67, 816,
	69, 816,
	70, 816,
	87, 816,
	454, 816,
	556, 816,
	-2, 848,
	-1, 1245,
	67, 75,
	69, 75,
	-2, 79,
	-1, 1341,
	1, 498,
	556, 498,
	-2, 496,
	-1, 1343,
	1, 498,
	556, 498,
	-2, 496,
	-1, 1506,
	177, 1227,
	-2, 1223,
	-1, 1672,
	44, 564,
	-2, 1470,
	-1, 1676,
	68, 562,
	72, 562,
	-2, 1507,
	-1, 1677,
	68, 564,
	-2, 1415,
	-1, 1680,
	68, 560,
	72, 560,
	-2, 1332,
	-1, 1681,
	68, 561,
	72, 561,
	-2, 1342,
	-1, 1729,
	1, 499,
	556, 499,
	-2, 496,
	-1, 1813,
	44, 607,
	196, 609,
	198, 607,
	199, 607,
	-2, 644,
	-1, 1893,
	5, 59,
	-2, 919,
	-1, 2208,
	69, 1389,
	70, 1389,
	177, 1389,
	-2, 750,
	-1, 2231,
	1, 873,
	5, 873,
	12, 873,
	13, 873,
	14, 873,
	15, 873,
	17, 873,
	19, 873,
	29, 873,
	30, 873,
	56, 873,
	57, 873,
	58, 873,
	59, 873,
	60, 873,
	62, 873,
	63, 873,
	66, 873,
	67, 873,
	69, 873,
	70, 873,
	87, 873,
	454, 873,
	556, 873,
	-2, 848,
	-1, 2341,
	196, 610,
	-2, 608,
	-1, 2402,
	5, 59,
	-2, 1152,
	-1, 2617,
	41, 1234,
	-2, 1232,
	-1, 2716,
	5, 59,
	-2, 1155,
}

const yyPrivate = 57344

const yyLast = 39129

var yyAct = [...]int{
	625, 80, 2915, 2897, 931, 2941, 430, 2814, 2948, 2150,
	2898, 2834, 2868, 2788, 2728, 7, 2829, 2917, 2720, 2849,
	2727, 6, 2036, 2285, 2726, 5, 2725, 3, 2813, 2782,
	562, 2702, 560, 2245, 2662, 2786, 2729, 8, 1276, 2704,
	1958, 1193, 2617, 2559, 1664, 2225, 1724, 565, 1928, 1624,
	1194, 2133, 551, 1376, 2501, 730, 1979, 1682, 2619, 2302,
	2201, 2477, 1748, 2119, 2471, 2455, 1483, 624, 1673, 2246,
	1628, 455, 455, 2721, 461, 413, 416, 567, 1630, 1985,
	129, 80, 544, 129, 2202, 2335, 1375, 93, 476, 129,
	728, 2132, 947, 2052, 964, 577, 1663, 1929, 2325, 458,
	458, 83, 106, 1715, 2142, 1476, 1662, 543, 1812, 2217,
	1842, 987, 129, 2210, 2414, 2198, 2172, 1474, 1540, 725,
	1531, 2097, 542, 129, 1378, 1607, 1775, 129, 733, 1603,
	1986, 1352, 1396, 1669, 1424, 1711, 2027, 1732, 1491, 710,
	726, 1731, 1092, 707, 1730, 1614, 1508, 129, 458, 1256,
	733, 1236, 1597, 1099, 1016, 1239, 1095, 1235, 129, 995,
	2143, 1792, 699, 1728, 724, 703, 1255, 547, 704, 930,
	433, 1210, 475, 1103, 1113, 994, 1429, 914, 432, 696,
	1347, 569, 1344, 85, 919, 102, 1211, 2980, 98, 2976,
	1999, 2971, 2956, 2954, 1247, 2001, 2936, 2910, 2857, 82,
	2664, 2663, 2259, 1422, 448, 2442, 442, 453, 436, 2283,
	2596, 2006, 2005, 36, 36, 36, 36, 1652, 72, 39,
	40, 87, 88, 89, 90, 91, 2594, 2456, 443, 425,
	2927, 2797, 36, 2002, 2896, 2714, 1923, 2458, 2609, 1761,
	2064, 2597, 1761, 2873, 1542, 1699, 2774, 2299, 2008, 2796,
	1992, 2649, 2193, 69, 1924, 2544, 1626, 473, 1993, 1128,
	1127, 1137, 1138, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1129, 2682, 2792, 1139, 2830, 81, 81, 81, 81, 916,
	2713, 921, 922, 680, 1864, 686, 688, 687, 684, 685,
	683, 682, 681, 924, 81, 2396, 913, 1791, 2792, 72,
	39, 40, 2241, 2242, 2434, 2435, 1428, 110, 2789, 951,
	952, 1967, 2240, 955, 1966, 1085, 2787, 1968, 1649, 1650,
	41, 120, 116, 117, 1445, 118, 1470, 1471, 1044, 1426,
	1427, 1257, 553, 1258, 2789, 1648, 1425, 424, 968, 969,
	423, 1052, 2010, 2043, 465, 953, 954, 720, 967, 1684,
	1685, 99, 2461, 1790, 1013, 1687, 1687, 122, 121, 1691,
	1693, 1700, 1692, 2004, 1712, 2383, 2007, 2530, 1705, 2381,
	1700, 1408, 977, 2793, 407, 1066, 422, 472, 435, 434,
	437, 2094, 1466, 1465, 1464, 1463, 1462, 427, 441, 1461,
	1048, 1049, 2459, 2460, 2462, 2463, 2464, 1028, 974, 2793,
	2059, 1059, 2086, 466, 1060, 445, 2472, 2888, 2622, 449,
	80, 80, 129, 2816, 2475, 123, 2324, 124, 2478, 2479,
	2480, 2481, 2815, 452, 982, 2762, 2309, 2091, 2473, 2474,
	984, 1803, 2063, 2676, 983, 2595, 981, 543, 1820, 1814,
	1815, 1749, 1813, 1816, 1817, 2764, 2684, 2686, 1026, 2489,
	2613, 101, 985, 2822, 2487, 2591, 129, 2300, 2497, 2061,
	1804, 112, 111, 2303, 2304, 2305, 2306, 2307, 1456, 1081,
	1076, 2303, 2304, 2305, 2306, 2307, 2589, 1089, 1823, 2945,
	2854, 975, 976, 2312, 1350, 1028, 2852, 2853, 2588, 108,
	114, 2587, 1822, 1821, 2586, 417, 2585, 1359, 1360, 1358,
	113, 2583, 920, 108, 414, 108, 2173, 129, 2584, 2912,
	2921, 2672, 2673, 2916, 2839, 109, 113, 918, 917, 2723,
	438, 439, 440, 446, 1435, 450, 451, 454, 408, 2919,
	2416, 965, 1739, 966, 968, 969, 1028, 963, 418, 1743,
	1744, 1949, 2668, 920, 960, 103, 959, 104, 2801, 2802,
	1072, 2891, 950, 2077, 2078, 2866, 1051, 2502, 2503, 1148,
	2661, 1738, 1150, 1275, 119, 961, 962, 2105, 2003, 2966,
	1275, 2340, 1071, 1067, 1068, 1069, 1070, 1073, 1074, 1075,
	1077, 2678, 1248, 115, 2041, 1275, 1116, 2175, 1274, 2952,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 402, 2282, 1192, 2103, 1196, 2688, 2042, 2512,
	2650, 2981, 2906, 1984, 2457, 2062, 2978, 2972, 1984, 1149,
	2044, 2560, 2957, 1061, 426, 1409, 978, 1027, 915, 933,
	73, 1078, 543, 2790, 471, 2562, 2513, 2085, 1819, 2326,
	1035, 1714, 1797, 2683, 2592, 2017, 1690, 2612, 1700, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 2790,
	1209, 1212, 1212, 1212, 1218, 1212, 1212, 1218, 1212, 1218,
	1227, 1228, 1229, 1230, 100, 1240, 79, 79, 79, 79,
	2311, 1038, 2763, 415, 2712, 415, 1727, 2677, 110, 415,
	410, 2610, 1428, 2065, 1024, 79, 1758, 2000, 2918, 2920,
	1033, 1757, 1080, 380, 1430, 2082, 129, 129, 129, 444,
	2067, 73, 1087, 2066, 2177, 1426, 1427, 415, 1984, 2181,
	1798, 2176, 733, 2174, 1234, 411, 912, 2116, 2179, 2249,
	1034, 710, 1030, 1956, 1275, 1364, 710, 1362, 2105, 1432,
	979, 2178, 1431, 2950, 1984, 1989, 2951, 1955, 2949, 1984,
	383, 1954, 1243, 911, 2561, 2080, 2180, 2182, 1983, 392,
	400, 401, 2516, 1983, 2111, 2103, 1031, 1032, 1084, 2108,
	2103, 1100, 2107, 2110, 1275, 1633, 1635, 2104, 2105, 2511,
	923, 1120, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 389, 379, 1902, 390, 1335, 2366,
	398, 399, 1269, 1128, 1127, 1137, 1138, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1129, 1899, 2358, 1139, 1023, 1151,
	1152, 1653, 2084, 2083, 1273, 1971, 1963, 1260, 1859, 1847,
	1828, 1742, 1261, 1213, 1215, 1217, 1219, 1221, 1223, 1224,
	1226, 1740, 112, 111, 1486, 1268, 1253, 1119, 1214, 1216,
	1195, 1220, 1222, 943, 1225, 1246, 2681, 395, 2577, 2449,
	2447, 2272, 1139, 1983, 1029, 1036, 1037, 1039, 1040, 1041,
	1042, 1043, 1251, 1045, 1046, 1047, 2320, 1050, 396, 1053,
	1054, 1055, 1056, 1057, 1129, 1270, 1644, 1139, 1406, 1983,
	2840, 2841, 2837, 2838, 1983, 96, 2703, 2115, 1111, 1109,
	1776, 2112, 2526, 1208, 2599, 1634, 2124, 455, 1608, 1354,
	2709, 2708, 1479, 1112, 1515, 2517, 1112, 2120, 2215, 2578,
	2450, 2448, 2273, 2214, 733, 129, 455, 1109, 1377, 1513,
	1514, 1512, 949, 970, 458, 458, 1633, 1635, 458, 1417,
	2600, 1397, 1266, 381, 1112, 129, 1767, 2389, 129, 2960,
	2942, 2959, 2195, 458, 458, 1353, 129, 986, 926, 1357,
	925, 1598, 957, 1151, 1152, 129, 129, 129, 129, 129,
	2850, 1598, 2877, 1914, 2876, 2970, 394, 384, 385, 1380,
	405, 2907, 1151, 1152, 386, 388, 458, 382, 404, 403,
	1128, 1127, 1137, 1138, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1129, 1342, 2871, 1139, 1484, 1485, 1404, 2488, 455,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1129, 932, 1381,
	1139, 1600, 1132, 1133, 1134, 1135, 1136, 1129, 948, 972,
	1139, 397, 1392, 1393, 1394, 1395, 458, 458, 458, 2482,
	1398, 733, 1420, 1454, 2518, 1768, 1128, 1127, 1137, 1138,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1129, 1786, 1438,
	1139, 958, 80, 1477, 470, 2257, 1634, 2361, 1110, 1111,
	1109, 458, 1897, 1106, 1896, 1906, 458, 458, 1400, 1340,
	1401, 1355, 1339, 96, 2767, 1477, 2760, 1112, 543, 1356,
	1436, 2759, 1366, 1110, 1111, 1109, 2717, 129, 1460, 129,
	1374, 1373, 733, 1468, 81, 1110, 1111, 1109, 1385, 1386,
	1383, 2967, 1112, 2974, 1475, 1511, 2607, 1110, 1111, 1109,
	129, 1498, 1500, 1501, 1112, 2909, 2679, 1116, 95, 1499,
	1459, 80, 1096, 2761, 1091, 1097, 1112, 935, 936, 937,
	938, 939, 940, 941, 1505, 1412, 1413, 2606, 557, 1415,
	1110, 1111, 1109, 693, 694, 1506, 2605, 543, 2851, 1844,
	1845, 1846, 1535, 1536, 2604, 1418, 2968, 2598, 94, 1112,
	1509, 2441, 733, 2680, 1384, 1437, 2440, 1196, 1433, 2032,
	1510, 1434, 1128, 1127, 1137, 1138, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1129, 2030, 1402, 1139, 2011, 1019, 733,
	733, 1018, 2859, 543, 1127, 1137, 1138, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1129, 992, 1455, 1139, 1578, 1458,
	1532, 1627, 1533, 2858, 1504, 1636, 1467, 1969, 1240, 1970,
	1584, 1587, 1240, 1110, 1111, 1109, 1195, 1599, 991, 1472,
	2850, 2819, 2817, 2773, 2675, 129, 2674, 543, 2660, 1110,
	1111, 1109, 1112, 129, 1898, 129, 1488, 2197, 2614, 2847,
	129, 129, 2582, 2540, 129, 129, 129, 1550, 1112, 1502,
	2485, 2484, 1555, 1110, 1111, 1109, 2033, 1639, 2483, 2846,
	1489, 1641, 710, 1490, 733, 733, 2451, 2438, 2331, 1380,
	2265, 2129, 1112, 1657, 1110, 1111, 1109, 726, 1243, 2128,
	2028, 1787, 1762, 1414, 1506, 1243, 2685, 1623, 2658, 1243,
	2631, 1632, 1989, 1112, 1538, 2625, 2509, 2369, 1546, 1110,
	1111, 1109, 563, 2354, 2350, 2342, 2313, 2072, 2071, 1557,
	1558, 1780, 1659, 1764, 1494, 1495, 1496, 1763, 1112, 1534,
	1410, 1407, 1570, 1372, 1371, 1335, 1574, 1343, 1341, 1014,
	1755, 1637, 582, 581, 584, 585, 586, 587, 945, 421,
	1595, 583, 588, 419, 2551, 2874, 2425, 2865, 129, 2780,
	1091, 1091, 1670, 1658, 129, 129, 458, 458, 458, 2425,
	2778, 129, 1365, 1678, 2425, 2776, 1218, 2425, 2666, 2551,
	2654, 2551, 2567, 2551, 1091, 1642, 1058, 1753, 1754, 2624,
	1646, 2573, 478, 1645, 1721, 1722, 1651, 2551, 2550, 2572,
	129, 129, 129, 1717, 1718, 1719, 1720, 1667, 1660, 2425,
	2424, 1195, 2406, 1091, 2623, 1582, 1583, 1249, 1783, 1827,
	1091, 2280, 2279, 2276, 2277, 2292, 129, 2266, 129, 2276,
	2275, 1024, 733, 1713, 1857, 1091, 733, 1091, 1611, 1091,
	1800, 1799, 1576, 1784, 1825, 1959, 1439, 1576, 1091, 1442,
	1443, 1444, 84, 1446, 1447, 1272, 1271, 1448, 733, 1769,
	1249, 733, 2199, 1449, 1774, 2213, 1959, 1450, 1451, 1765,
	1452, 1453, 2361, 1250, 1747, 1252, 1848, 1736, 1481, 1610,
	733, 1656, 1773, 2892, 1789, 1128, 1127, 1137, 1138, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1129, 1063, 1638, 1139,
	1248, 1505, 1611, 2870, 1062, 2213, 1857, 1022, 1701, 1702,
	1703, 1704, 1506, 1576, 2400, 1746, 1250, 2373, 1248, 1611,
	1611, 1243, 1021, 2213, 1761, 1022, 2293, 2278, 2227, 1480,
	2127, 623, 1137, 1138, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1129, 2096, 1973, 1139, 1647, 1782, 1778, 1788, 1857,
	1509, 1723, 1886, 1885, 1090, 1024, 1416, 1760, 1482, 1086,
	1510, 1457, 1423, 1363, 1361, 1795, 1128, 1127, 1137, 1138,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1129, 1925, 1927,
	1139, 1658, 1240, 1240, 1240, 1240, 1240, 1802, 1254, 721,
	1805, 81, 2798, 2777, 2226, 2630, 2628, 2443, 1627, 1824,
	1950, 1687, 2412, 1716, 543, 2256, 1836, 1834, 1835, 1240,
	1712, 1809, 1977, 1853, 129, 129, 129, 129, 129, 1926,
	2218, 2219, 1725, 717, 543, 1028, 129, 729, 1930, 1849,
	129, 1741, 1707, 1706, 129, 1336, 1931, 1011, 429, 1578,
	1777, 129, 2931, 2929, 2899, 2291, 2221, 2199, 2034, 934,
	1961, 81, 1962, 1368, 1064, 1025, 1020, 1843, 1960, 1243,
	1243, 1243, 1243, 1243, 710, 733, 1616, 1619, 1620, 1621,
	1617, 2224, 1618, 1622, 1891, 1243, 2218, 2219, 1863, 1865,
	1941, 1953, 1945, 1939, 2223, 1942, 1243, 1938, 1940, 1937,
	1952, 1877, 1878, 1879, 1880, 2843, 1943, 1100, 1620, 1621,
	548, 549, 2795, 2130, 1988, 1990, 460, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1616, 1619, 1620, 1621, 1617, 1913,
	1618, 1622, 1833, 1492, 1104, 1105, 2828, 2403, 733, 1974,
	129, 1841, 1840, 1335, 1933, 1934, 1957, 1936, 1944, 1932,
	2541, 2508, 1935, 733, 733, 733, 1686, 2428, 2251, 458,
	2349, 2348, 455, 1102, 2076, 1991, 2264, 1976, 2263, 2262,
	1260, 1981, 2690, 129, 458, 2693, 2772, 1964, 2771, 2618,
	1353, 2818, 1972, 2616, 2671, 2670, 1982, 2070, 1987, 420,
	458, 1411, 2601, 2602, 1093, 2069, 2123, 478, 2122, 2287,
	2021, 1892, 1267, 1009, 2884, 1094, 80, 993, 990, 989,
	946, 458, 2635, 733, 2634, 1734, 1484, 1485, 2490, 458,
	2398, 1735, 1367, 1915, 2029, 2491, 2893, 2765, 2620, 2432,
	2031, 988, 543, 2286, 1104, 1105, 1839, 1726, 96, 1473,
	733, 733, 1082, 1083, 1838, 2151, 2074, 2040, 2883, 2882,
	129, 2038, 2125, 2126, 2039, 2881, 2579, 1808, 2060, 973,
	733, 545, 2821, 2820, 2784, 2087, 2769, 2694, 2641, 546,
	84, 2783, 2135, 2093, 1801, 2705, 1117, 733, 1959, 2046,
	2047, 2048, 2933, 2932, 1505, 2073, 2521, 2329, 2092, 2090,
	2089, 2079, 1903, 1900, 1806, 1506, 1399, 2020, 1107, 2022,
	2023, 2024, 2025, 2932, 2081, 2204, 80, 2933, 2651, 2261,
	1478, 721, 467, 2101, 2012, 2013, 2106, 469, 2117, 2118,
	86, 2019, 2121, 55, 2098, 2109, 2114, 2100, 2095, 1,
	2229, 2026, 543, 2739, 52, 2233, 2234, 2235, 733, 1796,
	733, 2741, 19, 2740, 18, 2146, 2147, 2205, 1440, 2212,
	1475, 1930, 2200, 2470, 2153, 2154, 2141, 2137, 2136, 1931,
	2742, 20, 2469, 733, 2145, 2476, 2161, 2162, 2163, 2164,
	2743, 21, 2203, 2168, 2169, 2170, 2738, 15, 2737, 14,
	2258, 2239, 2731, 10, 733, 2298, 733, 2301, 733, 2058,
	733, 2754, 34, 2194, 2486, 2184, 2135, 2228, 2183, 2752,
	33, 2751, 32, 2750, 28, 2749, 27, 1351, 2152, 2590,
	2388, 2232, 2155, 2156, 2157, 2748, 26, 2160, 929, 2253,
	2746, 23, 2254, 2207, 2255, 2222, 1745, 2250, 1015, 2252,
	2745, 22, 2747, 24, 2736, 13, 2733, 12, 2732, 11,
	2237, 2730, 9, 2770, 2230, 2689, 455, 129, 2308, 1721,
	1334, 1722, 2244, 2691, 2615, 2493, 2454, 2453, 2051, 2050,
	2243, 1010, 1421, 2099, 2102, 1756, 1818, 733, 733, 733,
	2701, 1604, 2294, 1807, 458, 1065, 1671, 1661, 723, 129,
	458, 92, 1766, 956, 387, 1668, 2288, 2289, 2290, 1997,
	2692, 1012, 1996, 129, 2009, 458, 1683, 733, 458, 1729,
	1733, 2315, 458, 458, 1995, 458, 2310, 1994, 2687, 1128,
	1127, 1137, 1138, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1129, 1403, 733, 1139, 1998, 1280, 129, 733, 1278, 1279,
	1277, 1282, 1281, 391, 733, 2338, 1262, 733, 2808, 2196,
	733, 2368, 1108, 107, 56, 2510, 2113, 463, 464, 2319,
	97, 105, 2323, 393, 1147, 1837, 2327, 2328, 1965, 2330,
	708, 709, 701, 1829, 1088, 2316, 2362, 2707, 2867, 2800,
	1098, 2831, 1912, 1207, 2394, 1335, 1596, 566, 1948, 2525,
	2833, 1497, 2339, 2353, 2238, 2333, 2332, 1547, 1548, 580,
	579, 578, 575, 576, 2791, 1487, 1922, 1121, 2281, 564,
	1560, 1561, 1562, 1563, 555, 1238, 1231, 1785, 1615, 1613,
	2267, 2268, 1612, 1369, 697, 1575, 1577, 2271, 2360, 2220,
	2216, 1581, 129, 1625, 2274, 2365, 1237, 1241, 70, 2520,
	971, 409, 2395, 2367, 2648, 38, 468, 550, 25, 733,
	2269, 1930, 17, 2370, 2371, 717, 733, 733, 733, 1931,
	717, 1263, 2374, 980, 16, 1811, 733, 927, 42, 44,
	2045, 2379, 1737, 2807, 2914, 996, 80, 2940, 2848, 733,
	1507, 31, 30, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 29, 2445,
	2418, 2408, 543, 2744, 2407, 2753, 2399, 2735, 2734, 2419,
	2423, 2901, 2900, 4, 129, 2317, 733, 2444, 1079, 71,
	35, 2429, 719, 2, 2466, 2467, 2468, 0, 0, 0,
	1974, 0, 0, 0, 0, 0, 0, 0, 2420, 2421,
	2422, 2446, 0, 0, 0, 0, 0, 2433, 0, 0,
	0, 0, 458, 0, 2355, 0, 0, 0, 0, 0,
	0, 2430, 0, 1590, 0, 2504, 2505, 0, 553, 0,
	0, 1601, 0, 0, 0, 2506, 0, 2465, 0, 0,
	0, 733, 0, 0, 0, 0, 0, 0, 0, 733,
	0, 2204, 0, 2519, 2204, 2546, 0, 0, 2514, 2492,
	2250, 2135, 2494, 2522, 2523, 0, 2498, 2229, 2495, 2507,
	2500, 0, 2496, 0, 2499, 0, 0, 0, 0, 478,
	0, 543, 1721, 2569, 0, 1186, 1187, 0, 0, 733,
	2515, 0, 2397, 0, 0, 733, 2545, 0, 1779, 1195,
	129, 0, 129, 0, 0, 0, 0, 1117, 733, 2409,
	2410, 0, 0, 2411, 2543, 0, 2413, 2575, 2203, 2576,
	0, 2203, 0, 1337, 1195, 0, 733, 2574, 0, 1345,
	1348, 0, 0, 0, 2552, 2542, 2566, 2436, 2553, 0,
	2548, 0, 0, 2564, 2565, 2563, 0, 0, 2558, 0,
	1345, 1348, 0, 0, 0, 2580, 1632, 0, 2554, 0,
	1810, 0, 0, 0, 0, 0, 1826, 0, 0, 2636,
	2581, 2437, 1240, 2439, 0, 0, 0, 2549, 0, 0,
	0, 0, 0, 0, 0, 2593, 0, 0, 2603, 0,
	0, 0, 2608, 0, 0, 2204, 733, 80, 0, 0,
	0, 2611, 0, 0, 129, 2621, 0, 0, 0, 0,
	0, 2637, 2626, 2627, 2629, 0, 0, 0, 0, 0,
	2633, 2638, 0, 543, 0, 2639, 1855, 80, 0, 0,
	1781, 1858, 0, 0, 733, 478, 1860, 1861, 2653, 0,
	1441, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1243,
	0, 1876, 2657, 543, 2669, 2652, 1881, 1882, 1883, 1884,
	2387, 0, 2203, 1888, 1889, 1890, 0, 1334, 2667, 0,
	1893, 1894, 1895, 2529, 1240, 2659, 0, 2640, 1901, 0,
	0, 1904, 1905, 2656, 0, 0, 1910, 0, 0, 0,
	0, 1916, 0, 1917, 1918, 1919, 0, 1920, 1921, 0,
	0, 729, 0, 458, 0, 2570, 129, 2571, 0, 0,
	0, 733, 2697, 733, 2699, 0, 1946, 1947, 0, 0,
	80, 0, 0, 2696, 2695, 2386, 2698, 2724, 0, 0,
	0, 729, 1850, 1851, 1852, 0, 0, 0, 0, 0,
	2722, 2706, 2710, 0, 129, 0, 0, 0, 0, 1930,
	2715, 1243, 0, 0, 0, 0, 0, 1931, 0, 1128,
	1127, 1137, 1138, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1129, 1537, 0, 1139, 0, 0, 0, 0, 0, 0,
	0, 0, 2768, 2766, 0, 0, 733, 2775, 0, 0,
	0, 0, 0, 0, 0, 2794, 0, 2803, 1568, 1569,
	0, 0, 0, 0, 2799, 0, 0, 0, 0, 80,
	1907, 1908, 1909, 0, 0, 2657, 0, 553, 478, 0,
	0, 717, 0, 0, 1128, 1127, 1137, 1138, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1129, 2372, 0, 1139, 0,
	733, 0, 0, 0, 0, 2824, 0, 2826, 0, 0,
	0, 2836, 2812, 0, 0, 0, 0, 0, 0, 0,
	733, 2825, 2827, 0, 0, 2823, 717, 0, 0, 0,
	0, 0, 0, 2845, 2842, 0, 0, 455, 0, 2863,
	729, 733, 0, 729, 729, 1128, 1127, 1137, 1138, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1129, 2855, 0, 1139,
	0, 0, 80, 2864, 0, 458, 0, 0, 80, 0,
	0, 0, 0, 733, 0, 2887, 0, 0, 2878, 2875,
	0, 0, 0, 0, 0, 733, 0, 0, 80, 0,
	2880, 2889, 2894, 80, 2890, 2895, 1195, 0, 0, 733,
	2905, 0, 2924, 455, 2151, 2923, 2904, 0, 2140, 2911,
	2903, 2885, 2930, 2926, 2148, 2925, 2908, 80, 2928, 543,
	80, 80, 2902, 2844, 0, 80, 2158, 2159, 2887, 0,
	0, 458, 2943, 2934, 2913, 733, 0, 0, 0, 2167,
	1242, 0, 0, 2171, 0, 2935, 0, 80, 2937, 0,
	80, 0, 2953, 0, 2887, 2075, 2961, 2963, 0, 0,
	0, 0, 0, 0, 0, 80, 0, 80, 0, 0,
	0, 80, 2887, 0, 2887, 0, 478, 2206, 2958, 0,
	0, 0, 80, 0, 478, 80, 0, 80, 126, 2887,
	0, 80, 0, 0, 2887, 0, 0, 412, 2887, 2973,
	0, 1794, 0, 0, 0, 1794, 0, 0, 0, 2236,
	2804, 2805, 0, 2977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1980, 0, 1794, 0, 0,
	1794, 698, 0, 2139, 0, 722, 0, 0, 2832, 2835,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 928, 0, 0, 729, 0,
	0, 0, 0, 0, 2165, 2166, 942, 0, 0, 0,
	1688, 1689, 0, 1694, 1695, 1696, 1697, 1698, 2185, 2186,
	0, 2187, 2188, 0, 0, 2189, 0, 0, 0, 0,
	0, 1708, 1709, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2879, 0, 0, 0, 1123,
	0, 1126, 0, 0, 1101, 0, 0, 0, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 2835, 1124, 1125, 1122, 0,
	2231, 0, 0, 0, 0, 0, 1128, 1127, 1137, 1138,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1129, 0, 0,
	1139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 406, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	2260, 0, 717, 0, 0, 0, 0, 0, 2363, 0,
	0, 0, 0, 0, 477, 0, 0, 2962, 0, 0,
	0, 0, 554, 0, 0, 700, 718, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 2138, 0, 717, 0,
	0, 0, 0, 0, 2375, 0, 2192, 0, 0, 127,
	0, 0, 0, 0, 729, 2384, 2385, 0, 0, 0,
	127, 2390, 2191, 0, 1128, 1127, 1137, 1138, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1129, 2401, 2402, 1139, 2404,
	0, 0, 2405, 1539, 1544, 1545, 2190, 0, 0, 1549,
	0, 1551, 1552, 1553, 1554, 0, 1556, 0, 0, 1559,
	0, 0, 2417, 0, 1564, 1565, 1566, 1567, 0, 0,
	0, 1571, 1572, 1573, 0, 0, 0, 2035, 0, 1579,
	1580, 0, 0, 0, 1586, 1589, 0, 1594, 0, 0,
	0, 0, 2049, 2053, 2057, 0, 0, 2364, 0, 0,
	944, 0, 0, 0, 0, 0, 0, 0, 0, 1602,
	2248, 1605, 1606, 1128, 1127, 1137, 1138, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1129, 0, 0, 1139, 0, 1128,
	1127, 1137, 1138, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1129, 0, 0, 1139, 1017, 0, 0, 0, 0, 2391,
	2392, 2393, 2088, 1128, 1127, 1137, 1138, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1129, 0, 0, 1139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 729,
	729, 1128, 1127, 1137, 1138, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1129, 0, 0, 1139, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 36, 0, 72, 39,
	40, 729, 0, 0, 0, 0, 2149, 2431, 0, 0,
	59, 0, 0, 2535, 2536, 2537, 78, 2539, 0, 41,
	2337, 0, 0, 0, 0, 0, 0, 1980, 0, 0,
	2344, 2346, 0, 0, 0, 0, 0, 0, 0, 0,
	2337, 0, 2555, 2556, 2557, 0, 0, 2014, 2015, 2016,
	2018, 0, 0, 2568, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 127, 717, 0, 729, 1854, 2211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2755, 0, 0, 2939, 2942, 2938,
	0, 0, 2211, 0, 0, 0, 1128, 1127, 1137, 1138,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1129, 127, 0,
	1139, 0, 0, 729, 0, 729, 0, 729, 0, 2247,
	0, 2527, 2528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 478, 0, 0, 2531, 2532, 2533, 2534, 0,
	0, 0, 0, 2538, 0, 0, 0, 0, 0, 2642,
	2643, 0, 0, 2644, 2645, 2646, 2647, 0, 0, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2295, 2296, 2297, 0,
	0, 49, 77, 76, 1233, 0, 1245, 0, 47, 0,
	1856, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 2322, 0, 0, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1887, 0, 0, 0, 0, 0, 0, 0,
	0, 2347, 0, 0, 0, 0, 2352, 2337, 0, 57,
	58, 0, 2757, 2356, 0, 0, 2357, 1911, 0, 2359,
	2711, 0, 0, 0, 0, 2716, 66, 2337, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 2719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2665, 0,
	0, 0, 0, 2779, 0, 0, 0, 0, 0, 2785,
	0, 2758, 75, 0, 53, 54, 61, 0, 62, 0,
	478, 0, 478, 0, 0, 0, 0, 0, 2248, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2248, 0, 2415, 0,
	0, 0, 0, 0, 2270, 2415, 2415, 2415, 127, 127,
	127, 0, 0, 2700, 0, 729, 0, 0, 718, 0,
	0, 0, 0, 718, 0, 0, 0, 0, 2415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 2053, 0, 0, 0, 0,
	0, 0, 0, 698, 0, 0, 1370, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1387, 1388, 1389, 1390, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 36, 37, 72, 39, 40, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 0, 0, 0,
	729, 0, 78, 0, 0, 41, 63, 64, 729, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2376, 2377, 0, 2378, 0, 0, 2380, 0, 2382, 0,
	50, 0, 0, 0, 81, 0, 0, 0, 2547, 0,
	0, 2248, 0, 2248, 2415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2247, 2964, 2965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1469, 0, 127, 0, 0,
	0, 0, 1346, 1349, 2426, 2427, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 1493, 0,
	127, 0, 0, 1346, 1349, 0, 0, 0, 1379, 0,
	0, 0, 0, 2922, 0, 0, 0, 127, 127, 127,
	127, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2632, 43, 74, 46, 45,
	48, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2946, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 77, 76,
	0, 0, 0, 2655, 47, 0, 0, 0, 0, 0,
	2248, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 0, 57, 58, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 66, 0, 67, 0, 0, 0, 0, 127,
	2247, 477, 2247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 127, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2781, 1543, 1543, 1543, 0,
	0, 0, 1543, 1543, 1543, 1543, 1543, 1543, 1543, 1543,
	0, 0, 1543, 0, 0, 0, 1750, 1543, 1543, 1543,
	1543, 0, 1751, 1752, 1543, 1543, 1543, 0, 0, 1759,
	0, 0, 1543, 1543, 0, 0, 0, 1543, 1543, 0,
	1543, 0, 0, 0, 718, 0, 0, 0, 0, 729,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 1543, 1543, 1543, 1543, 73, 127, 0, 2247,
	0, 0, 0, 0, 0, 127, 0, 477, 0, 0,
	0, 0, 127, 127, 1017, 0, 127, 1643, 1379, 718,
	2415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1379, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 2869, 0, 0, 0, 0, 2341, 0, 0,
	0, 0, 0, 0, 2872, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2869, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 127, 127, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 1771, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 127, 0,
	477, 0, 0, 0, 498, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 0, 0, 493, 0, 488, 0,
	0, 0, 0, 1302, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 0, 506, 0,
	0, 0, 0, 0, 514, 482, 0, 518, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	520, 0, 0, 1543, 0, 0, 0, 494, 495, 497,
	524, 1543, 526, 532, 0, 0, 0, 0, 2037, 0,
	0, 0, 1543, 1543, 0, 0, 0, 1289, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 0, 0, 1543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2068, 0, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 127, 127, 127, 127,
	127, 0, 0, 0, 0, 0, 483, 0, 477, 0,
	0, 0, 127, 0, 0, 504, 477, 0, 0, 0,
	0, 1543, 0, 127, 0, 0, 0, 0, 1303, 0,
	0, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2131, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 0, 0,
	0, 0, 484, 485, 486, 487, 489, 507, 508, 512,
	513, 530, 529, 528, 531, 535, 538, 537, 539, 490,
	491, 499, 509, 510, 511, 515, 516, 525, 521, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2334, 0, 0, 0, 2336, 0, 522, 0, 0, 0,
	0, 0, 0, 541, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	519, 492, 0, 1316, 1319, 1320, 1321, 1322, 1323, 1324,
	0, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 500,
	1304, 1305, 1306, 1307, 1283, 1287, 1317, 1284, 1290, 1286,
	1288, 1285, 0, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 0, 0, 0, 0, 0,
	0, 1978, 1543, 0, 1379, 2284, 0, 0, 0, 0,
	541, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 498, 481, 0, 0, 0, 0, 2314, 0, 0,
	0, 502, 0, 0, 0, 0, 500, 0, 0, 0,
	527, 2318, 0, 493, 0, 488, 0, 0, 0, 0,
	0, 1318, 501, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	505, 503, 0, 0, 0, 506, 0, 0, 0, 0,
	0, 514, 482, 0, 518, 0, 0, 0, 0, 0,
	0, 540, 480, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 0, 0, 496, 520, 498, 481,
	0, 0, 0, 0, 494, 495, 497, 524, 502, 526,
	532, 0, 0, 0, 0, 0, 0, 527, 0, 0,
	493, 0, 488, 0, 0, 1302, 0, 0, 0, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2856, 0, 505, 503, 0,
	0, 127, 506, 0, 0, 0, 0, 0, 514, 482,
	0, 518, 0, 483, 0, 127, 0, 0, 0, 480,
	0, 0, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 520, 0, 0, 0, 0, 0,
	0, 494, 495, 497, 524, 0, 526, 532, 127, 0,
	0, 0, 2452, 0, 0, 0, 0, 0, 0, 1289,
	0, 0, 0, 533, 534, 0, 0, 0, 554, 484,
	485, 486, 487, 489, 507, 508, 512, 513, 530, 529,
	528, 531, 535, 538, 537, 539, 490, 491, 499, 509,
	510, 511, 515, 516, 525, 521, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 522, 477, 0, 0, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 517, 519, 0, 0,
	533, 534, 0, 0, 0, 0, 484, 485, 486, 487,
	489, 507, 508, 512, 513, 530, 529, 528, 531, 535,
	538, 537, 539, 490, 491, 499, 509, 510, 511, 515,
	516, 525, 521, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 519, 1316, 1319, 1320, 1321, 1322,
	1323, 1324, 0, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 0, 1304, 1305, 1306, 1307, 1283, 1287, 1317, 1284,
	1290, 1286, 1288, 1285, 1382, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	0, 0, 2718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 554, 0, 0,
	889, 864, 340, 809, 892, 766, 792, 907, 797, 801,
	844, 750, 822, 266, 788, 751, 0, 770, 740, 780,
	741, 767, 183, 765, 866, 825, 891, 222, 839, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 890,
	817, 0, 899, 225, 0, 834, 900, 327, 250, 0,
	0, 813, 876, 820, 862, 808, 846, 759, 833, 894,
	789, 841, 895, 0, 0, 0, 0, 2806, 0, 0,
	0, 0, 0, 0, 0, 0, 754, 0, 837, 888,
	783, 840, 811, 843, 910, 738, 836, 0, 745, 752,
	906, 883, 773, 774, 775, 0, 0, 0, 127, 0,
	0, 0, 812, 821, 856, 805, 360, 277, 294, 315,
	799, 285, 786, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 831, 0, 0, 718, 753, 746, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 758, 737, 772, 858, 0,
	735, 251, 148, 863, 882, 807, 213, 904, 886, 804,
	803, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 855, 309, 785, 736, 867, 768, 781, 172,
	777, 301, 270, 359, 790, 828, 300, 226, 349, 851,
	887, 358, 794, 870, 368, 373, 776, 818, 756, 324,
	185, 180, 184, 0, 137, 787, 284, 177, 218, 806,
	845, 769, 168, 853, 832, 869, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	2809, 2810, 2811, 800, 791, 0, 0, 364, 802, 312,
	311, 796, 208, 861, 835, 742, 293, 848, 214, 136,
	337, 376, 154, 220, 342, 734, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 782,
	850, 860, 291, 314, 344, 156, 331, 778, 779, 784,
	857, 303, 868, 880, 893, 233, 188, 191, 202, 209,
	842, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 743, 0, 329, 362,
	378, 158, 764, 317, 343, 793, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 762, 763, 760, 0, 761,
	823, 824, 896, 897, 898, 859, 755, 0, 877, 878,
	0, 0, 0, 0, 0, 865, 884, 885, 847, 908,
	798, 169, 744, 747, 748, 749, 757, 814, 815, 827,
	830, 873, 872, 871, 874, 879, 902, 901, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 133, 144, 224, 909, 292, 194, 363, 739, 179,
	0, 816, 819, 829, 854, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 852, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 881, 0, 795, 135, 875, 905, 838,
	849, 889, 864, 340, 809, 892, 766, 792, 907, 797,
	801, 844, 750, 822, 266, 788, 751, 0, 770, 740,
	780, 741, 767, 183, 765, 866, 825, 891, 222, 839,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	890, 817, 0, 899, 225, 0, 834, 900, 327, 250,
	0, 0, 813, 876, 820, 862, 808, 846, 759, 833,
	894, 789, 841, 895, 0, 0, 0, 0, 732, 0,
	1665, 1666, 0, 0, 0, 0, 0, 754, 0, 837,
	888, 783, 840, 811, 843, 910, 738, 836, 0, 745,
	752, 906, 883, 773, 774, 775, 1975, 0, 0, 0,
	0, 0, 0, 812, 821, 856, 805, 360, 277, 294,
	315, 799, 285, 786, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 831, 0, 0, 0, 753, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 810, 0, 0, 0, 758, 737, 772, 858,
	0, 735, 251, 148, 863, 882, 807, 213, 904, 886,
	804, 803, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 855, 309, 785, 736, 867, 768, 781,
	172, 777, 301, 270, 359, 790, 828, 300, 226, 349,
	851, 887, 358, 794, 870, 368, 373, 776, 818, 756,
	324, 185, 180, 184, 0, 137, 787, 284, 177, 218,
	806, 845, 769, 168, 853, 832, 869, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 800, 791, 0, 0, 364, 802,
	312, 311, 796, 208, 861, 835, 742, 293, 848, 214,
	136, 337, 376, 154, 220, 342, 734, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	782, 850, 860, 291, 314, 344, 156, 331, 778, 779,
	784, 857, 303, 868, 880, 893, 233, 188, 191, 202,
	209, 842, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 743, 0, 329,
	362, 378, 158, 764, 317, 343, 793, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 762, 763, 760, 0,
	761, 823, 824, 896, 897, 898, 859, 755, 0, 877,
	878, 0, 0, 0, 0, 0, 865, 884, 885, 847,
	908, 798, 169, 744, 747, 748, 749, 757, 814, 815,
	827, 830, 873, 872, 871, 874, 879, 902, 901, 903,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 133, 144, 224, 909, 292, 194, 363, 739,
	179, 0, 816, 819, 829, 854, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 852, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 881, 0, 795, 135, 875, 905,
	838, 849, 889, 864, 340, 809, 892, 766, 792, 907,
	797, 801, 844, 750, 822, 266, 788, 751, 0, 770,
	740, 780, 741, 767, 183, 765, 866, 825, 891, 222,
	839, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 890, 817, 0, 899, 225, 0, 834, 900, 327,
	250, 0, 0, 813, 876, 820, 862, 808, 846, 759,
	833, 894, 789, 841, 895, 0, 0, 0, 0, 732,
	0, 1665, 1666, 0, 0, 0, 0, 0, 754, 0,
	837, 888, 783, 840, 811, 843, 910, 738, 836, 0,
	745, 752, 906, 883, 773, 774, 775, 0, 0, 0,
	0, 0, 0, 0, 812, 821, 856, 805, 360, 277,
	294, 315, 799, 285, 786, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 0, 831, 0, 0, 0, 753,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 758, 737, 772,
	858, 0, 735, 251, 148, 863, 882, 807, 213, 904,
	886, 804, 803, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 855, 309, 785, 736, 867, 768,
	781, 172, 777, 301, 270, 359, 790, 828, 300, 226,
	349, 851, 887, 358, 794, 870, 368, 373, 776, 818,
	756, 324, 185, 180, 184, 0, 137, 787, 284, 177,
	218, 806, 845, 769, 168, 853, 832, 869, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 800, 791, 0, 0, 364,
	802, 312, 311, 796, 208, 861, 835, 742, 293, 848,
	214, 136, 337, 376, 154, 220, 342, 734, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 782, 850, 860, 291, 314, 344, 156, 331, 778,
	779, 784, 857, 303, 868, 880, 893, 233, 188, 191,
	202, 209, 842, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 743, 0,
	329, 362, 378, 158, 764, 317, 343, 793, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 762, 763, 760,
	0, 761, 823, 824, 896, 897, 898, 859, 755, 0,
	877, 878, 0, 0, 0, 0, 0, 865, 884, 885,
	847, 908, 798, 169, 744, 747, 748, 749, 757, 814,
	815, 827, 830, 873, 872, 871, 874, 879, 902, 901,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 826, 133, 144, 224, 909, 292, 194, 363,
	739, 179, 0, 816, 819, 829, 854, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 278, 279, 280, 288, 852, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	336, 350, 351, 370, 371, 881, 0, 795, 135, 875,
	905, 838, 849, 889, 2208, 340, 809, 892, 766, 792,
	907, 797, 801, 844, 750, 822, 266, 788, 751, 0,
	770, 740, 780, 741, 767, 183, 765, 866, 825, 891,
	222, 839, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 890, 817, 0, 899, 225, 0, 834, 900,
	327, 250, 0, 0, 813, 876, 820, 862, 808, 846,
	759, 833, 894, 789, 841, 895, 81, 0, 1091, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 837, 888, 783, 840, 811, 843, 910, 738, 836,
	0, 745, 752, 906, 883, 773, 774, 775, 0, 0,
	0, 0, 0, 0, 0, 812, 821, 856, 805, 360,
	277, 294, 315, 799, 285, 786, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 831, 0, 0, 0,
	753, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 0, 0, 758, 737,
	772, 858, 0, 735, 251, 148, 863, 882, 807, 213,
	904, 886, 804, 803, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 855, 309, 785, 736, 867,
	768, 781, 172, 777, 301, 270, 359, 790, 828, 300,
	226, 349, 851, 887, 358, 794, 870, 368, 373, 776,
	818, 756, 324, 185, 180, 184, 0, 137, 787, 284,
	177, 218, 806, 845, 769, 168, 853, 832, 869, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 800, 791, 0, 0,
	364, 802, 312, 311, 796, 208, 861, 835, 742, 293,
	848, 214, 136, 337, 376, 154, 220, 342, 734, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 782, 850, 860, 291, 314, 344, 156, 331,
	778, 779, 784, 857, 303, 868, 880, 893, 233, 188,
	191, 202, 209, 842, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 743,
	0, 329, 362, 378, 158, 764, 317, 343, 793, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 762, 763,
	760, 0, 761, 823, 824, 896, 897, 898, 859, 755,
	0, 877, 878, 0, 0, 0, 0, 0, 865, 884,
	885, 847, 908, 798, 169, 744, 747, 748, 749, 757,
	814, 815, 827, 830, 873, 872, 871, 874, 879, 902,
	901, 903, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 826, 133, 144, 224, 2209, 292, 194,
	363, 739, 179, 0, 816, 819, 829, 854, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 852,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 881, 0, 795, 135,
	875, 905, 838, 849, 889, 864, 340, 809, 892, 766,
	792, 907, 797, 801, 844, 750, 822, 266, 788, 751,
	0, 770, 740, 780, 741, 767, 183, 765, 866, 825,
	891, 222, 839, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 890, 817, 0, 899, 225, 0, 834,
	900, 327, 250, 0, 0, 813, 876, 820, 862, 808,
	846, 759, 833, 894, 789, 841, 895, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 0, 837, 888, 783, 840, 811, 843, 910, 738,
	836, 0, 745, 752, 906, 883, 773, 774, 775, 0,
	0, 0, 0, 0, 0, 0, 812, 821, 856, 805,
	360, 277, 294, 315, 799, 285, 786, 0, 0, 0,
	0, 0, 0, 2524, 0, 771, 0, 831, 0, 0,
	0, 753, 746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 810, 0, 0, 0, 758,
	737, 772, 858, 0, 735, 251, 148, 863, 882, 807,
	213, 904, 886, 804, 803, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 855, 309, 785, 736,
	867, 768, 781, 172, 777, 301, 270, 359, 790, 828,
	300, 226, 349, 851, 887, 358, 794, 870, 368, 373,
	776, 818, 756, 324, 185, 180, 184, 0, 137, 787,
	284, 177, 218, 806, 845, 769, 168, 853, 832, 869,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 800, 791, 0,
	0, 364, 802, 312, 311, 796, 208, 861, 835, 742,
	293, 848, 214, 136, 337, 376, 154, 220, 342, 734,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 782, 850, 860, 291, 314, 344, 156,
	331, 778, 779, 784, 857, 303, 868, 880, 893, 233,
	188, 191, 202, 209, 842, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	743, 0, 329, 362, 378, 158, 764, 317, 343, 793,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 762,
	763, 760, 0, 761, 823, 824, 896, 897, 898, 859,
	755, 0, 877, 878, 0, 0, 0, 0, 0, 865,
	884, 885, 847, 908, 798, 169, 744, 747, 748, 749,
	757, 814, 815, 827, 830, 873, 872, 871, 874, 879,
	902, 901, 903, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 133, 144, 224, 909, 292,
	194, 363, 739, 179, 0, 816, 819, 829, 854, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	852, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 881, 0, 795,
	135, 875, 905, 838, 849, 889, 864, 340, 809, 892,
	766, 792, 907, 797, 801, 844, 750, 822, 266, 788,
	751, 0, 770, 740, 780, 741, 767, 183, 765, 866,
	825, 891, 222, 839, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 890, 817, 0, 899, 225, 0,
	834, 900, 327, 250, 0, 0, 813, 876, 820, 862,
	808, 846, 759, 833, 894, 789, 841, 895, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 837, 888, 783, 840, 811, 843, 910,
	738, 836, 0, 745, 752, 906, 883, 773, 774, 775,
	0, 0, 0, 0, 0, 0, 0, 812, 821, 856,
	805, 360, 277, 294, 315, 799, 285, 786, 0, 0,
	0, 0, 0, 0, 2144, 0, 771, 0, 831, 0,
	0, 0, 753, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	758, 737, 772, 858, 0, 735, 251, 148, 863, 882,
	807, 213, 904, 886, 804, 803, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 855, 309, 785,
	736, 867, 768, 781, 172, 777, 301, 270, 359, 790,
	828, 300, 226, 349, 851, 887, 358, 794, 870, 368,
	373, 776, 818, 756, 324, 185, 180, 184, 0, 137,
	787, 284, 177, 218, 806, 845, 769, 168, 853, 832,
	869, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 800, 791,
	0, 0, 364, 802, 312, 311, 796, 208, 861, 835,
	742, 293, 848, 214, 136, 337, 376, 154, 220, 342,
	734, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 782, 850, 860, 291, 314, 344,
	156, 331, 778, 779, 784, 857, 303, 868, 880, 893,
	233, 188, 191, 202, 209, 842, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 743, 0, 329, 362, 378, 158, 764, 317, 343,
	793, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	762, 763, 760, 0, 761, 823, 824, 896, 897, 898,
	859, 755, 0, 877, 878, 0, 0, 0, 0, 0,
	865, 884, 885, 847, 908, 798, 169, 744, 747, 748,
	749, 757, 814, 815, 827, 830, 873, 872, 871, 874,
	879, 902, 901, 903, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 826, 133, 144, 224, 909,
	292, 194, 363, 739, 179, 0, 816, 819, 829, 854,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 852, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 881, 0,
	795, 135, 875, 905, 838, 849, 889, 864, 340, 809,
	892, 766, 792, 907, 797, 801, 844, 750, 822, 266,
	788, 751, 0, 770, 740, 780, 741, 767, 183, 765,
	866, 825, 891, 222, 839, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 890, 817, 0, 899, 225,
	0, 834, 900, 327, 250, 0, 0, 813, 876, 820,
	862, 808, 846, 759, 833, 894, 789, 841, 895, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 0, 837, 888, 783, 840, 811, 843,
	910, 738, 836, 0, 745, 752, 906, 883, 773, 774,
	775, 0, 0, 0, 0, 0, 0, 0, 812, 821,
	856, 805, 360, 277, 294, 315, 799, 285, 786, 0,
	0, 0, 0, 0, 0, 2134, 0, 771, 0, 831,
	0, 0, 0, 753, 746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 0,
	0, 758, 737, 772, 858, 0, 735, 251, 148, 863,
	882, 807, 213, 904, 886, 804, 803, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 855, 309,
	785, 736, 867, 768, 781, 172, 777, 301, 270, 359,
	790, 828, 300, 226, 349, 851, 887, 358, 794, 870,
	368, 373, 776, 818, 756, 324, 185, 180, 184, 0,
	137, 787, 284, 177, 218, 806, 845, 769, 168, 853,
	832, 869, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 800,
	791, 0, 0, 364, 802, 312, 311, 796, 208, 861,
	835, 742, 293, 848, 214, 136, 337, 376, 154, 220,
	342, 734, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 782, 850, 860, 291, 314,
	344, 156, 331, 778, 779, 784, 857, 303, 868, 880,
	893, 233, 188, 191, 202, 209, 842, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 743, 0, 329, 362, 378, 158, 764, 317,
	343, 793, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 762, 763, 760, 0, 761, 823, 824, 896, 897,
	898, 859, 755, 0, 877, 878, 0, 0, 0, 0,
	0, 865, 884, 885, 847, 908, 798, 169, 744, 747,
	748, 749, 757, 814, 815, 827, 830, 873, 872, 871,
	874, 879, 902, 901, 903, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 133, 144, 224,
	909, 292, 194, 363, 739, 179, 0, 816, 819, 829,
	854, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 852, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 881,
	0, 795, 135, 875, 905, 838, 849, 889, 864, 340,
	809, 892, 766, 792, 907, 797, 801, 844, 750, 822,
	266, 788, 751, 0, 770, 740, 780, 741, 767, 183,
	765, 866, 825, 891, 222, 839, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 890, 817, 0, 899,
	225, 0, 834, 900, 327, 250, 0, 0, 813, 876,
	820, 862, 808, 846, 759, 833, 894, 789, 841, 895,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 754, 0, 837, 888, 783, 840, 811,
	843, 910, 738, 836, 0, 745, 752, 906, 883, 773,
	774, 775, 0, 0, 0, 0, 0, 0, 0, 812,
	821, 856, 805, 360, 277, 294, 315, 799, 285, 786,
	0, 0, 0, 0, 0, 0, 1644, 0, 771, 0,
	831, 0, 0, 0, 753, 746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 810, 0,
	0, 0, 758, 737, 772, 858, 0, 735, 251, 148,
	863, 882, 807, 213, 904, 886, 804, 803, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 855,
	309, 785, 736, 867, 768, 781, 172, 777, 301, 270,
	359, 790, 828, 300, 226, 349, 851, 887, 358, 794,
	870, 368, 373, 776, 818, 756, 324, 185, 180, 184,
	0, 137, 787, 284, 177, 218, 806, 845, 769, 168,
	853, 832, 869, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	800, 791, 0, 0, 364, 802, 312, 311, 796, 208,
	861, 835, 742, 293, 848, 214, 136, 337, 376, 154,
	220, 342, 734, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 782, 850, 860, 291,
	314, 344, 156, 331, 778, 779, 784, 857, 303, 868,
	880, 893, 233, 188, 191, 202, 209, 842, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 743, 0, 329, 362, 378, 158, 764,
	317, 343, 793, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 762, 763, 760, 0, 761, 823, 824, 896,
	897, 898, 859, 755, 0, 877, 878, 0, 0, 0,
	0, 0, 865, 884, 885, 847, 908, 798, 169, 744,
	747, 748, 749, 757, 814, 815, 827, 830, 873, 872,
	871, 874, 879, 902, 901, 903, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 826, 133, 144,
	224, 909, 292, 194, 363, 739, 179, 0, 816, 819,
	829, 854, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 278,
	279, 280, 288, 852, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 336, 350, 351, 370, 371,
	881, 0, 795, 135, 875, 905, 838, 849, 889, 864,
	340, 809, 892, 766, 792, 907, 797, 801, 844, 750,
	822, 266, 788, 751, 0, 770, 740, 780, 741, 767,
	183, 765, 866, 825, 891, 222, 839, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 890, 817, 0,
	899, 225, 0, 834, 900, 327, 250, 0, 0, 813,
	876, 820, 862, 808, 846, 759, 833, 894, 789, 841,
	895, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 0, 837, 888, 783, 840,
	811, 843, 910, 738, 836, 0, 745, 752, 906, 883,
	773, 774, 775, 0, 0, 0, 0, 0, 0, 0,
	812, 821, 856, 805, 360, 277, 294, 315, 799, 285,
	786, 0, 0, 0, 0, 0, 0, 1503, 0, 771,
	0, 831, 0, 0, 0, 753, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	0, 0, 0, 758, 737, 772, 858, 0, 735, 251,
	148, 863, 882, 807, 213, 904, 886, 804, 803, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	855, 309, 785, 736, 867, 768, 781, 172, 777, 301,
	270, 359, 790, 828, 300, 226, 349, 851, 887, 358,
	794, 870, 368, 373, 776, 818, 756, 324, 185, 180,
	184, 0, 137, 787, 284, 177, 218, 806, 845, 769,
	168, 853, 832, 869, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 800, 791, 0, 0, 364, 802, 312, 311, 796,
	208, 861, 835, 742, 293, 848, 214, 136, 337, 376,
	154, 220, 342, 734, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 782, 850, 860,
	291, 314, 344, 156, 331, 778, 779, 784, 857, 303,
	868, 880, 893, 233, 188, 191, 202, 209, 842, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 743, 0, 329, 362, 378, 158,
	764, 317, 343, 793, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 762, 763, 760, 0, 761, 823, 824,
	896, 897, 898, 859, 755, 0, 877, 878, 0, 0,
	0, 0, 0, 865, 884, 885, 847, 908, 798, 169,
	744, 747, 748, 749, 757, 814, 815, 827, 830, 873,
	872, 871, 874, 879, 902, 901, 903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 826, 133,
	144, 224, 909, 292, 194, 363, 739, 179, 0, 816,
	819, 829, 854, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	278, 279, 280, 288, 852, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 336, 350, 351, 370,
	371, 881, 0, 795, 135, 875, 905, 838, 849, 889,
	864, 340, 809, 892, 766, 792, 907, 797, 801, 844,
	750, 822, 266, 788, 751, 0, 770, 740, 780, 741,
	767, 183, 765, 866, 825, 891, 222, 839, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 890, 817,
	0, 899, 225, 0, 834, 900, 327, 250, 0, 0,
	813, 876, 820, 862, 808, 846, 759, 833, 894, 789,
	841, 895, 0, 0, 0, 0, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 754, 0, 837, 888, 783,
	840, 811, 843, 910, 738, 836, 0, 745, 752, 906,
	883, 773, 774, 775, 0, 0, 0, 0, 0, 0,
	0, 812, 821, 856, 805, 360, 277, 294, 315, 799,
	285, 786, 0, 0, 0, 0, 0, 0, 0, 0,
	771, 0, 831, 0, 0, 0, 753, 746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	810, 0, 0, 0, 758, 737, 772, 858, 0, 735,
	251, 148, 863, 882, 807, 213, 904, 886, 804, 803,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 855, 309, 785, 736, 867, 768, 781, 172, 777,
	301, 270, 359, 790, 828, 300, 226, 349, 851, 887,
	358, 794, 870, 368, 373, 776, 818, 756, 324, 185,
	180, 184, 0, 137, 787, 284, 177, 218, 806, 845,
	769, 168, 853, 832, 869, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 800, 791, 0, 0, 364, 802, 312, 311,
	796, 208, 861, 835, 742, 293, 848, 214, 136, 337,
	376, 154, 220, 342, 734, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 782, 850,
	860, 291, 314, 344, 156, 331, 778, 779, 784, 857,
	303, 868, 880, 893, 233, 188, 191, 202, 209, 842,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 743, 0, 329, 362, 378,
	158, 764, 317, 343, 793, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 762, 763, 760, 0, 761, 823,
	824, 896, 897, 898, 859, 755, 0, 877, 878, 0,
	0, 0, 0, 0, 865, 884, 885, 847, 908, 798,
	169, 744, 747, 748, 749, 757, 814, 815, 827, 830,
	873, 872, 871, 874, 879, 902, 901, 903, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	133, 144, 224, 909, 292, 194, 363, 739, 179, 0,
	816, 819, 829, 854, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 278, 279, 280, 288, 852, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 336, 350, 351,
	370, 371, 881, 0, 795, 135, 875, 905, 838, 849,
	889, 864, 340, 809, 892, 766, 792, 907, 797, 801,
	844, 750, 822, 266, 788, 751, 0, 770, 740, 780,
	741, 767, 183, 765, 866, 825, 891, 222, 839, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 890,
	817, 0, 899, 225, 0, 834, 900, 327, 250, 0,
	0, 813, 876, 820, 862, 808, 846, 759, 833, 894,
	789, 841, 895, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 0, 754, 0, 837, 888,
	783, 840, 811, 843, 910, 738, 836, 0, 745, 752,
	906, 883, 773, 774, 775, 0, 0, 0, 0, 0,
	0, 0, 812, 821, 856, 805, 360, 277, 294, 315,
	799, 285, 786, 0, 0, 0, 0, 0, 0, 0,
	0, 771, 0, 831, 0, 0, 0, 753, 746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 758, 737, 772, 858, 0,
	735, 251, 148, 863, 882, 807, 213, 904, 886, 804,
	803, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 855, 309, 785, 736, 867, 768, 781, 172,
	777, 301, 270, 359, 790, 828, 300, 226, 349, 851,
	887, 358, 794, 870, 368, 373, 776, 818, 756, 324,
	185, 180, 184, 0, 137, 787, 284, 177, 218, 806,
	845, 769, 168, 853, 832, 869, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 800, 791, 0, 0, 364, 802, 312,
	311, 796, 208, 861, 835, 742, 293, 848, 214, 136,
	337, 376, 154, 220, 342, 734, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 782,
	850, 860, 291, 314, 344, 156, 331, 778, 779, 784,
	857, 303, 868, 880, 893, 233, 188, 191, 202, 209,
	842, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 743, 0, 329, 362,
	378, 158, 764, 317, 343, 793, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 762, 763, 760, 0, 761,
	823, 824, 896, 897, 898, 859, 755, 0, 877, 878,
	0, 0, 0, 0, 0, 865, 884, 885, 847, 908,
	798, 169, 744, 747, 748, 749, 757, 814, 815, 827,
	830, 873, 872, 871, 874, 879, 902, 901, 903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 133, 144, 224, 909, 292, 194, 363, 739, 179,
	0, 816, 819, 829, 854, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 852, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 881, 0, 795, 135, 875, 905, 838,
	849, 889, 864, 340, 809, 892, 766, 792, 907, 797,
	801, 844, 750, 822, 266, 788, 751, 0, 770, 740,
	780, 741, 767, 183, 765, 866, 825, 891, 222, 839,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	1677, 1681, 0, 899, 225, 0, 834, 900, 327, 250,
	0, 0, 813, 876, 820, 862, 808, 846, 759, 833,
	894, 789, 841, 895, 0, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 754, 0, 837,
	888, 783, 840, 811, 843, 910, 738, 836, 0, 745,
	752, 906, 883, 773, 774, 775, 0, 0, 0, 0,
	0, 0, 0, 812, 821, 856, 805, 360, 277, 294,
	315, 799, 285, 786, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 831, 0, 0, 0, 753, 746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 810, 0, 0, 0, 758, 737, 772, 858,
	0, 735, 251, 148, 863, 882, 1680, 213, 904, 886,
	804, 803, 1674, 0, 1675, 1676, 223, 731, 130, 146,
	1672, 1679, 262, 855, 309, 785, 736, 867, 768, 781,
	172, 777, 301, 270, 359, 790, 828, 300, 226, 349,
	851, 887, 358, 794, 870, 368, 373, 776, 818, 756,
	324, 185, 180, 184, 0, 137, 787, 284, 177, 218,
	806, 845, 769, 168, 853, 832, 869, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 800, 791, 0, 0, 364, 802,
	312, 311, 796, 208, 861, 835, 742, 293, 848, 214,
	136, 337, 376, 154, 220, 342, 734, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	782, 850, 860, 291, 314, 344, 156, 331, 778, 779,
	784, 857, 303, 868, 880, 893, 233, 188, 191, 202,
	209, 842, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 743, 0, 329,
	362, 378, 158, 764, 317, 343, 793, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 762, 763, 760, 0,
	761, 823, 824, 896, 897, 898, 859, 755, 0, 877,
	878, 0, 0, 0, 0, 0, 865, 884, 885, 847,
	908, 798, 169, 744, 747, 748, 749, 757, 814, 815,
	827, 830, 873, 872, 871, 874, 879, 902, 901, 903,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 133, 144, 224, 909, 292, 194, 363, 739,
	179, 0, 816, 819, 829, 854, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 852, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 881, 0, 795, 135, 875, 905,
	838, 849, 889, 864, 340, 809, 892, 766, 792, 907,
	797, 801, 844, 750, 822, 266, 788, 751, 0, 770,
	740, 780, 741, 767, 183, 765, 866, 825, 891, 222,
	839, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 890, 817, 0, 899, 225, 0, 834, 900, 327,
	250, 0, 0, 813, 876, 820, 862, 808, 846, 759,
	833, 894, 789, 841, 895, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 754, 0,
	837, 888, 783, 840, 811, 843, 910, 738, 836, 0,
	745, 752, 906, 883, 773, 774, 775, 0, 0, 0,
	0, 0, 0, 0, 812, 821, 856, 805, 360, 277,
	294, 315, 799, 285, 786, 0, 0, 0, 0, 0,
	0, 0, 0, 771, 0, 831, 0, 0, 0, 753,
	746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 758, 737, 772,
	858, 0, 735, 251, 148, 863, 882, 807, 213, 904,
	886, 804, 803, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 855, 309, 785, 736, 867, 768,
	781, 172, 777, 301, 270, 359, 790, 828, 300, 226,
	349, 851, 887, 358, 794, 870, 368, 373, 776, 818,
	756, 324, 185, 180, 184, 0, 137, 787, 284, 177,
	218, 806, 845, 769, 168, 853, 832, 869, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 800, 791, 0, 0, 364,
	802, 312, 311, 796, 208, 861, 835, 742, 293, 848,
	214, 136, 337, 376, 154, 220, 342, 734, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 782, 850, 860, 291, 314, 344, 156, 331, 778,
	779, 784, 857, 303, 868, 880, 893, 233, 188, 191,
	202, 209, 842, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 743, 0,
	329, 362, 378, 158, 764, 317, 343, 793, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 762, 763, 760,
	0, 761, 823, 824, 896, 897, 898, 859, 755, 0,
	877, 878, 0, 0, 0, 0, 0, 865, 884, 885,
	847, 908, 798, 169, 744, 747, 748, 749, 757, 814,
	815, 827, 830, 873, 872, 871, 874, 879, 902, 901,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 826, 133, 144, 224, 909, 292, 194, 363,
	739, 179, 0, 816, 819, 829, 854, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 278, 279, 280, 288, 852, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	336, 350, 351, 370, 371, 881, 0, 795, 135, 875,
	905, 838, 849, 889, 864, 340, 809, 892, 766, 792,
	907, 797, 801, 844, 750, 822, 266, 788, 751, 0,
	770, 740, 780, 741, 767, 183, 765, 866, 825, 891,
	222, 839, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 890, 817, 0, 899, 225, 0, 834, 900,
	327, 250, 0, 0, 813, 876, 820, 862, 808, 846,
	759, 833, 894, 789, 841, 895, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 837, 888, 783, 840, 811, 843, 910, 738, 836,
	0, 745, 752, 906, 883, 773, 774, 775, 0, 0,
	0, 0, 0, 0, 0, 812, 821, 856, 805, 360,
	277, 294, 315, 799, 285, 786, 0, 0, 0, 0,
	0, 0, 0, 0, 771, 0, 831, 0, 0, 0,
	753, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 810, 0, 0, 0, 758, 737,
	772, 858, 0, 735, 251, 148, 863, 882, 807, 213,
	904, 886, 804, 803, 287, 0, 334, 201, 223, 731,
	130, 146, 727, 200, 262, 855, 309, 785, 736, 867,
	768, 781, 172, 777, 301, 270, 359, 790, 828, 300,
	226, 349, 851, 887, 358, 794, 870, 368, 373, 776,
	818, 756, 324, 185, 180, 184, 0, 137, 787, 284,
	177, 218, 806, 845, 769, 168, 853, 832, 869, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 800, 791, 0, 0,
	364, 802, 312, 311, 796, 208, 861, 835, 742, 293,
	848, 214, 136, 337, 376, 154, 220, 342, 734, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 782, 850, 860, 291, 314, 344, 156, 331,
	778, 779, 784, 857, 303, 868, 880, 893, 233, 188,
	191, 202, 209, 842, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 743,
	0, 329, 362, 378, 158, 764, 317, 343, 793, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 762, 763,
	760, 0, 761, 823, 824, 896, 897, 898, 859, 755,
	0, 877, 878, 0, 0, 0, 0, 0, 865, 884,
	885, 847, 908, 798, 169, 744, 747, 748, 749, 757,
	814, 815, 827, 830, 873, 872, 871, 874, 879, 902,
	901, 903, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 826, 133, 144, 224, 909, 292, 194,
	363, 739, 179, 0, 816, 819, 829, 854, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 852,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 881, 340, 795, 135,
	875, 905, 838, 849, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 561, 0, 0, 183, 558, 0,
	0, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 679, 225, 0,
	0, 536, 327, 250, 0, 0, 0, 0, 668, 669,
	0, 0, 0, 0, 0, 0, 1654, 0, 81, 0,
	0, 0, 559, 582, 581, 584, 585, 586, 587, 0,
	0, 541, 583, 588, 621, 622, 1655, 0, 0, 0,
	0, 556, 573, 0, 678, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 570, 571, 0, 0, 0, 0, 691, 0,
	572, 0, 0, 568, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 670, 0,
	0, 213, 540, 0, 0, 689, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 596,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 598,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	680, 690, 686, 688, 687, 684, 685, 683, 682, 681,
	692, 671, 672, 673, 674, 675, 0, 0, 0, 677,
	0, 615, 616, 0, 0, 0, 169, 589, 590, 591,
	592, 593, 599, 600, 604, 605, 613, 612, 611, 614,
	617, 619, 618, 620, 594, 595, 597, 601, 602, 603,
	606, 607, 610, 608, 609, 676, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 36, 340,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 561, 0, 0, 183,
	558, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 0, 556, 573, 0, 678, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 277, 294, 315, 0, 285, 500,
	0, 0, 0, 0, 570, 571, 0, 0, 0, 0,
	691, 0, 572, 0, 0, 568, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 148,
	670, 0, 0, 213, 540, 0, 0, 689, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 0,
	309, 596, 481, 0, 0, 0, 172, 0, 301, 270,
	359, 598, 0, 300, 226, 349, 0, 0, 358, 0,
	527, 368, 373, 493, 0, 488, 324, 185, 180, 184,
	0, 137, 501, 284, 177, 218, 0, 0, 0, 168,
	0, 0, 0, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	505, 503, 0, 0, 364, 506, 312, 311, 0, 208,
	0, 514, 482, 293, 518, 214, 136, 337, 376, 154,
	220, 342, 480, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 496, 520, 0, 291,
	314, 344, 156, 331, 494, 495, 497, 524, 303, 526,
	532, 0, 233, 188, 191, 202, 209, 0, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 483, 0, 329, 362, 378, 158, 0,
	317, 343, 504, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 680, 690, 686, 688, 687, 684, 685, 683,
	682, 681, 692, 671, 672, 673, 674, 675, 0, 0,
	0, 677, 0, 615, 616, 0, 0, 0, 169, 589,
	590, 591, 592, 593, 599, 600, 604, 605, 613, 612,
	611, 614, 617, 619, 618, 620, 594, 595, 597, 601,
	602, 603, 606, 607, 610, 608, 609, 676, 133, 144,
	224, 79, 292, 194, 363, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 278,
	279, 280, 288, 522, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 336, 350, 351, 370, 371,
	340, 0, 0, 135, 0, 0, 517, 519, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 561, 0, 0,
	183, 558, 0, 0, 0, 222, 0, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 0, 0, 0,
	679, 225, 0, 0, 536, 327, 250, 0, 0, 0,
	0, 668, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 559, 582, 581, 584, 585,
	586, 587, 0, 0, 541, 583, 588, 621, 622, 0,
	0, 0, 0, 0, 556, 573, 0, 678, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 277, 294, 315, 0, 285,
	500, 0, 0, 0, 0, 570, 571, 552, 0, 0,
	0, 691, 0, 572, 0, 0, 568, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	148, 670, 0, 0, 213, 540, 0, 0, 689, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	0, 309, 596, 481, 0, 0, 0, 172, 0, 301,
	270, 359, 598, 0, 300, 226, 349, 0, 0, 358,
	0, 527, 368, 373, 493, 0, 488, 324, 185, 180,
	184, 0, 137, 501, 284, 177, 218, 0, 0, 0,
	168, 0, 0, 0, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 364, 506, 312, 311, 0,
	208, 0, 514, 482, 293, 518, 214, 136, 337, 376,
	154, 220, 342, 480, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 496, 520, 0,
	291, 314, 344, 156, 331, 494, 495, 497, 524, 303,
	526, 532, 0, 233, 188, 191, 202, 209, 0, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 483, 0, 329, 362, 378, 158,
	0, 317, 343, 504, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 680, 690, 686, 688, 687, 684, 685,
	683, 682, 681, 692, 671, 672, 673, 674, 675, 0,
	0, 0, 677, 0, 615, 616, 0, 0, 0, 169,
	589, 590, 591, 592, 593, 599, 600, 604, 605, 613,
	612, 611, 614, 617, 619, 618, 620, 594, 595, 597,
	601, 602, 603, 606, 607, 610, 608, 609, 676, 133,
	144, 224, 0, 292, 194, 363, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	278, 279, 280, 288, 522, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 336, 350, 351, 370,
	371, 340, 0, 0, 135, 0, 0, 517, 519, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 561, 0,
	0, 183, 558, 0, 0, 0, 222, 0, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 0, 0,
	0, 679, 225, 0, 0, 536, 327, 250, 0, 0,
	0, 0, 668, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 1091, 0, 559, 582, 581, 584,
	585, 586, 587, 0, 0, 541, 583, 588, 621, 622,
	0, 0, 0, 0, 0, 556, 573, 0, 678, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 500, 0, 0, 0, 0, 570, 571, 0, 0,
	0, 0, 691, 0, 572, 0, 0, 568, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 670, 0, 0, 213, 540, 0, 0, 689,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 596, 481, 0, 0, 0, 172, 0,
	301, 270, 359, 598, 0, 300, 226, 349, 0, 0,
	358, 0, 527, 368, 373, 493, 0, 488, 324, 185,
	180, 184, 0, 137, 501, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 505, 503, 0, 0, 364, 506, 312, 311,
	0, 208, 0, 514, 482, 293, 518, 214, 136, 337,
	376, 154, 220, 342, 480, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 496, 520,
	0, 291, 314, 344, 156, 331, 494, 495, 497, 524,
	303, 526, 532, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 483, 0, 329, 362, 378,
	158, 0, 317, 343, 504, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 680, 690, 686, 688, 687, 684,
	685, 683, 682, 681, 692, 671, 672, 673, 674, 675,
	0, 0, 0, 677, 0, 615, 616, 0, 0, 0,
	169, 589, 590, 591, 592, 593, 599, 600, 604, 605,
	613, 612, 611, 614, 617, 619, 618, 620, 594, 595,
	597, 601, 602, 603, 606, 607, 610, 608, 609, 676,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 278, 279, 280, 288, 522, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 336, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 517, 519,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 561,
	0, 0, 183, 558, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 679, 225, 0, 0, 536, 327, 250, 0,
	0, 0, 0, 668, 669, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 559, 582, 581,
	584, 585, 586, 587, 0, 0, 541, 583, 588, 621,
	622, 0, 0, 0, 0, 0, 556, 573, 0, 678,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 500, 0, 0, 0, 0, 570, 571, 1541,
	0, 0, 0, 691, 0, 572, 0, 0, 568, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 670, 0, 0, 213, 540, 0, 0,
	689, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 596, 481, 0, 0, 0, 172,
	0, 301, 270, 359, 598, 0, 300, 226, 349, 0,
	0, 358, 0, 527, 368, 373, 493, 0, 488, 324,
	185, 180, 184, 0, 137, 501, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 364, 506, 312,
	311, 0, 208, 0, 514, 482, 293, 518, 214, 136,
	337, 376, 154, 220, 342, 480, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 496,
	520, 0, 291, 314, 344, 156, 331, 494, 495, 497,
	524, 303, 526, 532, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 483, 0, 329, 362,
	378, 158, 0, 317, 343, 504, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 680, 690, 686, 688, 687,
	684, 685, 683, 682, 681, 692, 671, 672, 673, 674,
	675, 0, 0, 0, 677, 0, 615, 616, 0, 0,
	0, 169, 589, 590, 591, 592, 593, 599, 600, 604,
	605, 613, 612, 611, 614, 617, 619, 618, 620, 594,
	595, 597, 601, 602, 603, 606, 607, 610, 608, 609,
	676, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 522, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 517,
	519, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	561, 0, 0, 183, 558, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 679, 225, 0, 0, 536, 327, 250,
	0, 0, 0, 0, 668, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 559, 582,
	1588, 584, 585, 586, 587, 0, 0, 541, 583, 588,
	621, 622, 0, 0, 0, 0, 0, 556, 573, 0,
	678, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 500, 0, 0, 0, 0, 570, 571,
	1541, 0, 0, 0, 691, 0, 572, 0, 0, 568,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 670, 0, 0, 213, 540, 0,
	0, 689, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 596, 481, 0, 0, 0,
	172, 0, 301, 270, 359, 598, 0, 300, 226, 349,
	0, 0, 358, 0, 527, 368, 373, 493, 0, 488,
	324, 185, 180, 184, 0, 137, 501, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 364, 506,
	312, 311, 0, 208, 0, 514, 482, 293, 518, 214,
	136, 337, 376, 154, 220, 342, 480, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	496, 520, 0, 291, 314, 344, 156, 331, 494, 495,
	497, 524, 303, 526, 532, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 483, 0, 329,
	362, 378, 158, 0, 317, 343, 504, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 680, 690, 686, 688,
	687, 684, 685, 683, 682, 681, 692, 671, 672, 673,
	674, 675, 0, 0, 0, 677, 0, 615, 616, 0,
	0, 0, 169, 589, 590, 591, 592, 593, 599, 600,
	604, 605, 613, 612, 611, 614, 617, 619, 618, 620,
	594, 595, 597, 601, 602, 603, 606, 607, 610, 608,
	609, 676, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 522, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	517, 519, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 561, 0, 0, 183, 558, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 679, 225, 0, 0, 536, 327,
	250, 0, 0, 0, 0, 668, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 559,
	582, 1585, 584, 585, 586, 587, 0, 0, 541, 583,
	588, 621, 622, 0, 0, 0, 0, 0, 556, 573,
	0, 678, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 277,
	294, 315, 0, 285, 500, 0, 0, 0, 0, 570,
	571, 1541, 0, 0, 0, 691, 0, 572, 0, 0,
	568, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 148, 670, 0, 0, 213, 540,
	0, 0, 689, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 0, 309, 596, 481, 0, 0,
	0, 172, 0, 301, 270, 359, 598, 0, 300, 226,
	349, 0, 0, 358, 0, 527, 368, 373, 493, 0,
	488, 324, 185, 180, 184, 0, 137, 501, 284, 177,
	218, 0, 0, 0, 168, 0, 0, 0, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 505, 503, 0, 0, 364,
	506, 312, 311, 0, 208, 0, 514, 482, 293, 518,
	214, 136, 337, 376, 154, 220, 342, 480, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 496, 520, 0, 291, 314, 344, 156, 331, 494,
	495, 497, 524, 303, 526, 532, 0, 233, 188, 191,
	202, 209, 0, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 483, 0,
	329, 362, 378, 158, 0, 317, 343, 504, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 680, 690, 686,
	688, 687, 684, 685, 683, 682, 681, 692, 671, 672,
	673, 674, 675, 0, 0, 0, 677, 0, 615, 616,
	0, 0, 0, 169, 589, 590, 591, 592, 593, 599,
	600, 604, 605, 613, 612, 611, 614, 617, 619, 618,
	620, 594, 595, 597, 601, 602, 603, 606, 607, 610,
	608, 609, 676, 133, 144, 224, 0, 292, 194, 363,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 278, 279, 280, 288, 522, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	336, 350, 351, 370, 371, 340, 0, 0, 135, 0,
	0, 517, 519, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 561, 0, 0, 183, 558, 0, 0, 0,
	222, 0, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 0, 0, 0, 679, 225, 0, 0, 536,
	327, 250, 0, 0, 0, 0, 668, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 1419, 0,
	559, 582, 581, 584, 585, 586, 587, 0, 0, 541,
	583, 588, 621, 622, 0, 0, 0, 0, 0, 556,
	573, 0, 678, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	277, 294, 315, 0, 285, 500, 0, 0, 0, 0,
	570, 571, 0, 0, 0, 0, 691, 0, 572, 0,
	0, 568, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 667, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 148, 670, 0, 0, 213,
	540, 0, 0, 689, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 0, 309, 596, 481, 0,
	0, 0, 172, 0, 301, 270, 359, 598, 0, 300,
	226, 349, 0, 0, 358, 0, 527, 368, 373, 493,
	0, 488, 324, 185, 180, 184, 0, 137, 501, 284,
	177, 218, 0, 0, 0, 168, 0, 0, 0, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 505, 503, 0, 0,
	364, 506, 312, 311, 0, 208, 0, 514, 482, 293,
	518, 214, 136, 337, 376, 154, 220, 342, 480, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 496, 520, 0, 291, 314, 344, 156, 331,
	494, 495, 497, 524, 303, 526, 532, 0, 233, 188,
	191, 202, 209, 0, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 483,
	0, 329, 362, 378, 158, 0, 317, 343, 504, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 680, 690,
	686, 688, 687, 684, 685, 683, 682, 681, 692, 671,
	672, 673, 674, 675, 0, 0, 0, 677, 0, 615,
	616, 0, 0, 0, 169, 589, 590, 591, 592, 593,
	599, 600, 604, 605, 613, 612, 611, 614, 617, 619,
	618, 620, 594, 595, 597, 601, 602, 603, 606, 607,
	610, 608, 609, 676, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 522,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 340, 0, 0, 135,
	0, 0, 517, 519, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 561, 0, 0, 183, 558, 0, 0,
	0, 222, 0, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 0, 0, 0, 679, 225, 0, 0,
	536, 327, 250, 0, 0, 0, 0, 668, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 559, 582, 581, 584, 585, 586, 587, 0, 0,
	541, 583, 588, 621, 622, 0, 0, 0, 0, 0,
	556, 573, 0, 678, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 500, 0, 0, 0,
	0, 570, 571, 0, 0, 0, 0, 691, 0, 572,
	0, 0, 568, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 670, 0, 0,
	213, 540, 0, 0, 689, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 596, 481,
	0, 0, 0, 172, 0, 301, 270, 359, 598, 0,
	300, 226, 349, 0, 0, 358, 0, 527, 368, 373,
	493, 0, 488, 324, 185, 180, 184, 0, 137, 501,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 505, 503, 0,
	0, 364, 506, 312, 311, 0, 208, 0, 514, 482,
	293, 518, 214, 136, 337, 376, 154, 220, 342, 480,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 496, 520, 0, 291, 314, 344, 156,
	331, 494, 495, 497, 524, 303, 526, 532, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	483, 0, 329, 362, 378, 158, 0, 317, 343, 504,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 680,
	690, 686, 688, 687, 684, 685, 683, 682, 681, 692,
	671, 672, 673, 674, 675, 0, 0, 0, 677, 0,
	615, 616, 0, 0, 0, 169, 589, 590, 591, 592,
	593, 599, 600, 604, 605, 613, 612, 611, 614, 617,
	619, 618, 620, 594, 595, 597, 601, 602, 603, 606,
	607, 610, 608, 609, 676, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	522, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 340, 0, 0,
	135, 0, 0, 517, 519, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 679, 225, 0,
	0, 536, 327, 250, 0, 0, 0, 0, 668, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 559, 582, 581, 584, 585, 586, 587, 0,
	0, 541, 583, 588, 621, 622, 0, 0, 0, 0,
	0, 0, 573, 0, 678, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 570, 571, 0, 0, 0, 0, 691, 0,
	572, 0, 0, 568, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 670, 0,
	0, 213, 540, 0, 0, 689, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 596,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 598,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	680, 690, 686, 688, 687, 684, 685, 683, 682, 681,
	692, 671, 672, 673, 674, 675, 1591, 1592, 1593, 677,
	0, 615, 616, 0, 0, 0, 169, 589, 590, 591,
	592, 593, 599, 600, 604, 605, 613, 612, 611, 614,
	617, 619, 618, 620, 594, 595, 597, 601, 602, 603,
	606, 607, 610, 608, 609, 676, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 679, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 668,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 559, 582, 581, 584, 585, 586, 587,
	0, 0, 541, 583, 588, 621, 622, 0, 0, 0,
	0, 0, 0, 573, 0, 678, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 570, 571, 0, 0, 0, 0, 691,
	0, 572, 0, 0, 568, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 670,
	0, 0, 213, 540, 0, 0, 689, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	596, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	598, 2947, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 680, 690, 686, 688, 687, 684, 685, 683, 682,
	681, 692, 671, 672, 673, 674, 675, 0, 0, 0,
	677, 0, 615, 616, 0, 0, 0, 169, 589, 590,
	591, 592, 593, 599, 600, 604, 605, 613, 612, 611,
	614, 617, 619, 618, 620, 594, 595, 597, 601, 602,
	603, 606, 607, 610, 608, 609, 676, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 517, 519, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 679,
	225, 0, 0, 536, 327, 250, 0, 0, 0, 0,
	668, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 1091, 0, 559, 582, 581, 584, 585, 586,
	587, 0, 0, 541, 583, 588, 621, 622, 0, 0,
	0, 0, 0, 0, 573, 0, 678, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 277, 294, 315, 0, 285, 500,
	0, 0, 0, 0, 570, 571, 0, 0, 0, 0,
	691, 0, 572, 0, 0, 568, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 148,
	670, 0, 0, 213, 540, 0, 0, 689, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 0,
	309, 596, 481, 0, 0, 0, 172, 0, 301, 270,
	359, 598, 0, 300, 226, 349, 0, 0, 358, 0,
	527, 368, 373, 493, 0, 488, 324, 185, 180, 184,
	0, 137, 501, 284, 177, 218, 0, 0, 0, 168,
	0, 0, 0, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	505, 503, 0, 0, 364, 506, 312, 311, 0, 208,
	0, 514, 482, 293, 518, 214, 136, 337, 376, 154,
	220, 342, 480, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 496, 520, 0, 291,
	314, 344, 156, 331, 494, 495, 497, 524, 303, 526,
	532, 0, 233, 188, 191, 202, 209, 0, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 483, 0, 329, 362, 378, 158, 0,
	317, 343, 504, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 680, 690, 686, 688, 687, 684, 685, 683,
	682, 681, 692, 671, 672, 673, 674, 675, 0, 0,
	0, 677, 0, 615, 616, 0, 0, 0, 169, 589,
	590, 591, 592, 593, 599, 600, 604, 605, 613, 612,
	611, 614, 617, 619, 618, 620, 594, 595, 597, 601,
	602, 603, 606, 607, 610, 608, 609, 676, 133, 144,
	224, 0, 292, 194, 363, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 278,
	279, 280, 288, 522, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 336, 350, 351, 370, 371,
	340, 0, 0, 135, 0, 0, 517, 519, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 222, 0, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 0, 0, 0,
	679, 225, 0, 0, 536, 327, 250, 0, 0, 0,
	0, 668, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 559, 582, 581, 584, 585,
	586, 587, 0, 0, 541, 583, 588, 621, 622, 0,
	0, 0, 0, 0, 0, 573, 0, 678, 0, 0,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 277, 294, 315, 0, 285,
	500, 0, 0, 0, 0, 570, 571, 0, 0, 0,
	0, 691, 0, 572, 0, 0, 568, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 666, 667, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	148, 670, 0, 0, 213, 540, 0, 0, 689, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	0, 309, 596, 481, 0, 0, 0, 172, 0, 301,
	270, 359, 598, 0, 300, 226, 349, 0, 0, 358,
	0, 527, 368, 373, 493, 0, 488, 324, 185, 180,
	184, 0, 137, 501, 284, 177, 218, 0, 0, 0,
	168, 0, 0, 0, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 364, 506, 312, 311, 0,
	208, 0, 514, 482, 293, 518, 214, 136, 337, 376,
	154, 220, 342, 480, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 496, 520, 0,
	291, 314, 344, 156, 331, 494, 495, 497, 524, 303,
	526, 532, 0, 233, 188, 191, 202, 209, 0, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 483, 0, 329, 362, 378, 158,
	0, 317, 343, 504, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 680, 690, 686, 688, 687, 684, 685,
	683, 682, 681, 692, 671, 672, 673, 674, 675, 0,
	0, 0, 677, 0, 615, 616, 0, 0, 0, 169,
	589, 590, 591, 592, 593, 599, 600, 604, 605, 613,
	612, 611, 614, 617, 619, 618, 620, 594, 595, 597,
	601, 602, 603, 606, 607, 610, 608, 609, 676, 133,
	144, 224, 0, 292, 194, 363, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	278, 279, 280, 288, 522, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 336, 350, 351, 370,
	371, 340, 0, 0, 135, 0, 0, 517, 519, 0,
	0, 0, 266, 0, 0, 0, 0, 1114, 0, 0,
	0, 183, 0, 0, 0, 0, 222, 0, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 0, 0,
	0, 0, 225, 0, 0, 536, 327, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 1118, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 1110, 1111, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 1112, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 0, 0, 0, 213, 540, 0, 0, 0,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 498, 481, 0, 0, 0, 172, 0,
	301, 270, 359, 502, 0, 300, 226, 349, 0, 0,
	358, 0, 527, 368, 373, 493, 0, 488, 324, 185,
	180, 184, 0, 137, 501, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 505, 503, 0, 0, 364, 506, 312, 311,
	0, 208, 0, 514, 482, 293, 518, 214, 136, 337,
	376, 154, 220, 342, 480, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 496, 520,
	0, 291, 314, 344, 156, 331, 494, 495, 497, 524,
	303, 526, 532, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 483, 0, 329, 362, 378,
	158, 0, 317, 343, 504, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 534, 0, 0, 0,
	169, 484, 485, 486, 487, 489, 507, 508, 512, 513,
	530, 529, 528, 531, 535, 538, 537, 539, 490, 491,
	499, 509, 510, 511, 515, 516, 525, 521, 523, 0,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 278, 279, 280, 288, 522, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 336, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 517, 519,
	0, 0, 0, 266, 0, 0, 0, 0, 1631, 0,
	0, 0, 183, 0, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 0, 225, 0, 0, 536, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1633,
	1635, 0, 0, 0, 0, 0, 0, 128, 0, 479,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 540, 0, 1634,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 498, 481, 0, 0, 0, 172,
	0, 301, 270, 359, 502, 0, 300, 226, 349, 0,
	0, 358, 0, 527, 368, 373, 493, 0, 488, 324,
	185, 180, 184, 0, 137, 501, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 364, 506, 312,
	311, 0, 208, 0, 514, 482, 293, 518, 214, 136,
	337, 376, 154, 220, 342, 480, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 496,
	520, 0, 291, 314, 344, 156, 331, 494, 495, 497,
	524, 303, 526, 532, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 483, 0, 329, 362,
	378, 158, 0, 317, 343, 504, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 0, 0,
	0, 169, 484, 485, 486, 487, 489, 507, 508, 512,
	513, 530, 529, 528, 531, 535, 538, 537, 539, 490,
	491, 499, 509, 510, 511, 515, 516, 525, 521, 523,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 522, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 517,
	519, 0, 0, 0, 266, 0, 0, 0, 0, 1631,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 536, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1633, 1635, 0, 0, 0, 0, 0, 0, 128, 0,
	479, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 1629, 294,
	315, 0, 285, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 540, 0,
	1634, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 498, 481, 0, 0, 0,
	172, 0, 301, 270, 359, 502, 0, 300, 226, 349,
	0, 0, 358, 0, 527, 368, 373, 493, 0, 488,
	324, 185, 180, 184, 0, 137, 501, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 364, 506,
	312, 311, 0, 208, 0, 514, 482, 293, 518, 214,
	136, 337, 376, 154, 220, 342, 480, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	496, 520, 0, 291, 314, 344, 156, 331, 494, 495,
	497, 524, 303, 526, 532, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 483, 0, 329,
	362, 378, 158, 0, 317, 343, 504, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 0,
	0, 0, 169, 484, 485, 486, 487, 489, 507, 508,
	512, 513, 530, 529, 528, 531, 535, 538, 537, 539,
	490, 491, 499, 509, 510, 511, 515, 516, 525, 521,
	523, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 522, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	517, 519, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 536, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 479, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 277,
	294, 315, 0, 285, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 148, 0, 0, 0, 213, 540,
	0, 0, 0, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 0, 309, 498, 481, 0, 0,
	0, 172, 0, 301, 270, 359, 502, 0, 300, 226,
	349, 0, 0, 358, 0, 527, 368, 373, 493, 0,
	488, 324, 185, 180, 184, 0, 137, 501, 284, 177,
	218, 0, 0, 0, 168, 0, 0, 0, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 505, 503, 0, 0, 364,
	506, 312, 311, 0, 208, 0, 514, 482, 293, 518,
	214, 136, 337, 376, 154, 220, 342, 480, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 496, 520, 0, 291, 314, 344, 156, 331, 494,
	495, 497, 524, 303, 526, 532, 0, 233, 188, 191,
	202, 209, 0, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 483, 0,
	329, 362, 378, 158, 0, 317, 343, 504, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	0, 0, 0, 169, 484, 485, 486, 487, 489, 507,
	508, 512, 513, 530, 529, 528, 531, 535, 538, 537,
	539, 490, 491, 499, 509, 510, 511, 515, 516, 525,
	521, 523, 0, 133, 144, 224, 0, 292, 194, 363,
	0, 179, 0, 0, 0, 0, 474, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 278, 279, 280, 288, 522, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	336, 350, 351, 370, 371, 340, 0, 0, 135, 0,
	0, 517, 519, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	222, 1951, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 0, 0, 0, 0, 225, 0, 0, 536,
	327, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 0, 479, 0, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	277, 294, 315, 0, 285, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 148, 0, 0, 0, 213,
	540, 0, 0, 0, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 0, 309, 498, 481, 0,
	0, 0, 172, 0, 301, 270, 359, 502, 0, 300,
	226, 349, 0, 0, 358, 0, 527, 368, 373, 493,
	0, 488, 324, 185, 180, 184, 0, 137, 501, 284,
	177, 218, 0, 0, 0, 168, 0, 0, 0, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 505, 503, 0, 0,
	364, 506, 312, 311, 0, 208, 0, 514, 482, 293,
	518, 214, 136, 337, 376, 154, 220, 342, 480, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 496, 520, 0, 291, 314, 344, 156, 331,
	494, 495, 497, 524, 303, 526, 532, 0, 233, 188,
	191, 202, 209, 0, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 483,
	0, 329, 362, 378, 158, 0, 317, 343, 504, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 533,
	534, 0, 0, 0, 169, 484, 485, 486, 487, 489,
	507, 508, 512, 513, 530, 529, 528, 531, 535, 538,
	537, 539, 490, 491, 499, 509, 510, 511, 515, 516,
	525, 521, 523, 0, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 522,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 340, 0, 0, 135,
	0, 0, 517, 519, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 222, 0, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 0, 0, 0, 0, 225, 0, 0,
	536, 327, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 479, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 0, 0, 0,
	213, 540, 0, 0, 0, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 498, 481,
	0, 0, 0, 172, 0, 301, 270, 359, 502, 0,
	300, 226, 349, 0, 0, 358, 0, 527, 368, 373,
	493, 0, 488, 324, 185, 180, 184, 0, 137, 501,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 505, 503, 0,
	0, 364, 506, 312, 311, 0, 208, 0, 514, 482,
	293, 518, 214, 136, 337, 376, 154, 220, 342, 480,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 496, 520, 0, 291, 314, 344, 156,
	331, 494, 495, 497, 524, 303, 526, 532, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	483, 0, 329, 362, 378, 158, 0, 317, 343, 504,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 0, 0, 0, 169, 484, 485, 486, 487,
	489, 507, 508, 512, 513, 530, 529, 528, 531, 535,
	538, 537, 539, 490, 491, 499, 509, 510, 511, 515,
	516, 525, 521, 523, 0, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	522, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 340, 0, 0,
	135, 0, 0, 517, 519, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 0, 225, 0,
	0, 536, 327, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1115, 0, 1118, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 540, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	498, 481, 0, 0, 0, 172, 0, 301, 270, 359,
	502, 0, 300, 226, 349, 0, 0, 358, 0, 527,
	368, 373, 493, 0, 488, 324, 185, 180, 184, 0,
	137, 501, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 364, 506, 312, 311, 0, 208, 0,
	514, 482, 293, 518, 214, 136, 337, 376, 154, 220,
	342, 480, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 496, 520, 0, 291, 314,
	344, 156, 331, 494, 495, 497, 524, 303, 526, 532,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 483, 0, 329, 362, 378, 158, 0, 317,
	343, 504, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 169, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 522, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 0,
	0, 0, 135, 0, 0, 517, 519, 448, 340, 442,
	453, 436, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 459, 0, 0, 0, 0, 0, 183, 0,
	0, 443, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 0, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 435, 434, 437, 0, 0, 0, 251, 148, 0,
	0, 441, 213, 0, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 445, 309,
	0, 0, 449, 0, 0, 172, 0, 301, 270, 359,
	0, 0, 300, 226, 349, 0, 452, 358, 0, 0,
	368, 373, 0, 0, 0, 324, 185, 180, 184, 0,
	137, 0, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 0, 312, 311, 0, 208, 0,
	0, 0, 293, 0, 214, 136, 337, 376, 154, 220,
	342, 0, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 0, 0, 0, 462, 314,
	344, 156, 331, 438, 439, 440, 446, 447, 450, 451,
	454, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 0, 0, 329, 362, 378, 158, 0, 317,
	343, 0, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 444, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 0,
	0, 0, 135, 448, 340, 442, 453, 436, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 428, 0,
	0, 0, 0, 0, 183, 0, 0, 443, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 277,
	294, 315, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 435, 434, 437,
	0, 0, 0, 251, 148, 0, 0, 441, 213, 0,
	0, 0, 0, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 445, 309, 0, 0, 449, 0,
	0, 172, 0, 301, 270, 359, 0, 0, 300, 226,
	349, 0, 452, 358, 0, 0, 368, 373, 0, 0,
	0, 324, 185, 180, 184, 0, 137, 0, 284, 177,
	218, 0, 0, 0, 168, 0, 0, 0, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 364,
	0, 312, 311, 0, 208, 0, 0, 0, 293, 0,
	214, 136, 337, 376, 154, 220, 342, 0, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 0, 0, 0, 431, 314, 344, 156, 331, 438,
	439, 440, 446, 447, 450, 451, 454, 233, 188, 191,
	202, 209, 0, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 0, 0,
	329, 362, 378, 158, 0, 317, 343, 0, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 224, 0, 292, 194, 363,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 278, 279, 280, 288, 444, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	336, 350, 351, 370, 371, 340, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	222, 0, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 0, 0, 0, 0, 225, 0, 0, 0,
	327, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	277, 294, 315, 0, 285, 0, 1128, 1127, 1137, 1138,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1129, 0, 0,
	1139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 148, 0, 0, 0, 213,
	0, 0, 0, 0, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 0, 309, 0, 0, 0,
	0, 0, 172, 0, 301, 270, 359, 0, 0, 300,
	226, 349, 0, 0, 358, 0, 0, 368, 373, 0,
	0, 0, 324, 185, 180, 184, 0, 137, 0, 284,
	177, 218, 0, 0, 0, 168, 0, 0, 0, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 0, 312, 311, 0, 208, 0, 0, 0, 293,
	0, 214, 136, 337, 376, 154, 220, 342, 0, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 0, 0, 0, 291, 314, 344, 156, 331,
	0, 0, 0, 0, 303, 0, 0, 0, 233, 188,
	191, 202, 209, 0, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 0,
	0, 329, 362, 378, 158, 0, 317, 343, 0, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 0,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 340, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	2862, 0, 0, 0, 0, 0, 183, 2860, 0, 0,
	0, 222, 0, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 0, 0, 0, 0, 225, 0, 0,
	0, 327, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 0, 0, 0,
	213, 0, 0, 0, 0, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 0, 0,
	0, 0, 0, 172, 0, 301, 270, 359, 0, 0,
	300, 226, 349, 0, 0, 358, 0, 0, 368, 373,
	0, 0, 0, 324, 185, 180, 184, 0, 137, 0,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 0, 312, 311, 0, 208, 0, 2861, 0,
	293, 0, 214, 136, 337, 376, 154, 220, 342, 0,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 0, 0, 0, 291, 314, 344, 156,
	331, 0, 0, 0, 0, 303, 0, 0, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	0, 0, 329, 362, 378, 158, 0, 317, 343, 0,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	0, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 36, 340, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 1626, 225,
	0, 0, 0, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 1244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 0, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	0, 0, 0, 0, 0, 172, 0, 301, 270, 359,
	0, 0, 300, 226, 349, 0, 0, 358, 0, 0,
	368, 373, 0, 0, 0, 324, 185, 180, 184, 0,
	137, 0, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 0, 312, 311, 0, 208, 0,
	0, 0, 293, 0, 214, 136, 337, 376, 154, 220,
	342, 0, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 0, 0, 0, 291, 314,
	344, 156, 331, 0, 0, 0, 0, 303, 0, 0,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 0, 0, 329, 362, 378, 158, 0, 317,
	343, 0, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 224,
	79, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 0, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 0, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2054, 360, 277, 294, 315, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 148,
	0, 0, 0, 213, 0, 0, 0, 0, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 0,
	309, 0, 0, 0, 0, 0, 172, 0, 301, 270,
	359, 0, 0, 300, 226, 349, 0, 0, 358, 0,
	0, 368, 373, 0, 0, 0, 324, 185, 180, 184,
	0, 137, 0, 284, 177, 218, 2055, 2056, 0, 168,
	0, 0, 0, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 0, 312, 311, 0, 208,
	0, 0, 0, 293, 0, 214, 136, 337, 376, 154,
	220, 342, 0, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 0, 0, 0, 291,
	314, 344, 156, 331, 0, 0, 0, 0, 303, 0,
	0, 0, 233, 188, 191, 202, 209, 0, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 0, 0, 329, 362, 378, 158, 0,
	317, 343, 0, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	224, 0, 292, 194, 363, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 278,
	279, 280, 288, 0, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 336, 350, 351, 370, 371,
	340, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 222, 0, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 0, 0, 0,
	0, 225, 0, 0, 0, 327, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 277, 294, 315, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	148, 0, 0, 0, 213, 0, 0, 0, 0, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	0, 309, 0, 0, 0, 0, 0, 172, 0, 301,
	270, 359, 0, 0, 300, 226, 349, 0, 0, 358,
	0, 0, 368, 373, 0, 0, 0, 324, 185, 180,
	184, 0, 137, 0, 284, 177, 218, 0, 0, 0,
	168, 0, 0, 0, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 0, 312, 311, 0,
	208, 0, 0, 0, 293, 0, 214, 136, 337, 376,
	154, 220, 342, 0, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 0, 0, 0,
	291, 314, 344, 156, 331, 0, 0, 0, 0, 303,
	0, 0, 0, 233, 188, 191, 202, 209, 0, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 0, 0, 329, 362, 378, 158,
	0, 317, 343, 0, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 0, 0, 0, 1405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 224, 0, 292, 194, 363, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	278, 279, 280, 288, 0, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 336, 350, 351, 370,
	371, 340, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 1265, 0, 0, 0, 222, 0, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 0, 0,
	0, 0, 225, 0, 0, 0, 327, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 0, 0, 0, 213, 0, 0, 0, 0,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 0, 0, 0, 0, 0, 172, 0,
	301, 270, 359, 0, 0, 300, 226, 349, 0, 0,
	358, 0, 0, 368, 373, 0, 0, 0, 324, 185,
	180, 184, 0, 137, 0, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 0, 312, 311,
	0, 208, 0, 0, 0, 293, 0, 214, 136, 337,
	376, 154, 220, 342, 0, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 0, 0,
	0, 291, 314, 344, 156, 331, 0, 0, 0, 0,
	303, 0, 0, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 0, 0, 329, 362, 378,
	158, 0, 317, 343, 0, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 278, 279, 280, 288, 0, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 336, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 0, 225, 0, 0, 0, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 277,
	294, 315, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 2321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 148, 0, 0, 0, 213, 0,
	0, 0, 0, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 0, 309, 0, 0, 0, 0,
	0, 172, 0, 301, 270, 359, 0, 0, 300, 226,
	349, 0, 0, 358, 0, 0, 368, 373, 0, 0,
	0, 324, 185, 180, 184, 0, 137, 0, 284, 177,
	218, 0, 0, 0, 168, 0, 0, 0, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 364,
	0, 312, 311, 0, 208, 0, 0, 0, 293, 0,
	214, 136, 337, 376, 154, 220, 342, 0, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 0, 0, 0, 291, 314, 344, 156, 331, 0,
	0, 0, 0, 303, 0, 0, 0, 233, 188, 191,
	202, 209, 0, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	151, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 231, 236, 0, 0, 0,
	329, 362, 378, 158, 0, 317, 343, 0, 290, 159,
	196, 189, 281, 256, 152, 207, 326, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 224, 0, 292, 194, 363,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 278, 279, 280, 288, 0, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	336, 350, 351, 370, 371, 340, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	222, 0, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 0, 0, 0, 0, 225, 0, 0, 0,
	327, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	277, 294, 315, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 148, 0, 0, 0, 213,
	0, 0, 0, 0, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 0, 309, 0, 0, 0,
	0, 0, 172, 0, 301, 270, 359, 0, 0, 300,
	226, 349, 0, 0, 358, 0, 0, 368, 373, 0,
	0, 0, 324, 185, 180, 184, 0, 137, 0, 284,
	177, 218, 0, 0, 0, 168, 0, 0, 0, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 0, 312, 311, 0, 208, 0, 0, 0, 293,
	0, 214, 136, 337, 376, 154, 220, 342, 0, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 0, 0, 0, 291, 314, 344, 156, 331,
	0, 0, 0, 0, 303, 0, 0, 0, 233, 188,
	191, 202, 209, 0, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 0,
	0, 329, 362, 378, 158, 0, 317, 343, 0, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 0,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 340, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 222, 0, 1830, 1831, 171, 230, 228, 0, 0,
	0, 273, 339, 0, 0, 0, 0, 225, 0, 0,
	0, 327, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 0, 0, 0,
	213, 0, 0, 0, 0, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 0, 0,
	0, 0, 0, 172, 0, 301, 270, 359, 0, 0,
	300, 226, 349, 0, 0, 358, 0, 0, 368, 373,
	0, 0, 0, 324, 185, 180, 184, 0, 137, 0,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 0, 312, 311, 0, 208, 0, 0, 0,
	293, 0, 214, 136, 337, 376, 154, 220, 342, 0,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 0, 0, 0, 291, 314, 344, 156,
	331, 0, 0, 0, 0, 303, 0, 0, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	0, 0, 329, 362, 378, 158, 0, 317, 343, 0,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	0, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 340, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 0, 225, 0,
	0, 0, 327, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 0, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 0,
	0, 0, 0, 0, 172, 0, 301, 270, 359, 0,
	0, 300, 226, 349, 0, 0, 358, 0, 0, 368,
	373, 0, 0, 0, 324, 185, 180, 184, 0, 137,
	0, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 364, 0, 312, 311, 0, 208, 0, 0,
	0, 293, 0, 214, 136, 337, 376, 154, 220, 342,
	0, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 0, 0, 0, 291, 314, 344,
	156, 331, 0, 0, 0, 0, 303, 0, 0, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 0, 0, 329, 362, 378, 158, 0, 317, 343,
	0, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 0, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 0, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 277, 294, 315, 0, 285, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 148, 0,
	0, 0, 213, 0, 0, 0, 0, 287, 0, 334,
	201, 223, 153, 130, 146, 164, 200, 262, 0, 309,
	0, 0, 0, 0, 0, 172, 0, 301, 270, 359,
	0, 0, 300, 226, 349, 0, 0, 358, 0, 0,
	368, 373, 0, 0, 0, 324, 185, 180, 184, 0,
	137, 0, 284, 177, 218, 0, 0, 0, 168, 0,
	0, 0, 323, 346, 134, 248, 347, 372, 155, 341,
	249, 255, 165, 167, 166, 147, 318, 345, 160, 170,
	328, 305, 335, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 364, 0, 312, 311, 0, 208, 0,
	0, 0, 293, 0, 214, 136, 337, 376, 154, 220,
	342, 0, 195, 261, 174, 271, 272, 192, 132, 289,
	242, 243, 241, 244, 199, 0, 0, 0, 291, 314,
	344, 156, 331, 0, 0, 0, 0, 303, 0, 0,
	0, 233, 188, 191, 202, 209, 0, 298, 332, 365,
	0, 149, 138, 338, 357, 161, 313, 316, 374, 299,
	141, 355, 333, 246, 215, 216, 139, 0, 140, 296,
	181, 198, 175, 265, 0, 197, 286, 352, 353, 173,
	377, 150, 367, 143, 151, 366, 258, 0, 257, 369,
	348, 356, 247, 235, 0, 142, 354, 245, 234, 221,
	190, 204, 282, 229, 283, 205, 253, 252, 254, 231,
	236, 0, 0, 0, 329, 362, 378, 158, 0, 317,
	343, 0, 290, 159, 196, 189, 281, 256, 152, 207,
	326, 219, 227, 295, 375, 269, 302, 162, 361, 325,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 224,
	0, 292, 194, 363, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 187, 193, 203, 206,
	210, 211, 212, 217, 232, 237, 238, 239, 240, 259,
	260, 263, 264, 267, 268, 274, 275, 276, 278, 279,
	280, 288, 0, 297, 304, 306, 307, 308, 310, 319,
	320, 321, 322, 330, 336, 350, 351, 370, 371, 340,
	0, 0, 135, 695, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 222, 0, 0, 182, 171, 230,
	228, 0, 0, 0, 273, 339, 0, 0, 0, 0,
	225, 0, 0, 0, 327, 250, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 277, 294, 315, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 148,
	0, 0, 0, 213, 0, 0, 0, 0, 287, 0,
	334, 201, 223, 153, 130, 146, 164, 200, 262, 0,
	309, 0, 0, 0, 0, 0, 172, 0, 301, 270,
	359, 0, 0, 300, 226, 349, 0, 0, 358, 0,
	0, 368, 373, 0, 0, 0, 324, 185, 180, 184,
	0, 137, 0, 284, 177, 218, 0, 0, 0, 168,
	0, 0, 0, 323, 346, 134, 248, 347, 372, 155,
	341, 249, 255, 165, 167, 166, 147, 318, 345, 160,
	170, 328, 305, 335, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 364, 0, 312, 311, 0, 208,
	0, 0, 0, 293, 0, 214, 136, 337, 376, 154,
	220, 342, 0, 195, 261, 174, 271, 272, 192, 132,
	289, 242, 243, 241, 244, 199, 0, 0, 0, 291,
	314, 344, 156, 331, 0, 0, 0, 0, 303, 0,
	0, 0, 233, 188, 191, 202, 209, 0, 298, 332,
	365, 0, 149, 138, 338, 357, 161, 313, 316, 374,
	299, 141, 355, 333, 246, 215, 216, 139, 0, 140,
	296, 181, 198, 175, 265, 0, 197, 286, 352, 353,
	173, 377, 150, 367, 143, 151, 366, 258, 0, 257,
	369, 348, 356, 247, 235, 0, 142, 354, 245, 234,
	221, 190, 204, 282, 229, 283, 205, 253, 252, 254,
	231, 236, 0, 0, 0, 329, 362, 378, 158, 0,
	317, 343, 0, 290, 159, 196, 189, 281, 256, 152,
	207, 326, 219, 227, 295, 375, 269, 302, 162, 361,
	325, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	224, 0, 292, 194, 363, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 187, 193, 203,
	206, 210, 211, 212, 217, 232, 237, 238, 239, 240,
	259, 260, 263, 264, 267, 268, 274, 275, 276, 278,
	279, 280, 288, 0, 297, 304, 306, 307, 308, 310,
	319, 320, 321, 322, 330, 336, 350, 351, 370, 371,
	340, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 222, 0, 0, 182, 171,
	230, 228, 0, 0, 0, 273, 339, 0, 0, 0,
	0, 225, 0, 0, 0, 327, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 277, 294, 315, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	148, 0, 125, 0, 213, 0, 0, 0, 0, 287,
	0, 334, 201, 223, 153, 130, 146, 164, 200, 262,
	0, 309, 0, 0, 0, 0, 0, 172, 0, 301,
	270, 359, 0, 0, 300, 226, 349, 0, 0, 358,
	0, 0, 368, 373, 0, 0, 0, 324, 185, 180,
	184, 0, 137, 0, 284, 177, 218, 0, 0, 0,
	168, 0, 0, 0, 323, 346, 134, 248, 347, 372,
	155, 341, 249, 255, 165, 167, 166, 147, 318, 345,
	160, 170, 328, 305, 335, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 0, 312, 311, 0,
	208, 0, 0, 0, 293, 0, 214, 136, 337, 376,
	154, 220, 342, 0, 195, 261, 174, 271, 272, 192,
	132, 289, 242, 243, 241, 244, 199, 0, 0, 0,
	291, 314, 344, 156, 331, 0, 0, 0, 0, 303,
	0, 0, 0, 233, 188, 191, 202, 209, 0, 298,
	332, 365, 0, 149, 138, 338, 357, 161, 313, 316,
	374, 299, 141, 355, 333, 246, 215, 216, 139, 0,
	140, 296, 181, 198, 175, 265, 0, 197, 286, 352,
	353, 173, 377, 150, 367, 143, 151, 366, 258, 0,
	257, 369, 348, 356, 247, 235, 0, 142, 354, 245,
	234, 221, 190, 204, 282, 229, 283, 205, 253, 252,
	254, 231, 236, 0, 0, 0, 329, 362, 378, 158,
	0, 317, 343, 0, 290, 159, 196, 189, 281, 256,
	152, 207, 326, 219, 227, 295, 375, 269, 302, 162,
	361, 325, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 224, 0, 292, 194, 363, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 187, 193,
	203, 206, 210, 211, 212, 217, 232, 237, 238, 239,
	240, 259, 260, 263, 264, 267, 268, 274, 275, 276,
	278, 279, 280, 288, 0, 297, 304, 306, 307, 308,
	310, 319, 320, 321, 322, 330, 336, 350, 351, 370,
	371, 340, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 222, 0, 0, 182,
	171, 230, 228, 0, 0, 0, 273, 339, 0, 0,
	0, 0, 225, 0, 0, 0, 327, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 0, 0, 0, 213, 0, 0, 0, 0,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 0, 0, 0, 0, 0, 172, 0,
	301, 270, 359, 0, 0, 300, 226, 349, 0, 0,
	358, 0, 0, 368, 373, 0, 0, 0, 324, 185,
	180, 184, 0, 137, 0, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 0, 312, 311,
	0, 208, 0, 0, 0, 293, 0, 214, 136, 337,
	376, 154, 220, 342, 0, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 0, 0,
	0, 291, 314, 344, 156, 331, 0, 0, 0, 0,
	303, 0, 0, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 0, 0, 329, 362, 378,
	158, 0, 317, 343, 0, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 278, 279, 280, 288, 0, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 336, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 0, 225, 0, 0, 0, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 277, 294,
	315, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 148, 0, 0, 0, 213, 0, 0,
	0, 0, 287, 0, 334, 201, 223, 153, 130, 146,
	164, 200, 262, 0, 309, 0, 0, 0, 0, 0,
	172, 0, 301, 270, 359, 0, 0, 300, 226, 349,
	0, 0, 358, 0, 0, 368, 373, 0, 0, 0,
	324, 185, 180, 184, 0, 137, 0, 284, 177, 218,
	0, 0, 0, 168, 0, 0, 0, 323, 346, 134,
	248, 347, 372, 155, 341, 249, 255, 165, 167, 166,
	147, 318, 345, 160, 170, 328, 305, 335, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 364, 0,
	312, 311, 0, 208, 0, 0, 0, 293, 0, 214,
	136, 337, 376, 154, 220, 342, 0, 195, 261, 174,
	271, 272, 192, 132, 289, 242, 243, 241, 244, 199,
	0, 0, 0, 291, 314, 344, 156, 331, 0, 0,
	0, 0, 303, 0, 0, 0, 233, 188, 191, 202,
	209, 0, 298, 332, 365, 0, 149, 138, 338, 357,
	161, 313, 316, 374, 299, 141, 355, 333, 246, 215,
	216, 139, 0, 140, 296, 181, 198, 175, 265, 0,
	197, 286, 352, 353, 173, 377, 150, 367, 143, 151,
	366, 258, 0, 257, 369, 348, 356, 247, 235, 0,
	142, 354, 245, 234, 221, 190, 204, 282, 229, 283,
	205, 253, 252, 254, 231, 236, 0, 0, 0, 329,
	362, 378, 158, 0, 317, 343, 0, 290, 159, 196,
	189, 281, 256, 152, 207, 326, 219, 227, 295, 375,
	269, 302, 162, 361, 325, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 224, 0, 292, 194, 363, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 187, 193, 203, 206, 210, 211, 212, 217, 232,
	237, 238, 239, 240, 259, 260, 263, 264, 267, 268,
	274, 275, 276, 278, 279, 280, 288, 0, 297, 304,
	306, 307, 308, 310, 319, 320, 321, 322, 330, 336,
	350, 351, 370, 371, 340, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 222,
	0, 0, 182, 171, 230, 228, 0, 0, 0, 273,
	339, 0, 0, 0, 0, 225, 0, 0, 0, 327,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 277,
	294, 315, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 148, 0, 0, 0, 213, 0,
	0, 0, 0, 287, 0, 334, 201, 223, 153, 130,
	146, 164, 200, 262, 0, 309, 0, 0, 0, 0,
	0, 172, 0, 301, 270, 359, 0, 0, 300, 226,
	349, 0, 0, 358, 0, 0, 368, 373, 0, 0,
	0, 324, 185, 180, 184, 0, 137, 0, 284, 177,
	218, 0, 0, 0, 168, 0, 0, 0, 323, 346,
	134, 248, 347, 372, 155, 341, 249, 255, 165, 167,
	166, 147, 318, 345, 160, 170, 328, 305, 335, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 364,
	0, 312, 311, 0, 208, 0, 0, 0, 293, 0,
	214, 136, 337, 376, 154, 220, 342, 0, 195, 261,
	174, 271, 272, 192, 132, 289, 242, 243, 241, 244,
	199, 0, 0, 0, 291, 314, 344, 156, 331, 0,
	0, 0, 0, 303, 0, 0, 0, 233, 188, 191,
	202, 209, 0, 298, 332, 365, 0, 149, 138, 338,
	357, 161, 313, 316, 374, 299, 141, 355, 333, 246,
	215, 216, 139, 0, 140, 296, 181, 198, 175, 265,
	0, 197, 286, 352, 353, 173, 377, 150, 367, 143,
	715, 366, 258, 0, 257, 369, 348, 356, 247, 235,
	0, 142, 354, 245, 234, 221, 190, 204, 282, 229,
	283, 205, 253, 252, 254, 711, 236, 0, 0, 0,
	329, 362, 378, 158, 0, 317, 343, 0, 290, 159,
	196, 189, 281, 716, 714, 705, 706, 219, 227, 295,
	375, 269, 302, 162, 361, 325, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 224, 0, 292, 194, 363,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 187, 193, 203, 206, 210, 211, 212, 217,
	232, 237, 238, 239, 240, 259, 260, 263, 264, 267,
	268, 274, 275, 276, 278, 712, 713, 288, 0, 297,
	304, 306, 307, 308, 310, 319, 320, 321, 322, 330,
	336, 350, 351, 370, 371, 340, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	222, 0, 0, 182, 171, 230, 228, 0, 0, 0,
	273, 339, 0, 0, 0, 0, 225, 0, 0, 0,
	327, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	277, 294, 315, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 148, 0, 0, 0, 213,
	0, 0, 0, 0, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 0, 309, 0, 0, 0,
	0, 0, 172, 0, 301, 270, 359, 0, 0, 300,
	226, 349, 0, 0, 358, 0, 0, 368, 373, 0,
	0, 0, 324, 185, 180, 184, 0, 137, 0, 284,
	177, 218, 0, 0, 0, 168, 0, 0, 0, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	364, 0, 312, 311, 0, 208, 0, 0, 0, 293,
	0, 214, 136, 337, 376, 154, 220, 342, 0, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 0, 0, 0, 291, 314, 344, 156, 331,
	0, 0, 0, 0, 303, 0, 0, 0, 233, 188,
	191, 202, 209, 0, 298, 332, 365, 0, 149, 138,
	338, 1259, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 0,
	0, 329, 362, 378, 158, 0, 317, 343, 0, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 224, 0, 292, 194,
	363, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 0,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 340, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 222, 0, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 0, 0, 0, 0, 225, 0, 0,
	0, 327, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 0, 0, 0,
	213, 0, 0, 0, 0, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 0, 0,
	0, 0, 0, 172, 0, 301, 270, 359, 0, 0,
	300, 226, 349, 0, 0, 358, 0, 0, 368, 373,
	0, 0, 0, 324, 185, 180, 184, 0, 137, 0,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 0, 312, 311, 0, 208, 0, 0, 0,
	293, 0, 214, 136, 337, 376, 154, 220, 342, 0,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 0, 0, 0, 291, 314, 344, 156,
	331, 0, 0, 0, 0, 303, 0, 0, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 702, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 715, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 711, 236, 0,
	0, 0, 329, 362, 378, 158, 0, 317, 343, 0,
	290, 159, 196, 189, 281, 716, 714, 705, 706, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 169, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 500, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 712, 713, 288,
	0, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 498, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 0, 0, 493,
	0, 488, 0, 0, 0, 0, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 505, 503, 0, 0,
	0, 506, 0, 2336, 0, 0, 0, 514, 482, 0,
	518, 0, 541, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 496, 520, 0, 0, 0, 0, 0, 0,
	494, 495, 497, 524, 0, 526, 532, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 540, 0, 0, 0, 0, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	498, 481, 0, 0, 0, 0, 0, 0, 0, 0,
	502, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	0, 0, 493, 0, 488, 0, 0, 0, 0, 533,
	534, 501, 0, 0, 0, 484, 485, 486, 487, 489,
	507, 508, 512, 513, 530, 529, 528, 531, 535, 538,
	537, 539, 490, 491, 499, 509, 510, 511, 515, 516,
	525, 521, 523, 0, 0, 0, 0, 0, 0, 505,
	503, 0, 0, 0, 506, 0, 0, 0, 0, 0,
	514, 482, 0, 518, 0, 0, 0, 0, 0, 0,
	0, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 520, 0, 0, 522,
	0, 0, 0, 494, 495, 497, 524, 0, 526, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 519, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2345, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 0, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 0, 0, 0, 0, 484, 485,
	486, 487, 489, 507, 508, 512, 513, 530, 529, 528,
	531, 535, 538, 537, 539, 490, 491, 499, 509, 510,
	511, 515, 516, 525, 521, 523, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 481, 0, 0, 0, 0,
	0, 0, 0, 0, 502, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 0, 0, 493, 0, 488, 0,
	0, 0, 522, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 519, 0, 0, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 505, 503, 0, 0, 0, 506, 0,
	2343, 0, 0, 0, 514, 482, 0, 518, 0, 541,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 0, 496,
	520, 0, 0, 0, 0, 0, 0, 494, 495, 497,
	524, 0, 526, 532, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 483, 0, 0, 0,
	540, 0, 0, 0, 0, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 0, 0, 493,
	0, 488, 0, 0, 0, 0, 533, 534, 501, 0,
	0, 0, 484, 485, 486, 487, 489, 507, 508, 512,
	513, 530, 529, 528, 531, 535, 538, 537, 539, 490,
	491, 499, 509, 510, 511, 515, 516, 525, 521, 523,
	0, 0, 0, 0, 0, 0, 505, 503, 0, 0,
	0, 506, 0, 0, 0, 0, 0, 514, 482, 0,
	518, 0, 0, 0, 0, 0, 0, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 520, 0, 0, 522, 0, 0, 0,
	494, 495, 497, 524, 0, 526, 532, 36, 0, 72,
	39, 40, 0, 0, 0, 0, 0, 0, 0, 517,
	519, 59, 0, 0, 0, 0, 0, 78, 0, 36,
	41, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 0,
	0, 81, 0, 0, 0, 2755, 0, 0, 0, 0,
	2979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2755, 0, 0,
	0, 0, 2975, 0, 0, 0, 0, 0, 0, 533,
	534, 0, 0, 0, 0, 484, 485, 486, 487, 489,
	507, 508, 512, 513, 530, 529, 528, 531, 535, 538,
	537, 539, 490, 491, 499, 509, 510, 511, 515, 516,
	525, 521, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2756, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 0, 522,
	0, 0, 49, 77, 76, 0, 0, 0, 2756, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 517, 519, 49, 77, 76, 0, 0, 0,
	36, 47, 72, 39, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	78, 0, 36, 41, 72, 39, 40, 0, 0, 0,
	57, 58, 0, 2757, 0, 0, 59, 0, 0, 0,
	0, 0, 78, 0, 0, 41, 0, 66, 0, 67,
	0, 0, 57, 58, 0, 2757, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 2755, 0,
	0, 0, 0, 2969, 0, 0, 68, 0, 0, 0,
	0, 0, 2758, 75, 0, 53, 54, 61, 0, 62,
	2755, 0, 0, 0, 0, 2955, 0, 0, 0, 0,
	0, 0, 0, 0, 2758, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 43, 74, 46, 45, 48, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2756,
	0, 0, 0, 0, 0, 0, 43, 74, 46, 45,
	48, 73, 0, 0, 0, 49, 77, 76, 0, 0,
	0, 2756, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 49, 77, 76,
	0, 0, 0, 36, 47, 72, 39, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	79, 0, 0, 78, 0, 36, 41, 72, 39, 40,
	0, 0, 0, 57, 58, 0, 2757, 0, 0, 59,
	0, 0, 79, 0, 0, 78, 0, 0, 41, 0,
	66, 0, 67, 0, 0, 57, 58, 0, 2757, 0,
	0, 0, 0, 0, 0, 81, 2944, 0, 0, 0,
	0, 0, 66, 0, 67, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 2755, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 2758, 75, 0, 53, 54,
	61, 0, 62, 2755, 0, 0, 0, 0, 2886, 0,
	0, 0, 0, 0, 0, 0, 0, 2758, 75, 0,
	53, 54, 61, 0, 62, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 36, 0, 72, 39, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 0, 0, 0, 78, 0, 0, 41, 0,
	0, 0, 0, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2756, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 73, 0, 0, 81, 49, 77,
	76, 0, 0, 0, 2756, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	49, 77, 76, 2755, 0, 0, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2757,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 57, 58,
	0, 2757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 2756, 0, 0, 0, 2758, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 0,
	2758, 75, 0, 53, 54, 61, 0, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 57, 58,
	0, 2757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2758, 75, 0, 53, 54, 61, 79, 62, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	3896, -1000, -357, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1875, -1000, -1000, -1000, -1000,
	-1000, -1000, 1080, 263, -1000, 301, 133, 33363, 626, 590,
	34445, -1000, -1000, -1000, 181, 526, 34445, 432, 466, 1311,
	1773, 1307, 30, -69, -72, 154, 25247, 24701, 5, -1000,
	1926, 1932, -1000, -1000, 460, 34, -1000, -1000, -1000, 21987,
	226, -1000, -1000, 1864, 1873, 1676, -1000, 14413, 460, 460,
	32822, 36609, -1000, 1925, 34445, 12788, -1000, 583, 554, -144,
	453, 453, 293, 453, 453, 611, -1000, 261, 880, -1000,
	-1000, -1000, -1000, 878, 34445, 29035, 454, 33904, 454, 454,
	454, 454, 454, 454, 454, 34445, -1000, 696, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34445,
	1306, 1801, 940, 121, -1000, -1000, -1000, 971, -1000, 318,
	316, 337, 309, 122, 941, 1860, -1000, 1553, 1864, 1864,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 300, 567, 210,
	226, 877, 1828, 1800, 1799, 1184, 1798, 545, 1794, 1599,
	-44, -1000, 1297, 34445, -1000, -1000, 1146, 1143, 1620, 1486,
	645, 1619, -1000, -1000, 329, 468, 1587, 417, 1587, 1587,
	1587, 1587, 1587, -81, 1587, 1587, 1587, 70, 1587, 149,
	1587, 1587, 1587, 1587, 1587, 1345, -1000, -1000, -1000, 335,
	1468, 1516, 1618, 242, -1000, -1000, -1000, -1000, 1613, 1841,
	599, -1000, -107, 1520, 23069, -1000, 1553, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1321, -1000, 1795, 1077, 17659, 1733, -1000, -1000,
	1013, 1907, -1000, 20364, 690, -1000, 17659, 3008, 1553, -1000,
	-1000, 1553, -1000, -1000, -1000, 661, -1000, -1000, 19823, 19823,
	19823, 19823, 19823, 19823, 19823, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1553,
	1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553,
	1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553,
	1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553,
	1553, -1000, -1000, 1553, -1000, 13872, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1553, 1553,
	1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553, 17659, 1553,
	1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553, 1553,
	1553, 1553, 1553, 32281, 29576, 34445, 1479, 1436, -1000, -1000,
	689, 1549, -89, 36068, -1000, -1000, -1000, -1000, 34986, 28494,
	862, -1000, -1000, -1000, -1000, 1793, -1000, -1000, 688, -1000,
	1875, -1000, -1000, 1416, 384, -1000, 4534, 36988, -1000, -1000,
	-1000, 1597, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33904, 34445, 247, 1296, 931, 1295, 34986, 34986, -1000,
	233, 29035, 29035, 453, 252, 29035, 243, 1525, 564, 1524,
	562, 1331, 34445, 1818, 1617, 34445, 1292, 1291, 34986, 34986,
	29035, 29035, -1000, 12237, -1000, -1000, 940, -1000, 5400, 17659,
	453, 453, 34445, 34445, 34445, 34445, 34445, -1000, -1000, 940,
	940, 940, 940, 950, 1905, 950, -1000, 950, -1000, -1000,
	17659, -1000, 19823, 27953, 784, -1000, -1000, -1000, 1289, 299,
	-1000, -1000, -1000, -1000, -1000, -1000, 1288, -1000, 1778, 545,
	545, -1000, 1249, 545, 1517, -1000, 859, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 545,
	-1000, 17118, -346, -1000, -1000, 1523, -1000, 313, -1000, -1000,
	535, 535, 198, 29035, 29035, 29035, -1000, 1587, 33904, -1000,
	1587, 1587, 1587, -85, 1587, 1587, -1000, -1000, 1587, -1000,
	-1000, -1000, -1000, -1000, 1587, -1000, -1000, -1000, 1587, 1587,
	-1000, 1587, 1587, -1000, -1000, -1000, -1000, -1000, 29035, 535,
	182, 1522, 535, 29035, 29035, -1000, 59, 56, 55, 54,
	-1000, -1000, -1000, -1000, 53, 52, -1000, -1000, 1676, -1000,
	-1000, 226, -1000, -1000, 34445, -97, 23069, 1520, 1836, 10584,
	-1000, -1000, 996, 1921, 822, 1490, -1000, -1000, 1519, -1000,
	1000, 687, 1225, 1704, -1000, -1000, -1000, 34445, -1000, 17659,
	17659, 17659, 1058, -1000, 23610, -1000, -1000, -1000, -1000, 10033,
	826, 19823, 1056, 841, 19823, 19823, 19823, 19823, 19823, 19823,
	19823, 19823, 19823, 19823, 19823, 19823, 19823, 19823, 19823, 1168,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1287, -1000,
	226, 1299, 1299, 750, 750, 750, 750, 750, 750, 25788,
	1833, 15495, 15495, 15495, 1833, 1321, 1321, 15495, 15495, 15495,
	15495, 15495, 15495, 15495, 15495, 1833, 1833, 15495, 1321, 1321,
	1321, 1321, 15495, 15495, 15495, 15495, 33904, 33904, 1833, 15495,
	15495, 15495, 1833, 1321, 1408, 1205, 13872, 15495, 15495, 1321,
	17659, 17659, 16577, 16036, 18200, 15495, 1833, 886, 1205, 34986,
	-1000, -1000, 19282, -1000, -1000, -1000, -1000, -1000, 1321, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 15495, 15495, 15495,
	15495, 816, 34445, -1000, 1480, 1688, -1000, -1000, -1000, 1835,
	26871, -1000, 21446, -1000, 1553, 816, 1461, 29576, 34445, -1000,
	-1000, 29576, 34445, 9482, 35527, 1506, -1000, -86, -105, -89,
	-1000, -1000, 709, -1000, -1000, -1000, 13330, -1000, 11135, 1864,
	1676, 6727, 11686, -1000, 36988, 1597, -1000, -54, -1000, -1000,
	-1000, 1563, -1000, 1563, 288, -11, 1563, 1563, 1563, 1563,
	1563, -12, -12, -12, -12, -3, -1000, -1000, -1000, -1000,
	-1000, 1595, 1594, -1000, 1563, 1563, 1563, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1572, 296, 1565, 1565,
	1565, 1565, 1565, 369, 369, -1000, 17659, 1585, 1834, 514,
	252, 1807, 1817, 1807, 322, -1000, 684, 1593, -1000, 674,
	297, 1476, -1000, 158, 1392, 34445, -1000, -1000, -1000, -1000,
	-1000, 34445, 34445, 29035, 29035, 29035, 513, -1000, 34445, 1518,
	-1000, -1000, -1000, -1000, -1000, 1485, -1000, 1392, -1000, -1000,
	-1000, -1000, -1000, 1248, 1205, 1285, 1281, 1828, -1000, -1000,
	-1000, 955, -1000, -1000, -1000, -1000, 940, 34445, 34445, 34445,
	1828, 940, 1205, 705, 1603, 1553, 1321, -1000, -1000, 1279,
	-1000, 19823, 1517, 1517, -1000, 1517, 545, 1299, 1517, -1000,
	1403, 991, 1247, 34445, -1000, 23069, -45, -1000, -126, 31740,
	-1000, -1000, -1000, 31740, -1000, 70, 173, -1000, 547, -1000,
	1401, -1000, -1000, -1000, -1000, 1587, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 31740, 127, 174, 31740, 1485,
	1903, -1000, -1000, -1000, -1000, 1858, -1000, 1833, 1321, 257,
	-1000, -1000, -1000, 1553, 1380, 673, -1000, 31199, -1000, 1700,
	1077, 1077, 17659, -1000, -1000, -1000, 11135, 1845, -1000, 1715,
	1714, 1630, -1000, -1000, 826, 829, 857, -1000, -1000, 1096,
	-1000, -1000, -1000, -1000, 672, 1553, -1000, 3273, -1000, -1000,
	-1000, -1000, 1056, 19823, 19823, 19823, 705, 3273, 3398, 1442,
	1105, 750, 918, 918, 775, 775, 775, 775, 775, 908,
	908, -1000, -1000, -1000, 1321, -1000, -1000, -1000, 15495, 1395,
	-1000, -1000, 1205, 671, 1395, 1395, 15495, -169, -169, 1395,
	1321, 1395, 1395, 1395, 1395, 1321, 1395, 15495, 15495, 1395,
	-169, -169, -169, -169, 1395, 1395, 1395, 1395, 1514, 1513,
	15495, 1395, 1395, 1395, 15495, -1000, 17659, -1000, 1321, 1395,
	1395, -1000, 1025, 1251, 824, 1902, 1395, 805, 1901, 1395,
	1084, 19823, 19823, 19823, 1395, 15495, 896, -1000, 17659, 1321,
	-1000, 1397, 1395, 1321, 1510, 1395, 1395, 207, 1553, -1000,
	11135, 29576, 29576, 29576, 29576, 29576, -1000, 1663, 1661, -1000,
	1657, 1654, 1670, 23069, 1399, 1321, 303, 26871, -1000, 1553,
	-1000, 22528, 731, 581, 577, 563, 15495, 1886, 29576, 1463,
	-1000, 1463, -1000, 669, -1000, -1000, 34986, -89, -111, -1000,
	-1000, 1506, -1000, 1175, -1000, -1000, 1205, -1000, 668, 1795,
	1833, 1504, 6176, -1000, -1000, -1000, -1000, 384, -1000, -1000,
	-1000, 1574, 4889, -1000, 1746, 719, 719, 693, 1260, 1740,
	-1000, -1000, 167, -63, -1000, -1000, -1000, 1142, -12, -12,
	1563, 1563, 287, 1563, -1000, -12, -1000, -1000, -1000, 709,
	1791, 709, 709, 709, 709, -12, 1246, 1246, -1000, -1000,
	-1000, -1000, 1139, -1000, 1572, -1000, 1124, -1000, -1000, -1000,
	-1000, -1000, -1000, 1226, 1612, 33904, -1000, 34445, -1000, 1807,
	-1000, -1000, -1000, 211, -1000, -1000, -1000, 1891, -1000, -1000,
	33904, 27412, 33904, -1000, -1000, 84, 29035, 175, 342, 224,
	-1000, 540, -1000, 537, -1000, -1000, -1000, -1000, -1000, -1000,
	34445, 29035, -1000, -1000, -1000, -1000, 1886, 1276, 1275, -1000,
	-1000, -1000, 950, 940, -1000, -1000, 19823, 29035, -1000, 323,
	-1000, 3273, -1000, -1000, -1000, 816, 586, -1000, -1000, -93,
	-1000, -1000, 532, 666, 665, 464, -1000, 95, 29035, -1000,
	33904, -1000, 1899, 1898, 123, 1897, 29035, -1000, 41, 1704,
	-1000, 1503, -1000, 593, 588, 724, 428, 428, -1000, 837,
	428, 1786, 1784, 814, -1000, 209, -1000, 10584, 10584, 1491,
	1245, 1237, -1000, 1680, -1000, -1000, -1000, 34445, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8931, 15495, -1000,
	705, 3273, 3116, -1000, 19823, -1000, 1395, 15495, -169, 8380,
	-169, -169, 1395, -1000, 30658, -1000, -1000, -169, -1000, -169,
	-169, -169, -169, -169, 1395, 1395, -169, -1000, -1000, -1000,
	-1000, -169, -169, -169, -169, 19823, 19823, 1395, -169, -169,
	-169, 1321, 1205, -1000, -1000, -1000, 373, 1168, 373, 19823,
	19823, -1000, 19823, 19823, -1000, -1000, 19823, 3245, 3221, 3205,
	-234, 1467, 873, -1000, 17659, 1181, -1000, -1000, -1000, -1000,
	-1000, -1000, 1611, 11135, 1553, 7278, -1000, 33904, 1484, -1000,
	843, 838, 1688, 1584, 1610, 1640, -1000, -1000, -1000, -1000,
	1658, -1000, 1645, -1000, -1000, 1556, -1000, -1000, 1489, 1553,
	33904, 19823, 731, -1000, 1553, 1553, 1553, 1321, 1875, 17659,
	1463, -1000, -1000, 782, -1000, -1000, -110, -124, -1000, -1000,
	-1000, 10584, -1000, 6727, -1000, 6727, -1000, 24151, 553, 1734,
	362, -1000, 1260, -1000, -1000, 1260, -1000, 1260, -1000, -1000,
	-1000, 1567, -1000, 1002, -1000, -1000, -1000, -1000, -1000, 1553,
	-349, 19823, 1920, -1000, 1744, -1000, 1743, 1741, 1236, -1000,
	-1000, 1387, 709, 709, -12, -1000, -1000, 1563, -1000, 709,
	-1000, 809, -1000, -1000, -1000, -1000, 709, 1390, -1000, 1384,
	1488, -1000, 1382, 118, 34445, -1000, -1000, 1830, -1000, -1000,
	-1000, 1790, 837, 837, 837, 1609, -1000, -1000, -1000, -1000,
	1385, 1487, -1000, 4534, 33904, 33904, 33904, -1000, -242, 168,
	-1000, 29035, 132, 158, 409, 1274, 34445, 29035, -1000, -1000,
	-1000, -1000, -1000, 1828, -1000, 3273, 1392, -1000, -1000, -12,
	34445, -1000, 29035, 772, 30117, 29035, 112, 170, -1000, 29035,
	29035, 1896, 29035, 1485, 1234, 1630, 257, 4782, 1260, 664,
	-1000, -1000, 375, -1000, 4325, 1740, 1273, 37708, 37495, 33904,
	1736, 1735, 1272, 34445, 33904, -1000, -1000, 37201, 1271, 17659,
	-1000, 33904, -1000, -1000, 33904, 659, -1000, 33904, -1000, -1000,
	-1000, -1000, 1018, 14413, -1000, -1000, 1321, -1000, 19823, 3273,
	-169, -1000, -1000, -1000, -1000, 642, -1000, -1000, -169, -1000,
	-1000, 1265, -1000, -1000, -1000, -1000, -1000, -1000, -169, -169,
	-1000, -1000, -1000, -1000, -1000, 2717, 1478, -169, -1000, -1000,
	-1000, -1000, 1321, 1563, 1563, -1000, 1563, 1565, -1000, 1563,
	15, 1563, 11, 1321, 1321, 2656, 2591, 2011, 948, 1397,
	19823, 19823, 19823, 1553, -155, -1000, 1205, 17659, -1000, 1813,
	1426, 1475, -1000, -1000, 14954, 1321, 1710, 1380, -1000, 21987,
	1373, -1000, 1875, 11135, 17659, 17659, -1000, -1000, 17659, 1564,
	-1000, 17659, -1000, -1000, -1000, -1000, 33904, 292, -1000, 17659,
	1373, 892, -1000, 33904, 33904, 33904, -1000, 1864, 1205, -1000,
	-1000, -1000, -1000, 6176, -1000, 1370, -1000, 1563, 1563, 1732,
	-1000, 719, -1000, -1000, -1000, -1000, 33904, -1000, 19823, 1826,
	3273, -147, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 709,
	-1000, -1000, -1000, -1000, -1000, -12, 1233, -12, 1121, -1000,
	1116, -1000, -1000, -300, 1559, 226, -1000, 837, 808, 807,
	1232, 34445, 146, 27412, -1000, 4534, 4534, 4534, 114, 109,
	-1000, 969, -1000, -1000, -1000, 1224, 1217, 1216, 1392, 171,
	938, 157, -1000, 1822, -1000, -1000, 940, -74, -1000, 170,
	-1000, -1000, -1000, 170, -1000, -1000, 172, 1485, 1485, 29035,
	1485, -1000, -1000, -1000, 37201, 348, 4534, 4534, 1585, 719,
	1726, 362, -1000, -1000, -1000, -1000, -1000, -1000, 1264, -1000,
	606, -1000, 463, 348, 37201, 1205, 753, 977, 10584, -1000,
	1895, -1000, -1000, -1000, 3273, -1000, 7829, -1000, 810, -1000,
	-1000, -1000, 19823, 19823, -1000, -1000, -1000, 295, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19823, 19823, 19823, 19823,
	-1000, 1397, 1397, 1397, 19823, 1321, 1209, 1205, 1725, -1000,
	1553, -1000, -1000, 1553, 208, -1000, 33904, 1864, -1000, 1205,
	1205, 1205, 33904, 1205, 1358, -1000, 1553, 20905, -1000, 23069,
	1344, 1344, 1344, -1000, 574, 24151, 1811, 1811, -1000, 1260,
	1342, 1397, 1553, -1000, 1553, 1553, -1000, 709, -1000, 709,
	1359, 1351, -1000, 24151, -1000, -1000, 806, -1000, -1000, -1000,
	-1000, -1000, 1857, -1000, 146, -1000, 1208, 251, 262, -1000,
	246, 244, 241, 238, 225, -1000, -1000, -1000, -1000, 374,
	114, -1000, -75, 1112, 849, 1782, 109, -1000, 1109, 1101,
	1092, 1061, 176, -1000, -1000, -1000, -1000, 222, 158, -1000,
	376, 1204, -1000, 1765, 1760, 1825, 1825, 104, 1485, 1433,
	1349, -1000, -1000, 1263, -1000, -1000, 1558, 1260, 1557, -1000,
	1258, -1000, -1000, 33904, -1000, 348, 1806, 1804, 1553, -1000,
	1886, 29576, 14413, -1000, -1000, 1875, 1872, 1397, 1397, -1000,
	-1000, 1397, 1397, 1397, 1397, -1000, -1000, -1000, 141, -1000,
	-1000, 1919, -1000, 1475, 1553, -1000, 226, -1000, -1000, 1340,
	-1000, 33904, -1000, -1000, 731, -1000, -1000, -1000, 574, -1000,
	1256, 837, 1194, -1000, -1000, -1000, -1000, 353, -352, 19823,
	-1000, -1000, -1000, -1000, 1338, -1000, 226, -1000, -1000, 305,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1769, 1768, 269,
	-1000, 1192, 1190, -1000, 405, 1118, 700, -185, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 372,
	1254, -1000, 155, -1000, -1000, 433, 1749, 1753, 1871, -1000,
	29035, -1000, -1000, 29576, -1000, -1000, 167, 167, 24151, 1585,
	24151, -1000, -1000, -1000, 19823, -1000, 804, 1882, 1481, -1000,
	817, 17659, -1000, -1000, -1000, -1000, -1000, -1000, 1321, 217,
	-255, 11135, 1475, 1321, -1000, -1000, -1000, -1000, -1000, 1041,
	-1000, 34445, -1000, -1000, -1000, 1397, 574, -1000, 281, 38639,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1036, -1000,
	-1000, 1078, 397, 153, -1000, 1824, -1000, 1556, 1029, 1760,
	1870, 1758, 1755, -1000, 1189, -243, 1463, 1335, 1555, 1330,
	3273, 1320, -1000, 33904, 1877, 1868, -1000, 1321, 223, 223,
	1474, -1000, 1679, -239, -260, 1466, -1000, -1000, 1554, -352,
	-1000, 574, -1000, 308, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 17659, 17659, 5625, 38639, 119,
	-1000, 110, -1000, -1000, -1000, 1188, -1000, 1763, -1000, 1187,
	-1000, 1867, 1866, -1000, 169, 1882, 574, 24151, 574, -1000,
	804, 1709, -180, 17659, 17659, -1000, -1000, 197, -1000, 796,
	276, 794, -1000, 1299, -1000, -1000, 1672, -1000, 33904, -1000,
	-1000, 1227, 1207, -1000, 1165, 1082, 213, 202, 5096, -1000,
	-1000, -1000, -1000, -358, -1000, -1000, -1000, -1000, -1000, -1000,
	1169, 1148, 26329, 1877, -1000, 1317, -1000, -1000, 333, -1000,
	33904, -1000, 1205, 1464, -1000, 1205, 933, -1000, -1000, -1000,
	-1000, -1000, 33904, -246, 1315, -1000, -1000, -1000, 895, -1000,
	17659, 38639, 1856, 1850, 1849, 1796, 10584, 38519, -1000, -1000,
	-1000, -1000, 101, 1392, -180, 574, 328, 1444, -1000, 1823,
	17659, 197, -1000, -256, 1608, 291, 907, 38639, -1000, 1049,
	-359, 434, 226, 438, 19823, -1000, -1000, -1000, 29035, -1000,
	-1000, 1553, 33904, 1553, -1000, -1000, -261, 1607, 1606, 1893,
	-1000, -1000, -1000, -1000, -1000, -1000, 38639, -1000, -360, 38639,
	3410, -1000, -1000, -1000, 38497, -1000, -1000, -1000, -1000, 200,
	-1000, -1000, 3273, 1392, 18741, -1000, -1000, -1000, -1000, 1918,
	-1000, 1913, 560, 560, -1000, -363, 38286, -364, 447, 38639,
	872, -1000, 17659, -1000, 438, -1000, 1397, 1321, -1000, -1000,
	-1000, 367, 1103, -1000, 38264, 901, 38639, -1000, -365, 442,
	38639, -1000, 1037, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 38053, -1000, -367, 38639, 441, 38031, -369, -1000, 436,
	38639, -1000,
}

var yyPgo = [...]int{
	0, 2333, 2332, 26, 2330, 253, 2329, 2328, 41, 2323,
	24, 20, 14, 36, 2322, 2061, 2058, 2056, 2054, 2052,
	2321, 7, 2318, 2317, 2050, 2315, 2313, 2040, 2035, 2025,
	2023, 2308, 2292, 2291, 2021, 2019, 2011, 28, 2288, 19,
	2287, 5, 159, 175, 2285, 2, 2284, 2283, 17, 2282,
	2280, 2002, 2279, 2278, 2277, 108, 2275, 1998, 1996, 2274,
	1990, 1980, 2273, 2262, 1963, 1961, 1953, 2258, 183, 2257,
	2256, 2255, 173, 110, 167, 2254, 2252, 2251, 126, 91,
	2091, 129, 52, 118, 244, 2250, 11, 49, 257, 2249,
	2248, 157, 2247, 151, 2246, 172, 2243, 155, 77, 109,
	2240, 2239, 179, 2234, 2233, 2232, 145, 2229, 2228, 182,
	2930, 2227, 2226, 162, 2225, 70, 180, 78, 40, 2224,
	2219, 2218, 2217, 2216, 30, 1168, 2215, 111, 156, 2214,
	2213, 95, 2212, 2211, 186, 2210, 2209, 2201, 146, 50,
	2200, 2199, 60, 2198, 67, 84, 2197, 47, 2196, 152,
	2193, 2192, 39, 29, 2191, 101, 2190, 54, 2189, 153,
	160, 104, 2188, 16, 12, 9, 2187, 35, 13, 22,
	51, 23, 66, 82, 142, 117, 2184, 114, 45, 125,
	113, 2183, 105, 115, 48, 2182, 166, 2181, 97, 168,
	143, 149, 165, 2180, 2178, 2175, 1084, 2174, 132, 94,
	2173, 92, 1038, 177, 138, 2171, 102, 2170, 2168, 2167,
	2166, 2165, 87, 121, 2164, 2163, 185, 184, 188, 55,
	32, 1342, 1561, 44, 174, 2162, 46, 2161, 2158, 2156,
	3104, 124, 88, 120, 181, 2153, 116, 38, 57, 2152,
	2151, 2150, 2149, 2148, 2145, 1776, 2144, 2128, 2127, 2124,
	245, 217, 2120, 144, 141, 137, 2119, 163, 34, 2116,
	2114, 135, 103, 2112, 2111, 2110, 2109, 136, 85, 164,
	2105, 133, 119, 130, 2104, 79, 2103, 2102, 56, 63,
	2101, 2098, 2097, 106, 96, 2096, 69, 33, 43, 73,
	18, 2095, 2093, 68, 90, 2090, 31, 2086, 8, 3,
	10, 2085, 2084, 2083, 2082, 2081, 2079, 2078, 93, 2077,
	2076, 65, 2075, 2074, 2073, 42, 2065, 2063, 2048, 154,
	134, 53, 170, 86, 6, 2046, 2038, 4, 2029, 131,
	2027, 62, 2014, 59, 2009, 2007, 61, 2005, 1985, 64,
	1982, 1973, 178, 1668, 448, 1968, 176, 161, 58, 98,
	1959, 1949, 0, 1041, 194, 171, 1943, 1940,
}

var yyR1 = [...]int{
	0, 351, 351, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 67, 3, 3, 8,
	9, 4, 4, 4, 5, 89, 89, 182, 182, 182,
	182, 181, 181, 90, 90, 88, 88, 95, 6, 6,
	7, 7, 10, 10, 71, 71, 11, 12, 12, 12,
	12, 354, 354, 104, 104, 102, 102, 103, 103, 179,
	179, 13, 13, 13, 186, 186, 191, 191, 191, 194,
	194, 194, 194, 169, 170, 171, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 325, 325,
	334, 334, 334, 335, 335, 333, 333, 333, 333, 333,
	337, 337, 338, 338, 336, 336, 336, 336, 340, 340,
	341, 341, 339, 339, 339, 339, 339, 339, 339, 339,
	339, 339, 339, 339, 339, 339, 328, 328, 328, 34,
	34, 34, 34, 35, 35, 35, 35, 35, 35, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 342, 342, 342,
	343, 343, 344, 344, 345, 345, 346, 346, 346, 346,
	347, 347, 347, 347, 347, 348, 348, 348, 348, 348,
	348, 348, 349, 349, 350, 350, 2, 306, 306, 307,
	307, 308, 308, 308, 308, 309, 309, 310, 310, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 25,
	218, 218, 215, 215, 215, 216, 216, 217, 217, 217,
	327, 327, 327, 321, 321, 321, 323, 323, 322, 322,
	322, 324, 324, 329, 329, 329, 329, 329, 331, 331,
	331, 331, 331, 331, 332, 332, 332, 330, 330, 49,
	49, 50, 50, 50, 158, 158, 158, 14, 14, 14,
	14, 14, 20, 22, 22, 38, 38, 39, 23, 23,
	23, 23, 40, 40, 41, 26, 26, 26, 26, 26,
	26, 47, 47, 47, 46, 46, 45, 45, 45, 45,
	45, 45, 24, 24, 24, 24, 48, 48, 43, 43,
	42, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 27, 27, 27, 27, 27, 27, 19,
	305, 305, 305, 37, 37, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 53, 280, 281, 281, 281,
	281, 281, 281, 281, 281, 268, 268, 269, 258, 258,
	258, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 237, 237, 237, 237, 241, 241, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 240, 240, 240,
	240, 240, 240, 240, 240, 242, 242, 242, 242, 242,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 244, 244, 244, 244, 244,
	244, 244, 244, 267, 267, 245, 245, 261, 261, 262,
	262, 262, 259, 259, 259, 260, 260, 248, 249, 263,
	250, 250, 250, 251, 251, 251, 252, 252, 257, 257,
	256, 256, 256, 256, 256, 256, 253, 253, 253, 253,
	254, 254, 255, 266, 266, 266, 266, 266, 246, 36,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 292, 292, 208, 208, 209, 209, 270, 270,
	290, 290, 289, 289, 288, 288, 288, 279, 279, 285,
	285, 285, 285, 285, 285, 285, 285, 274, 274, 274,
	273, 273, 275, 275, 278, 278, 287, 287, 286, 286,
	271, 271, 271, 293, 293, 293, 293, 293, 272, 272,
	272, 272, 294, 276, 276, 277, 277, 277, 299, 300,
	298, 298, 298, 298, 298, 121, 121, 121, 282, 282,
	282, 283, 283, 283, 284, 284, 284, 303, 303, 302,
	302, 51, 52, 56, 56, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 157, 157, 157, 213, 213, 297, 295, 295, 296,
	296, 16, 16, 54, 54, 326, 326, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 301, 301, 301, 18,
	18, 57, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 85, 200, 200,
	199, 199, 198, 198, 198, 201, 201, 201, 201, 235,
	235, 235, 59, 59, 63, 63, 66, 66, 66, 64,
	65, 28, 29, 29, 29, 29, 30, 214, 214, 61,
	61, 62, 62, 62, 62, 77, 77, 356, 356, 60,
	357, 68, 69, 69, 70, 70, 70, 204, 204, 74,
	74, 74, 72, 72, 72, 73, 73, 79, 79, 83,
	83, 83, 83, 82, 82, 82, 82, 160, 160, 165,
	227, 227, 141, 141, 161, 161, 166, 166, 166, 167,
	167, 168, 168, 168, 168, 168, 163, 163, 162, 162,
	164, 129, 129, 225, 225, 225, 224, 224, 224, 224,
	87, 87, 91, 91, 93, 93, 93, 93, 93, 96,
	143, 143, 114, 114, 115, 115, 115, 115, 115, 127,
	127, 178, 178, 177, 177, 180, 180, 92, 94, 94,
	94, 94, 99, 99, 100, 100, 101, 101, 212, 212,
	232, 232, 232, 105, 105, 105, 107, 106, 106, 106,
	106, 108, 108, 109, 109, 111, 112, 112, 110, 110,
	116, 116, 113, 117, 117, 117, 117, 118, 118, 84,
	84, 84, 84, 84, 84, 84, 84, 197, 197, 120,
	120, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 137, 137, 137, 137, 137, 137, 122, 122, 122,
	122, 122, 122, 122, 78, 78, 138, 138, 138, 98,
	97, 97, 81, 81, 80, 80, 139, 139, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 132, 132, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	355, 355, 134, 133, 133, 133, 133, 133, 133, 75,
	75, 75, 75, 75, 233, 233, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 150, 150, 76, 76, 148, 148, 149, 151, 151,
	147, 147, 147, 124, 124, 124, 124, 124, 124, 124,
	124, 126, 126, 126, 152, 152, 140, 140, 86, 153,
	153, 154, 155, 155, 156, 156, 159, 172, 172, 172,
	173, 173, 173, 173, 128, 128, 174, 174, 174, 123,
	123, 123, 123, 123, 123, 123, 176, 176, 175, 175,
	175, 175, 183, 183, 142, 142, 145, 145, 144, 146,
	184, 184, 188, 188, 185, 185, 189, 189, 189, 189,
	192, 192, 193, 193, 193, 190, 190, 190, 187, 187,
	187, 229, 229, 229, 195, 195, 205, 205, 202, 202,
	203, 203, 196, 196, 247, 247, 211, 211, 210, 210,
	210, 206, 206, 206, 207, 207, 226, 226, 222, 222,
	228, 228, 223, 223, 230, 230, 231, 231, 304, 304,
	264, 264, 314, 314, 265, 265, 315, 315, 317, 317,
	312, 312, 313, 313, 316, 316, 31, 318, 318, 319,
	319, 320, 320, 320, 320, 32, 33, 33, 33, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 352, 353,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 14, 3, 13, 0, 2, 0, 2, 3,
	3, 1, 3, 2, 3, 1, 3, 4, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 0, 2, 3, 3, 11,
	9, 11, 5, 5, 16, 12, 9, 4, 0, 3,
	0, 2, 2, 1, 3, 1, 1, 2, 2, 2,
	0, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 2, 3, 3, 5, 3, 3, 4, 5, 4,
	4, 2, 2, 2, 2, 2, 0, 2, 2, 9,
	9, 5, 7, 7, 7, 7, 8, 4, 6, 2,
	3, 2, 3, 3, 3, 4, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 3, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 0, 1, 1,
	3, 2, 3, 3, 3, 0, 1, 1, 2, 2,
	2, 2, 1, 2, 2, 3, 3, 3, 3, 4,
	2, 3, 3, 3, 3, 0, 3, 0, 3, 3,
	1, 1, 1, 3, 2, 1, 1, 3, 3, 2,
	1, 1, 3, 1, 2, 5, 4, 6, 4, 3,
	3, 6, 5, 5, 4, 3, 5, 1, 3, 1,
	1, 1, 1, 1, 0, 2, 2, 1, 1, 1,
	1, 1, 4, 5, 8, 1, 2, 5, 7, 10,
	8, 11, 1, 2, 5, 5, 5, 5, 6, 3,
	5, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	1, 1, 2, 4, 2, 4, 2, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 3, 2, 4, 3,
	0, 2, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 5, 4, 1, 1, 2,
	3, 4, 3, 3, 3, 3, 3, 3, 0, 1,
	1, 0, 2, 3, 2, 2, 2, 2, 2, 6,
	8, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 2, 3, 1,
	0, 3, 3, 0, 2, 2, 0, 1, 0, 1,
	1, 1, 1, 2, 2, 2, 5, 5, 4, 4,
	4, 4, 4, 2, 1, 2, 1, 2, 2, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 0, 3, 1, 1, 0, 1, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 2,
	4, 3, 3, 5, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 1, 10, 11, 11, 12, 12, 3, 3,
	2, 1, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 1,
	3, 1, 2, 3, 1, 1, 1, 0, 2, 0,
	2, 1, 5, 1, 3, 5, 4, 3, 5, 3,
	8, 10, 3, 3, 3, 3, 3, 5, 4, 5,
	1, 2, 2, 4, 3, 6, 5, 3, 8, 2,
	2, 0, 1, 2, 0, 1, 7, 1, 3, 8,
	8, 3, 3, 3, 5, 3, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 0, 1, 1, 3,
	2, 3, 3, 4, 3, 5, 5, 5, 4, 4,
	4, 2, 2, 2, 6, 2, 4, 4, 4, 5,
	8, 6, 3, 5, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 3, 2, 0,
	1, 1, 2, 1, 1, 1, 2, 4, 4, 1,
	1, 2, 3, 4, 4, 5, 3, 1, 1, 3,
	3, 1, 1, 1, 1, 0, 3, 1, 1, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 0,
	1, 1, 0, 1, 1, 0, 1, 3, 5, 1,
	1, 3, 5, 1, 2, 3, 5, 2, 2, 6,
	0, 1, 0, 3, 0, 1, 0, 2, 2, 4,
	1, 2, 2, 2, 2, 2, 0, 2, 1, 3,
	3, 1, 3, 0, 1, 2, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 4, 1, 3, 1, 2,
	2, 4, 2, 6, 1, 4, 6, 3, 2, 0,
	3, 0, 3, 1, 3, 1, 3, 4, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 3, 6, 6, 6, 8,
	8, 8, 8, 4, 6, 7, 7, 7, 9, 4,
	7, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -351, -1, -3, -9, -10, -11, -12, -13, -15,
	-51, -16, -17, -18, -57, -58, -59, -63, -64, -65,
	-61, -60, -24, -27, -19, -67, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -4, 6, 7, -71, 9,
	10, 29, -53, 180, -52, 183, 182, 218, 184, 211,
	64, 341, -66, 344, 345, -356, -214, 269, 270, 20,
	37, 346, 348, 30, 31, 232, 286, 288, 313, -5,
	-90, -6, 8, 440, 181, 342, 213, 212, 26, 489,
	-352, 68, 556, -155, 15, -68, -357, -68, -68, -68,
	-68, -68, -280, -212, 108, 68, 23, -207, -218, 88,
	431, 188, -216, 282, 284, -205, -206, -215, 242, 252,
	44, 199, 198, 253, 189, 282, 189, 190, 192, 431,
	188, 225, 224, 282, 284, 189, -110, -230, 72, -220,
	202, 500, 307, 486, 253, 551, 294, 239, 341, 355,
	357, 349, 384, 372, 487, 501, 203, 264, 187, 340,
	370, 373, 417, 201, 297, 257, 320, 502, 406, 412,
	267, 344, 426, 503, 204, 261, 263, 262, 247, 456,
	268, 36, 214, 368, 303, 361, 272, 242, 504, 494,
	236, 359, 35, 27, 237, 235, 429, 505, 331, 414,
	389, 332, 306, 506, 491, 301, 413, 364, 360, 313,
	205, 199, 333, 507, 390, 394, 508, 418, 287, 334,
	509, 510, 511, 191, 293, 353, 354, 512, 243, 420,
	298, 388, 32, 200, 488, 48, 222, 421, 38, 392,
	37, 398, 513, 330, 387, 382, 399, 514, 515, 516,
	517, 311, 309, 310, 312, 386, 352, 381, 254, 259,
	53, 186, 396, 395, 397, 260, 416, 377, 375, 518,
	519, 302, 206, 520, 521, 362, 18, 522, 523, 424,
	217, 304, 305, 42, 524, 525, 526, 112, 527, 528,
	529, 415, 391, 393, 241, 116, 365, 196, 530, 308,
	411, 317, 490, 291, 113, 422, 358, 532, 336, 348,
	221, 216, 425, 326, 533, 270, 534, 535, 536, 208,
	537, 285, 284, 345, 318, 114, 346, 408, 265, 538,
	539, 540, 541, 251, 234, 428, 419, 52, 269, 403,
	542, 321, 337, 351, 198, 271, 543, 295, 342, 43,
	7, 258, 299, 409, 319, 266, 252, 255, 379, 223,
	544, 545, 366, 367, 385, 350, 380, 343, 226, 218,
	111, 427, 404, 492, 282, 338, 374, 371, 229, 378,
	546, 547, 256, 230, 347, 423, 296, 369, 405, 189,
	133, 373, 417, 180, 407, 408, 414, -274, 415, 224,
	227, -235, 189, -200, 406, 287, 308, 461, 230, 231,
	190, 191, 32, 419, 418, 410, -230, 193, 347, -77,
	184, 219, -110, -48, 72, 271, -48, 29, 72, 72,
	36, 72, 346, 409, 409, 75, 490, 233, 21, -343,
	-324, 317, -342, -322, 181, 180, 10, 182, 322, 323,
	324, 190, 8, 30, 531, 207, 325, 326, 6, 211,
	327, 328, 225, 9, 329, -327, 74, 72, -220, 21,
	-343, -324, 317, -209, -208, 339, 398, 6, -70, 5,
	-196, 194, 343, -88, 499, -95, -232, -230, -221, 74,
	300, 210, 290, 401, 457, 458, 459, 460, 233, 461,
	474, 475, 99, 231, 322, 323, 314, 324, 209, 476,
	117, 240, 219, 279, 410, 278, 283, 462, 463, 477,
	478, 479, 464, 465, 289, 480, 481, 554, 292, 555,
	315, 483, 531, 484, 325, 482, 327, 228, 468, 467,
	466, 469, 328, 451, 452, 470, 51, 472, 471, 473,
	192, 81, -8, -3, -173, 17, 16, -74, 54, 55,
	-69, -82, 124, -84, -230, -119, 91, -125, 28, 72,
	-220, 24, -124, -221, -120, -147, -146, -98, 133, -234,
	122, 123, 130, 92, 176, -132, -130, -131, -133, -135,
	-136, 74, 73, 82, 75, 76, 77, 78, 83, 457,
	458, 459, 460, 461, 474, 475, 209, 476, 219, 462,
	463, 477, 478, 479, 464, 465, 480, 481, 483, 484,
	482, 468, 467, 466, 469, 451, 452, 470, 472, 471,
	473, 84, 85, -222, -144, -352, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 58, 59,
	188, 441, 442, 443, 444, 445, 485, 449, 94, 47,
	430, 439, 438, 437, 435, 436, 432, 434, 433, 195,
	431, 128, 440, -196, -196, 11, -102, -103, -110, -113,
	-230, -185, 343, -192, -189, 418, 419, -190, -193, -187,
	-147, 398, 528, 529, 417, 373, 416, -222, -230, -2,
	-5, 6, -110, -281, -269, -272, -223, 204, -294, -222,
	-219, 201, 72, -220, 300, 185, 210, 181, 90, 493,
	23, 25, 290, 401, 457, 93, 133, 458, 459, 460,
	16, 20, 94, 132, 81, 441, 233, 461, 180, 62,
	432, 434, 430, 431, 407, 28, 10, 26, 212, 246,
	22, 126, 182, 97, 98, 99, 231, 215, 322, 323,
	24, 213, 314, 85, 324, 209, 117, 240, 19, 65,
	219, 279, 11, 410, 227, 550, 286, 13, 455, 115,
	278, 14, 283, 195, 194, 110, 244, 190, 60, 8,
	176, 87, 107, 56, 462, 463, 496, 45, 232, 497,
	58, 108, 17, 435, 436, 30, 485, 464, 220, 498,
	465, 128, 249, 63, 50, 289, 91, 83, 554, 33,
	86, 66, 335, 88, 15, 245, 61, 453, 292, 555,
	315, 224, 531, 248, 499, 207, 109, 325, 183, 440,
	316, 288, 59, 188, 6, 450, 29, 211, 327, 250,
	228, 468, 467, 466, 469, 552, 57, 443, 444, 470,
	328, 548, 189, 96, 451, 452, 193, 225, 84, 5,
	44, 31, 9, 329, 64, 67, 437, 438, 439, 47,
	51, 472, 471, 473, 192, 553, 95, 12, 454, 489,
	89, 190, 192, 440, -203, 195, -203, 225, 224, -217,
	250, -203, -203, 189, -216, 100, 100, -54, -110, -326,
	-321, -327, -202, 195, -222, -202, -202, -202, -202, -202,
	-202, -202, -110, 177, -110, 72, 29, -201, 108, 12,
	431, 188, 189, 224, 225, 192, -276, 11, 110, 228,
	228, 228, 229, 228, -199, 409, 411, 226, 412, 413,
	12, -85, 108, 19, -352, -173, -173, 72, 346, 193,
	-62, -3, -12, -10, -11, -8, 100, -127, 23, 29,
	29, 74, 51, 29, -43, -42, -44, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 29,
	-305, 68, -264, 398, 72, -318, -319, -110, 75, 75,
	66, 66, 69, 193, 69, 66, -344, 318, 68, -344,
	284, 318, 319, 252, 282, 192, -344, -344, 284, -344,
	-344, -344, -344, -344, 409, -344, -344, -344, 320, 321,
	-344, 407, 192, -344, -344, -344, -344, -344, 71, 66,
	69, 308, 66, 11, 66, -291, 133, 331, 332, 333,
	334, 330, 308, 335, 336, 337, 228, 338, -68, -7,
	-5, -352, 21, 22, 189, 422, 69, -88, -176, -352,
	-353, 70, -174, 19, 30, -128, 75, 78, -156, -159,
	-84, -230, 50, -72, 21, 22, 80, 11, -225, 90,
	88, 89, 107, -224, 23, 72, -220, -221, 74, 177,
	-84, -122, 110, 91, 108, 109, 93, 119, 118, 129,
	122, 123, 124, 125, 126, 127, 128, 120, 121, 132,
	100, 101, 102, 103, 104, 105, 106, -197, -352, -98,
	-352, 178, 179, -125, -125, -125, -125, -125, -125, -125,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -352, -352, -352,
	-352, -352, -352, -8, -139, -84, -352, -352, -352, -352,
	-352, -352, -352, -352, -352, -352, -352, -150, -84, -352,
	-355, -134, -352, -355, -134, -355, -134, -355, -352, -355,
	-134, -355, -134, -355, -355, -134, -355, -352, -352, -352,
	-352, -112, 87, -110, -87, -91, -93, -94, -114, -97,
	-352, -92, -110, -98, 72, -110, -102, -354, 69, 11,
	67, -354, 69, 177, 69, -186, -191, 420, 422, 343,
	-190, -190, -229, -222, 74, 28, 100, 29, 177, -155,
	-68, 70, 69, -272, 204, 201, -237, -241, -243, -242,
	-244, -239, -240, 370, 373, 377, 375, 371, 376, 133,
	374, 379, 380, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 29, 214, 366, 367, 368, 369, 390, 391,
	392, 393, 394, 395, 396, 397, 349, 372, 487, 350,
	351, 352, 353, 354, 355, 357, 358, 359, 360, 361,
	362, 363, 364, 72, -221, -294, 68, -222, -110, -218,
	-216, 72, 91, 72, -109, -222, -230, -116, -222, -230,
	251, -330, -329, -321, -324, -203, -217, -321, 256, 254,
	255, 69, 193, 69, 193, 71, -102, 24, 66, -104,
	-110, 72, 72, -109, -116, -323, -321, -324, -231, -230,
	-219, -201, 74, -234, -84, -203, -203, -110, -110, -110,
	-110, -110, -201, -201, -201, -201, -198, 11, 110, 11,
	-198, -198, -84, -125, -321, 433, 124, 72, 72, 346,
	72, 33, -43, -43, 74, -43, 69, 100, -43, 70,
	-139, -304, 549, 69, -320, 23, 422, 423, 399, -346,
	189, 227, 224, -346, -342, 326, -323, -322, -321, -344,
	-345, -222, -344, -344, -344, 409, -344, -344, -344, -344,
	-344, -344, -344, -344, -327, -346, 286, 69, -346, -323,
	-321, 330, 330, 330, 330, 330, 330, -74, -8, -110,
	423, 424, -95, 23, -175, -223, -182, 87, 9, 110,
	69, 18, 69, -172, 25, 26, 177, -126, 51, 75,
	78, -204, 49, -110, -84, -84, -84, -137, 83, 91,
	84, 85, -224, 124, -231, -223, -219, -125, -138, -144,
	-98, 79, 110, 108, 109, 93, -125, -125, -125, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -233, 72, 74, 72, -124, -124, -222, -72, -80,
	-83, 124, -84, -230, -80, -80, -72, -353, -353, -80,
	-83, -80, -80, -80, -80, -83, -80, -72, -72, -80,
	-353, -353, -353, -353, -80, -80, -80, -80, -222, -222,
	-72, -80, -80, -80, -72, -353, 69, -353, -8, -80,
	-80, -353, -84, -84, -147, 74, -80, -147, 74, -80,
	-125, 446, 447, 448, -80, -72, -148, -149, 95, -147,
	-353, -125, -80, -81, -80, -80, -80, -179, 112, -110,
	29, 69, -105, -107, -106, -108, 56, 60, 62, 57,
	58, 59, 63, -212, -87, -96, 47, -352, -115, 112,
	-117, 23, -232, 64, 194, 65, -352, -179, 67, -87,
	-110, -87, -113, -230, 124, -189, -192, 69, 421, 423,
	424, -186, -251, 132, 66, 86, -84, -223, -231, -173,
	-74, -282, -283, -284, -223, 74, 75, -269, -270, -271,
	-272, -285, 204, -293, 196, 198, 199, 44, -273, 205,
	190, 45, -238, -259, 403, 404, -245, 68, -245, -245,
	378, 370, 373, 371, -245, -245, -245, -245, -245, -250,
	373, -250, -250, -250, -250, 371, 68, 68, -245, -245,
	-245, -261, 68, -261, 365, -262, 68, -262, -262, -262,
	-262, -294, -294, -84, -226, 67, 23, 192, -257, -256,
	-253, -254, -255, -252, 28, 24, -257, -49, 239, 210,
	177, 68, 177, 242, 243, -325, 69, 28, -331, 283,
	-110, -110, -110, -321, -321, -327, -301, 208, 203, -110,
	69, 69, 74, 72, 72, -127, -277, 11, 110, -201,
	-230, -230, -110, -127, -201, -78, 215, 67, -355, -353,
	72, -125, -42, -124, 70, -111, 87, 74, -319, -232,
	398, 423, -347, 124, -222, -347, -350, 489, 193, 70,
	69, -344, -347, 304, 286, -347, 11, -292, 19, -72,
	-353, -56, -55, 185, 182, 183, 186, 187, -297, 401,
	181, 236, 235, 221, -97, -352, -353, 69, 177, -181,
	34, 35, -222, 52, -128, -128, -159, -195, 19, 11,
	47, 47, -73, 57, 83, 84, 85, 177, -352, -138,
	-125, -125, -125, -78, 90, -353, -80, 69, -353, 177,
	-353, -353, -80, -160, 453, -160, -353, -353, -353, -353,
	-353, -353, -353, -353, -80, -80, -353, -160, -160, -160,
	-160, -353, -353, -353, -353, 69, 69, -80, -353, -353,
	-353, -81, -84, -353, -353, -353, 69, 67, 23, 11,
	11, -353, 11, 11, -353, -353, 11, -125, -125, -125,
	-353, -80, -151, -149, 97, -84, -353, -353, -353, -353,
	-353, -353, -123, 29, 47, -352, -8, -352, -184, -188,
	-147, -219, -91, -93, -93, -91, -93, 56, 56, 56,
	61, 56, 61, 56, -106, -232, -353, -353, -143, 238,
	-352, 33, -232, -117, 190, 190, 190, -81, -118, 12,
	-87, -118, -118, 177, -191, -194, 425, 422, 428, 72,
	74, 177, -174, 69, -284, 100, -272, 68, 72, -278,
	-221, 45, -273, 190, 45, -275, -273, -273, -278, 72,
	-278, 45, 83, 91, -248, -249, -263, -266, -246, 23,
	550, 28, 66, 401, 196, 45, 44, 199, 81, -260,
	405, 75, -250, -250, -245, -245, -245, 378, -245, -250,
	-251, 29, -251, -251, -251, -251, -250, -267, 74, -267,
	75, -261, 75, 70, 66, -222, -169, -110, -254, -253,
	-255, 373, 417, 132, 429, -50, 8, 9, 10, -222,
	-306, -307, -308, -222, 110, 244, 245, -222, -334, 316,
	-329, 284, 293, 90, 16, 489, 193, 193, -110, -321,
	-118, 72, 72, -198, -201, -125, -324, 230, 231, -179,
	189, -320, 193, 177, 177, 193, 307, -323, -222, 11,
	11, 304, 11, -323, 340, -204, 69, -213, -273, -303,
	-271, -272, -302, 197, 204, 205, -213, 204, 201, -273,
	205, 196, 197, -210, -273, 193, 23, -213, -213, -279,
	100, -213, 32, 32, 112, -223, -223, 69, 74, 74,
	53, -110, -79, -170, 124, -223, -81, -78, 90, -125,
	-353, -83, -161, -160, 124, -231, -161, -161, -353, -222,
	-165, -352, -160, -161, -161, -160, -160, -160, -353, -353,
	-160, -161, -161, -161, -161, -125, -125, -353, -161, -161,
	-161, -353, -236, 133, 370, 214, 368, 361, 388, 375,
	403, 366, 404, -233, -236, -125, -125, -125, -125, -125,
	11, 11, 11, 486, -155, 99, -84, 96, -183, 66,
	-184, -142, -145, -144, -352, -8, -353, -175, 6, 489,
	-180, -222, -118, 69, 100, 100, -100, -99, 66, 67,
	-101, 66, -99, 56, 56, -178, 68, 69, -144, -352,
	-180, -125, -117, -352, -352, -352, -353, -155, -84, -118,
	422, 426, 427, -283, -284, -287, -286, -222, -221, 196,
	-293, 44, -293, -278, -278, -278, 68, 83, -352, 551,
	-125, 9, 45, 45, 45, 74, 70, -251, -251, -250,
	-245, -251, 72, 133, -251, 70, 69, 70, 69, 70,
	69, -121, 505, 91, -110, -171, 23, 29, -279, -279,
	-279, 66, 70, 69, -237, -222, -222, -222, -337, 489,
	289, -335, -333, 295, 296, 297, 298, 299, -324, 294,
	-331, 291, 74, 72, -110, -321, -127, -250, -110, -323,
	124, 124, -222, -323, 304, -349, 489, -323, -323, 11,
	-323, 74, -73, -55, 68, -268, 72, -221, -278, -206,
	196, 72, 72, 72, -221, 72, -221, -222, 45, 45,
	72, -110, -222, -268, 72, -84, -222, -222, 177, -222,
	-182, 69, -82, -353, -125, -161, 177, -161, -227, 72,
	-161, -161, 69, 69, -161, -353, -245, -245, -245, -262,
	-245, 354, -245, 354, -353, -353, 19, 19, 19, 19,
	-353, -125, -125, -125, -352, -76, 450, -84, 27, -183,
	69, -353, -353, 47, -353, -353, 69, -155, -188, -84,
	-84, -84, 68, -84, -177, -222, 238, -353, -117, -212,
	-177, -177, -177, -173, 70, 69, -245, -245, 45, -275,
	-177, -125, 23, -131, 451, 452, -251, -250, 74, -250,
	75, 75, 505, 68, -8, -169, -279, 72, 133, 72,
	133, 74, -110, -309, -310, -311, 81, 488, 91, 246,
	247, 206, 248, 249, 250, -308, -237, -237, -237, -340,
	-341, -339, 292, 314, 315, 300, -338, -336, 309, 310,
	311, 312, 90, 74, 74, 74, -332, 283, 90, 292,
	16, 23, -201, -312, -199, -349, -349, 286, -323, -79,
	-268, -157, 209, 210, -237, -237, -226, -275, 45, 72,
	-211, 193, 23, 193, -157, -268, 29, 182, 87, -223,
	-89, 11, -170, -170, 124, -141, 112, -125, -125, -250,
	72, -125, -125, -125, -125, -353, -353, -353, -125, -353,
	74, 45, -145, -142, 47, -8, -352, -222, -173, -177,
	70, 69, -144, -115, -232, -353, -353, -353, -289, -288,
	67, 200, 81, -286, -172, -172, -278, 70, -353, -352,
	-251, -251, 70, 70, -287, -169, -171, 72, 133, 19,
	-170, -311, 74, 250, 246, 250, 250, 250, 250, 251,
	-328, 81, 290, -339, 301, 510, 285, 316, 75, 75,
	111, 30, 31, -336, 75, 75, 75, 75, -333, 16,
	489, -331, 291, 74, 74, -313, 38, -315, 39, -348,
	23, -348, 304, 11, 70, 72, -238, -238, 68, -278,
	68, 72, -222, -157, 28, 28, -352, -118, -87, -82,
	-155, 16, -353, -353, -353, -353, -353, -353, -75, 110,
	489, 9, -142, -8, 70, -222, -117, -288, 72, -279,
	74, 207, -258, 553, 552, -125, 70, -8, 237, -171,
	36, 36, 242, 243, 74, 74, 28, 302, 176, 28,
	75, 176, 456, 291, 74, 72, 292, -247, 194, -316,
	43, -314, -265, 42, 16, -321, -87, -287, -226, -287,
	-125, -295, -296, 112, -152, 13, -170, -166, 114, 113,
	-139, -353, 487, 63, 490, -184, -353, 75, -110, -353,
	-290, -289, -169, 238, -21, -3, -10, -11, -12, -13,
	-15, -51, -16, -17, -22, -23, -18, -57, -58, -66,
	-64, -65, -61, -60, -26, -24, -27, -19, -28, -29,
	-30, -34, -35, -25, -36, 94, 195, 272, 341, 75,
	28, 75, 28, 305, 292, 23, -178, 75, -315, 16,
	-317, 40, 41, 74, 489, -118, 70, 68, 70, -353,
	69, -222, -153, 14, 16, -353, -167, 93, -168, 111,
	456, -129, 75, 176, -167, 53, 488, 491, 68, -258,
	-158, 240, 241, -169, -84, -84, 72, -47, -228, 275,
	276, 277, -223, -37, -21, 303, 303, 74, 38, 74,
	16, 16, 284, -152, -290, -287, -290, -296, 47, -163,
	454, -154, -84, -140, -86, -84, -168, 116, 117, 238,
	116, 117, -124, 53, -177, -169, 72, 72, -38, -39,
	95, 96, 273, 274, 278, -237, 69, 556, 74, 74,
	28, 289, 21, -324, -153, 70, 222, -162, -164, -222,
	69, 90, -222, 489, 70, -171, 99, 97, -39, -84,
	-37, 19, 19, 19, 28, -223, 99, -21, 306, -163,
	-290, 223, 69, 23, -86, -168, 490, -299, -300, 66,
	-14, -20, -13, -10, -11, -12, 341, 94, -37, 96,
	556, -48, 75, -8, -46, -45, 75, -48, 280, 91,
	281, 72, -125, -324, -352, -164, -165, 491, -300, 66,
	-299, 66, 10, 9, -169, -37, 556, -37, 99, 97,
	-40, -41, 98, -21, 69, 279, -125, 220, -298, 208,
	203, 206, 29, -298, 556, 99, 556, 195, -37, 99,
	97, -41, -84, -45, -353, -353, 202, 28, 83, 99,
	94, 556, 195, -37, 96, 99, 556, -37, 195, 99,
	556, 195,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 750, 750, 750, 750,
	750, 750, 848, -2, 611, 0, 0, 0, 0, -2,
	723, 724, 725, 729, 730, 745, 747, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 41,
	0, 0, 64, 65, 1202, 0, 748, 737, 738, 0,
	0, 1747, 2, 1140, 0, 759, 752, 0, 1202, 1202,
	0, 0, 96, 0, 0, 0, 849, 0, 0, 0,
	1200, 1200, 247, 1200, 1200, 0, 1215, 245, 0, 1197,
	1211, 1212, 1213, 0, 0, 0, 1198, 0, 1198, 1198,
	1198, 1198, 1198, 1198, 1198, 0, 670, 868, 1224, 1225,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 0,
	0, 0, 715, 0, 681, 682, 683, 0, 685, 0,
	0, 0, 0, 0, 695, 698, 702, 0, 1140, 1140,
	557, 558, 559, 720, 721, 709, 722, 0, 0, 0,
	0, 0, 829, 322, 324, 0, 344, 0, 347, 350,
	1230, 731, 0, 0, 1255, 1256, 0, 0, 0, 0,
	0, 1597, 190, 261, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 0, 192, 192, 192, 1609, 192, 0,
	192, 192, 192, 192, 192, 260, 250, 251, 252, 0,
	0, 0, 1597, 0, 537, 534, 535, 750, 0, 754,
	0, 1203, 726, 53, 0, 55, 1156, 850, 851, 852,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 0, 39, 1146, 0, 0, 762, 760, 761,
	751, 0, 773, 803, 0, 879, 0, 885, 887, -2,
	-2, 0, 928, 929, 930, 931, 932, 933, 0, 0,
	0, 0, 0, 0, 0, 956, 957, 958, 959, 960,
	961, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1689,
	1690, 1691, 1692, 1694, 1695, 1696, 1703, 1704, 1707, 1712,
	1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1726, 1728,
	1730, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1742, 1743,
	1744, 889, 890, 1110, 1169, 0, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1101, 0,
	1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 1030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 75, 77,
	868, 81, 1663, 0, 1174, -2, -2, 1176, 0, 0,
	0, -2, -2, -2, -2, 1457, -2, 1110, 0, 97,
	1132, 750, 98, 0, 387, 388, 0, 1470, 581, 1222,
	1223, 1459, 1218, 1219, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 0, 0, 245, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 1200, 247, 0, 0, 651, 0, 652,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 0, 671, 672, 715, 674, 0, 0,
	1200, 1200, 0, 0, 0, 0, 0, 583, 584, 715,
	715, 715, 715, 712, 0, 712, 692, 712, 710, 711,
	0, 697, 0, 0, 0, 705, 706, 732, 0, 0,
	739, 741, 742, 743, 744, 740, 0, 749, 0, 0,
	0, 326, 0, 0, 346, 328, 0, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 340, 341, 342, 0,
	349, 0, 1228, 1231, 736, 1246, 1247, 0, 1257, 1258,
	196, 196, 0, 0, 0, 0, 159, 192, 0, 161,
	192, 192, 192, 0, 192, 192, 168, 169, 192, 171,
	172, 173, 174, 175, 192, 177, 178, 179, 192, 192,
	182, 192, 192, 185, 186, 187, 188, 189, 259, 196,
	0, 0, 196, 0, 0, 519, 0, 0, 0, 0,
	524, 525, 526, 527, 0, 0, 530, 531, 759, 43,
	60, 0, 755, 756, 0, 0, 0, 54, 0, 0,
	59, 1748, 47, 0, 0, 1141, 1144, 1145, 1133, 1134,
	1137, 0, 0, 757, 763, 764, 753, 0, 774, 0,
	0, 0, 0, 804, 0, 806, 807, 808, 809, 0,
	883, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	907, 908, 909, 910, 911, 912, 913, 886, 0, 900,
	0, 0, 0, 949, 950, 951, 952, 953, 954, 0,
	762, 0, 0, 0, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 762, 762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	0, 0, 762, 0, 0, 926, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 762, 0, 1102, 0,
	1013, 1022, 0, 1014, 1023, 1015, 1024, 1016, 0, 1017,
	1025, 1018, 1026, 1019, 1020, 1027, 1021, 0, 922, 0,
	0, 79, 0, 867, 0, 810, 812, 813, 814, -2,
	0, 818, 873, 920, 1224, -2, 0, 0, 0, 71,
	72, 0, 0, 0, 0, 82, 84, 0, 0, 1663,
	1177, 1178, 493, 1191, 1192, 1193, 0, 1189, 0, 1140,
	759, 598, 0, 389, 0, 0, 401, 482, 412, 413,
	414, 475, 416, 475, 475, 0, 475, 475, 475, 475,
	475, 490, 490, 490, 490, 490, 458, 459, 460, 461,
	462, 0, 0, 435, 475, 475, 475, 439, 465, 466,
	467, 468, 469, 470, 471, 472, 417, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 477, 477, 479, 479,
	479, 479, 479, 0, 0, 580, 0, 1216, 0, 0,
	247, -2, 0, -2, 0, 863, 0, 0, 870, 0,
	0, 108, 277, 263, 107, 0, 241, 246, 242, 243,
	244, 0, 0, 0, 0, 254, 666, 1199, 0, 659,
	73, 660, 661, 662, 663, 664, 256, 665, 869, 1226,
	1227, 673, 716, 0, 718, 0, 0, 829, 678, 679,
	680, 585, 686, 687, 688, 694, 715, 0, 0, 0,
	829, 715, 696, 914, 699, 1030, 0, 734, 733, 0,
	746, 0, 323, 325, 327, 345, 0, 0, 348, 351,
	0, 0, 0, 0, 1249, 0, 1251, 1253, 0, 0,
	197, 198, 199, 0, 191, 0, 214, 262, 0, 160,
	0, 194, 162, 163, 164, 192, 166, 167, 170, 176,
	180, 181, 183, 184, 258, 0, 0, 0, 0, 157,
	0, 520, 521, 522, 523, 532, 529, 762, 0, 0,
	727, 728, 56, 0, 0, 1158, 37, 0, 1147, 0,
	0, 0, 0, 1136, 1138, 1139, 0, 0, 1121, 0,
	0, 765, 758, 40, 880, 881, 882, 884, 901, 0,
	903, 905, 805, 775, 0, 1111, -2, 891, 892, 916,
	917, 918, 0, 0, 0, 0, 914, 896, 0, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 948, 1044, 1045, 0, 946, 947, 955, 0, 0,
	924, 769, 770, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 922, 919, 0, 1168, 0, 0,
	0, 995, 0, 0, 931, 1113, 0, 931, 1113, 0,
	0, 0, 0, 0, 0, 0, 1108, 1105, 0, 0,
	1031, 0, 0, 0, 923, 0, 0, 0, 0, 866,
	0, 0, 0, 0, 0, 0, 853, 0, 0, 856,
	0, 0, 0, 0, 0, 0, 0, 0, 822, 1583,
	824, 0, 873, 0, 0, 0, 922, 877, 0, 877,
	76, 877, 78, 0, 872, 1175, 0, 0, 0, 87,
	88, 83, 1179, 0, 1185, 1186, 1187, 1111, 0, 1146,
	762, 386, 599, 601, 604, 605, 606, 390, 392, 393,
	394, 0, -2, 572, 1593, 1640, -2, -2, 564, 1506,
	-2, -2, 397, 485, 483, 484, 415, 0, 490, 490,
	475, 475, 475, 475, 444, 490, 447, 450, 451, 493,
	0, 493, 493, 493, 493, 490, 0, 0, 436, 437,
	438, 427, 0, 428, 477, 430, 0, 431, 432, 433,
	434, 578, 579, 0, 0, 0, 93, 0, 102, -2,
	500, 501, 502, 0, 497, 1201, 103, 0, 279, 280,
	0, 217, 0, 248, 249, 110, 0, 0, 264, 0,
	385, 0, 653, 0, 655, 253, 657, 667, 668, 658,
	0, 0, 717, 675, 676, 677, 877, 0, 0, 689,
	713, 714, 712, 715, 693, 707, 0, 0, 700, 0,
	735, 830, 329, 330, 352, 79, 0, 1229, 1248, 0,
	1252, 1254, 0, 200, 202, 0, 151, 0, 0, 193,
	0, 165, 0, 0, 0, 0, 0, 528, 0, 757,
	61, 612, 613, -2, 644, 1208, 644, 644, 630, 547,
	644, 0, 0, 0, 57, 0, 1157, 0, 0, 48,
	0, 1488, 51, 0, 1142, 1143, 1135, 0, 1194, 1195,
	1122, 1123, 94, 766, 902, 904, 906, 0, 922, 893,
	914, 897, 0, 894, 0, 888, 0, 0, 784, 0,
	784, 784, 0, 981, 0, 982, 1009, 0, 994, 784,
	784, 0, 0, 0, 0, 0, 0, 988, 989, 990,
	991, 784, 784, 784, 784, 0, 0, 0, 784, 784,
	784, 0, 927, -2, 992, 993, 0, 0, 0, 0,
	0, 1037, 0, 0, 1038, 1003, 0, 0, 0, 0,
	0, 1132, 0, 1106, 0, 0, 1012, 1032, 1033, 1034,
	1035, 1036, 1162, 0, 0, 0, 1151, 0, 877, 1170,
	0, 0, 811, 844, 846, 0, 841, 854, 855, 857,
	0, 859, 0, 861, 862, 831, 817, 921, 819, 0,
	0, 0, 873, 828, 0, 0, 0, 0, 1132, 0,
	877, 69, 70, 0, 85, 86, 0, 0, 92, 494,
	495, 0, 216, 0, 602, 0, 391, 0, 565, 0,
	0, 549, 564, 560, 561, 564, 563, 564, 555, 565,
	556, 0, 402, 0, 404, 405, 406, 407, 408, 0,
	0, 0, 0, 489, 0, 514, 516, 0, 0, 411,
	486, 0, 493, 493, 490, 442, 443, 475, 448, 493,
	452, 0, 453, 454, 455, 456, 493, 0, 473, 0,
	0, 429, 0, 595, 0, 1217, 95, 0, 503, 504,
	505, 0, 547, 547, 547, 0, 281, 282, 283, 864,
	0, 218, 219, 0, 0, 0, 0, 871, 120, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 74, 257,
	684, 586, 587, 829, 691, 915, 701, 703, 704, 490,
	0, 1250, 0, 0, 0, 0, 0, 212, 195, 0,
	0, 0, 0, 158, 0, 765, 0, 0, 564, 0,
	631, 632, 0, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1209, 1210, 0, 0, 0,
	548, 0, 639, 640, 0, 1160, 1159, 0, 49, 50,
	1148, 38, 47, 0, 776, 1112, 0, 895, 0, 898,
	784, 925, 966, 785, 771, 0, 967, 968, 784, 777,
	778, 780, 983, 970, 971, 984, 985, 986, 784, 784,
	987, 975, 974, 973, 976, 0, 0, 784, 979, 978,
	980, 962, 0, 475, 475, 1091, 475, 479, 1094, 475,
	1096, 475, 1099, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1103, 1011, 1109, 0, 62, 0,
	1162, 1149, 1164, 1166, 0, 0, 0, 0, -2, 1434,
	0, 835, 1132, 0, 0, 0, 838, 845, 0, 0,
	839, 0, 840, 858, 860, 815, 0, 0, 820, 0,
	0, -2, 827, 0, 0, 0, 837, 1140, 878, 68,
	89, 90, 91, 600, 603, 0, 566, 475, 475, 0,
	570, 562, 571, 551, 552, 554, 0, 403, 0, 0,
	487, 0, 513, 515, 517, 518, 476, 440, 441, 493,
	449, 445, 491, 492, 457, 490, 0, 490, 0, 480,
	0, 582, 596, 0, 0, 0, 93, 547, 0, 0,
	0, 0, 225, 0, 221, 0, 0, 0, 128, 0,
	111, 112, 113, 115, 116, 0, 0, 0, 109, 0,
	266, 0, 269, 270, 654, 656, 715, 1240, 865, 212,
	201, 203, 204, 212, 215, 152, 0, 153, 155, 0,
	154, 533, 94, 614, 0, 641, 0, 0, 1216, 562,
	0, -2, 617, 622, 623, 624, 625, 626, 0, 637,
	0, 619, 0, 641, 0, 634, 0, 0, 0, 52,
	45, 94, 94, 963, 899, 965, 0, 969, 782, 781,
	964, 972, 0, 0, 977, 996, 1088, 490, 1092, 1093,
	1095, 1097, 1098, 1100, 998, 997, 0, 0, 0, 0,
	1004, 0, 0, 0, 0, 0, 0, 1107, 0, 63,
	0, 1167, -2, 0, 0, 80, 0, 1140, 1171, 1172,
	1173, 842, 0, 847, 0, 833, 0, 873, 825, 0,
	0, 0, 0, 67, 539, 0, 1137, 1137, 550, 564,
	0, 0, 0, 488, 0, 0, 446, 493, 474, 493,
	0, 0, 597, 0, 93, 95, 0, 508, 509, 510,
	511, 512, 0, 94, 226, 227, 0, 0, 0, 232,
	0, 0, 0, 0, 0, 220, 222, 223, 224, 146,
	129, 130, 0, 0, 0, 0, 121, 122, 0, 0,
	0, 0, 0, 117, 118, 119, 265, 0, 0, 268,
	0, 0, 690, 1242, 1236, 205, 205, 0, 156, 0,
	0, 616, 642, 0, 401, 401, 0, 564, 0, 633,
	0, 1206, 1207, 0, 628, 641, 0, 0, 0, 1161,
	877, 0, 0, 767, 772, 1132, 0, 0, 0, 1089,
	1090, 0, 0, 0, 0, 1005, 1006, 1007, 1039, 1010,
	1104, 0, 1165, 1150, 0, 1154, 0, 836, 66, 0,
	832, 0, 821, 823, 873, 874, 875, 876, 538, 542,
	0, 547, 0, 567, 568, 569, 553, 0, 398, 0,
	463, 464, 478, 481, 0, 100, 0, 506, 507, 0,
	95, 228, 229, 230, 231, 233, 234, 0, 0, 0,
	106, 0, 0, 131, 0, 0, 0, 0, 141, 142,
	143, 144, 145, 123, 124, 125, 126, 127, 114, 0,
	0, 267, 0, 272, 273, 1204, 1244, -2, 0, 149,
	0, 150, 213, 0, 615, 643, 395, 396, 0, 1216,
	0, 618, 627, 629, 0, 636, 0, 1124, 46, 94,
	786, 0, 1028, 1029, 999, 1001, 1000, 1002, 0, 0,
	0, 0, 1153, 0, 843, 834, 826, 543, 544, 0,
	546, 0, 409, 399, 400, 0, 540, 93, 0, 0,
	235, 236, 237, 238, 147, 148, 132, 133, 0, 135,
	136, 0, 0, 0, 275, 0, 271, 831, 0, 1236,
	0, 1238, 0, 1235, 0, 206, 877, 0, 0, 0,
	635, 0, 647, 0, 1129, 0, 768, 0, 0, 0,
	783, 1008, 0, 0, 0, 1163, -2, 545, 0, 398,
	99, 541, 101, 284, 93, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 0, 0, 0, 0, 0,
	137, 0, 139, 140, 274, 0, 36, 0, 1243, 0,
	1241, 0, 0, 1237, 0, 1124, 540, 0, 540, 646,
	0, 0, 796, 0, 0, 779, 787, 0, 790, 0,
	0, 0, 801, 0, 788, 1040, 0, 1043, 0, 410,
	93, 0, 0, 105, 0, 0, 1218, 0, 0, 311,
	312, 313, 1220, 0, 353, 134, 138, 276, 1205, 1245,
	0, 0, 0, 1129, 620, 0, 638, 648, 0, 44,
	0, 1130, 1131, 1125, 1126, 1128, 0, 791, 792, 793,
	794, 795, 0, 1041, 0, 95, 285, 286, 0, 295,
	0, 0, 0, 0, 0, 309, 0, 0, 1239, 1233,
	207, 208, 209, 211, 796, 540, 0, 797, 798, 0,
	0, 0, 802, 0, 573, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 1221, 239, 354, 0, 42,
	621, 0, 0, 0, 1127, 789, 0, 574, 575, 0,
	93, 287, 288, 289, 290, 291, 0, 293, 0, 0,
	0, 305, 306, 307, 0, 314, 316, 317, 318, 0,
	320, 321, 310, 210, 0, 799, 800, 1042, 576, 0,
	577, 0, 0, 0, 104, 0, 0, 0, 0, 0,
	0, 302, 0, 308, 0, 319, 0, 0, 588, 590,
	591, 0, 0, 589, 0, 0, 297, 298, 0, 0,
	0, 303, 0, 315, 649, 650, 592, 593, 594, 292,
	294, 0, 300, 0, 0, 0, 0, 0, 299, 0,
	304, 301,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 556,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:521
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:569
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:575
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:586
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:602
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:609
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:613
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:620
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:626
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:634
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:638
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:647
		{
			yyVAL.into = nil
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:651
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:669
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:675
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:689
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:695
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:701
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:729
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 63:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:741
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			yyVAL.str = InsertStr
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:757
		{
			yyVAL.str = ReplaceStr
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:763
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:769
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 68:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:773
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:777
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 70:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:781
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:786
		{
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:787
		{
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:795
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:801
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:805
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:811
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:820
		{
			yyVAL.partitions = nil
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:824
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:834
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:841
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:850
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:854
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:864
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:868
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:878
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:882
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:891
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:896
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:901
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:907
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:916
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:921
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:926
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 100:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:930
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:936
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:942
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:950
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 104:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:958
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 105:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:962
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 106:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:966
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:985
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:994
		{
			yyVAL.accountNames = nil
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1003
		{
			yyVAL.tlsOptionItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1007
		{
			yyVAL.tlsOptionItems = nil
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1011
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1017
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1027
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1031
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1048
		{
			yyVAL.accountLimitItems = nil
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1058
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1068
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1085
		{
			yyVAL.passLockItems = nil
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1105
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1109
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1113
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1125
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1129
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1133
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1137
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1141
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1149
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1153
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1162
		{
			yyVAL.str = ""
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1177
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1182
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1186
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1190
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1196
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1201
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1205
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1209
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1213
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1217
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1247
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1251
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1263
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1349
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1358
		{
			yyVAL.strs = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1368
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1377
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1381
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1395
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1399
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1403
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1407
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1411
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1416
		{
			yyVAL.grantAssumption = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1424
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1428
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1432
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1436
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1440
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1445
		{
			yyVAL.boolean = false
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.boolean = true
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1454
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1465
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1477
		{
			yyVAL.procedureParams = nil
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1491
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1497
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1501
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1505
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1514
		{
			yyVAL.characteristics = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1528
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1534
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1554
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1562
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1566
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1570
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1576
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1650
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1664
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1670
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1678
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1700
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1710
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1714
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1718
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1722
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1728
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1732
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1740
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1744
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1748
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1754
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1758
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1762
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = BeforeStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = AfterStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = InsertStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = UpdateStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = DeleteStr
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1801
		{
			yyVAL.triggerOrder = nil
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1809
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1815
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1825
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1831
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1835
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1851
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 298:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1857
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 299:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1862
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1867
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1873
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1891
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1901
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1905
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 308:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1909
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1917
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1952
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1978
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1986
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1996
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2012
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &Resignal{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.exprs = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.exprs = nil
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2107
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2158
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2174
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2191
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2201
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2220
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2238
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2247
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.columnType = ColumnType{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2273
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2282
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2291
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2309
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2327
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2336
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2363
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2397
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2405
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2411
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2429
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2465
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2469
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2473
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2511
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2519
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2543
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2580
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2620
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2625
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2630
		{
			yyVAL.sqlVal = nil
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2639
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2643
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2655
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2661
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2692
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2704
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = ""
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2722
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2735
		{
			yyVAL.boolean = false
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.boolean = true
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2744
		{
			yyVAL.charsetCollates = nil
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2780
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2784
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2788
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2792
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2798
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2802
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2808
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2814
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.colKeyOpt = colKey
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2822
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2830
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2836
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2848
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2856
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2860
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2864
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2884
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = ""
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2899
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = yyDollar[1].str
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2914
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2918
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2923
		{
			yyVAL.indexOptions = nil
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2937
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2943
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2947
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2958
		{
			yyVAL.str = ""
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2962
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2968
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2972
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2976
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2980
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2984
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3001
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3007
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3030
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.str = yyDollar[1].str
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3039
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3053
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3063
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 573:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3083
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 574:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3087
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 575:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3091
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 576:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3095
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 577:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3099
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3105
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3109
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3113
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3123
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3133
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3138
		{
			yyVAL.str = ""
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3142
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3146
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3152
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3158
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3164
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3168
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3172
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3176
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3180
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3185
		{
			yyVAL.boolean = true
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.boolean = true
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3193
		{
			yyVAL.boolean = false
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3198
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3206
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3214
		{
			yyVAL.str = yyDollar[1].str
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3228
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3241
		{
			yyVAL.str = ""
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3245
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3250
		{
			yyVAL.str = string("")
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3263
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3276
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3280
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3286
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3293
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3300
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3304
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3308
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 620:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3313
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 621:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3317
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3321
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3336
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3341
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3345
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3349
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3356
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3362
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3366
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3378
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 635:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3387
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3391
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 638:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3399
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3405
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3409
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3414
		{
			yyVAL.columnOrder = nil
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3418
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3422
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3427
		{
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3429
		{
		}
	case 646:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3433
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 649:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3449
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 650:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3453
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3469
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3473
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3485
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3491
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3499
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3503
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3511
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3519
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3527
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3535
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3543
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3551
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3560
		{

		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3564
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3568
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3574
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3583
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3589
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3594
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3602
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3606
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3610
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3615
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3619
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3623
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3627
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3631
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3635
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3639
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3643
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3647
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3651
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3655
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3659
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3663
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 691:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3668
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3677
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3681
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3685
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3689
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3703
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3707
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 700:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3712
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 701:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3716
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3721
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 703:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3725
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3729
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3737
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3743
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3749
		{
			yyVAL.boolean = false
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.boolean = true
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3783
		{
			yyVAL.showFilter = nil
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3787
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3791
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3795
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3801
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.str = SessionStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.str = GlobalStr
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3815
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3819
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.statement = &Begin{}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3835
		{
			yyVAL.statement = &Begin{}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3839
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3843
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.statement = &Commit{}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.statement = &Rollback{}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3861
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3867
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3871
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3875
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3879
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3885
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3890
		{
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3891
		{
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3895
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3899
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3913
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3917
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3928
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3934
		{
			setAllowComments(yylex, true)
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3938
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3944
		{
			yyVAL.bytes2 = nil
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3954
		{
			yyVAL.str = UnionStr
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.str = UnionAllStr
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = UnionDistinctStr
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3967
		{
			yyVAL.byt = 0
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.byt = 1
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = ""
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.str = SQLCacheStr
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3989
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.str = ""
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.str = DistinctStr
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4002
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.str = StraightJoinHint
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4020
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4039
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4043
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4053
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4057
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4061
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4067
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4071
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4077
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4090
		{
			yyVAL.exprs = nil
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4094
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4099
		{
			yyVAL.over = nil
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.over = yyDollar[1].over
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4108
		{
			yyVAL.frame = nil
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4112
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4116
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4123
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4165
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4169
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4173
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4188
		{
			yyVAL.window = nil
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.window = yyDollar[2].window
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4197
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4200
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4215
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4219
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4238
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4260
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4274
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4290
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4303
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4307
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4313
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 823:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4318
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4329
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4333
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 826:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4337
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4345
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.expr = nil
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4365
		{
			yyVAL.columns = nil
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4379
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4389
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4395
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4408
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4412
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4416
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4420
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4426
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4428
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4432
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4438
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4440
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4443
		{
			yyVAL.empty = struct{}{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4454
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.str = JoinStr
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = JoinStr
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = JoinStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = StraightJoinStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = LeftJoinStr
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.str = LeftJoinStr
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4488
		{
			yyVAL.str = RightJoinStr
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yyVAL.str = RightJoinStr
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = NaturalJoinStr
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4502
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4516
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4522
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4528
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4532
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4552
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4563
		{
			yyVAL.indexHints = nil
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4567
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4571
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4575
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4580
		{
			yyVAL.expr = nil
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4584
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4594
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4598
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4602
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4610
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4614
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4624
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4628
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4644
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4648
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4652
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4656
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4660
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4664
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4668
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4672
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4676
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4680
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = IsNullStr
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = IsNotNullStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = IsTrueStr
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4698
		{
			yyVAL.str = IsNotTrueStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = IsFalseStr
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = IsNotFalseStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = EqualStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.str = LessThanStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.str = GreaterThanStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.str = LessEqualStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.str = GreaterEqualStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.str = NotEqualStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4741
		{
			yyVAL.expr = nil
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4745
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4755
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4759
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4775
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4781
		{
			yyVAL.selectExprs = nil
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4792
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4798
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4802
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4808
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4812
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4820
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4824
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4828
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4832
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4836
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4840
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4844
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4848
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4856
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4860
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4864
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4868
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4876
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4884
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4888
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4892
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4896
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4900
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4908
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4922
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4926
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4930
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4950
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4954
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4964
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4968
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4972
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4976
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4980
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4984
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4988
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4992
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4996
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5000
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5004
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5008
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5012
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5016
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5020
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5024
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5037
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5041
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5045
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5049
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5053
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5057
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5061
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5065
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5069
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5073
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5088
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5092
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5096
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5100
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5104
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5108
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5112
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 999:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5116
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5120
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5124
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5128
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5132
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5136
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5140
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1006:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5144
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1007:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5148
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1008:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5152
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5156
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1010:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5160
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5164
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5168
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5186
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5196
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5201
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5207
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5212
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5216
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5221
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5229
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5234
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5239
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5244
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5248
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5252
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5263
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5273
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5277
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5281
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5285
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5289
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5293
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5303
		{
			yyVAL.str = BooleanModeStr
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5307
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1042:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5311
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5315
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5321
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = Armscii8Str
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5335
		{
			yyVAL.str = AsciiStr
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = Big5Str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5343
		{
			yyVAL.str = UBinaryStr
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5347
		{
			yyVAL.str = Cp1250Str
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5351
		{
			yyVAL.str = Cp1251Str
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5355
		{
			yyVAL.str = Cp1256Str
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = Cp1257Str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5363
		{
			yyVAL.str = Cp850Str
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = Cp852Str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5371
		{
			yyVAL.str = Cp866Str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
			yyVAL.str = Cp932Str
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5379
		{
			yyVAL.str = Dec8Str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5383
		{
			yyVAL.str = EucjpmsStr
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.str = EuckrStr
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.str = Gb18030Str
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5395
		{
			yyVAL.str = Gb2312Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5399
		{
			yyVAL.str = GbkStr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = Geostd8Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = GreekStr
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5411
		{
			yyVAL.str = HebrewStr
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.str = Hp8Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.str = Keybcs2Str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.str = Koi8rStr
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = Koi8uStr
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5431
		{
			yyVAL.str = Latin1Str
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5435
		{
			yyVAL.str = Latin2Str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.str = Latin5Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5443
		{
			yyVAL.str = Latin7Str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
			yyVAL.str = MacceStr
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5451
		{
			yyVAL.str = MacromanStr
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5455
		{
			yyVAL.str = SjisStr
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.str = Swe7Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5463
		{
			yyVAL.str = Tis620Str
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5467
		{
			yyVAL.str = Ucs2Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.str = UjisStr
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5475
		{
			yyVAL.str = Utf16Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5479
		{
			yyVAL.str = Utf16leStr
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5483
		{
			yyVAL.str = Utf32Str
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5487
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5495
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5501
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5505
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5509
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5513
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5517
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5521
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5527
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5531
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5535
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5539
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5543
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5547
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5551
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5556
		{
			yyVAL.expr = nil
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5565
		{
			yyVAL.str = string("")
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5569
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5575
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5579
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5585
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5590
		{
			yyVAL.expr = nil
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5594
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5604
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5608
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5614
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5618
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5622
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5626
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5638
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5642
		{
			yyVAL.expr = &NullVal{}
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5652
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5656
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5661
		{
			yyVAL.exprs = nil
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5665
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5675
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5681
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5686
		{
			yyVAL.expr = nil
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5690
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5696
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5701
		{
			yyVAL.orderBy = nil
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5705
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5711
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5715
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5721
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5726
		{
			yyVAL.str = AscScr
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5730
		{
			yyVAL.str = AscScr
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.str = DescScr
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5739
		{
			yyVAL.limit = nil
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5743
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5747
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5751
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5757
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5761
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5766
		{
			yyVAL.str = ""
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5770
		{
			yyVAL.str = ForUpdateStr
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5774
		{
			yyVAL.str = ShareModeStr
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5787
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5791
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5795
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5799
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5804
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5808
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5812
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5818
		{
			yyVAL.columns = nil
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5822
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5828
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5832
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5836
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5840
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5845
		{
			yyVAL.assignExprs = nil
		}
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5849
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5855
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5859
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5865
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5869
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5875
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5881
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5891
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5895
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5901
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5904
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5910
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5914
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5920
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5931
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5944
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5957
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5963
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5967
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5973
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5981
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5987
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5991
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5995
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6002
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6009
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6013
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6017
		{
			yyVAL.expr = &Default{}
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6026
		{
			yyVAL.byt = 0
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6028
		{
			yyVAL.byt = 1
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6031
		{
			yyVAL.byt = 0
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6033
		{
			yyVAL.byt = 1
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6036
		{
			yyVAL.byt = 0
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6038
		{
			yyVAL.byt = 1
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6041
		{
			yyVAL.str = ""
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6043
		{
			yyVAL.str = IgnoreStr
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6046
		{
			yyVAL.sqlVal = nil
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6048
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6052
		{
			yyVAL.empty = struct{}{}
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6054
		{
			yyVAL.empty = struct{}{}
		}
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6057
		{
			yyVAL.empty = struct{}{}
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6059
		{
			yyVAL.empty = struct{}{}
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6061
		{
			yyVAL.empty = struct{}{}
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6065
		{
			yyVAL.str = UniqueStr
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6067
		{
			yyVAL.str = FulltextStr
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6069
		{
			yyVAL.str = SpatialStr
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6072
		{
			yyVAL.str = ""
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6074
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6077
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6079
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6083
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6087
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6093
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6097
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6104
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6114
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6121
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6126
		{
			yyVAL.str = string("")
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6128
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6131
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6133
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6136
		{
			yyVAL.EnclosedBy = nil
		}
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6140
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6145
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6149
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6154
		{
			yyVAL.sqlVal = nil
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6158
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6163
		{
			yyVAL.sqlVal = nil
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6167
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6172
		{
			yyVAL.Fields = nil
		}
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6176
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6181
		{
			yyVAL.Lines = nil
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6185
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6190
		{
			yyVAL.sqlVal = nil
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6194
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6200
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6206
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6210
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6216
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6220
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.lockType = LockRead
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6230
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6234
		{
			yyVAL.lockType = LockWrite
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6238
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6244
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6250
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6254
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6258
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6783
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6792
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
