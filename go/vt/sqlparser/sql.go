// Code generated by goyacc -o sql.go -v y.output sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const MAXVALUE = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const TRIGGERS = 57551
const FUNCTION = 57552
const STATUS = 57553
const VARIABLES = 57554
const WARNINGS = 57555
const ERRORS = 57556
const KILL = 57557
const CONNECTION = 57558
const SEQUENCE = 57559
const ENABLE = 57560
const DISABLE = 57561
const EACH = 57562
const ROW = 57563
const BEFORE = 57564
const FOLLOWS = 57565
const PRECEDES = 57566
const DEFINER = 57567
const INVOKER = 57568
const INOUT = 57569
const OUT = 57570
const DETERMINISTIC = 57571
const CONTAINS = 57572
const READS = 57573
const MODIFIES = 57574
const SQL = 57575
const SECURITY = 57576
const TEMPORARY = 57577
const ALGORITHM = 57578
const MERGE = 57579
const TEMPTABLE = 57580
const UNDEFINED = 57581
const CLASS_ORIGIN = 57582
const SUBCLASS_ORIGIN = 57583
const MESSAGE_TEXT = 57584
const MYSQL_ERRNO = 57585
const CONSTRAINT_CATALOG = 57586
const CONSTRAINT_SCHEMA = 57587
const CONSTRAINT_NAME = 57588
const CATALOG_NAME = 57589
const SCHEMA_NAME = 57590
const TABLE_NAME = 57591
const COLUMN_NAME = 57592
const CURSOR_NAME = 57593
const SIGNAL = 57594
const RESIGNAL = 57595
const SQLSTATE = 57596
const DECLARE = 57597
const CONDITION = 57598
const CURSOR = 57599
const CONTINUE = 57600
const EXIT = 57601
const UNDO = 57602
const HANDLER = 57603
const FOUND = 57604
const SQLWARNING = 57605
const SQLEXCEPTION = 57606
const USER = 57607
const IDENTIFIED = 57608
const ROLE = 57609
const REUSE = 57610
const GRANT = 57611
const GRANTS = 57612
const REVOKE = 57613
const NONE = 57614
const ATTRIBUTE = 57615
const RANDOM = 57616
const PASSWORD = 57617
const INITIAL = 57618
const AUTHENTICATION = 57619
const SSL = 57620
const X509 = 57621
const CIPHER = 57622
const ISSUER = 57623
const SUBJECT = 57624
const ACCOUNT = 57625
const EXPIRE = 57626
const NEVER = 57627
const DAY = 57628
const OPTION = 57629
const OPTIONAL = 57630
const EXCEPT = 57631
const ADMIN = 57632
const PRIVILEGES = 57633
const MAX_QUERIES_PER_HOUR = 57634
const MAX_UPDATES_PER_HOUR = 57635
const MAX_CONNECTIONS_PER_HOUR = 57636
const MAX_USER_CONNECTIONS = 57637
const FLUSH = 57638
const FAILED_LOGIN_ATTEMPTS = 57639
const PASSWORD_LOCK_TIME = 57640
const REQUIRE = 57641
const PROXY = 57642
const ROUTINE = 57643
const TABLESPACE = 57644
const CLIENT = 57645
const SLAVE = 57646
const EVENT = 57647
const EXECUTE = 57648
const FILE = 57649
const RELOAD = 57650
const REPLICATION = 57651
const SHUTDOWN = 57652
const SUPER = 57653
const USAGE = 57654
const LOGS = 57655
const ENGINE = 57656
const ERROR = 57657
const GENERAL = 57658
const HOSTS = 57659
const OPTIMIZER_COSTS = 57660
const RELAY = 57661
const SLOW = 57662
const USER_RESOURCES = 57663
const NO_WRITE_TO_BINLOG = 57664
const CHANNEL = 57665
const BEGIN = 57666
const START = 57667
const TRANSACTION = 57668
const COMMIT = 57669
const ROLLBACK = 57670
const SAVEPOINT = 57671
const WORK = 57672
const RELEASE = 57673
const CHAIN = 57674
const BIT = 57675
const TINYINT = 57676
const SMALLINT = 57677
const MEDIUMINT = 57678
const INT = 57679
const INTEGER = 57680
const BIGINT = 57681
const INTNUM = 57682
const SERIAL = 57683
const REAL = 57684
const DOUBLE = 57685
const FLOAT_TYPE = 57686
const DECIMAL = 57687
const NUMERIC = 57688
const DEC = 57689
const FIXED = 57690
const PRECISION = 57691
const TIME = 57692
const TIMESTAMP = 57693
const DATETIME = 57694
const YEAR = 57695
const CHAR = 57696
const VARCHAR = 57697
const BOOL = 57698
const CHARACTER = 57699
const VARBINARY = 57700
const NCHAR = 57701
const NVARCHAR = 57702
const NATIONAL = 57703
const VARYING = 57704
const TEXT = 57705
const TINYTEXT = 57706
const MEDIUMTEXT = 57707
const LONGTEXT = 57708
const LONG = 57709
const BLOB = 57710
const TINYBLOB = 57711
const MEDIUMBLOB = 57712
const LONGBLOB = 57713
const JSON = 57714
const ENUM = 57715
const GEOMETRY = 57716
const POINT = 57717
const LINESTRING = 57718
const POLYGON = 57719
const GEOMETRYCOLLECTION = 57720
const MULTIPOINT = 57721
const MULTILINESTRING = 57722
const MULTIPOLYGON = 57723
const LOCAL = 57724
const LOW_PRIORITY = 57725
const NULLX = 57726
const AUTO_INCREMENT = 57727
const APPROXNUM = 57728
const SIGNED = 57729
const UNSIGNED = 57730
const ZEROFILL = 57731
const SRID = 57732
const COLLATION = 57733
const DATABASES = 57734
const SCHEMAS = 57735
const TABLES = 57736
const FULL = 57737
const PROCESSLIST = 57738
const COLUMNS = 57739
const FIELDS = 57740
const ENGINES = 57741
const PLUGINS = 57742
const NAMES = 57743
const CHARSET = 57744
const GLOBAL = 57745
const SESSION = 57746
const ISOLATION = 57747
const LEVEL = 57748
const READ = 57749
const WRITE = 57750
const ONLY = 57751
const REPEATABLE = 57752
const COMMITTED = 57753
const UNCOMMITTED = 57754
const SERIALIZABLE = 57755
const ENCRYPTION = 57756
const CURRENT_TIMESTAMP = 57757
const NOW = 57758
const DATABASE = 57759
const CURRENT_DATE = 57760
const CURRENT_USER = 57761
const CURRENT_TIME = 57762
const LOCALTIME = 57763
const LOCALTIMESTAMP = 57764
const UTC_DATE = 57765
const UTC_TIME = 57766
const UTC_TIMESTAMP = 57767
const REPLACE = 57768
const CONVERT = 57769
const CAST = 57770
const SUBSTR = 57771
const SUBSTRING = 57772
const TRIM = 57773
const LEADING = 57774
const TRAILING = 57775
const BOTH = 57776
const GROUP_CONCAT = 57777
const SEPARATOR = 57778
const TIMESTAMPADD = 57779
const TIMESTAMPDIFF = 57780
const OVER = 57781
const WINDOW = 57782
const GROUPING = 57783
const CURRENT = 57784
const AVG = 57785
const BIT_AND = 57786
const BIT_OR = 57787
const BIT_XOR = 57788
const COUNT = 57789
const JSON_ARRAYAGG = 57790
const JSON_OBJECTAGG = 57791
const MAX = 57792
const MIN = 57793
const STDDEV_POP = 57794
const STDDEV = 57795
const STD = 57796
const STDDEV_SAMP = 57797
const SUM = 57798
const VAR_POP = 57799
const VARIANCE = 57800
const VAR_SAMP = 57801
const CUME_DIST = 57802
const DENSE_RANK = 57803
const FIRST_VALUE = 57804
const LAG = 57805
const LAST_VALUE = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const ROW_NUMBER = 57810
const PERCENT_RANK = 57811
const RANK = 57812
const JSON_TABLE = 57813
const PATH = 57814
const AVG_ROW_LENGTH = 57815
const CHECKSUM = 57816
const COMPRESSION = 57817
const DIRECTORY = 57818
const DELAY_KEY_WRITE = 57819
const ENGINE_ATTRIBUTE = 57820
const INSERT_METHOD = 57821
const MAX_ROWS = 57822
const MIN_ROWS = 57823
const PACK_KEYS = 57824
const ROW_FORMAT = 57825
const SECONDARY_ENGINE_ATTRIBUTE = 57826
const STATS_AUTO_RECALC = 57827
const STATS_PERSISTENT = 57828
const STATS_SAMPLE_PAGES = 57829
const STORAGE = 57830
const DISK = 57831
const MEMORY = 57832
const DYNAMIC = 57833
const COMPRESSED = 57834
const REDUNDANT = 57835
const COMPACT = 57836
const LIST = 57837
const HASH = 57838
const PARTITIONS = 57839
const SUBPARTITION = 57840
const SUBPARTITIONS = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const ACCESSIBLE = 57849
const ASENSITIVE = 57850
const CUBE = 57851
const DAY_HOUR = 57852
const DAY_MICROSECOND = 57853
const DAY_MINUTE = 57854
const DAY_SECOND = 57855
const DELAYED = 57856
const DISTINCTROW = 57857
const DUAL = 57858
const EMPTY = 57859
const FETCH = 57860
const FLOAT4 = 57861
const FLOAT8 = 57862
const GET = 57863
const HIGH_PRIORITY = 57864
const HOUR_MICROSECOND = 57865
const HOUR_MINUTE = 57866
const HOUR_SECOND = 57867
const INSENSITIVE = 57868
const INT1 = 57869
const INT2 = 57870
const INT3 = 57871
const INT4 = 57872
const INT8 = 57873
const IO_AFTER_GTIDS = 57874
const IO_BEFORE_GTIDS = 57875
const ITERATE = 57876
const LEAVE = 57877
const LINEAR = 57878
const LOOP = 57879
const MASTER_BIND = 57880
const MASTER_SSL_VERIFY_SERVER_CERT = 57881
const MIDDLEINT = 57882
const MINUTE_MICROSECOND = 57883
const MINUTE_SECOND = 57884
const PURGE = 57885
const READ_WRITE = 57886
const REPEAT = 57887
const RETURN = 57888
const RLIKE = 57889
const SECOND_MICROSECOND = 57890
const SENSITIVE = 57891
const SPECIFIC = 57892
const SQL_BIG_RESULT = 57893
const SQL_SMALL_RESULT = 57894
const VARCHARACTER = 57895
const WHILE = 57896
const YEAR_MONTH = 57897
const UNUSED = 57898
const DESCRIPTION = 57899
const LATERAL = 57900
const MEMBER = 57901
const RECURSIVE = 57902
const BUCKETS = 57903
const CLONE = 57904
const COMPONENT = 57905
const DEFINITION = 57906
const ENFORCED = 57907
const EXCLUDE = 57908
const GEOMCOLLECTION = 57909
const GET_MASTER_PUBLIC_KEY = 57910
const HISTOGRAM = 57911
const HISTORY = 57912
const INACTIVE = 57913
const INVISIBLE = 57914
const LOCKED = 57915
const MASTER_COMPRESSION_ALGORITHMS = 57916
const MASTER_PUBLIC_KEY_PATH = 57917
const MASTER_TLS_CIPHERSUITES = 57918
const MASTER_ZSTD_COMPRESSION_LEVEL = 57919
const NESTED = 57920
const NETWORK_NAMESPACE = 57921
const NOWAIT = 57922
const NULLS = 57923
const OJ = 57924
const OLD = 57925
const ORDINALITY = 57926
const ORGANIZATION = 57927
const OTHERS = 57928
const PERSIST = 57929
const PERSIST_ONLY = 57930
const PRIVILEGE_CHECKS_USER = 57931
const PROCESS = 57932
const REFERENCE = 57933
const REQUIRE_ROW_FORMAT = 57934
const RESOURCE = 57935
const RESPECT = 57936
const RESTART = 57937
const RETAIN = 57938
const SECONDARY = 57939
const SECONDARY_ENGINE = 57940
const SECONDARY_LOAD = 57941
const SECONDARY_UNLOAD = 57942
const SKIP = 57943
const THREAD_PRIORITY = 57944
const TIES = 57945
const VCPU = 57946
const VISIBLE = 57947
const SYSTEM = 57948
const INFILE = 57949
const ACTIVE = 57950
const AGGREGATE = 57951
const ANY = 57952
const ARRAY = 57953
const ASCII = 57954
const AT = 57955
const AUTOEXTEND_SIZE = 57956
const ENDS = 57957
const EVENTS = 57958
const GENERATED = 57959
const ALWAYS = 57960
const STORED = 57961
const VIRTUAL = 57962
const NVAR = 57963
const PASSWORD_LOCK = 57964

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	641, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	189, 1354,
	190, 1373,
	-2, 249,
	-1, 47,
	229, 823,
	230, 823,
	-2, 812,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 509,
	177, 1743,
	-2, 1021,
	-1, 510,
	177, 1383,
	-2, 1377,
	-1, 511,
	177, 1384,
	-2, 1378,
	-1, 541,
	177, 1851,
	-2, 1272,
	-1, 542,
	177, 1932,
	-2, 1023,
	-1, 543,
	177, 1763,
	-2, 1024,
	-1, 610,
	177, 1714,
	-2, 1242,
	-1, 613,
	177, 1731,
	-2, 1171,
	-1, 614,
	177, 1944,
	-2, 1171,
	-1, 615,
	177, 1943,
	-2, 1171,
	-1, 616,
	177, 1942,
	-2, 1171,
	-1, 617,
	177, 1831,
	-2, 1171,
	-1, 618,
	177, 1832,
	-2, 1171,
	-1, 619,
	177, 1729,
	-2, 1171,
	-1, 620,
	177, 1730,
	-2, 1171,
	-1, 621,
	177, 1732,
	-2, 1171,
	-1, 869,
	100, 2041,
	177, 2041,
	-2, 1338,
	-1, 870,
	100, 2148,
	177, 2148,
	-2, 1339,
	-1, 875,
	100, 2065,
	177, 2065,
	-2, 1340,
	-1, 876,
	100, 2108,
	177, 2108,
	-2, 1341,
	-1, 877,
	100, 2109,
	177, 2109,
	-2, 1342,
	-1, 878,
	100, 1981,
	177, 1981,
	-2, 1346,
	-1, 880,
	100, 2086,
	177, 2086,
	-2, 1348,
	-1, 1034,
	349, 836,
	-2, 840,
	-1, 1036,
	349, 836,
	-2, 840,
	-1, 1139,
	5, 61,
	-2, 44,
	-1, 1402,
	1, 527,
	641, 527,
	-2, 525,
	-1, 1404,
	1, 527,
	641, 527,
	-2, 525,
	-1, 1862,
	177, 1386,
	-2, 1382,
	-1, 1982,
	1, 932,
	5, 932,
	12, 932,
	13, 932,
	14, 932,
	15, 932,
	17, 932,
	19, 932,
	29, 932,
	30, 932,
	56, 932,
	57, 932,
	58, 932,
	59, 932,
	60, 932,
	62, 932,
	63, 932,
	66, 932,
	67, 932,
	69, 932,
	70, 932,
	87, 932,
	413, 932,
	458, 932,
	641, 932,
	-2, 965,
	-1, 1990,
	67, 78,
	69, 78,
	-2, 82,
	-1, 2008,
	177, 1855,
	-2, 1343,
	-1, 2078,
	1, 528,
	641, 528,
	-2, 525,
	-1, 2170,
	44, 705,
	196, 707,
	198, 705,
	199, 705,
	-2, 748,
	-1, 2219,
	5, 62,
	-2, 1053,
	-1, 2781,
	196, 708,
	-2, 706,
	-1, 2854,
	69, 1627,
	70, 1627,
	177, 1627,
	-2, 863,
	-1, 2880,
	1, 1007,
	5, 1007,
	12, 1007,
	13, 1007,
	14, 1007,
	15, 1007,
	17, 1007,
	19, 1007,
	29, 1007,
	30, 1007,
	56, 1007,
	57, 1007,
	58, 1007,
	59, 1007,
	60, 1007,
	62, 1007,
	63, 1007,
	66, 1007,
	67, 1007,
	69, 1007,
	70, 1007,
	87, 1007,
	413, 1007,
	458, 1007,
	641, 1007,
	-2, 965,
	-1, 3075,
	5, 62,
	-2, 1304,
	-1, 3180,
	41, 1393,
	-2, 1391,
	-1, 3402,
	5, 62,
	-2, 1307,
	-1, 3425,
	279, 315,
	-2, 1448,
	-1, 3426,
	279, 316,
	-2, 1488,
	-1, 3427,
	279, 317,
	-2, 1664,
	-1, 3600,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3632,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 51308

var yyAct = [...]int{
	553, 76, 3580, 3592, 3550, 1153, 3531, 483, 2418, 2561,
	3532, 3429, 2380, 2005, 986, 3491, 442, 3450, 1816, 3552,
	3332, 7, 3324, 3331, 6, 3472, 2723, 2379, 3394, 2676,
	3330, 5, 3333, 8, 3404, 2756, 2943, 3430, 3116, 2890,
	3292, 3248, 511, 3291, 3392, 1236, 513, 3180, 2587, 2847,
	2874, 2515, 2304, 2666, 1437, 2302, 2298, 495, 2848, 1237,
	3182, 2452, 502, 3032, 520, 2073, 2740, 3008, 2097, 3002,
	2986, 517, 1834, 3325, 479, 425, 428, 76, 1260, 467,
	467, 79, 473, 2031, 2677, 2766, 2588, 1887, 130, 2844,
	91, 130, 1003, 1436, 1020, 2775, 2022, 130, 2434, 1822,
	552, 956, 530, 2856, 2865, 2370, 2169, 470, 470, 1827,
	516, 130, 1047, 2059, 104, 2329, 1947, 1814, 2287, 1979,
	2531, 1439, 492, 2482, 1978, 1893, 1815, 2145, 2126, 1768,
	2280, 1734, 2018, 2569, 1154, 130, 958, 2055, 1332, 949,
	1413, 3329, 3, 2081, 2080, 2079, 1314, 1310, 1864, 1938,
	2591, 1161, 2409, 1982, 1773, 130, 470, 1076, 958, 1157,
	1055, 874, 2077, 948, 871, 1313, 130, 1992, 985, 498,
	1175, 2037, 867, 868, 67, 482, 445, 444, 1747, 1746,
	522, 999, 1165, 1405, 969, 974, 1408, 100, 96, 1054,
	81, 2371, 3632, 3627, 2387, 487, 3619, 3600, 3598, 2391,
	3575, 3545, 3480, 78, 3250, 3249, 2691, 1766, 460, 3159,
	454, 465, 448, 2721, 2973, 2396, 2395, 2894, 493, 3629,
	3625, 3623, 437, 2366, 3562, 3157, 3390, 3524, 83, 2987,
	89, 3300, 455, 2111, 2111, 3494, 3378, 2392, 2737, 2989,
	3160, 3389, 2553, 1259, 953, 36, 36, 36, 36, 3299,
	36, 3172, 2398, 2446, 2377, 3465, 3232, 2891, 3100, 3113,
	3114, 2935, 2378, 39, 2648, 2647, 3529, 3106, 2402, 74,
	2582, 3272, 3446, 2257, 2838, 862, 863, 864, 2781, 3398,
	968, 2630, 2631, 1315, 971, 1316, 976, 977, 2583, 3217,
	1948, 2300, 3501, 979, 2144, 481, 2629, 3393, 1769, 3398,
	2002, 2003, 1145, 2007, 2381, 1824, 1825, 77, 77, 77,
	77, 3208, 77, 2001, 2923, 3395, 1790, 2665, 77, 1192,
	1191, 1201, 1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1193, 77, 1023, 1203, 2959, 3395, 3230, 2965, 2967, 2966,
	2963, 2964, 2962, 2961, 2960, 87, 85, 86, 2035, 2322,
	1772, 1034, 2321, 1105, 2992, 2323, 2968, 2969, 1024, 1025,
	436, 944, 435, 2400, 118, 114, 115, 2394, 116, 1113,
	2397, 2033, 2034, 477, 1770, 1771, 2365, 2143, 1073, 2038,
	3399, 439, 447, 446, 449, 1358, 1393, 3056, 2041, 2043,
	2038, 2042, 453, 2390, 2049, 2990, 2991, 2993, 2994, 2995,
	3399, 120, 119, 2824, 2822, 2132, 1030, 965, 2131, 457,
	2608, 1986, 2293, 2294, 461, 2640, 1007, 1008, 419, 416,
	1011, 434, 76, 76, 2660, 3479, 489, 2478, 464, 1752,
	130, 1811, 1810, 478, 1809, 1394, 1080, 2289, 2292, 2293,
	2294, 2290, 1042, 2291, 2296, 1044, 1808, 2866, 2867, 1807,
	1806, 2470, 1043, 1009, 1010, 1109, 1110, 124, 2441, 121,
	3518, 122, 3186, 1089, 1031, 1032, 424, 2765, 1045, 2056,
	3009, 3010, 3011, 3012, 2475, 2157, 3432, 3431, 130, 2747,
	76, 3590, 3368, 3276, 1143, 3020, 3029, 2158, 2445, 1345,
	1801, 1148, 2289, 2292, 2293, 2294, 2290, 3439, 2291, 2296,
	2443, 2098, 3366, 3018, 946, 965, 3584, 3152, 1087, 3477,
	1212, 3158, 1037, 1214, 3266, 965, 1216, 1021, 1411, 1022,
	1024, 1025, 3151, 130, 983, 450, 451, 452, 458, 1780,
	462, 463, 466, 1394, 3147, 997, 3589, 130, 3475, 3476,
	3150, 2425, 3149, 1394, 3148, 1228, 2390, 1178, 1231, 1232,
	1233, 1234, 1235, 3274, 1240, 2667, 2668, 1120, 3003, 3146,
	1121, 975, 2669, 1041, 493, 112, 3006, 3176, 1420, 1421,
	1419, 1359, 2750, 420, 2393, 1089, 3540, 1213, 106, 2389,
	3004, 3005, 2738, 3154, 106, 3262, 3263, 1112, 2741, 2742,
	2743, 2744, 2745, 2092, 2093, 111, 3258, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 117, 1257, 1258, 1261, 1261, 1261, 1267, 1261, 1261,
	1267, 1261, 1267, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 2925, 2088, 1139, 1182, 3547, 2892, 2639, 113,
	77, 2403, 3268, 1006, 3396, 3104, 426, 131, 3456, 2988,
	438, 132, 3417, 3418, 133, 134, 1772, 3327, 3102, 1081,
	135, 1127, 3520, 2087, 3396, 3090, 2767, 2151, 2614, 1019,
	2390, 2407, 2444, 1263, 1265, 493, 1269, 1271, 2894, 1274,
	1770, 1771, 2040, 2638, 1753, 2720, 3298, 1372, 1375, 1376,
	1377, 1378, 1379, 1380, 1088, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 3209, 1360, 1361, 1362, 1363, 1339, 1343,
	1373, 1340, 1346, 1342, 1344, 1341, 3105, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 3541, 3173, 3500, 2447,
	1147, 494, 68, 494, 494, 131, 494, 2295, 2058, 132,
	1036, 3273, 133, 134, 2671, 131, 1140, 1137, 135, 132,
	3367, 88, 133, 134, 2423, 3175, 3591, 1038, 135, 3267,
	2749, 1089, 1099, 3155, 2295, 2924, 2926, 2927, 2928, 1000,
	1122, 429, 973, 972, 2670, 3596, 2388, 2460, 2461, 1774,
	456, 1017, 1018, 1016, 2177, 2171, 2172, 77, 2170, 2173,
	2174, 3489, 535, 534, 537, 538, 539, 540, 975, 2424,
	1015, 536, 1899, 2702, 2703, 2741, 2742, 2743, 2744, 2745,
	1748, 2426, 422, 2030, 430, 1776, 3240, 1077, 1775, 2295,
	2532, 2914, 1718, 427, 2915, 2180, 2916, 1133, 1262, 1264,
	1266, 1268, 1270, 1272, 1273, 1275, 427, 3246, 1942, 2179,
	2178, 965, 2695, 3033, 3034, 2028, 1374, 3614, 423, 1132,
	1128, 1129, 1130, 1131, 1134, 1135, 1136, 1138, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	2680, 965, 965, 2488, 955, 965, 108, 130, 2780, 2028,
	3633, 2030, 2500, 3630, 108, 1096, 958, 1192, 1191, 1201,
	1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1193, 3620,
	3556, 1203, 2534, 3551, 2030, 2307, 2309, 3601, 970, 874,
	3117, 988, 3278, 3043, 874, 488, 3044, 2763, 2469, 3554,
	97, 1085, 2465, 2449, 3119, 2448, 1090, 1097, 1098, 1100,
	1101, 1102, 1103, 1104, 2152, 1106, 1107, 1108, 1425, 1111,
	1423, 1114, 1115, 1116, 1117, 1118, 1094, 1039, 2076, 3594,
	2030, 967, 3595, 2621, 3593, 2620, 2108, 2619, 2029, 2463,
	2030, 2107, 467, 966, 1415, 2488, 1144, 978, 387, 965,
	1218, 1219, 2489, 2028, 2232, 3047, 1095, 2374, 1091, 958,
	130, 467, 77, 1438, 1217, 2127, 1215, 2810, 2628, 470,
	470, 2467, 2861, 470, 2466, 2326, 1327, 2211, 2229, 2200,
	130, 1414, 1318, 130, 2167, 1418, 2176, 1319, 470, 470,
	2091, 130, 1092, 1093, 427, 2089, 1308, 2007, 1203, 1997,
	99, 130, 130, 130, 130, 130, 2029, 1396, 1305, 1306,
	110, 109, 2495, 2488, 1837, 2308, 3271, 2492, 110, 109,
	2491, 2494, 470, 3118, 1220, 1084, 130, 1326, 1230, 2029,
	2536, 1229, 2499, 1183, 1742, 2540, 2496, 2535, 1331, 2533,
	1389, 1390, 1391, 1392, 2538, 1719, 998, 2318, 1441, 1220,
	467, 1193, 1033, 3140, 1203, 106, 2760, 2537, 1730, 1731,
	1732, 1733, 1744, 3042, 2236, 107, 111, 3434, 2568, 3457,
	3458, 1217, 2539, 2541, 3293, 2029, 3070, 470, 470, 470,
	427, 1764, 958, 2508, 1799, 2029, 1328, 2980, 2978, 3553,
	3555, 1783, 3454, 3455, 1871, 101, 2281, 102, 1005, 76,
	2947, 3303, 3302, 1738, 76, 1739, 1401, 1400, 3048, 1869,
	1870, 1868, 470, 1416, 3141, 1417, 1830, 470, 470, 1427,
	1735, 1218, 1219, 1152, 1174, 1026, 3320, 1434, 1781, 2555,
	1805, 1435, 2697, 2700, 130, 1721, 958, 130, 2698, 2699,
	2225, 1723, 1724, 3435, 1826, 1218, 1219, 3162, 2981, 2979,
	2118, 1013, 1857, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1193, 2948, 130, 1203, 1749, 76, 1750, 2504, 1804, 1178,
	987, 1192, 1191, 1201, 1202, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1193, 3163, 1891, 1203, 1897, 1778, 2863, 1756,
	1757, 1240, 2862, 1759, 1004, 1172, 1173, 1171, 1904, 1906,
	3473, 1866, 3507, 3622, 3506, 1172, 1173, 1171, 958, 1762,
	958, 1779, 1782, 958, 1174, 1898, 1900, 1173, 1171, 1736,
	958, 1028, 958, 958, 1174, 1800, 1000, 2860, 1803, 1172,
	1173, 1171, 130, 1862, 1403, 1174, 1915, 1865, 1761, 1171,
	493, 3604, 3581, 3603, 1819, 1835, 1836, 98, 1174, 2119,
	1014, 1358, 1324, 1046, 981, 1856, 1174, 1983, 1196, 1197,
	1198, 1199, 1200, 1193, 980, 1939, 1203, 1812, 3618, 958,
	958, 1924, 1927, 1939, 94, 2245, 3542, 1182, 1139, 1940,
	2224, 3495, 2223, 2006, 3624, 3019, 3013, 990, 991, 992,
	993, 994, 995, 996, 1035, 2011, 3049, 1853, 130, 130,
	130, 1172, 1173, 1171, 1895, 3565, 493, 2806, 1172, 1173,
	1171, 1151, 2139, 1977, 1172, 1173, 1171, 1828, 2689, 93,
	1174, 1987, 3544, 958, 1839, 1828, 1168, 1174, 1158, 1399,
	3502, 1159, 493, 1174, 874, 2013, 1192, 1191, 1201, 1202,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1193, 1840, 1000,
	1203, 1841, 1431, 3615, 3413, 1345, 1172, 1173, 1171, 92,
	1953, 1903, 1955, 3473, 1907, 1908, 1909, 1910, 1911, 3371,
	1725, 1726, 1727, 1728, 1729, 1174, 1862, 1201, 1202, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1193, 1936, 504, 1203,
	77, 2105, 1172, 1173, 1171, 1172, 1173, 1171, 2012, 3363,
	3474, 1867, 3321, 2557, 1849, 1851, 1852, 3364, 3616, 130,
	3233, 1174, 1850, 3170, 1174, 130, 130, 470, 470, 470,
	2019, 3169, 130, 2065, 2066, 2067, 2068, 1995, 3269, 2103,
	2104, 953, 2932, 2004, 2930, 1999, 1998, 1359, 3168, 1991,
	2415, 2197, 2198, 2199, 2016, 2069, 2070, 2071, 2014, 2061,
	2062, 2063, 2064, 1888, 3365, 1889, 3528, 1892, 1172, 1173,
	1171, 3167, 2039, 3161, 2044, 2045, 2046, 2047, 2048, 2972,
	2971, 2057, 2027, 2920, 2910, 3270, 2903, 1174, 2692, 2933,
	2414, 2931, 1916, 1917, 1918, 2412, 2401, 1079, 1922, 1923,
	1926, 1929, 1078, 1934, 1935, 2324, 3482, 2325, 3481, 1941,
	535, 534, 537, 538, 539, 540, 1823, 1052, 3436, 536,
	1899, 3433, 3377, 3265, 3264, 3245, 3177, 2085, 3145, 1946,
	3112, 1949, 1950, 3111, 3097, 3066, 1954, 3016, 1956, 1957,
	1051, 1844, 3015, 3014, 1962, 1963, 1964, 1965, 1966, 1967,
	1968, 1969, 1970, 1971, 1972, 1973, 2982, 1784, 2970, 2929,
	1787, 1788, 1789, 2921, 1791, 1792, 2913, 2911, 1793, 2907,
	2906, 2905, 2772, 2708, 1794, 2511, 2510, 2410, 1795, 1796,
	2140, 1797, 1798, 1372, 1375, 1376, 1377, 1378, 1379, 1380,
	1152, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 2113,
	1360, 1361, 1362, 1363, 1339, 1343, 1373, 1340, 1346, 1342,
	1344, 1341, 1758, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 3470, 3469, 3275, 3194, 2374, 3188, 1192, 1191,
	1201, 1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1193,
	3040, 2843, 1203, 2800, 2796, 2782, 2751, 2455, 94, 2227,
	2454, 2209, 1152, 2133, 2074, 2115, 2114, 1890, 1754, 2052,
	2053, 2054, 1751, 2886, 1433, 1432, 1426, 1976, 1187, 1990,
	1190, 1404, 1402, 1074, 1001, 433, 431, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1119, 1188, 1189, 1186, 1152, 2307,
	2309, 3126, 1152, 3187, 1267, 1192, 1191, 1201, 1202, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1193, 3126, 3504, 1203,
	3136, 130, 1192, 1191, 1201, 1202, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1193, 3135, 2503, 1203, 2142, 130, 130,
	130, 2938, 3487, 3383, 1152, 3461, 1152, 2938, 3442, 2938,
	3379, 2730, 1374, 1192, 1191, 1201, 1202, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1193, 3126, 3308, 1203, 2136, 2711,
	130, 2710, 130, 2453, 2164, 2453, 958, 2938, 3256, 2209,
	1152, 958, 3126, 3223, 3126, 3125, 2845, 2120, 2099, 2859,
	2841, 1085, 2125, 2709, 2101, 2102, 3079, 1152, 2116, 2831,
	2313, 2109, 1718, 958, 2166, 1152, 958, 2938, 2937, 2718,
	2717, 2124, 1162, 2714, 2715, 3521, 1857, 3493, 2201, 2859,
	2840, 3073, 1184, 2714, 2713, 2284, 1152, 2154, 2153, 2308,
	2284, 958, 2859, 2830, 1913, 2137, 1913, 1152, 1987, 1192,
	1191, 1201, 1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1193, 77, 1124, 1203, 3318, 535, 534, 537, 538, 539,
	540, 80, 1993, 2829, 536, 1899, 2149, 1913, 1238, 1192,
	1191, 1201, 1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1193, 2135, 2283, 1203, 2284, 2141, 1330, 1329, 2156, 2096,
	2111, 2159, 2148, 1866, 2876, 2731, 2716, 1862, 1192, 1191,
	1201, 1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1193,
	1085, 1123, 1203, 1082, 1083, 2209, 1083, 2509, 1994, 2012,
	1996, 2481, 2284, 1993, 1832, 1256, 2000, 2163, 2209, 1865,
	2095, 2251, 1192, 1191, 1201, 1202, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1193, 2301, 2189, 1203, 2129, 2250, 2310,
	2311, 2187, 2188, 1983, 2306, 1760, 1983, 2110, 1833, 945,
	1141, 2206, 1192, 1191, 1201, 1202, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1193, 1802, 1831, 1203, 2202, 130, 1994,
	2212, 1718, 1767, 1718, 1424, 1422, 130, 1312, 3414, 130,
	3380, 2875, 3289, 3191, 3087, 130, 2974, 2036, 130, 130,
	130, 2866, 2867, 441, 2060, 2038, 2688, 2056, 1987, 2314,
	2364, 1089, 2315, 2090, 2051, 2050, 1397, 1987, 1071, 2128,
	1987, 77, 3613, 3611, 3569, 3567, 3533, 2869, 2845, 2729,
	2416, 874, 1777, 2297, 1429, 1125, 1086, 2607, 2604, 2602,
	3452, 2196, 2606, 2605, 2603, 2256, 2258, 2244, 2873, 2872,
	2871, 2601, 2264, 2265, 2266, 2267, 2600, 1441, 499, 500,
	3388, 2512, 2186, 1843, 3444, 1912, 1914, 1166, 1167, 472,
	508, 3076, 2194, 1919, 2193, 415, 3214, 958, 3039, 130,
	2941, 2312, 2795, 1396, 2794, 493, 2707, 2706, 2705, 2376,
	2112, 2682, 958, 958, 958, 2368, 1164, 3280, 470, 3283,
	3376, 3375, 3181, 467, 2316, 2459, 3179, 2319, 2327, 2123,
	1414, 1951, 1952, 130, 470, 3261, 2363, 3260, 1958, 1959,
	1960, 1961, 432, 1755, 1318, 76, 2451, 417, 418, 3164,
	3165, 470, 2507, 2506, 1155, 2900, 2725, 2693, 2641, 1077,
	1325, 1069, 1053, 1050, 3585, 1156, 2480, 1049, 1002, 3198,
	3197, 958, 2083, 1835, 1836, 470, 2413, 958, 2213, 2214,
	2215, 2216, 2217, 470, 2411, 3071, 2084, 1428, 3522, 958,
	958, 3369, 2404, 2405, 2406, 2408, 2369, 2457, 2372, 2517,
	3183, 3021, 2422, 2420, 2421, 2946, 1048, 2242, 3022, 2724,
	1857, 1166, 1167, 130, 94, 2075, 2442, 1813, 1149, 1150,
	2192, 3513, 3512, 958, 3511, 3142, 2471, 2162, 2191, 1029,
	2373, 2375, 496, 3438, 2477, 2456, 3437, 3387, 2562, 3373,
	3312, 3284, 3213, 2633, 497, 80, 3386, 3295, 2453, 2462,
	3571, 3570, 2464, 2428, 2429, 2430, 2468, 3051, 2770, 2476,
	2474, 2584, 2586, 2473, 2233, 1983, 1983, 1983, 1983, 1983,
	2230, 2160, 1737, 2479, 1169, 2490, 3570, 2501, 2502, 2155,
	958, 2505, 2301, 2485, 2615, 2610, 493, 3571, 3305, 2704,
	2486, 1862, 2542, 2617, 1983, 2544, 1829, 1819, 2518, 945,
	491, 3343, 50, 3588, 2554, 82, 2585, 130, 130, 130,
	130, 130, 2519, 2524, 53, 2522, 3345, 19, 3344, 18,
	130, 3346, 20, 1, 130, 2517, 2543, 1915, 130, 1987,
	1987, 1987, 1987, 1987, 2150, 2589, 130, 3347, 21, 2618,
	1722, 1785, 2483, 2493, 2498, 3001, 1987, 3342, 15, 958,
	2625, 3341, 14, 3000, 2624, 3007, 2626, 2627, 1987, 3335,
	10, 1740, 3358, 34, 3356, 33, 2736, 2282, 2690, 3355,
	32, 2739, 2701, 2563, 2564, 2565, 2566, 2567, 3354, 28,
	3353, 27, 3352, 26, 2673, 2596, 2597, 958, 2599, 2595,
	3350, 23, 2598, 3349, 22, 2609, 3351, 24, 3340, 13,
	3337, 12, 493, 3336, 11, 2440, 1238, 2622, 3334, 9,
	3017, 1412, 3153, 984, 2094, 1075, 3374, 3279, 2694, 3281,
	3178, 3024, 2985, 493, 2984, 2433, 2632, 2432, 1070, 1765,
	2484, 2487, 2106, 2175, 2161, 1126, 2020, 3464, 467, 130,
	2746, 2674, 2681, 3231, 2683, 3099, 2893, 2069, 2889, 2071,
	2328, 2922, 2015, 3403, 947, 90, 2117, 1012, 395, 958,
	958, 958, 2017, 2385, 3282, 1072, 470, 2384, 2419, 2399,
	2757, 130, 470, 2032, 2078, 2082, 2383, 2382, 3277, 2386,
	1336, 1334, 2696, 1335, 2753, 1333, 130, 1338, 470, 1337,
	958, 3564, 470, 3499, 2748, 399, 470, 470, 1320, 470,
	3424, 2842, 2450, 1170, 546, 2777, 1845, 1846, 1847, 105,
	54, 3041, 2497, 475, 2785, 2790, 958, 476, 95, 103,
	130, 958, 1842, 401, 2777, 1211, 2190, 2320, 958, 872,
	873, 958, 958, 865, 2836, 2182, 1142, 3301, 3445, 2759,
	3490, 3416, 1160, 2764, 3447, 3385, 3294, 2768, 2769, 2755,
	2771, 2243, 1255, 1937, 2732, 519, 2613, 3069, 2807, 2712,
	3449, 1848, 533, 532, 2850, 76, 531, 528, 2773, 529,
	3397, 1396, 2684, 2685, 2686, 1238, 2687, 2799, 1163, 2779,
	1920, 1921, 2513, 1838, 2581, 1185, 2719, 506, 1981, 1974,
	2138, 2288, 2286, 2130, 2285, 2878, 1430, 1309, 2868, 2864,
	2882, 2883, 2884, 2299, 2805, 1985, 1980, 958, 1984, 958,
	2851, 2846, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 38,
	3050, 1027, 2787, 2792, 125, 2514, 421, 414, 2837, 2858,
	2820, 3207, 2195, 125, 2589, 84, 490, 501, 958, 25,
	17, 1040, 16, 2168, 982, 40, 42, 484, 2427, 2086,
	2881, 3423, 3549, 1056, 3579, 3471, 31, 30, 29, 2010,
	3348, 3357, 505, 2165, 2849, 3339, 2673, 2888, 882, 3338,
	3535, 125, 3534, 4, 2673, 2181, 1146, 2904, 2951, 2953,
	2955, 2956, 2853, 2870, 75, 2912, 2887, 2778, 35, 943,
	2, 125, 0, 0, 0, 2877, 0, 0, 0, 2879,
	0, 0, 125, 0, 76, 2898, 493, 0, 0, 0,
	0, 958, 0, 2976, 0, 1819, 0, 0, 0, 0,
	0, 0, 2949, 2674, 0, 0, 0, 0, 0, 0,
	0, 2674, 2072, 0, 0, 0, 0, 0, 0, 2208,
	0, 2210, 0, 0, 0, 0, 0, 0, 0, 2975,
	0, 0, 130, 0, 958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2219, 2220, 2221, 2222, 2942, 0,
	0, 2226, 2228, 0, 0, 2231, 0, 0, 2234, 2235,
	0, 0, 0, 2240, 2241, 0, 470, 2958, 0, 2247,
	2248, 0, 2249, 470, 0, 2252, 2253, 2777, 2254, 2255,
	0, 0, 2259, 2260, 2261, 2262, 2263, 0, 2722, 2517,
	2996, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2777, 3037, 3026, 2757, 0, 3023, 0,
	3028, 3025, 0, 958, 3055, 0, 0, 3027, 3052, 3053,
	2752, 0, 0, 3045, 3030, 493, 0, 0, 0, 0,
	3031, 0, 2997, 2998, 2999, 2758, 0, 0, 2681, 0,
	0, 2817, 2818, 2069, 2819, 3038, 0, 2821, 0, 2823,
	0, 0, 3101, 3103, 0, 0, 3046, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2797,
	0, 0, 3089, 0, 0, 3035, 3036, 0, 958, 3094,
	3095, 3096, 0, 0, 0, 958, 958, 958, 0, 0,
	0, 2589, 0, 3092, 0, 0, 3072, 0, 0, 0,
	3080, 2950, 2952, 2954, 2673, 3098, 3081, 3128, 0, 0,
	0, 0, 2895, 2896, 2897, 3109, 0, 0, 0, 2828,
	1261, 1261, 1261, 1267, 1261, 1261, 1267, 1261, 1267, 1276,
	1277, 3093, 2917, 2918, 2919, 0, 0, 0, 0, 0,
	0, 958, 2934, 0, 3138, 0, 125, 3107, 0, 0,
	3110, 0, 0, 2936, 0, 0, 0, 0, 0, 0,
	0, 2674, 0, 3139, 3137, 0, 0, 0, 0, 0,
	0, 3115, 3121, 3122, 0, 0, 0, 958, 0, 0,
	0, 0, 0, 3120, 0, 0, 0, 2939, 2940, 0,
	0, 0, 0, 0, 125, 0, 3143, 0, 0, 1263,
	1265, 0, 1269, 1271, 0, 1274, 0, 0, 0, 0,
	3199, 0, 1983, 0, 0, 0, 3144, 0, 1192, 1191,
	1201, 1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1193,
	0, 3156, 1203, 0, 2850, 3166, 0, 2850, 3219, 484,
	3171, 2525, 2526, 2527, 2528, 2529, 2530, 958, 3174, 3185,
	0, 2878, 0, 484, 130, 0, 0, 0, 0, 2306,
	0, 3226, 0, 3235, 0, 3237, 3238, 3239, 3201, 0,
	3196, 0, 3200, 3184, 0, 3202, 1987, 0, 0, 3189,
	3190, 0, 958, 3218, 3222, 0, 3216, 0, 0, 0,
	958, 0, 3215, 0, 130, 0, 130, 0, 3221, 1741,
	76, 2983, 0, 0, 2673, 0, 2673, 3225, 0, 0,
	0, 3212, 0, 0, 3242, 3234, 0, 3236, 0, 0,
	2673, 0, 0, 0, 0, 3123, 3124, 2611, 2612, 958,
	3259, 3243, 0, 0, 2849, 0, 0, 2849, 0, 0,
	0, 0, 0, 0, 0, 3257, 0, 0, 1162, 0,
	0, 3224, 0, 0, 0, 0, 3241, 0, 0, 0,
	0, 2674, 0, 2674, 1262, 1264, 1266, 1268, 1270, 1272,
	1273, 1275, 0, 0, 0, 0, 0, 2674, 2850, 493,
	76, 3287, 0, 0, 0, 0, 470, 0, 0, 0,
	0, 3310, 3311, 0, 958, 0, 0, 0, 3285, 0,
	0, 0, 3129, 0, 3130, 3286, 3131, 3133, 0, 0,
	0, 0, 0, 0, 3296, 0, 0, 0, 3288, 0,
	76, 0, 3192, 3193, 0, 3307, 3326, 3306, 2218, 0,
	0, 0, 3314, 3304, 3316, 0, 3319, 0, 958, 3309,
	958, 493, 958, 0, 0, 3317, 0, 0, 0, 130,
	0, 0, 0, 0, 2246, 0, 1863, 3328, 0, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 0, 0, 0, 0, 2849, 3381,
	2552, 0, 0, 0, 0, 0, 0, 3372, 3370, 3405,
	0, 0, 958, 0, 0, 0, 958, 3419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3400, 0,
	0, 0, 3407, 958, 3401, 3406, 0, 0, 0, 0,
	0, 493, 1930, 76, 3242, 3415, 0, 0, 0, 0,
	0, 0, 1943, 0, 0, 0, 0, 2589, 0, 0,
	3428, 0, 0, 0, 0, 0, 0, 2808, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 0,
	2816, 0, 3440, 0, 958, 0, 0, 0, 0, 0,
	3441, 2825, 2826, 2827, 3466, 0, 0, 0, 2832, 0,
	0, 0, 3453, 958, 3443, 3468, 0, 1192, 1191, 1201,
	1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1193, 0,
	0, 1203, 0, 0, 0, 0, 3459, 0, 0, 0,
	0, 3467, 0, 2852, 467, 0, 3486, 958, 0, 0,
	0, 0, 0, 1311, 0, 3488, 882, 0, 0, 0,
	0, 882, 0, 0, 0, 76, 0, 0, 0, 0,
	3405, 76, 470, 0, 0, 0, 3510, 0, 0, 958,
	0, 2885, 0, 0, 0, 3505, 3498, 3508, 3515, 0,
	0, 0, 958, 3503, 958, 3527, 2757, 0, 76, 958,
	3519, 3523, 0, 76, 3514, 0, 0, 0, 3517, 3543,
	0, 3559, 958, 2562, 3525, 0, 3539, 2006, 3557, 3538,
	0, 3546, 3561, 467, 3563, 3558, 3537, 3560, 3536, 3568,
	130, 76, 3566, 3572, 3462, 76, 76, 3574, 0, 0,
	76, 0, 3573, 0, 0, 0, 3576, 0, 3548, 0,
	0, 470, 0, 3478, 958, 2551, 125, 0, 0, 130,
	0, 1407, 1410, 0, 0, 3597, 76, 0, 0, 76,
	2550, 0, 3605, 3517, 130, 0, 125, 3582, 3607, 125,
	3602, 0, 1407, 1410, 0, 0, 0, 1440, 0, 76,
	2556, 76, 0, 0, 0, 76, 0, 125, 125, 125,
	125, 125, 0, 3517, 0, 0, 3621, 0, 0, 0,
	76, 0, 0, 76, 0, 0, 0, 0, 76, 0,
	0, 0, 1745, 76, 3628, 0, 3517, 0, 3517, 0,
	0, 0, 0, 0, 0, 2811, 2812, 2813, 2814, 2815,
	0, 0, 0, 0, 493, 0, 0, 3517, 3322, 0,
	0, 0, 0, 0, 0, 3517, 0, 0, 0, 0,
	3517, 0, 1192, 1191, 1201, 1202, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1193, 0, 0, 1203, 1192, 1191, 1201,
	1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1193, 2520,
	0, 1203, 3061, 3062, 3063, 0, 3065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3074,
	3075, 2207, 3077, 0, 0, 3078, 0, 1192, 1191, 1201,
	1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1193, 0,
	484, 1203, 0, 125, 0, 0, 0, 0, 3091, 1192,
	1191, 1201, 1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1193, 0, 0, 1203, 0, 0, 0, 0, 125, 1192,
	1191, 1201, 1202, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1193, 0, 1440, 1203, 1191, 1201, 1202, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1193, 0, 0, 1203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2754, 0,
	0, 0, 0, 0, 3127, 1896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3132, 3134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 0,
	1896, 1896, 1896, 0, 0, 0, 1896, 1896, 1896, 1896,
	0, 1896, 1896, 0, 0, 0, 882, 1896, 2801, 0,
	0, 0, 0, 0, 518, 0, 2134, 0, 0, 0,
	504, 0, 0, 0, 0, 0, 0, 1896, 1896, 1896,
	1896, 0, 0, 1896, 1896, 1896, 1896, 1896, 0, 0,
	0, 0, 1896, 1896, 1896, 1896, 1896, 1896, 1896, 1896,
	1896, 1896, 1896, 1896, 125, 125, 125, 0, 0, 0,
	126, 882, 2839, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 1440, 3203, 3204, 3205, 3206,
	0, 0, 0, 485, 0, 0, 3210, 3211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 883, 0, 0, 126, 951, 0,
	0, 0, 0, 3227, 3228, 3229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	2203, 2204, 2205, 0, 0, 0, 0, 0, 126, 0,
	544, 0, 0, 0, 0, 0, 0, 0, 3252, 3253,
	3254, 0, 3255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 125, 125, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2237, 2238, 2239, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3297, 0, 0, 0,
	881, 0, 0, 0, 950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3313, 127, 3315, 989, 0, 2634, 2635,
	2636, 2637, 0, 127, 2642, 2643, 2644, 2645, 2646, 0,
	3323, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 0, 2661, 2662, 2663, 2664, 0, 2675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 127, 952, 0, 0, 0, 0, 0, 0, 0,
	3382, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3391, 127, 0, 0, 0, 0, 3402, 0, 0, 0,
	0, 0, 127, 3408, 0, 3409, 3410, 3411, 3412, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 0, 0,
	2726, 2727, 2728, 2362, 0, 1238, 400, 408, 409, 0,
	0, 0, 0, 0, 0, 3082, 3083, 3084, 3085, 0,
	0, 3086, 0, 0, 3088, 0, 2336, 0, 0, 0,
	0, 0, 0, 1238, 2343, 0, 0, 0, 2458, 0,
	0, 0, 397, 0, 0, 398, 0, 0, 406, 407,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2330, 0, 0,
	0, 0, 3460, 0, 0, 3463, 0, 0, 0, 2340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 403, 0, 0, 0, 0,
	2331, 0, 0, 0, 0, 0, 0, 125, 2521, 0,
	0, 0, 0, 0, 0, 0, 404, 0, 0, 3497,
	2339, 0, 0, 0, 2121, 2122, 125, 0, 0, 0,
	2545, 2546, 0, 2547, 2548, 485, 0, 2549, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 2558, 2559, 0, 0, 0, 125, 0, 484, 1179,
	0, 0, 3530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2344, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 2350, 0,
	0, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 0, 0, 0, 2899, 0, 2901, 2902, 0, 0,
	0, 0, 2623, 2908, 2909, 0, 402, 392, 393, 0,
	413, 0, 2342, 0, 394, 396, 1440, 390, 412, 411,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 3609, 3610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 0, 405, 0, 0, 0, 73, 0, 0, 39,
	0, 2354, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 2977, 1896, 0, 0, 0, 1896, 1896, 1896, 1896,
	1896, 0, 0, 0, 0, 0, 0, 0, 2361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	2347, 0, 0, 0, 0, 1896, 0, 0, 0, 0,
	0, 2356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3359, 0, 0, 3578, 3581, 3577,
	0, 0, 0, 1181, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 2337, 125, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 484, 0, 0, 0, 0,
	0, 125, 0, 0, 125, 2317, 1440, 0, 882, 0,
	0, 2333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2346, 2809, 0, 0, 0, 0, 0, 0, 0, 0,
	41, 69, 44, 43, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3360, 0, 0, 0, 0,
	0, 2833, 2834, 2835, 0, 0, 0, 0, 0, 0,
	0, 0, 47, 72, 71, 125, 3108, 0, 0, 45,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2334,
	2338, 2341, 0, 2345, 2348, 2349, 2351, 2352, 2353, 2355,
	2357, 2358, 2359, 2360, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 3420, 3421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2880, 0, 126,
	55, 56, 883, 3361, 0, 0, 0, 883, 0, 0,
	0, 3448, 3451, 0, 0, 0, 0, 64, 0, 65,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2336, 0, 0, 125,
	0, 0, 0, 0, 2343, 0, 0, 0, 0, 0,
	1896, 2945, 3362, 70, 0, 51, 52, 59, 1896, 60,
	1440, 0, 2957, 0, 0, 0, 0, 0, 0, 0,
	1395, 0, 0, 0, 0, 0, 0, 0, 3509, 0,
	2332, 0, 126, 0, 0, 0, 0, 0, 0, 2340,
	0, 0, 0, 0, 0, 0, 36, 0, 3451, 0,
	0, 0, 126, 0, 0, 126, 0, 0, 881, 0,
	57, 0, 0, 881, 1321, 0, 73, 0, 0, 39,
	0, 0, 0, 126, 126, 126, 126, 126, 0, 0,
	0, 0, 882, 125, 125, 125, 125, 125, 0, 0,
	2339, 0, 0, 0, 3244, 0, 484, 0, 0, 0,
	125, 0, 0, 0, 484, 0, 0, 0, 77, 1896,
	0, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3359, 0, 3606, 0, 0, 3057,
	3058, 3059, 3060, 0, 0, 0, 0, 3064, 2344, 0,
	0, 3067, 3068, 0, 0, 0, 0, 1398, 2350, 0,
	0, 0, 0, 1406, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 1406, 1409, 0, 0, 0, 0,
	0, 0, 2342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 1817, 126,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	41, 69, 44, 43, 46, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 126, 3360, 0, 0, 0, 0,
	0, 1179, 0, 0, 0, 0, 127, 125, 1859, 127,
	0, 2354, 47, 72, 71, 0, 0, 0, 0, 45,
	0, 0, 125, 0, 0, 0, 0, 127, 127, 127,
	127, 127, 0, 0, 0, 0, 0, 0, 2361, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2347, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 2356, 0, 0, 485, 0, 0, 0, 0, 0,
	55, 56, 0, 3361, 505, 0, 0, 0, 0, 0,
	0, 0, 883, 0, 0, 0, 0, 64, 0, 65,
	0, 0, 0, 2337, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 0,
	0, 2333, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 126, 126, 0, 1821, 0, 0, 883, 2335, 0,
	0, 882, 3362, 70, 0, 51, 52, 59, 0, 60,
	2346, 1859, 0, 0, 0, 951, 0, 0, 0, 0,
	0, 0, 1818, 127, 0, 0, 1821, 0, 1821, 0,
	0, 1901, 0, 0, 0, 0, 0, 0, 1902, 0,
	1821, 1821, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 1181, 0, 0, 0, 3251,
	0, 0, 1858, 0, 0, 0, 0, 0, 881, 2334,
	2338, 2341, 0, 2345, 2348, 2349, 2351, 2352, 2353, 2355,
	2357, 2358, 2359, 2360, 0, 0, 0, 1944, 1945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 126, 126, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 3290, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 950, 36, 37, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 73, 0, 0, 39, 61, 62, 0, 0,
	0, 0, 0, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 127, 127, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	48, 0, 0, 0, 77, 1858, 0, 0, 0, 952,
	2332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 36, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 73, 0, 0, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 882, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 127, 127, 0, 0, 0, 0, 0, 127, 0,
	3359, 0, 0, 0, 0, 3631, 41, 69, 44, 43,
	46, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 47, 72,
	71, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 63,
	1896, 0, 1896, 0, 1896, 1896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 41, 69, 44, 43,
	46, 0, 0, 126, 0, 0, 55, 56, 0, 0,
	0, 3360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 64, 0, 65, 0, 0, 47, 72,
	71, 0, 0, 0, 0, 45, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 0, 0,
	66, 0, 126, 0, 485, 0, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 73, 0, 0, 39,
	125, 505, 0, 0, 0, 0, 0, 0, 49, 70,
	0, 51, 52, 59, 0, 60, 55, 56, 0, 3361,
	3586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 0, 65, 0, 0, 77, 0,
	484, 0, 484, 0, 0, 0, 3608, 0, 0, 0,
	0, 3612, 1859, 0, 0, 0, 0, 0, 0, 0,
	66, 0, 0, 0, 3359, 0, 0, 0, 0, 3626,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3362, 70,
	0, 51, 52, 59, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2147, 0, 0, 0, 0, 2147,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2147, 0, 0, 2147, 0, 127, 0, 0, 0,
	41, 69, 44, 43, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3360, 0, 0, 0, 2185,
	0, 0, 0, 0, 0, 0, 127, 0, 1821, 0,
	0, 0, 47, 72, 71, 0, 0, 0, 68, 45,
	126, 0, 0, 0, 0, 125, 0, 0, 126, 0,
	0, 485, 0, 0, 0, 0, 0, 126, 0, 0,
	126, 0, 0, 0, 883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2367, 0, 0, 0,
	55, 56, 0, 3361, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 882, 0, 0, 64, 0, 65,
	0, 0, 0, 0, 0, 36, 0, 0, 68, 0,
	0, 0, 0, 36, 0, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 66, 73, 0, 57, 39, 0,
	0, 126, 0, 73, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3362, 70, 0, 51, 52, 59, 0, 60,
	0, 0, 0, 0, 0, 126, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3359, 0, 0, 0, 0, 3617, 0,
	0, 3359, 0, 0, 0, 0, 3599, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 127, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	2431, 2435, 2439, 0, 0, 0, 0, 0, 0, 41,
	69, 44, 43, 46, 0, 0, 484, 41, 69, 44,
	43, 46, 0, 0, 3360, 0, 0, 0, 0, 0,
	0, 0, 3360, 0, 0, 0, 0, 0, 0, 0,
	0, 47, 72, 71, 0, 484, 0, 0, 45, 47,
	72, 71, 0, 0, 0, 127, 45, 0, 0, 2147,
	484, 0, 68, 0, 0, 2472, 0, 0, 2590, 126,
	126, 126, 126, 126, 0, 0, 0, 1821, 1821, 0,
	0, 0, 485, 0, 0, 0, 126, 0, 0, 127,
	485, 0, 0, 0, 0, 0, 0, 0, 126, 55,
	56, 0, 3361, 0, 0, 0, 0, 55, 56, 0,
	3361, 1821, 0, 0, 0, 0, 64, 0, 65, 0,
	0, 0, 1821, 0, 64, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 1818, 0, 36, 0, 2679,
	0, 66, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 73, 2560, 127,
	39, 3362, 70, 0, 51, 52, 59, 0, 60, 3362,
	70, 0, 51, 52, 59, 0, 60, 0, 0, 0,
	1858, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 77,
	3583, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 3359, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 127, 127, 127, 127, 0, 0,
	0, 0, 0, 0, 2367, 2678, 2784, 2789, 0, 0,
	127, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 69, 44, 43, 46, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3360, 0, 0, 0,
	0, 0, 0, 36, 0, 0, 0, 2733, 2734, 2735,
	0, 68, 0, 47, 72, 71, 0, 57, 0, 68,
	45, 0, 0, 73, 0, 0, 39, 2590, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 2762, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 2793, 77, 0, 0, 0, 2798,
	0, 55, 56, 0, 3361, 0, 2802, 0, 0, 2803,
	2804, 0, 0, 0, 0, 0, 0, 127, 64, 0,
	65, 3359, 0, 0, 0, 0, 3516, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2786, 2791, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 3362, 70, 0, 51, 52, 59, 0,
	60, 0, 0, 881, 0, 1821, 0, 2857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 41, 69, 44,
	43, 46, 0, 0, 0, 0, 2857, 0, 0, 0,
	0, 0, 3360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 47,
	72, 71, 0, 0, 0, 0, 45, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2944,
	0, 0, 0, 0, 0, 0, 0, 55, 56, 0,
	3361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 65, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 2435, 0, 2590, 0, 0, 0, 0, 0,
	0, 66, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3362,
	70, 0, 51, 52, 59, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 2679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2944, 0, 0, 0,
	0, 0, 0, 2944, 2944, 2944, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 485, 0,
	0, 0, 0, 0, 0, 2678, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3220, 0, 0, 0, 0, 0, 0, 0, 2944, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 126, 0, 0, 0, 0, 0, 3247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2944, 0, 2944, 0,
	2944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2678, 0, 0, 0, 3384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 0,
	0, 1821, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 2678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2944, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3492, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3496, 0, 1821, 0, 0, 0, 0, 2944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 841, 0, 354, 603, 845, 688, 711, 854, 717,
	719, 782, 664, 759, 290, 708, 665, 0, 0, 656,
	512, 657, 689, 208, 509, 815, 760, 843, 745, 775,
	785, 207, 196, 752, 751, 832, 700, 699, 780, 828,
	842, 0, 3492, 611, 253, 0, 0, 378, 342, 273,
	0, 0, 743, 0, 596, 597, 728, 784, 676, 771,
	847, 709, 776, 848, 77, 0, 1152, 0, 510, 535,
	534, 537, 538, 539, 540, 0, 0, 137, 536, 541,
	542, 543, 0, 738, 781, 859, 655, 507, 526, 660,
	610, 0, 833, 696, 697, 212, 0, 0, 0, 0,
	0, 0, 0, 741, 758, 800, 725, 373, 787, 796,
	810, 718, 307, 226, 0, 0, 0, 0, 523, 524,
	1894, 0, 0, 0, 626, 0, 525, 0, 670, 521,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 527, 0, 0, 0, 675, 653, 694, 802,
	654, 652, 274, 667, 599, 831, 726, 242, 154, 837,
	724, 624, 790, 671, 819, 712, 250, 669, 155, 666,
	672, 710, 285, 799, 805, 608, 158, 252, 816, 690,
	703, 197, 0, 318, 777, 372, 515, 763, 317, 254,
	365, 791, 839, 371, 713, 349, 379, 383, 219, 746,
	188, 339, 210, 205, 695, 809, 659, 227, 306, 200,
	246, 729, 783, 691, 193, 794, 770, 821, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 817, 804, 823, 686,
	673, 678, 674, 702, 840, 236, 228, 824, 822, 376,
	144, 327, 326, 716, 235, 807, 145, 136, 313, 146,
	243, 163, 827, 385, 176, 248, 356, 514, 222, 284,
	199, 779, 294, 701, 157, 309, 266, 268, 265, 269,
	225, 140, 147, 803, 311, 329, 360, 178, 345, 138,
	139, 141, 149, 320, 150, 151, 846, 260, 214, 218,
	229, 240, 778, 316, 346, 377, 772, 173, 166, 348,
	370, 183, 328, 331, 384, 801, 0, 168, 835, 818,
	765, 731, 737, 661, 0, 167, 797, 693, 705, 685,
	773, 684, 224, 789, 368, 369, 198, 386, 602, 850,
	169, 668, 849, 281, 289, 280, 852, 364, 836, 766,
	755, 753, 662, 834, 764, 754, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 757, 0, 164,
	0, 343, 844, 861, 347, 180, 679, 811, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 793, 858, 293, 319, 187, 374, 340, 211, 613,
	286, 625, 619, 621, 620, 617, 618, 616, 615, 614,
	627, 600, 601, 604, 605, 606, 748, 838, 663, 609,
	814, 622, 623, 786, 856, 598, 194, 547, 639, 640,
	641, 548, 642, 643, 549, 550, 644, 645, 646, 647,
	551, 648, 649, 650, 628, 629, 630, 631, 632, 633,
	634, 635, 638, 636, 637, 744, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 607, 159, 170, 251, 857, 312,
	221, 651, 658, 677, 680, 681, 682, 683, 687, 692,
	0, 698, 704, 706, 707, 715, 720, 721, 722, 723,
	730, 732, 733, 734, 735, 736, 739, 740, 742, 749,
	750, 756, 761, 762, 768, 769, 0, 792, 795, 612,
	806, 808, 812, 813, 820, 825, 826, 851, 855, 860,
	375, 203, 747, 767, 798, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	830, 727, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 714, 161, 829, 853, 774, 788, 841, 0, 354,
	603, 845, 688, 711, 854, 717, 719, 782, 664, 759,
	290, 708, 665, 0, 0, 656, 512, 657, 689, 208,
	509, 815, 760, 843, 745, 775, 785, 207, 196, 752,
	751, 832, 700, 699, 780, 828, 842, 0, 0, 611,
	253, 0, 0, 378, 342, 273, 0, 0, 743, 0,
	596, 597, 728, 784, 676, 771, 847, 709, 776, 848,
	77, 0, 0, 0, 510, 535, 534, 537, 538, 539,
	540, 0, 0, 137, 536, 541, 542, 543, 0, 738,
	781, 859, 655, 507, 526, 660, 610, 0, 833, 696,
	697, 212, 0, 0, 0, 0, 0, 0, 0, 741,
	758, 800, 725, 373, 787, 796, 810, 718, 307, 226,
	0, 0, 0, 0, 523, 524, 503, 0, 0, 0,
	626, 0, 525, 0, 670, 521, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 527, 0,
	0, 0, 675, 653, 694, 802, 654, 652, 274, 667,
	599, 831, 726, 242, 154, 837, 724, 624, 790, 671,
	819, 712, 250, 669, 155, 666, 672, 710, 285, 799,
	805, 608, 158, 252, 816, 690, 703, 197, 0, 318,
	777, 372, 515, 763, 317, 254, 365, 791, 839, 371,
	713, 349, 379, 383, 219, 746, 188, 339, 210, 205,
	695, 809, 659, 227, 306, 200, 246, 729, 783, 691,
	193, 794, 770, 821, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 817, 804, 823, 686, 673, 678, 674, 702,
	840, 236, 228, 824, 822, 376, 144, 327, 326, 716,
	235, 807, 145, 136, 313, 146, 243, 163, 827, 385,
	176, 248, 356, 514, 222, 284, 199, 779, 294, 701,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 803,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 846, 260, 214, 218, 229, 240, 778, 316,
	346, 377, 772, 173, 166, 348, 370, 183, 328, 331,
	384, 801, 0, 168, 835, 818, 765, 731, 737, 661,
	0, 167, 797, 693, 705, 685, 773, 684, 224, 789,
	368, 369, 198, 386, 602, 850, 169, 668, 849, 281,
	289, 280, 852, 364, 836, 766, 755, 753, 662, 834,
	764, 754, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 757, 0, 164, 0, 343, 844, 861,
	347, 180, 679, 811, 359, 143, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 793, 858, 293,
	319, 187, 374, 340, 211, 613, 286, 625, 619, 621,
	620, 617, 618, 616, 615, 614, 627, 600, 601, 604,
	605, 606, 748, 838, 663, 609, 814, 622, 623, 786,
	856, 598, 194, 547, 639, 640, 641, 548, 642, 643,
	549, 550, 644, 645, 646, 647, 551, 648, 649, 650,
	628, 629, 630, 631, 632, 633, 634, 635, 638, 636,
	637, 744, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	607, 159, 170, 251, 857, 312, 221, 651, 658, 677,
	680, 681, 682, 683, 687, 692, 0, 698, 704, 706,
	707, 715, 720, 721, 722, 723, 730, 732, 733, 734,
	735, 736, 739, 740, 742, 749, 750, 756, 761, 762,
	768, 769, 0, 792, 795, 612, 806, 808, 812, 813,
	820, 825, 826, 851, 855, 860, 375, 203, 747, 767,
	798, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	148, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 830, 727, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 714, 161, 829,
	853, 774, 788, 841, 0, 354, 603, 845, 688, 711,
	854, 717, 719, 782, 664, 759, 290, 708, 665, 0,
	0, 656, 512, 657, 689, 208, 509, 815, 760, 843,
	745, 775, 785, 207, 196, 752, 751, 832, 700, 699,
	780, 828, 842, 0, 0, 611, 253, 0, 0, 378,
	342, 273, 0, 0, 743, 0, 596, 597, 728, 784,
	676, 771, 847, 709, 776, 848, 77, 0, 1152, 0,
	510, 535, 534, 537, 538, 539, 540, 0, 0, 137,
	536, 541, 542, 543, 0, 738, 781, 859, 655, 507,
	526, 660, 610, 0, 833, 696, 697, 212, 0, 0,
	0, 0, 0, 0, 0, 741, 758, 800, 725, 373,
	787, 796, 810, 718, 307, 226, 0, 0, 0, 0,
	523, 524, 0, 0, 0, 0, 626, 0, 525, 0,
	670, 521, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 527, 0, 0, 0, 675, 653,
	694, 802, 654, 652, 274, 667, 599, 831, 726, 242,
	154, 837, 724, 624, 790, 671, 819, 712, 250, 669,
	155, 666, 672, 710, 285, 799, 805, 608, 158, 252,
	816, 690, 703, 197, 0, 318, 777, 372, 515, 763,
	317, 254, 365, 791, 839, 371, 713, 349, 379, 383,
	219, 746, 188, 339, 210, 205, 695, 809, 659, 227,
	306, 200, 246, 729, 783, 691, 193, 794, 770, 821,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 817, 804,
	823, 686, 673, 678, 674, 702, 840, 236, 228, 824,
	822, 376, 144, 327, 326, 716, 235, 807, 145, 136,
	313, 146, 243, 163, 827, 385, 176, 248, 356, 514,
	222, 284, 199, 779, 294, 701, 157, 309, 266, 268,
	265, 269, 225, 140, 147, 803, 311, 329, 360, 178,
	345, 138, 139, 141, 149, 320, 150, 151, 846, 260,
	214, 218, 229, 240, 778, 316, 346, 377, 772, 173,
	166, 348, 370, 183, 328, 331, 384, 801, 0, 168,
	835, 818, 765, 731, 737, 661, 0, 167, 797, 693,
	705, 685, 773, 684, 224, 789, 368, 369, 198, 386,
	602, 850, 169, 668, 849, 281, 289, 280, 852, 364,
	836, 766, 755, 753, 662, 834, 764, 754, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 757,
	0, 164, 0, 343, 844, 861, 347, 180, 679, 811,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 793, 858, 293, 319, 187, 374, 340,
	211, 613, 286, 625, 619, 621, 620, 617, 618, 616,
	615, 614, 627, 600, 601, 604, 605, 606, 748, 838,
	663, 609, 814, 622, 623, 786, 856, 598, 194, 547,
	639, 640, 641, 548, 642, 643, 549, 550, 644, 645,
	646, 647, 551, 648, 649, 650, 628, 629, 630, 631,
	632, 633, 634, 635, 638, 636, 637, 744, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 607, 159, 170, 251,
	857, 312, 221, 651, 658, 677, 680, 681, 682, 683,
	687, 692, 0, 698, 704, 706, 707, 715, 720, 721,
	722, 723, 730, 732, 733, 734, 735, 736, 739, 740,
	742, 749, 750, 756, 761, 762, 768, 769, 0, 792,
	795, 612, 806, 808, 812, 813, 820, 825, 826, 851,
	855, 860, 375, 203, 747, 767, 798, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 830, 727, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 714, 161, 829, 853, 774, 788, 841,
	0, 354, 603, 845, 688, 711, 854, 717, 719, 782,
	664, 759, 290, 708, 665, 0, 0, 656, 512, 657,
	689, 208, 509, 815, 760, 843, 745, 775, 785, 207,
	196, 752, 751, 832, 700, 699, 780, 828, 842, 0,
	0, 611, 253, 0, 0, 378, 342, 273, 0, 0,
	743, 0, 596, 597, 728, 784, 676, 771, 847, 709,
	776, 848, 77, 0, 0, 0, 510, 535, 534, 537,
	538, 539, 540, 0, 0, 137, 536, 541, 542, 543,
	0, 738, 781, 859, 655, 507, 526, 660, 610, 0,
	833, 696, 697, 212, 0, 0, 0, 0, 0, 0,
	0, 741, 758, 800, 725, 373, 787, 796, 810, 718,
	307, 226, 0, 0, 0, 0, 523, 524, 1894, 0,
	0, 0, 626, 0, 525, 0, 670, 521, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	527, 0, 0, 0, 675, 653, 694, 802, 654, 652,
	274, 667, 599, 831, 726, 242, 154, 837, 724, 624,
	790, 671, 819, 712, 250, 669, 155, 666, 672, 710,
	285, 799, 805, 608, 158, 252, 816, 690, 703, 197,
	0, 318, 777, 372, 515, 763, 317, 254, 365, 791,
	839, 371, 713, 349, 379, 383, 219, 746, 188, 339,
	210, 205, 695, 809, 659, 227, 306, 200, 246, 729,
	783, 691, 193, 794, 770, 821, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 817, 804, 823, 686, 673, 678,
	674, 702, 840, 236, 228, 824, 822, 376, 144, 327,
	326, 716, 235, 807, 145, 136, 313, 146, 243, 163,
	827, 385, 176, 248, 356, 514, 222, 284, 199, 779,
	294, 701, 157, 309, 266, 268, 265, 269, 225, 140,
	147, 803, 311, 329, 360, 178, 345, 138, 139, 141,
	149, 320, 150, 151, 846, 260, 214, 218, 229, 240,
	778, 316, 346, 377, 772, 173, 166, 348, 370, 183,
	328, 331, 384, 801, 0, 168, 835, 818, 765, 731,
	737, 661, 0, 167, 797, 693, 705, 685, 773, 684,
	224, 789, 368, 369, 198, 386, 602, 850, 169, 668,
	849, 281, 289, 280, 852, 364, 836, 766, 755, 753,
	662, 834, 764, 754, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 757, 0, 164, 0, 343,
	844, 861, 347, 180, 679, 811, 359, 143, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 793,
	858, 293, 319, 187, 374, 340, 211, 613, 286, 625,
	619, 621, 620, 617, 618, 616, 615, 614, 627, 600,
	601, 604, 605, 606, 748, 838, 663, 609, 814, 622,
	623, 786, 856, 598, 194, 547, 639, 640, 641, 548,
	642, 643, 549, 550, 644, 645, 646, 647, 551, 648,
	649, 650, 628, 629, 630, 631, 632, 633, 634, 635,
	638, 636, 637, 744, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 607, 159, 170, 251, 857, 312, 221, 651,
	658, 677, 680, 681, 682, 683, 687, 692, 0, 698,
	704, 706, 707, 715, 720, 721, 722, 723, 730, 732,
	733, 734, 735, 736, 739, 740, 742, 749, 750, 756,
	761, 762, 768, 769, 0, 792, 795, 612, 806, 808,
	812, 813, 820, 825, 826, 851, 855, 860, 375, 203,
	747, 767, 798, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 148, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 830, 727,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 714,
	161, 829, 853, 774, 788, 841, 0, 354, 603, 845,
	688, 711, 854, 717, 719, 782, 664, 759, 290, 708,
	665, 0, 0, 656, 512, 657, 689, 208, 509, 815,
	760, 843, 745, 775, 785, 207, 196, 752, 751, 832,
	700, 699, 780, 828, 842, 0, 0, 611, 253, 0,
	0, 378, 342, 273, 0, 0, 743, 0, 596, 597,
	728, 784, 676, 771, 847, 709, 2008, 848, 77, 0,
	0, 0, 510, 535, 534, 537, 538, 539, 540, 0,
	0, 137, 536, 541, 542, 543, 2009, 738, 781, 859,
	655, 507, 526, 660, 610, 0, 833, 696, 697, 212,
	0, 0, 0, 0, 0, 0, 0, 741, 758, 800,
	725, 373, 787, 796, 810, 718, 307, 226, 0, 0,
	0, 0, 523, 524, 0, 0, 0, 0, 626, 0,
	525, 0, 670, 521, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 527, 0, 0, 0,
	675, 653, 694, 802, 654, 652, 274, 667, 599, 831,
	726, 242, 154, 837, 724, 624, 790, 671, 819, 712,
	250, 669, 155, 666, 672, 710, 285, 799, 805, 608,
	158, 252, 816, 690, 703, 197, 0, 318, 777, 372,
	515, 763, 317, 254, 365, 791, 839, 371, 713, 349,
	379, 383, 219, 746, 188, 339, 210, 205, 695, 809,
	659, 227, 306, 200, 246, 729, 783, 691, 193, 794,
	770, 821, 338, 362, 160, 270, 363, 382, 177, 355,
	271, 278, 190, 192, 191, 172, 332, 361, 182, 195,
	817, 804, 823, 686, 673, 678, 674, 702, 840, 236,
	228, 824, 822, 376, 144, 327, 326, 716, 235, 807,
	145, 136, 313, 146, 243, 163, 827, 385, 176, 248,
	356, 514, 222, 284, 199, 779, 294, 701, 157, 309,
	266, 268, 265, 269, 225, 140, 147, 803, 311, 329,
	360, 178, 345, 138, 139, 141, 149, 320, 150, 151,
	846, 260, 214, 218, 229, 240, 778, 316, 346, 377,
	772, 173, 166, 348, 370, 183, 328, 331, 384, 801,
	0, 168, 835, 818, 765, 731, 737, 661, 0, 167,
	797, 693, 705, 685, 773, 684, 224, 789, 368, 369,
	198, 386, 602, 850, 169, 668, 849, 281, 289, 280,
	852, 364, 836, 766, 755, 753, 662, 834, 764, 754,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 757, 0, 164, 0, 343, 844, 861, 347, 180,
	679, 811, 359, 143, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 793, 858, 293, 319, 187,
	374, 340, 211, 613, 286, 625, 619, 621, 620, 617,
	618, 616, 615, 614, 627, 600, 601, 604, 605, 606,
	748, 838, 663, 609, 814, 622, 623, 786, 856, 598,
	194, 547, 639, 640, 641, 548, 642, 643, 549, 550,
	644, 645, 646, 647, 551, 648, 649, 650, 628, 629,
	630, 631, 632, 633, 634, 635, 638, 636, 637, 744,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 607, 159,
	170, 251, 857, 312, 221, 651, 658, 677, 680, 681,
	682, 683, 687, 692, 0, 698, 704, 706, 707, 715,
	720, 721, 722, 723, 730, 732, 733, 734, 735, 736,
	739, 740, 742, 749, 750, 756, 761, 762, 768, 769,
	0, 792, 795, 612, 806, 808, 812, 813, 820, 825,
	826, 851, 855, 860, 375, 203, 747, 767, 798, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 148, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 830, 727, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 714, 161, 829, 853, 774,
	788, 841, 0, 354, 603, 845, 688, 711, 854, 717,
	719, 782, 664, 759, 290, 708, 665, 0, 0, 656,
	901, 657, 689, 208, 899, 815, 760, 843, 745, 775,
	785, 207, 196, 752, 751, 832, 700, 699, 780, 828,
	842, 0, 0, 611, 253, 0, 0, 378, 342, 273,
	0, 0, 743, 0, 596, 597, 728, 784, 676, 771,
	847, 709, 776, 848, 77, 0, 1152, 0, 510, 535,
	534, 537, 538, 539, 540, 0, 0, 137, 536, 541,
	542, 543, 0, 738, 781, 859, 655, 918, 526, 660,
	610, 0, 833, 696, 697, 212, 0, 0, 0, 0,
	0, 0, 0, 741, 758, 800, 725, 373, 787, 796,
	810, 718, 307, 226, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 0, 626, 0, 525, 0, 670, 521,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 527, 0, 0, 0, 675, 653, 694, 802,
	654, 652, 274, 667, 599, 831, 726, 242, 154, 837,
	724, 624, 790, 671, 819, 712, 250, 669, 155, 666,
	672, 710, 285, 799, 805, 608, 158, 252, 816, 690,
	703, 197, 0, 318, 777, 372, 515, 763, 317, 254,
	365, 791, 839, 371, 713, 349, 379, 383, 219, 746,
	188, 339, 210, 205, 695, 809, 659, 227, 306, 200,
	246, 729, 783, 691, 193, 794, 770, 821, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 817, 804, 823, 686,
	673, 678, 674, 702, 840, 236, 228, 824, 822, 376,
	144, 327, 326, 716, 235, 807, 145, 136, 313, 146,
	243, 163, 827, 385, 176, 248, 356, 514, 222, 284,
	199, 779, 294, 701, 157, 309, 266, 268, 265, 269,
	225, 140, 147, 803, 311, 329, 360, 178, 345, 138,
	139, 141, 149, 320, 150, 151, 846, 260, 214, 218,
	229, 240, 778, 316, 346, 377, 772, 173, 166, 348,
	370, 183, 328, 331, 384, 801, 0, 168, 835, 818,
	765, 731, 737, 661, 0, 167, 797, 693, 705, 685,
	773, 684, 224, 789, 368, 369, 198, 386, 602, 850,
	169, 668, 849, 281, 289, 280, 852, 364, 836, 766,
	755, 753, 662, 834, 764, 754, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 757, 0, 164,
	0, 343, 844, 861, 347, 180, 679, 811, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 793, 858, 293, 319, 187, 374, 340, 211, 613,
	286, 625, 619, 621, 620, 617, 618, 616, 615, 614,
	627, 600, 601, 604, 605, 606, 748, 838, 663, 609,
	814, 622, 623, 786, 856, 598, 194, 547, 639, 640,
	641, 548, 642, 643, 549, 550, 644, 645, 646, 647,
	551, 648, 649, 650, 628, 629, 630, 631, 632, 633,
	634, 635, 638, 636, 637, 744, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 607, 159, 170, 251, 857, 312,
	221, 651, 658, 677, 680, 681, 682, 683, 687, 692,
	0, 698, 704, 706, 707, 715, 720, 721, 722, 723,
	730, 732, 733, 734, 735, 736, 739, 740, 742, 749,
	750, 756, 761, 762, 768, 769, 0, 792, 795, 612,
	806, 808, 812, 813, 820, 825, 826, 851, 855, 860,
	375, 203, 747, 767, 798, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	830, 727, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 714, 161, 829, 853, 774, 788, 841, 0, 354,
	603, 845, 688, 711, 854, 717, 719, 782, 664, 759,
	290, 708, 665, 0, 0, 656, 512, 657, 689, 208,
	509, 815, 760, 843, 745, 775, 785, 207, 196, 752,
	751, 832, 700, 699, 780, 828, 842, 0, 0, 611,
	253, 0, 0, 378, 342, 273, 0, 0, 743, 0,
	596, 597, 728, 784, 676, 771, 847, 709, 776, 848,
	77, 0, 0, 0, 510, 535, 1928, 537, 538, 539,
	540, 0, 0, 137, 536, 541, 542, 543, 0, 738,
	781, 859, 655, 507, 526, 660, 610, 0, 833, 696,
	697, 212, 0, 0, 0, 0, 0, 0, 0, 741,
	758, 800, 725, 373, 787, 796, 810, 718, 307, 226,
	0, 0, 0, 0, 523, 524, 1894, 0, 0, 0,
	626, 0, 525, 0, 670, 521, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 527, 0,
	0, 0, 675, 653, 694, 802, 654, 652, 274, 667,
	599, 831, 726, 242, 154, 837, 724, 624, 790, 671,
	819, 712, 250, 669, 155, 666, 672, 710, 285, 799,
	805, 608, 158, 252, 816, 690, 703, 197, 0, 318,
	777, 372, 515, 763, 317, 254, 365, 791, 839, 371,
	713, 349, 379, 383, 219, 746, 188, 339, 210, 205,
	695, 809, 659, 227, 306, 200, 246, 729, 783, 691,
	193, 794, 770, 821, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 817, 804, 823, 686, 673, 678, 674, 702,
	840, 236, 228, 824, 822, 376, 144, 327, 326, 716,
	235, 807, 145, 136, 313, 146, 243, 163, 827, 385,
	176, 248, 356, 514, 222, 284, 199, 779, 294, 701,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 803,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 846, 260, 214, 218, 229, 240, 778, 316,
	346, 377, 772, 173, 166, 348, 370, 183, 328, 331,
	384, 801, 0, 168, 835, 818, 765, 731, 737, 661,
	0, 167, 797, 693, 705, 685, 773, 684, 224, 789,
	368, 369, 198, 386, 602, 850, 169, 668, 849, 281,
	289, 280, 852, 364, 836, 766, 755, 753, 662, 834,
	764, 754, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 757, 0, 164, 0, 343, 844, 861,
	347, 180, 679, 811, 359, 143, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 793, 858, 293,
	319, 187, 374, 340, 211, 613, 286, 625, 619, 621,
	620, 617, 618, 616, 615, 614, 627, 600, 601, 604,
	605, 606, 748, 838, 663, 609, 814, 622, 623, 786,
	856, 598, 194, 547, 639, 640, 641, 548, 642, 643,
	549, 550, 644, 645, 646, 647, 551, 648, 649, 650,
	628, 629, 630, 631, 632, 633, 634, 635, 638, 636,
	637, 744, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	607, 159, 170, 251, 857, 312, 221, 651, 658, 677,
	680, 681, 682, 683, 687, 692, 0, 698, 704, 706,
	707, 715, 720, 721, 722, 723, 730, 732, 733, 734,
	735, 736, 739, 740, 742, 749, 750, 756, 761, 762,
	768, 769, 0, 792, 795, 612, 806, 808, 812, 813,
	820, 825, 826, 851, 855, 860, 375, 203, 747, 767,
	798, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	148, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 830, 727, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 714, 161, 829,
	853, 774, 788, 841, 0, 354, 603, 845, 688, 711,
	854, 717, 719, 782, 664, 759, 290, 708, 665, 0,
	0, 656, 512, 657, 689, 208, 509, 815, 760, 843,
	745, 775, 785, 207, 196, 752, 751, 832, 700, 699,
	780, 828, 842, 0, 0, 611, 253, 0, 0, 378,
	342, 273, 0, 0, 743, 0, 596, 597, 728, 784,
	676, 771, 847, 709, 776, 848, 77, 0, 0, 0,
	510, 535, 1925, 537, 538, 539, 540, 0, 0, 137,
	536, 541, 542, 543, 0, 738, 781, 859, 655, 507,
	526, 660, 610, 0, 833, 696, 697, 212, 0, 0,
	0, 0, 0, 0, 0, 741, 758, 800, 725, 373,
	787, 796, 810, 718, 307, 226, 0, 0, 0, 0,
	523, 524, 1894, 0, 0, 0, 626, 0, 525, 0,
	670, 521, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 527, 0, 0, 0, 675, 653,
	694, 802, 654, 652, 274, 667, 599, 831, 726, 242,
	154, 837, 724, 624, 790, 671, 819, 712, 250, 669,
	155, 666, 672, 710, 285, 799, 805, 608, 158, 252,
	816, 690, 703, 197, 0, 318, 777, 372, 515, 763,
	317, 254, 365, 791, 839, 371, 713, 349, 379, 383,
	219, 746, 188, 339, 210, 205, 695, 809, 659, 227,
	306, 200, 246, 729, 783, 691, 193, 794, 770, 821,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 817, 804,
	823, 686, 673, 678, 674, 702, 840, 236, 228, 824,
	822, 376, 144, 327, 326, 716, 235, 807, 145, 136,
	313, 146, 243, 163, 827, 385, 176, 248, 356, 514,
	222, 284, 199, 779, 294, 701, 157, 309, 266, 268,
	265, 269, 225, 140, 147, 803, 311, 329, 360, 178,
	345, 138, 139, 141, 149, 320, 150, 151, 846, 260,
	214, 218, 229, 240, 778, 316, 346, 377, 772, 173,
	166, 348, 370, 183, 328, 331, 384, 801, 0, 168,
	835, 818, 765, 731, 737, 661, 0, 167, 797, 693,
	705, 685, 773, 684, 224, 789, 368, 369, 198, 386,
	602, 850, 169, 668, 849, 281, 289, 280, 852, 364,
	836, 766, 755, 753, 662, 834, 764, 754, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 757,
	0, 164, 0, 343, 844, 861, 347, 180, 679, 811,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 793, 858, 293, 319, 187, 374, 340,
	211, 613, 286, 625, 619, 621, 620, 617, 618, 616,
	615, 614, 627, 600, 601, 604, 605, 606, 748, 838,
	663, 609, 814, 622, 623, 786, 856, 598, 194, 547,
	639, 640, 641, 548, 642, 643, 549, 550, 644, 645,
	646, 647, 551, 648, 649, 650, 628, 629, 630, 631,
	632, 633, 634, 635, 638, 636, 637, 744, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 607, 159, 170, 251,
	857, 312, 221, 651, 658, 677, 680, 681, 682, 683,
	687, 692, 0, 698, 704, 706, 707, 715, 720, 721,
	722, 723, 730, 732, 733, 734, 735, 736, 739, 740,
	742, 749, 750, 756, 761, 762, 768, 769, 0, 792,
	795, 612, 806, 808, 812, 813, 820, 825, 826, 851,
	855, 860, 375, 203, 747, 767, 798, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 830, 727, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 714, 161, 829, 853, 774, 788, 841,
	36, 354, 603, 845, 688, 711, 854, 717, 719, 782,
	664, 759, 290, 708, 665, 0, 0, 656, 512, 657,
	689, 208, 509, 815, 760, 843, 745, 775, 785, 207,
	196, 752, 751, 832, 700, 699, 780, 828, 842, 0,
	0, 611, 253, 0, 0, 378, 342, 273, 0, 0,
	743, 0, 596, 597, 728, 784, 676, 771, 847, 709,
	776, 848, 77, 0, 0, 0, 510, 535, 534, 537,
	538, 539, 540, 0, 0, 137, 536, 541, 542, 543,
	0, 738, 781, 859, 655, 507, 526, 660, 610, 0,
	833, 696, 697, 212, 0, 0, 0, 0, 0, 0,
	0, 741, 758, 800, 725, 373, 787, 796, 810, 718,
	307, 226, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 0, 626, 0, 525, 0, 670, 521, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	527, 0, 0, 0, 675, 653, 694, 802, 654, 652,
	274, 667, 599, 831, 726, 242, 154, 837, 724, 624,
	790, 671, 819, 712, 250, 669, 155, 666, 672, 710,
	285, 799, 805, 608, 158, 252, 816, 690, 703, 197,
	0, 318, 777, 372, 515, 763, 317, 254, 365, 791,
	839, 371, 713, 349, 379, 383, 219, 746, 188, 339,
	210, 205, 695, 809, 659, 227, 306, 200, 246, 729,
	783, 691, 193, 794, 770, 821, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 817, 804, 823, 686, 673, 678,
	674, 702, 840, 236, 228, 824, 822, 376, 144, 327,
	326, 716, 235, 807, 145, 136, 313, 146, 243, 163,
	827, 385, 176, 248, 356, 514, 222, 284, 199, 779,
	294, 701, 157, 309, 266, 268, 265, 269, 225, 140,
	147, 803, 311, 329, 360, 178, 345, 138, 139, 141,
	149, 320, 150, 151, 846, 260, 214, 218, 229, 240,
	778, 316, 346, 377, 772, 173, 166, 348, 370, 183,
	328, 331, 384, 801, 0, 168, 835, 818, 765, 731,
	737, 661, 0, 167, 797, 693, 705, 685, 773, 684,
	224, 789, 368, 369, 198, 386, 602, 850, 169, 668,
	849, 281, 289, 280, 852, 364, 836, 766, 755, 753,
	662, 834, 764, 754, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 757, 0, 164, 0, 343,
	844, 861, 347, 180, 679, 811, 359, 143, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 793,
	858, 293, 319, 187, 374, 340, 211, 613, 286, 625,
	619, 621, 620, 617, 618, 616, 615, 614, 627, 600,
	601, 604, 605, 606, 748, 838, 663, 609, 814, 622,
	623, 786, 856, 598, 194, 547, 639, 640, 641, 548,
	642, 643, 549, 550, 644, 645, 646, 647, 551, 648,
	649, 650, 628, 629, 630, 631, 632, 633, 634, 635,
	638, 636, 637, 744, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 607, 159, 170, 251, 1239, 312, 221, 651,
	658, 677, 680, 681, 682, 683, 687, 692, 0, 698,
	704, 706, 707, 715, 720, 721, 722, 723, 730, 732,
	733, 734, 735, 736, 739, 740, 742, 749, 750, 756,
	761, 762, 768, 769, 0, 792, 795, 612, 806, 808,
	812, 813, 820, 825, 826, 851, 855, 860, 375, 203,
	747, 767, 798, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 148, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 830, 727,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 714,
	161, 829, 853, 774, 788, 841, 0, 354, 603, 845,
	688, 711, 854, 717, 719, 782, 664, 759, 290, 708,
	665, 0, 0, 656, 512, 657, 689, 208, 509, 815,
	760, 843, 745, 775, 785, 207, 196, 752, 751, 832,
	700, 699, 780, 828, 842, 0, 0, 611, 253, 0,
	0, 378, 342, 273, 0, 0, 743, 0, 596, 597,
	728, 784, 676, 771, 847, 709, 776, 848, 77, 0,
	1763, 0, 510, 535, 534, 537, 538, 539, 540, 0,
	0, 137, 536, 541, 542, 543, 0, 738, 781, 859,
	655, 507, 526, 660, 610, 0, 833, 696, 697, 212,
	0, 0, 0, 0, 0, 0, 0, 741, 758, 800,
	725, 373, 787, 796, 810, 718, 307, 226, 0, 0,
	0, 0, 523, 524, 0, 0, 0, 0, 626, 0,
	525, 0, 670, 521, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 593, 594, 595, 527, 0, 0, 0,
	675, 653, 694, 802, 654, 652, 274, 667, 599, 831,
	726, 242, 154, 837, 724, 624, 790, 671, 819, 712,
	250, 669, 155, 666, 672, 710, 285, 799, 805, 608,
	158, 252, 816, 690, 703, 197, 0, 318, 777, 372,
	515, 763, 317, 254, 365, 791, 839, 371, 713, 349,
	379, 383, 219, 746, 188, 339, 210, 205, 695, 809,
	659, 227, 306, 200, 246, 729, 783, 691, 193, 794,
	770, 821, 338, 362, 160, 270, 363, 382, 177, 355,
	271, 278, 190, 192, 191, 172, 332, 361, 182, 195,
	817, 804, 823, 686, 673, 678, 674, 702, 840, 236,
	228, 824, 822, 376, 144, 327, 326, 716, 235, 807,
	145, 136, 313, 146, 243, 163, 827, 385, 176, 248,
	356, 514, 222, 284, 199, 779, 294, 701, 157, 309,
	266, 268, 265, 269, 225, 140, 147, 803, 311, 329,
	360, 178, 345, 138, 139, 141, 149, 320, 150, 151,
	846, 260, 214, 218, 229, 240, 778, 316, 346, 377,
	772, 173, 166, 348, 370, 183, 328, 331, 384, 801,
	0, 168, 835, 818, 765, 731, 737, 661, 0, 167,
	797, 693, 705, 685, 773, 684, 224, 789, 368, 369,
	198, 386, 602, 850, 169, 668, 849, 281, 289, 280,
	852, 364, 836, 766, 755, 753, 662, 834, 764, 754,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 757, 0, 164, 0, 343, 844, 861, 347, 180,
	679, 811, 359, 143, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 793, 858, 293, 319, 187,
	374, 340, 211, 613, 286, 625, 619, 621, 620, 617,
	618, 616, 615, 614, 627, 600, 601, 604, 605, 606,
	748, 838, 663, 609, 814, 622, 623, 786, 856, 598,
	194, 547, 639, 640, 641, 548, 642, 643, 549, 550,
	644, 645, 646, 647, 551, 648, 649, 650, 628, 629,
	630, 631, 632, 633, 634, 635, 638, 636, 637, 744,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 607, 159,
	170, 251, 857, 312, 221, 651, 658, 677, 680, 681,
	682, 683, 687, 692, 0, 698, 704, 706, 707, 715,
	720, 721, 722, 723, 730, 732, 733, 734, 735, 736,
	739, 740, 742, 749, 750, 756, 761, 762, 768, 769,
	0, 792, 795, 612, 806, 808, 812, 813, 820, 825,
	826, 851, 855, 860, 375, 203, 747, 767, 798, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 148, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 830, 727, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 714, 161, 829, 853, 774,
	788, 841, 0, 354, 603, 845, 688, 711, 854, 717,
	719, 782, 664, 759, 290, 708, 665, 0, 0, 656,
	901, 657, 689, 208, 899, 815, 760, 843, 745, 775,
	785, 207, 196, 752, 751, 832, 700, 699, 780, 828,
	842, 0, 0, 611, 253, 0, 0, 378, 342, 273,
	0, 0, 743, 0, 596, 597, 728, 784, 676, 771,
	847, 709, 776, 848, 77, 0, 0, 0, 510, 535,
	534, 537, 538, 539, 540, 0, 0, 137, 536, 541,
	542, 543, 0, 738, 781, 859, 655, 918, 526, 660,
	610, 0, 833, 696, 697, 212, 0, 0, 0, 0,
	0, 0, 0, 741, 758, 800, 725, 373, 787, 796,
	810, 718, 307, 226, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 0, 626, 0, 525, 0, 670, 521,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 527, 0, 0, 0, 675, 653, 694, 802,
	654, 652, 274, 667, 599, 831, 726, 242, 154, 837,
	724, 624, 790, 671, 819, 712, 250, 669, 155, 666,
	672, 710, 285, 799, 805, 608, 158, 252, 816, 690,
	703, 197, 0, 318, 777, 372, 515, 763, 317, 254,
	365, 791, 839, 371, 713, 349, 379, 383, 219, 746,
	188, 339, 210, 205, 695, 809, 659, 227, 306, 200,
	246, 729, 783, 691, 193, 794, 770, 821, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 817, 804, 823, 686,
	673, 678, 674, 702, 840, 236, 228, 824, 822, 376,
	144, 327, 326, 716, 235, 807, 145, 136, 313, 146,
	243, 163, 827, 385, 176, 248, 356, 514, 222, 284,
	199, 779, 294, 701, 157, 309, 266, 268, 265, 269,
	225, 140, 147, 803, 311, 329, 360, 178, 345, 138,
	139, 141, 149, 320, 150, 151, 846, 260, 214, 218,
	229, 240, 778, 316, 346, 377, 772, 173, 166, 348,
	370, 183, 328, 331, 384, 801, 0, 168, 835, 818,
	765, 731, 737, 661, 0, 167, 797, 693, 705, 685,
	773, 684, 224, 789, 368, 369, 198, 386, 602, 850,
	169, 668, 849, 281, 289, 280, 852, 364, 836, 766,
	755, 753, 662, 834, 764, 754, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 757, 0, 164,
	0, 343, 844, 861, 347, 180, 679, 811, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 793, 858, 293, 319, 187, 374, 340, 211, 613,
	286, 625, 619, 621, 620, 617, 618, 616, 615, 614,
	627, 600, 601, 604, 605, 606, 748, 838, 663, 609,
	814, 622, 623, 786, 856, 598, 194, 547, 639, 640,
	641, 548, 642, 643, 549, 550, 644, 645, 646, 647,
	551, 648, 649, 650, 628, 629, 630, 631, 632, 633,
	634, 635, 638, 636, 637, 744, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 607, 159, 170, 251, 857, 312,
	221, 651, 658, 677, 680, 681, 682, 683, 687, 692,
	0, 698, 704, 706, 707, 715, 720, 721, 722, 723,
	730, 732, 733, 734, 735, 736, 739, 740, 742, 749,
	750, 756, 761, 762, 768, 769, 0, 792, 795, 612,
	806, 808, 812, 813, 820, 825, 826, 851, 855, 860,
	375, 203, 747, 767, 798, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	830, 727, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 714, 161, 829, 853, 774, 788, 841, 0, 354,
	603, 845, 688, 711, 854, 717, 719, 782, 664, 759,
	290, 708, 665, 0, 0, 656, 512, 657, 689, 208,
	509, 815, 760, 843, 745, 775, 785, 207, 196, 752,
	751, 832, 700, 699, 780, 828, 842, 0, 0, 611,
	253, 0, 0, 378, 342, 273, 0, 0, 743, 0,
	596, 597, 728, 784, 676, 771, 847, 709, 776, 848,
	77, 0, 0, 0, 510, 535, 534, 537, 538, 539,
	540, 0, 0, 137, 536, 541, 542, 543, 0, 738,
	781, 859, 655, 507, 526, 660, 610, 0, 833, 696,
	697, 212, 0, 0, 0, 0, 0, 0, 0, 741,
	758, 800, 725, 373, 787, 796, 810, 718, 307, 226,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 0,
	626, 0, 525, 0, 670, 521, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 587,
	588, 589, 590, 591, 592, 593, 594, 595, 527, 0,
	0, 0, 675, 653, 694, 802, 654, 652, 274, 667,
	599, 831, 726, 242, 154, 837, 724, 624, 790, 671,
	819, 712, 250, 669, 155, 666, 672, 710, 285, 799,
	805, 608, 158, 252, 816, 690, 703, 197, 0, 318,
	777, 372, 515, 763, 317, 254, 365, 791, 839, 371,
	713, 349, 379, 383, 219, 746, 188, 339, 210, 205,
	695, 809, 659, 227, 306, 200, 246, 729, 783, 691,
	193, 794, 770, 821, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 817, 804, 823, 686, 673, 678, 674, 702,
	840, 236, 228, 824, 822, 376, 144, 327, 326, 716,
	235, 807, 145, 136, 313, 146, 243, 163, 827, 385,
	176, 248, 356, 514, 222, 284, 199, 779, 294, 701,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 803,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 846, 260, 214, 218, 229, 240, 778, 316,
	346, 377, 772, 173, 166, 348, 370, 183, 328, 331,
	384, 801, 0, 168, 835, 818, 765, 731, 737, 661,
	0, 167, 797, 693, 705, 685, 773, 684, 224, 789,
	368, 369, 198, 386, 602, 850, 169, 668, 849, 281,
	289, 280, 852, 364, 836, 766, 755, 753, 662, 834,
	764, 754, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 757, 0, 164, 0, 343, 844, 861,
	347, 180, 679, 811, 359, 143, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 793, 858, 293,
	319, 187, 374, 340, 211, 613, 286, 625, 619, 621,
	620, 617, 618, 616, 615, 614, 627, 600, 601, 604,
	605, 606, 748, 838, 663, 609, 814, 622, 623, 786,
	856, 598, 194, 547, 639, 640, 641, 548, 642, 643,
	549, 550, 644, 645, 646, 647, 551, 648, 649, 650,
	628, 629, 630, 631, 632, 633, 634, 635, 638, 636,
	637, 744, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	607, 159, 170, 251, 857, 312, 221, 651, 658, 677,
	680, 681, 682, 683, 687, 692, 0, 698, 704, 706,
	707, 715, 720, 721, 722, 723, 730, 732, 733, 734,
	735, 736, 739, 740, 742, 749, 750, 756, 761, 762,
	768, 769, 0, 792, 795, 612, 806, 808, 812, 813,
	820, 825, 826, 851, 855, 860, 375, 203, 747, 767,
	798, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	148, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 830, 727, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 714, 161, 829,
	853, 774, 788, 841, 0, 354, 603, 845, 688, 711,
	854, 717, 719, 782, 664, 759, 290, 708, 665, 0,
	0, 656, 901, 657, 689, 208, 899, 815, 760, 843,
	745, 775, 785, 207, 196, 752, 751, 832, 700, 699,
	780, 828, 842, 0, 0, 611, 253, 0, 0, 378,
	342, 273, 0, 0, 743, 0, 596, 597, 728, 784,
	676, 771, 847, 709, 776, 848, 77, 0, 0, 0,
	510, 535, 534, 537, 538, 539, 540, 0, 0, 137,
	536, 541, 542, 543, 0, 738, 781, 859, 655, 918,
	526, 660, 610, 0, 833, 696, 697, 212, 0, 0,
	0, 0, 0, 0, 0, 741, 758, 800, 725, 373,
	787, 796, 810, 718, 307, 226, 0, 0, 0, 0,
	523, 524, 0, 0, 0, 0, 626, 0, 525, 0,
	670, 521, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 527, 0, 0, 0, 675, 653,
	694, 802, 654, 652, 274, 667, 599, 831, 726, 242,
	154, 837, 724, 624, 790, 671, 819, 712, 250, 669,
	155, 666, 672, 710, 285, 799, 805, 608, 158, 252,
	816, 690, 703, 197, 0, 318, 777, 372, 515, 3587,
	317, 254, 365, 791, 839, 371, 713, 349, 379, 383,
	219, 746, 188, 339, 210, 205, 695, 809, 659, 227,
	306, 200, 246, 729, 783, 691, 193, 794, 770, 821,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 817, 804,
	823, 686, 673, 678, 674, 702, 840, 236, 228, 824,
	822, 376, 144, 327, 326, 716, 235, 807, 145, 136,
	313, 146, 243, 163, 827, 385, 176, 248, 356, 514,
	222, 284, 199, 779, 294, 701, 157, 309, 266, 268,
	265, 269, 225, 140, 147, 803, 311, 329, 360, 178,
	345, 138, 139, 141, 149, 320, 150, 151, 846, 260,
	214, 218, 229, 240, 778, 316, 346, 377, 772, 173,
	166, 348, 370, 183, 328, 331, 384, 801, 0, 168,
	835, 818, 765, 731, 737, 661, 0, 167, 797, 693,
	705, 685, 773, 684, 224, 789, 368, 369, 198, 386,
	602, 850, 169, 668, 849, 281, 289, 280, 852, 364,
	836, 766, 755, 753, 662, 834, 764, 754, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 757,
	0, 164, 0, 343, 844, 861, 347, 180, 679, 811,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 793, 858, 293, 319, 187, 374, 340,
	211, 613, 286, 625, 619, 621, 620, 617, 618, 616,
	615, 614, 627, 600, 601, 604, 605, 606, 748, 838,
	663, 609, 814, 622, 623, 786, 856, 598, 194, 547,
	639, 640, 641, 548, 642, 643, 549, 550, 644, 645,
	646, 647, 551, 648, 649, 650, 628, 629, 630, 631,
	632, 633, 634, 635, 638, 636, 637, 744, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 607, 159, 170, 251,
	857, 312, 221, 651, 658, 677, 680, 681, 682, 683,
	687, 692, 0, 698, 704, 706, 707, 715, 720, 721,
	722, 723, 730, 732, 733, 734, 735, 736, 739, 740,
	742, 749, 750, 756, 761, 762, 768, 769, 0, 792,
	795, 612, 806, 808, 812, 813, 820, 825, 826, 851,
	855, 860, 375, 203, 747, 767, 798, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 830, 727, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 714, 161, 829, 853, 774, 788, 841,
	0, 354, 603, 845, 688, 711, 854, 717, 719, 782,
	664, 759, 290, 708, 665, 0, 0, 656, 901, 657,
	689, 208, 899, 815, 760, 843, 745, 775, 785, 207,
	196, 752, 751, 832, 700, 699, 780, 828, 842, 0,
	0, 611, 253, 0, 0, 378, 342, 273, 0, 0,
	743, 0, 596, 597, 728, 784, 676, 771, 847, 709,
	776, 848, 77, 0, 0, 0, 510, 535, 534, 537,
	538, 539, 540, 0, 0, 137, 536, 541, 542, 543,
	0, 738, 781, 859, 655, 918, 526, 660, 610, 0,
	833, 696, 697, 212, 0, 0, 0, 0, 0, 0,
	0, 741, 758, 800, 725, 373, 787, 796, 810, 718,
	307, 226, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 0, 626, 0, 525, 0, 670, 521, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
	527, 0, 0, 0, 675, 653, 694, 802, 654, 652,
	274, 667, 599, 831, 726, 242, 154, 837, 724, 624,
	790, 671, 819, 712, 250, 669, 155, 666, 672, 710,
	285, 799, 805, 608, 158, 252, 816, 690, 703, 197,
	0, 318, 777, 372, 515, 763, 317, 254, 365, 791,
	839, 371, 713, 349, 379, 383, 219, 746, 188, 339,
	210, 205, 695, 809, 659, 227, 306, 200, 246, 729,
	783, 691, 193, 794, 770, 821, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 817, 804, 823, 686, 673, 678,
	674, 702, 840, 236, 228, 824, 822, 376, 144, 327,
	326, 716, 235, 807, 145, 136, 313, 146, 243, 163,
	827, 385, 176, 248, 356, 514, 222, 284, 199, 779,
	294, 701, 157, 309, 266, 268, 265, 269, 225, 140,
	147, 803, 311, 329, 360, 178, 345, 138, 139, 141,
	149, 320, 150, 151, 846, 260, 214, 218, 229, 240,
	778, 316, 346, 377, 772, 173, 166, 348, 370, 183,
	328, 331, 384, 801, 0, 168, 835, 818, 765, 731,
	737, 661, 0, 167, 797, 693, 705, 685, 773, 684,
	224, 789, 368, 369, 198, 386, 602, 850, 169, 668,
	849, 281, 289, 280, 852, 364, 836, 766, 755, 753,
	662, 834, 764, 754, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 757, 0, 164, 0, 343,
	844, 861, 347, 180, 679, 811, 359, 143, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 793,
	858, 293, 319, 187, 374, 340, 211, 613, 286, 625,
	619, 621, 620, 617, 618, 616, 615, 614, 627, 600,
	601, 604, 605, 606, 1931, 1932, 1933, 609, 814, 622,
	623, 786, 856, 598, 194, 547, 639, 640, 641, 548,
	642, 643, 549, 550, 644, 645, 646, 647, 551, 648,
	649, 650, 628, 629, 630, 631, 632, 633, 634, 635,
	638, 636, 637, 744, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 607, 159, 170, 251, 857, 312, 221, 651,
	658, 677, 680, 681, 682, 683, 687, 692, 0, 698,
	704, 706, 707, 715, 720, 721, 722, 723, 730, 732,
	733, 734, 735, 736, 739, 740, 742, 749, 750, 756,
	761, 762, 768, 769, 0, 792, 795, 612, 806, 808,
	812, 813, 820, 825, 826, 851, 855, 860, 375, 203,
	747, 767, 798, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 148, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 830, 727,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 714,
	161, 829, 853, 774, 788, 1689, 2854, 354, 1544, 1693,
	1494, 1523, 1710, 1529, 1532, 1613, 1460, 1582, 290, 1520,
	1461, 1444, 1499, 1448, 1511, 1449, 1496, 208, 1492, 1654,
	1585, 1691, 1564, 1606, 1616, 207, 196, 1574, 1573, 1679,
	1509, 1508, 1611, 1668, 1690, 1563, 0, 1700, 253, 1665,
	961, 378, 342, 273, 964, 963, 1559, 1674, 1580, 1643,
	1542, 1615, 1476, 1598, 1695, 1521, 1607, 1696, 77, 0,
	1152, 0, 957, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 1603, 1687, 1514, 962, 1554, 1612, 1715,
	1447, 1599, 0, 1452, 1463, 1709, 1680, 1505, 1506, 212,
	0, 0, 0, 0, 0, 0, 0, 1557, 1581, 1633,
	1539, 373, 1618, 1628, 1646, 1531, 307, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 1596, 0,
	0, 0, 1468, 1454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	1475, 1445, 1503, 1635, 1446, 1443, 274, 1464, 1648, 1678,
	1540, 242, 154, 1684, 1538, 1537, 1622, 1469, 1658, 1524,
	250, 1467, 155, 1462, 1470, 1522, 285, 1632, 1640, 142,
	158, 252, 1655, 1497, 1513, 197, 1820, 318, 1608, 372,
	960, 1589, 317, 254, 365, 1623, 1686, 371, 1525, 349,
	379, 383, 219, 1565, 188, 339, 210, 205, 1504, 1645,
	1451, 227, 306, 200, 246, 1543, 1614, 1498, 193, 1626,
	1597, 1660, 338, 362, 160, 270, 363, 382, 177, 355,
	271, 278, 190, 192, 191, 172, 332, 361, 182, 195,
	1656, 1639, 1662, 1491, 1471, 1482, 1472, 1512, 1688, 236,
	228, 1663, 1661, 376, 144, 327, 326, 1528, 235, 1642,
	145, 136, 313, 146, 243, 163, 1667, 385, 176, 248,
	356, 959, 222, 284, 199, 1610, 294, 1510, 157, 309,
	266, 268, 265, 269, 225, 140, 147, 1638, 311, 329,
	360, 178, 345, 138, 139, 141, 149, 320, 150, 151,
	1694, 260, 214, 218, 229, 240, 1609, 316, 346, 377,
	1600, 173, 166, 348, 370, 183, 328, 331, 384, 1634,
	0, 168, 1682, 1657, 1591, 1546, 1552, 1453, 0, 167,
	1630, 1502, 1517, 1490, 1604, 1489, 224, 1621, 368, 369,
	198, 386, 1465, 1702, 169, 1466, 1701, 281, 289, 280,
	1705, 364, 1683, 1592, 1577, 1575, 1458, 1681, 1590, 1576,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 1579, 0, 164, 0, 343, 1692, 1717, 347, 180,
	1484, 1649, 359, 143, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 1625, 1714, 293, 319, 187,
	374, 340, 211, 1480, 286, 1483, 1478, 1481, 1479, 1583,
	1584, 1697, 1698, 1699, 1637, 1473, 0, 1675, 1676, 0,
	1570, 1685, 1459, 0, 1653, 152, 153, 1617, 1712, 1530,
	194, 131, 1455, 1456, 1457, 132, 1560, 1561, 133, 134,
	1671, 1670, 1669, 1672, 135, 1706, 1704, 1707, 1474, 1495,
	1516, 1566, 1567, 1569, 1601, 1602, 1647, 1620, 1629, 1562,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 1588, 159,
	170, 251, 2855, 312, 221, 1442, 1450, 1477, 1485, 1486,
	1487, 1488, 1493, 1500, 0, 1507, 1515, 1518, 1519, 1527,
	1533, 1534, 1535, 1536, 1545, 1547, 1548, 1549, 1550, 1551,
	1555, 1556, 1558, 1571, 1572, 1578, 1586, 1587, 1594, 1595,
	0, 1624, 1627, 1636, 1641, 1644, 1650, 1652, 1659, 1664,
	1666, 1703, 1711, 1716, 375, 203, 1568, 1593, 1631, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 148, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 1677, 1541, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 1526, 161, 1673, 1708, 1605,
	1619, 1689, 1651, 354, 1544, 1693, 1494, 1523, 1710, 1529,
	1532, 1613, 1460, 1582, 290, 1520, 1461, 1444, 1499, 1448,
	1511, 1449, 1496, 208, 1492, 1654, 1585, 1691, 1564, 1606,
	1616, 207, 196, 1574, 1573, 1679, 1509, 1508, 1611, 1668,
	1690, 1563, 0, 1700, 253, 1665, 961, 378, 342, 273,
	964, 963, 1559, 1674, 1580, 1643, 1542, 1615, 1476, 1598,
	1695, 1521, 1607, 1696, 0, 0, 0, 0, 957, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 1603,
	1687, 1514, 962, 1554, 1612, 1715, 1447, 1599, 0, 1452,
	1463, 1709, 1680, 1505, 1506, 212, 0, 0, 0, 0,
	0, 0, 0, 1557, 1581, 1633, 1539, 373, 1618, 1628,
	1646, 1531, 307, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 1596, 0, 0, 0, 1468, 1454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 0, 0, 1475, 1445, 1503, 1635,
	1446, 1443, 274, 1464, 1648, 1678, 1540, 242, 154, 1684,
	1538, 1537, 1622, 1469, 1658, 1524, 250, 1467, 155, 1462,
	1470, 1522, 285, 1632, 1640, 142, 158, 252, 1655, 1497,
	1513, 197, 1820, 318, 1608, 372, 960, 1589, 317, 254,
	365, 1623, 1686, 371, 1525, 349, 379, 383, 219, 1565,
	188, 339, 210, 205, 1504, 1645, 1451, 227, 306, 200,
	246, 1543, 1614, 1498, 193, 1626, 1597, 1660, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 1656, 1639, 1662, 1491,
	1471, 1482, 1472, 1512, 1688, 236, 228, 1663, 1661, 376,
	144, 327, 326, 1528, 235, 1642, 145, 136, 313, 146,
	243, 163, 1667, 385, 176, 248, 356, 959, 222, 284,
	199, 1610, 294, 1510, 157, 309, 266, 268, 265, 269,
	225, 140, 147, 1638, 311, 329, 360, 178, 345, 138,
	139, 141, 149, 320, 150, 151, 1694, 260, 214, 218,
	229, 240, 1609, 316, 346, 377, 1600, 173, 166, 348,
	370, 183, 328, 331, 384, 1634, 0, 168, 1682, 1657,
	1591, 1546, 1552, 1453, 0, 167, 1630, 1502, 1517, 1490,
	1604, 1489, 224, 1621, 368, 369, 198, 386, 1465, 1702,
	169, 1466, 1701, 281, 289, 280, 1705, 364, 1683, 1592,
	1577, 1575, 1458, 1681, 1590, 1576, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1579, 0, 164,
	0, 343, 1692, 1717, 347, 180, 1484, 1649, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1625, 1714, 293, 319, 187, 374, 340, 211, 1480,
	286, 1483, 1478, 1481, 1479, 1583, 1584, 1697, 1698, 1699,
	1637, 1473, 0, 1675, 1676, 0, 1570, 1685, 1459, 0,
	1653, 152, 153, 1617, 1712, 1530, 194, 131, 1455, 1456,
	1457, 132, 1560, 1561, 133, 134, 1671, 1670, 1669, 1672,
	135, 1706, 1704, 1707, 1474, 1495, 1516, 1566, 1567, 1569,
	1601, 1602, 1647, 1620, 1629, 1562, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1588, 159, 170, 251, 1713, 312,
	221, 1442, 1450, 1477, 1485, 1486, 1487, 1488, 1493, 1500,
	0, 1507, 1515, 1518, 1519, 1527, 1533, 1534, 1535, 1536,
	1545, 1547, 1548, 1549, 1550, 1551, 1555, 1556, 1558, 1571,
	1572, 1578, 1586, 1587, 1594, 1595, 0, 1624, 1627, 1636,
	1641, 1644, 1650, 1652, 1659, 1664, 1666, 1703, 1711, 1716,
	375, 203, 1568, 1593, 1631, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1677, 1541, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1526, 161, 1673, 1708, 1605, 1619, 1689, 1651, 354,
	1544, 1693, 1494, 1523, 1710, 1529, 1532, 1613, 1460, 1582,
	290, 1520, 1461, 1444, 1499, 1448, 1511, 1449, 1496, 208,
	1492, 1654, 1585, 1691, 1564, 1606, 1616, 207, 196, 1574,
	1573, 1679, 1509, 1508, 1611, 1668, 1690, 1563, 0, 1700,
	253, 1665, 0, 378, 342, 273, 0, 0, 1559, 1674,
	1580, 1643, 1542, 1615, 1476, 1598, 1695, 1521, 1607, 1696,
	0, 0, 0, 0, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 1603, 1687, 1514, 0, 1554,
	1612, 1715, 1447, 1599, 0, 1452, 1463, 1709, 1680, 1505,
	1506, 212, 0, 0, 0, 0, 0, 0, 0, 1557,
	1581, 1633, 1539, 373, 1618, 1628, 1646, 1531, 307, 226,
	0, 0, 0, 0, 0, 0, 2523, 0, 1501, 0,
	1596, 0, 0, 0, 1468, 1454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 0,
	0, 0, 1475, 1445, 1503, 1635, 1446, 1443, 274, 1464,
	1648, 1678, 1540, 242, 154, 1684, 1538, 1537, 1622, 1469,
	1658, 1524, 250, 1467, 155, 1462, 1470, 1522, 285, 1632,
	1640, 142, 158, 252, 1655, 1497, 1513, 197, 0, 318,
	1608, 372, 1861, 1589, 317, 254, 365, 1623, 1686, 371,
	1525, 349, 379, 383, 219, 1565, 188, 339, 210, 205,
	1504, 1645, 1451, 227, 306, 200, 246, 1543, 1614, 1498,
	193, 1626, 1597, 1660, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 1656, 1639, 1662, 1491, 1471, 1482, 1472, 1512,
	1688, 236, 228, 1663, 1661, 376, 144, 327, 326, 1528,
	235, 1642, 145, 136, 313, 146, 243, 163, 1667, 385,
	176, 248, 356, 1860, 222, 284, 199, 1610, 294, 1510,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 1638,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 1694, 260, 214, 218, 229, 240, 1609, 316,
	346, 377, 1600, 173, 166, 348, 370, 183, 328, 331,
	384, 1634, 0, 168, 1682, 1657, 1591, 1546, 1552, 1453,
	0, 167, 1630, 1502, 1517, 1490, 1604, 1489, 224, 1621,
	368, 369, 198, 386, 1465, 1702, 169, 1466, 1701, 281,
	289, 280, 1705, 364, 1683, 1592, 1577, 1575, 1458, 1681,
	1590, 1576, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 1579, 0, 164, 0, 343, 1692, 1717,
	347, 180, 1484, 1649, 359, 143, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 1625, 1714, 293,
	319, 187, 374, 340, 211, 1480, 286, 1483, 1478, 1481,
	1479, 1583, 1584, 1697, 1698, 1699, 1637, 1473, 0, 1675,
	1676, 0, 1570, 1685, 1459, 0, 1653, 152, 153, 1617,
	1712, 1530, 194, 131, 1455, 1456, 1457, 132, 1560, 1561,
	133, 134, 1671, 1670, 1669, 1672, 135, 1706, 1704, 1707,
	1474, 1495, 1516, 1566, 1567, 1569, 1601, 1602, 1647, 1620,
	1629, 1562, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	1588, 159, 170, 251, 1713, 312, 221, 1442, 1450, 1477,
	1485, 1486, 1487, 1488, 1493, 1500, 0, 1507, 1515, 1518,
	1519, 1527, 1533, 1534, 1535, 1536, 1545, 1547, 1548, 1549,
	1550, 1551, 1555, 1556, 1558, 1571, 1572, 1578, 1586, 1587,
	1594, 1595, 0, 1624, 1627, 1636, 1641, 1644, 1650, 1652,
	1659, 1664, 1666, 1703, 1711, 1716, 375, 203, 1568, 1593,
	1631, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	148, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 1677, 1541, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 1526, 161, 1673,
	1708, 1605, 1619, 1689, 1651, 354, 1544, 1693, 1494, 1523,
	1710, 1529, 1532, 1613, 1460, 1582, 290, 1520, 1461, 1444,
	1499, 1448, 1511, 1449, 1496, 208, 1492, 1654, 1585, 1691,
	1564, 1606, 1616, 207, 196, 1574, 1573, 1679, 1509, 1508,
	1611, 1668, 1690, 1563, 0, 1700, 253, 1665, 0, 378,
	342, 273, 0, 0, 1559, 1674, 1580, 1643, 1542, 1615,
	1476, 1598, 1695, 1521, 1607, 1696, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 1603, 1687, 1514, 0, 1554, 1612, 1715, 1447, 1599,
	0, 1452, 1463, 1709, 1680, 1505, 1506, 212, 0, 0,
	0, 0, 0, 0, 0, 1557, 1581, 1633, 1539, 373,
	1618, 1628, 1646, 1531, 307, 226, 0, 0, 0, 0,
	0, 0, 1855, 0, 1501, 0, 1596, 0, 0, 0,
	1468, 1454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 0, 1475, 1445,
	1503, 1635, 1446, 1443, 274, 1464, 1648, 1678, 1540, 242,
	154, 1684, 1538, 1537, 1622, 1469, 1658, 1524, 250, 1467,
	155, 1462, 1470, 1522, 285, 1632, 1640, 142, 158, 252,
	1655, 1497, 1513, 197, 0, 318, 1608, 372, 1861, 1589,
	317, 254, 365, 1623, 1686, 371, 1525, 349, 379, 383,
	219, 1565, 188, 339, 210, 205, 1504, 1645, 1451, 227,
	306, 200, 246, 1543, 1614, 1498, 193, 1626, 1597, 1660,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 1656, 1639,
	1662, 1491, 1471, 1482, 1472, 1512, 1688, 236, 228, 1663,
	1661, 376, 144, 327, 326, 1528, 235, 1642, 145, 136,
	313, 146, 243, 163, 1667, 385, 176, 248, 356, 1860,
	222, 284, 199, 1610, 294, 1510, 157, 309, 266, 268,
	265, 269, 225, 140, 147, 1638, 311, 329, 360, 178,
	345, 138, 139, 141, 149, 320, 150, 151, 1694, 260,
	214, 218, 229, 240, 1609, 316, 346, 377, 1600, 173,
	166, 348, 370, 183, 328, 331, 384, 1634, 0, 168,
	1682, 1657, 1591, 1546, 1552, 1453, 0, 167, 1630, 1502,
	1517, 1490, 1604, 1489, 224, 1621, 368, 369, 198, 386,
	1465, 1702, 169, 1466, 1701, 281, 289, 280, 1705, 364,
	1683, 1592, 1577, 1575, 1458, 1681, 1590, 1576, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 1579,
	0, 164, 0, 343, 1692, 1717, 347, 180, 1484, 1649,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 1625, 1714, 293, 319, 187, 374, 340,
	211, 1480, 286, 1483, 1478, 1481, 1479, 1583, 1584, 1697,
	1698, 1699, 1637, 1473, 0, 1675, 1676, 0, 1570, 1685,
	1459, 0, 1653, 152, 153, 1617, 1712, 1530, 194, 131,
	1455, 1456, 1457, 132, 1560, 1561, 133, 134, 1671, 1670,
	1669, 1672, 135, 1706, 1704, 1707, 1474, 1495, 1516, 1566,
	1567, 1569, 1601, 1602, 1647, 1620, 1629, 1562, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 1588, 159, 170, 251,
	1713, 312, 221, 1442, 1450, 1477, 1485, 1486, 1487, 1488,
	1493, 1500, 0, 1507, 1515, 1518, 1519, 1527, 1533, 1534,
	1535, 1536, 1545, 1547, 1548, 1549, 1550, 1551, 1555, 1556,
	1558, 1571, 1572, 1578, 1586, 1587, 1594, 1595, 0, 1624,
	1627, 1636, 1641, 1644, 1650, 1652, 1659, 1664, 1666, 1703,
	1711, 1716, 375, 203, 1568, 1593, 1631, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 1677, 1541, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 1526, 161, 1673, 1708, 1605, 1619, 1689,
	1651, 354, 1544, 1693, 1494, 1523, 1710, 1529, 1532, 1613,
	1460, 1582, 290, 1520, 1461, 1444, 1499, 1448, 1511, 1449,
	1496, 208, 1492, 1654, 1585, 1691, 1564, 1606, 1616, 207,
	196, 1574, 1573, 1679, 1509, 1508, 1611, 1668, 1690, 1563,
	0, 1700, 253, 1665, 0, 378, 342, 273, 0, 0,
	1559, 1674, 1580, 1643, 1542, 1615, 1476, 1598, 1695, 1521,
	1607, 1696, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 1603, 1687, 1514,
	0, 1554, 1612, 1715, 1447, 1599, 0, 1452, 1463, 1709,
	1680, 1505, 1506, 212, 0, 0, 0, 0, 0, 0,
	0, 1557, 1581, 1633, 1539, 373, 1618, 1628, 1646, 1531,
	307, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 1596, 0, 0, 0, 1468, 1454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1553, 0, 0, 0, 1475, 1445, 1503, 1635, 1446, 1443,
	274, 1464, 1648, 1678, 1540, 242, 154, 1684, 1538, 1537,
	1622, 1469, 1658, 1524, 250, 1467, 155, 1462, 1470, 1522,
	285, 1632, 1640, 142, 158, 252, 1655, 1497, 1513, 197,
	0, 318, 1608, 372, 1861, 1589, 317, 254, 365, 1623,
	1686, 371, 1525, 349, 379, 383, 219, 1565, 188, 339,
	210, 205, 1504, 1645, 1451, 227, 306, 200, 246, 1543,
	1614, 1498, 193, 1626, 1597, 1660, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 1656, 1639, 1662, 1491, 1471, 1482,
	1472, 1512, 1688, 236, 228, 1663, 1661, 376, 144, 327,
	326, 1528, 235, 1642, 145, 136, 313, 146, 243, 163,
	1667, 385, 176, 248, 356, 1860, 222, 284, 199, 1610,
	294, 1510, 157, 309, 266, 268, 265, 269, 225, 140,
	147, 1638, 311, 329, 360, 178, 345, 138, 139, 141,
	149, 320, 150, 151, 1694, 260, 214, 218, 229, 240,
	1609, 316, 346, 377, 1600, 173, 166, 348, 370, 183,
	328, 331, 384, 1634, 0, 168, 1682, 1657, 1591, 1546,
	1552, 1453, 0, 167, 1630, 1502, 1517, 1490, 1604, 1489,
	224, 1621, 368, 369, 198, 386, 1465, 1702, 169, 1466,
	1701, 281, 289, 280, 1705, 364, 1683, 1592, 1577, 1575,
	1458, 1681, 1590, 1576, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 1579, 0, 164, 0, 343,
	1692, 1717, 347, 180, 1484, 1649, 359, 143, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 1625,
	1714, 293, 319, 187, 374, 340, 211, 1480, 286, 1483,
	1478, 1481, 1479, 1583, 1584, 1697, 1698, 1699, 1637, 1473,
	0, 1675, 1676, 0, 1570, 1685, 1459, 0, 1653, 152,
	153, 1617, 1712, 1530, 194, 131, 1455, 1456, 1457, 132,
	1560, 1561, 133, 134, 1671, 1670, 1669, 1672, 135, 1706,
	1704, 1707, 1474, 1495, 1516, 1566, 1567, 1569, 1601, 1602,
	1647, 1620, 1629, 1562, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 1588, 159, 170, 251, 1713, 312, 221, 1442,
	1450, 1477, 1485, 1486, 1487, 1488, 1493, 1500, 0, 1507,
	1515, 1518, 1519, 1527, 1533, 1534, 1535, 1536, 1545, 1547,
	1548, 1549, 1550, 1551, 1555, 1556, 1558, 1571, 1572, 1578,
	1586, 1587, 1594, 1595, 0, 1624, 1627, 1636, 1641, 1644,
	1650, 1652, 1659, 1664, 1666, 1703, 1711, 1716, 375, 203,
	1568, 1593, 1631, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 148, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 1677, 1541,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 1526,
	161, 1673, 1708, 1605, 1619, 841, 0, 354, 906, 845,
	688, 711, 854, 717, 719, 782, 664, 759, 290, 708,
	665, 0, 0, 656, 901, 657, 689, 208, 899, 815,
	760, 843, 745, 775, 785, 207, 196, 752, 751, 832,
	700, 699, 780, 828, 842, 0, 0, 939, 253, 0,
	961, 378, 342, 273, 964, 963, 743, 0, 913, 926,
	728, 784, 676, 771, 847, 709, 776, 848, 0, 0,
	0, 0, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 0, 921, 935, 902, 962, 738, 781, 859,
	655, 918, 0, 660, 890, 0, 833, 696, 697, 212,
	0, 0, 0, 0, 0, 0, 0, 741, 758, 800,
	725, 373, 787, 796, 810, 718, 307, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 917, 0,
	0, 0, 670, 886, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 907, 0, 0, 0,
	675, 653, 694, 802, 654, 652, 274, 667, 928, 831,
	726, 242, 154, 837, 724, 905, 790, 671, 819, 712,
	250, 669, 155, 666, 672, 710, 285, 799, 805, 142,
	158, 252, 816, 690, 703, 197, 2592, 318, 777, 372,
	2594, 763, 317, 254, 365, 791, 839, 371, 713, 349,
	379, 383, 219, 746, 188, 339, 210, 205, 695, 809,
	659, 227, 306, 200, 246, 729, 783, 691, 193, 794,
	770, 821, 338, 362, 160, 270, 363, 382, 177, 355,
	271, 278, 190, 192, 191, 172, 332, 361, 182, 195,
	817, 804, 823, 686, 673, 678, 674, 702, 840, 236,
	228, 824, 822, 376, 144, 327, 326, 716, 235, 807,
	145, 136, 313, 146, 243, 163, 827, 385, 176, 248,
	356, 2593, 222, 284, 199, 779, 294, 701, 157, 309,
	266, 268, 265, 269, 225, 140, 147, 803, 311, 329,
	360, 178, 345, 138, 139, 141, 149, 320, 150, 151,
	846, 260, 214, 218, 229, 240, 778, 316, 346, 377,
	772, 173, 166, 348, 370, 183, 328, 331, 384, 801,
	0, 168, 835, 818, 765, 731, 737, 661, 0, 167,
	797, 693, 705, 685, 773, 684, 224, 789, 368, 369,
	198, 386, 891, 850, 169, 668, 849, 281, 289, 280,
	852, 364, 836, 766, 755, 753, 662, 834, 764, 754,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 757, 0, 164, 0, 343, 844, 861, 347, 180,
	679, 811, 359, 143, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 793, 858, 293, 319, 187,
	374, 340, 211, 896, 286, 898, 894, 897, 895, 914,
	915, 936, 937, 938, 925, 892, 0, 933, 934, 0,
	748, 838, 663, 0, 814, 152, 153, 786, 856, 904,
	194, 131, 887, 888, 889, 132, 908, 909, 133, 134,
	931, 930, 929, 932, 135, 941, 940, 942, 893, 900,
	903, 910, 911, 912, 919, 920, 927, 922, 923, 744,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 916, 159,
	170, 251, 857, 312, 221, 651, 658, 677, 680, 681,
	682, 683, 687, 692, 0, 698, 704, 706, 707, 715,
	720, 721, 722, 723, 730, 732, 733, 734, 735, 736,
	739, 740, 742, 749, 750, 756, 761, 762, 768, 769,
	0, 792, 795, 924, 806, 808, 812, 813, 820, 825,
	826, 851, 855, 860, 375, 203, 747, 767, 798, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 148, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 830, 727, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 714, 161, 829, 853, 774,
	788, 841, 0, 354, 906, 845, 688, 711, 854, 717,
	719, 782, 664, 759, 290, 708, 665, 0, 0, 656,
	901, 657, 689, 208, 899, 815, 760, 843, 745, 775,
	785, 207, 196, 752, 751, 832, 700, 699, 780, 828,
	842, 0, 0, 939, 253, 0, 0, 378, 342, 273,
	0, 0, 743, 0, 913, 926, 728, 784, 676, 771,
	847, 709, 776, 848, 0, 0, 0, 0, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 921,
	935, 902, 0, 738, 781, 859, 655, 918, 0, 660,
	890, 0, 833, 696, 697, 212, 0, 0, 0, 0,
	0, 0, 0, 741, 758, 800, 725, 373, 787, 796,
	810, 718, 307, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 917, 0, 0, 0, 670, 886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 907, 0, 0, 0, 675, 653, 694, 802,
	654, 652, 274, 667, 928, 831, 726, 242, 154, 837,
	724, 905, 790, 671, 819, 712, 250, 669, 155, 666,
	672, 710, 285, 799, 805, 142, 158, 252, 816, 690,
	703, 197, 0, 318, 777, 372, 885, 763, 317, 254,
	365, 791, 839, 371, 713, 349, 379, 383, 219, 746,
	188, 339, 210, 205, 695, 809, 659, 227, 306, 200,
	246, 729, 783, 691, 193, 794, 770, 821, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 817, 804, 823, 686,
	673, 678, 674, 702, 840, 236, 228, 824, 822, 376,
	144, 327, 326, 716, 235, 807, 145, 136, 313, 146,
	243, 163, 827, 385, 176, 248, 356, 884, 222, 284,
	199, 779, 294, 701, 157, 309, 266, 268, 265, 269,
	225, 140, 147, 803, 311, 329, 360, 178, 345, 138,
	139, 141, 149, 320, 150, 151, 846, 260, 214, 218,
	229, 240, 778, 316, 346, 377, 772, 173, 166, 348,
	370, 183, 328, 331, 384, 801, 0, 168, 835, 818,
	765, 731, 737, 661, 0, 167, 797, 693, 705, 685,
	773, 684, 224, 789, 368, 369, 198, 386, 891, 850,
	169, 668, 849, 281, 289, 280, 852, 364, 836, 766,
	755, 753, 662, 834, 764, 754, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 757, 0, 164,
	0, 343, 844, 861, 347, 180, 679, 811, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 793, 858, 293, 319, 187, 374, 340, 211, 896,
	286, 898, 894, 897, 895, 914, 915, 936, 937, 938,
	925, 892, 0, 933, 934, 0, 748, 838, 663, 0,
	814, 152, 153, 786, 856, 904, 194, 131, 887, 888,
	889, 132, 908, 909, 133, 134, 931, 930, 929, 932,
	135, 941, 940, 942, 893, 900, 903, 910, 911, 912,
	919, 920, 927, 922, 923, 744, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 916, 159, 170, 251, 857, 312,
	221, 651, 658, 677, 680, 681, 682, 683, 687, 692,
	0, 698, 704, 706, 707, 715, 720, 721, 722, 723,
	730, 732, 733, 734, 735, 736, 739, 740, 742, 749,
	750, 756, 761, 762, 768, 769, 0, 792, 795, 924,
	806, 808, 812, 813, 820, 825, 826, 851, 855, 860,
	375, 203, 747, 767, 798, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	830, 727, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 714, 161, 829, 853, 774, 788, 841, 0, 354,
	906, 845, 688, 711, 854, 717, 719, 782, 664, 759,
	290, 708, 665, 0, 0, 656, 901, 657, 689, 208,
	899, 815, 760, 843, 745, 775, 785, 207, 196, 752,
	751, 832, 700, 699, 780, 828, 842, 0, 0, 939,
	253, 0, 0, 378, 342, 273, 0, 0, 743, 0,
	913, 926, 728, 784, 676, 771, 847, 709, 776, 848,
	0, 0, 0, 0, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 921, 935, 902, 0, 738,
	781, 859, 655, 918, 0, 660, 890, 0, 833, 696,
	697, 212, 0, 0, 0, 0, 0, 0, 0, 741,
	758, 800, 725, 373, 787, 796, 810, 718, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	917, 0, 0, 0, 670, 886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 907, 0,
	0, 0, 675, 653, 694, 802, 654, 652, 274, 667,
	928, 831, 726, 242, 154, 837, 724, 905, 790, 671,
	819, 712, 250, 669, 155, 666, 672, 710, 285, 799,
	805, 142, 158, 252, 816, 690, 703, 197, 0, 318,
	777, 372, 885, 763, 317, 254, 365, 791, 839, 371,
	713, 349, 379, 383, 219, 746, 188, 339, 210, 205,
	695, 809, 659, 227, 306, 200, 246, 729, 783, 691,
	193, 794, 770, 821, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 817, 804, 823, 686, 673, 678, 674, 702,
	840, 236, 228, 824, 822, 376, 144, 327, 326, 716,
	235, 807, 145, 136, 313, 146, 243, 163, 827, 385,
	176, 248, 356, 884, 222, 284, 199, 779, 294, 701,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 803,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 846, 260, 214, 218, 229, 240, 778, 316,
	346, 377, 772, 173, 166, 348, 370, 183, 328, 331,
	384, 801, 0, 168, 835, 818, 765, 731, 737, 661,
	0, 167, 797, 693, 705, 685, 773, 684, 224, 789,
	368, 369, 198, 386, 891, 850, 169, 879, 849, 281,
	289, 280, 852, 364, 836, 766, 755, 753, 662, 834,
	764, 754, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 875, 757, 0, 164, 0, 343, 844, 861,
	347, 180, 679, 811, 359, 143, 310, 181, 223, 215,
	303, 880, 878, 869, 870, 247, 255, 793, 858, 293,
	319, 187, 374, 340, 211, 896, 286, 898, 894, 897,
	895, 914, 915, 936, 937, 938, 925, 892, 0, 933,
	934, 0, 748, 838, 663, 0, 814, 152, 153, 786,
	856, 904, 194, 131, 887, 888, 889, 132, 908, 909,
	133, 134, 931, 930, 929, 932, 135, 941, 940, 942,
	893, 900, 903, 910, 911, 912, 919, 920, 927, 922,
	923, 744, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	916, 159, 170, 251, 857, 312, 221, 651, 658, 677,
	680, 681, 682, 683, 687, 692, 0, 698, 704, 706,
	707, 715, 720, 721, 722, 723, 730, 732, 733, 734,
	735, 736, 739, 740, 742, 749, 750, 756, 761, 762,
	768, 769, 0, 792, 795, 924, 806, 808, 812, 813,
	820, 825, 826, 851, 855, 860, 375, 203, 747, 767,
	798, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 876, 877, 308,
	148, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 830, 727, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 714, 161, 829,
	853, 774, 788, 841, 0, 354, 906, 845, 688, 711,
	854, 717, 719, 782, 664, 759, 290, 708, 665, 0,
	0, 656, 901, 657, 689, 208, 899, 815, 760, 843,
	745, 775, 785, 207, 196, 752, 751, 832, 700, 699,
	780, 828, 842, 0, 0, 939, 253, 0, 0, 378,
	342, 273, 0, 0, 743, 0, 913, 926, 728, 784,
	676, 771, 847, 709, 776, 848, 0, 0, 0, 0,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 921, 935, 902, 0, 738, 781, 859, 655, 918,
	0, 660, 890, 0, 833, 696, 697, 212, 0, 0,
	0, 0, 0, 0, 0, 741, 758, 800, 725, 373,
	787, 796, 810, 718, 307, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 917, 0, 0, 0,
	670, 886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 907, 0, 0, 0, 675, 653,
	694, 802, 654, 652, 274, 667, 928, 831, 726, 242,
	154, 837, 724, 905, 790, 671, 819, 712, 250, 669,
	155, 666, 672, 710, 285, 799, 805, 142, 158, 252,
	816, 690, 703, 197, 0, 318, 777, 372, 885, 763,
	317, 254, 365, 791, 839, 371, 713, 349, 379, 383,
	219, 746, 188, 339, 210, 205, 695, 809, 659, 227,
	306, 200, 246, 729, 783, 691, 193, 794, 770, 821,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 817, 804,
	823, 686, 673, 678, 674, 702, 840, 236, 228, 824,
	822, 376, 144, 327, 326, 716, 235, 807, 145, 136,
	313, 146, 243, 163, 827, 385, 176, 248, 356, 884,
	222, 284, 199, 779, 294, 701, 157, 309, 266, 268,
	265, 269, 225, 140, 147, 803, 311, 329, 360, 178,
	345, 138, 139, 141, 149, 320, 150, 151, 846, 260,
	214, 218, 229, 240, 778, 316, 346, 377, 772, 173,
	166, 348, 1317, 183, 328, 331, 384, 801, 0, 168,
	835, 818, 765, 731, 737, 661, 0, 167, 797, 693,
	705, 685, 773, 684, 224, 789, 368, 369, 198, 386,
	891, 850, 169, 668, 849, 281, 289, 280, 852, 364,
	836, 766, 755, 753, 662, 834, 764, 754, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 757,
	0, 164, 0, 343, 844, 861, 347, 180, 679, 811,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 793, 858, 293, 319, 187, 374, 340,
	211, 896, 286, 898, 894, 897, 895, 914, 915, 936,
	937, 938, 925, 892, 0, 933, 934, 0, 748, 838,
	663, 0, 814, 152, 153, 786, 856, 904, 194, 131,
	887, 888, 889, 132, 908, 909, 133, 134, 931, 930,
	929, 932, 135, 941, 940, 942, 893, 900, 903, 910,
	911, 912, 919, 920, 927, 922, 923, 744, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 916, 159, 170, 251,
	857, 312, 221, 651, 658, 677, 680, 681, 682, 683,
	687, 692, 0, 698, 704, 706, 707, 715, 720, 721,
	722, 723, 730, 732, 733, 734, 735, 736, 739, 740,
	742, 749, 750, 756, 761, 762, 768, 769, 0, 792,
	795, 924, 806, 808, 812, 813, 820, 825, 826, 851,
	855, 860, 375, 203, 747, 767, 798, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 830, 727, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 714, 161, 829, 853, 774, 788, 841,
	0, 354, 906, 845, 688, 711, 854, 717, 719, 782,
	664, 759, 290, 708, 665, 0, 0, 656, 901, 657,
	689, 208, 899, 815, 760, 843, 745, 775, 785, 207,
	196, 752, 751, 832, 700, 699, 780, 828, 842, 0,
	0, 939, 253, 0, 0, 378, 342, 273, 0, 0,
	743, 0, 913, 926, 728, 784, 676, 771, 847, 709,
	776, 848, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 921, 935, 902,
	0, 738, 781, 859, 655, 918, 0, 660, 890, 0,
	833, 696, 697, 212, 0, 0, 0, 0, 0, 0,
	0, 741, 758, 800, 725, 373, 787, 796, 810, 718,
	307, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 917, 0, 0, 0, 670, 886, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	907, 0, 0, 0, 675, 653, 694, 802, 654, 652,
	274, 667, 928, 831, 726, 242, 154, 837, 724, 905,
	790, 671, 819, 712, 250, 669, 155, 666, 672, 710,
	285, 799, 805, 142, 158, 252, 816, 690, 703, 197,
	0, 318, 777, 372, 885, 763, 317, 254, 365, 791,
	839, 371, 713, 349, 379, 383, 219, 746, 188, 339,
	210, 205, 695, 809, 659, 227, 306, 200, 246, 729,
	783, 691, 193, 794, 770, 821, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 817, 804, 823, 686, 673, 678,
	674, 702, 840, 236, 228, 824, 822, 376, 144, 327,
	326, 716, 235, 807, 145, 136, 313, 146, 243, 163,
	827, 385, 176, 248, 356, 884, 222, 284, 199, 779,
	294, 701, 157, 309, 266, 268, 265, 269, 225, 140,
	147, 803, 311, 329, 360, 178, 345, 138, 139, 141,
	149, 320, 150, 151, 846, 260, 214, 218, 229, 240,
	778, 316, 346, 377, 772, 173, 166, 348, 866, 183,
	328, 331, 384, 801, 0, 168, 835, 818, 765, 731,
	737, 661, 0, 167, 797, 693, 705, 685, 773, 684,
	224, 789, 368, 369, 198, 386, 891, 850, 169, 879,
	849, 281, 289, 280, 852, 364, 836, 766, 755, 753,
	662, 834, 764, 754, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 875, 757, 0, 164, 0, 343,
	844, 861, 347, 180, 679, 811, 359, 143, 310, 181,
	223, 215, 303, 880, 878, 869, 870, 247, 255, 793,
	858, 293, 319, 187, 374, 340, 211, 896, 286, 898,
	894, 897, 895, 914, 915, 936, 937, 938, 925, 892,
	0, 933, 934, 0, 748, 838, 663, 0, 814, 152,
	153, 786, 856, 904, 194, 131, 887, 888, 889, 132,
	908, 909, 133, 134, 931, 930, 929, 932, 135, 941,
	940, 942, 893, 900, 903, 910, 911, 912, 919, 920,
	927, 922, 923, 744, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 916, 159, 170, 251, 857, 312, 221, 651,
	658, 677, 680, 681, 682, 683, 687, 692, 0, 698,
	704, 706, 707, 715, 720, 721, 722, 723, 730, 732,
	733, 734, 735, 736, 739, 740, 742, 749, 750, 756,
	761, 762, 768, 769, 0, 792, 795, 924, 806, 808,
	812, 813, 820, 825, 826, 851, 855, 860, 375, 203,
	747, 767, 798, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 876,
	877, 308, 148, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 830, 727,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 714,
	161, 829, 853, 774, 788, 1689, 1651, 354, 1544, 1693,
	1494, 1523, 1710, 1529, 1532, 1613, 1460, 1582, 290, 1520,
	1461, 1444, 1499, 1448, 1511, 1449, 1496, 208, 1492, 1654,
	1585, 1691, 1564, 1606, 1616, 207, 196, 1574, 1573, 1679,
	1509, 1508, 1611, 1668, 1690, 1563, 0, 1700, 253, 1665,
	0, 378, 342, 273, 0, 0, 1559, 1674, 1580, 1643,
	1542, 1615, 1476, 1598, 1695, 1521, 1607, 1696, 0, 0,
	0, 0, 2672, 0, 2667, 2668, 0, 0, 0, 0,
	0, 2669, 0, 1603, 1687, 1514, 0, 1554, 1612, 1715,
	1447, 1599, 0, 1452, 1463, 1709, 1680, 1505, 1506, 212,
	0, 0, 0, 0, 0, 0, 0, 1557, 1581, 1633,
	1539, 373, 1618, 1628, 1646, 1531, 307, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 1596, 0,
	0, 0, 1468, 1454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	1475, 1445, 1503, 1635, 1446, 1443, 274, 1464, 1648, 1678,
	1540, 242, 0, 1684, 1538, 1537, 1622, 1469, 1658, 1524,
	250, 1467, 155, 1462, 1470, 1522, 285, 1632, 1640, 0,
	158, 252, 1655, 1497, 1513, 197, 0, 318, 1608, 372,
	0, 1589, 317, 254, 365, 1623, 1686, 371, 1525, 349,
	379, 383, 219, 1565, 188, 339, 210, 205, 1504, 1645,
	1451, 227, 306, 200, 246, 1543, 1614, 1498, 193, 1626,
	1597, 1660, 338, 362, 160, 270, 363, 382, 177, 355,
	271, 278, 190, 192, 191, 172, 332, 361, 182, 195,
	1656, 1639, 1662, 1491, 1471, 1482, 1472, 1512, 1688, 236,
	228, 1663, 1661, 376, 0, 327, 326, 1528, 235, 1642,
	0, 0, 313, 2671, 243, 163, 1667, 385, 176, 248,
	356, 0, 222, 284, 199, 1610, 294, 1510, 157, 309,
	266, 268, 265, 269, 225, 0, 0, 1638, 311, 329,
	360, 178, 345, 2670, 0, 0, 0, 320, 0, 0,
	1694, 260, 214, 218, 229, 240, 1609, 316, 346, 377,
	1600, 173, 166, 348, 370, 183, 328, 331, 384, 1634,
	0, 168, 1682, 1657, 1591, 1546, 1552, 1453, 0, 167,
	1630, 1502, 1517, 1490, 1604, 1489, 224, 1621, 368, 369,
	198, 386, 1465, 1702, 169, 1466, 1701, 281, 289, 280,
	1705, 364, 1683, 1592, 1577, 1575, 1458, 1681, 1590, 1576,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 1579, 0, 164, 0, 343, 1692, 1717, 347, 180,
	1484, 1649, 359, 0, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 1625, 1714, 293, 319, 187,
	374, 340, 211, 1480, 286, 1483, 1478, 1481, 1479, 1583,
	1584, 1697, 1698, 1699, 1637, 1473, 0, 1675, 1676, 0,
	1570, 1685, 1459, 0, 1653, 0, 0, 1617, 1712, 1530,
	194, 0, 1455, 1456, 1457, 0, 1560, 1561, 0, 0,
	1671, 1670, 1669, 1672, 0, 1706, 1704, 1707, 1474, 1495,
	1516, 1566, 1567, 1569, 1601, 1602, 1647, 1620, 1629, 1562,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 1588, 159,
	170, 251, 1713, 312, 221, 1442, 1450, 1477, 1485, 1486,
	1487, 1488, 1493, 1500, 0, 1507, 1515, 1518, 1519, 1527,
	1533, 1534, 1535, 1536, 1545, 1547, 1548, 1549, 1550, 1551,
	1555, 1556, 1558, 1571, 1572, 1578, 1586, 1587, 1594, 1595,
	0, 1624, 1627, 1636, 1641, 1644, 1650, 1652, 1659, 1664,
	1666, 1703, 1711, 1716, 375, 203, 1568, 1593, 1631, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 0, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 1677, 1541, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 1526, 161, 1673, 1708, 1605,
	1619, 1689, 1651, 354, 1544, 1693, 1494, 1523, 1710, 1529,
	1532, 1613, 1460, 1582, 290, 1520, 1461, 1444, 1499, 1448,
	1511, 1449, 1496, 208, 1492, 1654, 1585, 1691, 1564, 1606,
	1616, 207, 196, 1574, 1573, 1679, 1509, 1508, 1611, 1668,
	1690, 1563, 0, 1700, 253, 1665, 0, 378, 342, 273,
	0, 0, 1559, 1674, 1580, 1643, 1542, 1615, 1476, 1598,
	1695, 1521, 1607, 1696, 0, 0, 0, 0, 957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	1687, 1514, 0, 1554, 1612, 1715, 1447, 1599, 0, 1452,
	1463, 1709, 1680, 1505, 1506, 212, 0, 0, 0, 0,
	0, 0, 0, 1557, 1581, 1633, 1539, 373, 1618, 1628,
	1646, 1531, 307, 226, 0, 0, 0, 0, 0, 0,
	3054, 0, 1501, 0, 1596, 0, 0, 0, 1468, 1454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 0, 0, 1475, 1445, 1503, 1635,
	1446, 1443, 274, 1464, 1648, 1678, 1540, 242, 0, 1684,
	1538, 1537, 1622, 1469, 1658, 1524, 250, 1467, 155, 1462,
	1470, 1522, 285, 1632, 1640, 0, 158, 252, 1655, 1497,
	1513, 197, 0, 318, 1608, 372, 0, 1589, 317, 254,
	365, 1623, 1686, 371, 1525, 349, 379, 383, 219, 1565,
	188, 339, 210, 205, 1504, 1645, 1451, 227, 306, 200,
	246, 1543, 1614, 1498, 193, 1626, 1597, 1660, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 1656, 1639, 1662, 1491,
	1471, 1482, 1472, 1512, 1688, 236, 228, 1663, 1661, 376,
	0, 327, 326, 1528, 235, 1642, 0, 0, 313, 0,
	243, 163, 1667, 385, 176, 248, 356, 0, 222, 284,
	199, 1610, 294, 1510, 157, 309, 266, 268, 265, 269,
	225, 0, 0, 1638, 311, 329, 360, 178, 345, 0,
	0, 0, 0, 320, 0, 0, 1694, 260, 214, 218,
	229, 240, 1609, 316, 346, 377, 1600, 173, 166, 348,
	370, 183, 328, 331, 384, 1634, 0, 168, 1682, 1657,
	1591, 1546, 1552, 1453, 0, 167, 1630, 1502, 1517, 1490,
	1604, 1489, 224, 1621, 368, 369, 198, 386, 1465, 1702,
	169, 1466, 1701, 281, 289, 280, 1705, 364, 1683, 1592,
	1577, 1575, 1458, 1681, 1590, 1576, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1579, 0, 164,
	0, 343, 1692, 1717, 347, 180, 1484, 1649, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1625, 1714, 293, 319, 187, 374, 340, 211, 1480,
	286, 1483, 1478, 1481, 1479, 1583, 1584, 1697, 1698, 1699,
	1637, 1473, 0, 1675, 1676, 0, 1570, 1685, 1459, 0,
	1653, 0, 0, 1617, 1712, 1530, 194, 0, 1455, 1456,
	1457, 0, 1560, 1561, 0, 0, 1671, 1670, 1669, 1672,
	0, 1706, 1704, 1707, 1474, 1495, 1516, 1566, 1567, 1569,
	1601, 1602, 1647, 1620, 1629, 1562, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1588, 159, 170, 251, 1713, 312,
	221, 1442, 1450, 1477, 1485, 1486, 1487, 1488, 1493, 1500,
	0, 1507, 1515, 1518, 1519, 1527, 1533, 1534, 1535, 1536,
	1545, 1547, 1548, 1549, 1550, 1551, 1555, 1556, 1558, 1571,
	1572, 1578, 1586, 1587, 1594, 1595, 0, 1624, 1627, 1636,
	1641, 1644, 1650, 1652, 1659, 1664, 1666, 1703, 1711, 1716,
	375, 203, 1568, 1593, 1631, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1677, 1541, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1526, 161, 1673, 1708, 1605, 1619, 1689, 1651, 354,
	1544, 1693, 1494, 1523, 1710, 1529, 1532, 1613, 1460, 1582,
	290, 1520, 1461, 1444, 1499, 1448, 1511, 1449, 1496, 208,
	1492, 1654, 1585, 1691, 1564, 1606, 1616, 207, 196, 1574,
	1573, 1679, 1509, 1508, 1611, 1668, 1690, 1563, 0, 1700,
	253, 1665, 0, 378, 342, 273, 0, 0, 1559, 1674,
	1580, 1643, 1542, 1615, 1476, 1598, 1695, 1521, 1607, 1696,
	0, 0, 0, 0, 957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 1687, 1514, 0, 1554,
	1612, 1715, 1447, 1599, 0, 1452, 1463, 1709, 1680, 1505,
	1506, 212, 0, 0, 0, 0, 0, 0, 0, 1557,
	1581, 1633, 1539, 373, 1618, 1628, 1646, 1531, 307, 226,
	0, 0, 0, 0, 0, 0, 2516, 0, 1501, 0,
	1596, 0, 0, 0, 1468, 1454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 0,
	0, 0, 1475, 1445, 1503, 1635, 1446, 1443, 274, 1464,
	1648, 1678, 1540, 242, 0, 1684, 1538, 1537, 1622, 1469,
	1658, 1524, 250, 1467, 155, 1462, 1470, 1522, 285, 1632,
	1640, 0, 158, 252, 1655, 1497, 1513, 197, 0, 318,
	1608, 372, 0, 1589, 317, 254, 365, 1623, 1686, 371,
	1525, 349, 379, 383, 219, 1565, 188, 339, 210, 205,
	1504, 1645, 1451, 227, 306, 200, 246, 1543, 1614, 1498,
	193, 1626, 1597, 1660, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 1656, 1639, 1662, 1491, 1471, 1482, 1472, 1512,
	1688, 236, 228, 1663, 1661, 376, 0, 327, 326, 1528,
	235, 1642, 0, 0, 313, 0, 243, 163, 1667, 385,
	176, 248, 356, 0, 222, 284, 199, 1610, 294, 1510,
	157, 309, 266, 268, 265, 269, 225, 0, 0, 1638,
	311, 329, 360, 178, 345, 0, 0, 0, 0, 320,
	0, 0, 1694, 260, 214, 218, 229, 240, 1609, 316,
	346, 377, 1600, 173, 166, 348, 370, 183, 328, 331,
	384, 1634, 0, 168, 1682, 1657, 1591, 1546, 1552, 1453,
	0, 167, 1630, 1502, 1517, 1490, 1604, 1489, 224, 1621,
	368, 369, 198, 386, 1465, 1702, 169, 1466, 1701, 281,
	289, 280, 1705, 364, 1683, 1592, 1577, 1575, 1458, 1681,
	1590, 1576, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 1579, 0, 164, 0, 343, 1692, 1717,
	347, 180, 1484, 1649, 359, 0, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 1625, 1714, 293,
	319, 187, 374, 340, 211, 1480, 286, 1483, 1478, 1481,
	1479, 1583, 1584, 1697, 1698, 1699, 1637, 1473, 0, 1675,
	1676, 0, 1570, 1685, 1459, 0, 1653, 0, 0, 1617,
	1712, 1530, 194, 0, 1455, 1456, 1457, 0, 1560, 1561,
	0, 0, 1671, 1670, 1669, 1672, 0, 1706, 1704, 1707,
	1474, 1495, 1516, 1566, 1567, 1569, 1601, 1602, 1647, 1620,
	1629, 1562, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	1588, 159, 170, 251, 1713, 312, 221, 1442, 1450, 1477,
	1485, 1486, 1487, 1488, 1493, 1500, 0, 1507, 1515, 1518,
	1519, 1527, 1533, 1534, 1535, 1536, 1545, 1547, 1548, 1549,
	1550, 1551, 1555, 1556, 1558, 1571, 1572, 1578, 1586, 1587,
	1594, 1595, 0, 1624, 1627, 1636, 1641, 1644, 1650, 1652,
	1659, 1664, 1666, 1703, 1711, 1716, 375, 203, 1568, 1593,
	1631, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	0, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 1677, 1541, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 1526, 161, 1673,
	1708, 1605, 1619, 1689, 1651, 354, 1544, 1693, 1494, 1523,
	1710, 1529, 1532, 1613, 1460, 1582, 290, 1520, 1461, 1444,
	1499, 1448, 1511, 1449, 1496, 208, 1492, 1654, 1585, 1691,
	1564, 1606, 1616, 207, 196, 1574, 1573, 1679, 1509, 1508,
	1611, 1668, 1690, 1563, 0, 1700, 253, 1665, 0, 378,
	342, 273, 0, 0, 1559, 1674, 1580, 1643, 1542, 1615,
	1476, 1598, 1695, 1521, 1607, 1696, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 1687, 1514, 0, 1554, 1612, 1715, 1447, 1599,
	0, 1452, 1463, 1709, 1680, 1505, 1506, 212, 0, 0,
	0, 0, 0, 0, 0, 1557, 1581, 1633, 1539, 373,
	1618, 1628, 1646, 1531, 307, 226, 0, 0, 0, 0,
	0, 0, 2318, 0, 1501, 0, 1596, 0, 0, 0,
	1468, 1454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 0, 1475, 1445,
	1503, 1635, 1446, 1443, 274, 1464, 1648, 1678, 1540, 242,
	0, 1684, 1538, 1537, 1622, 1469, 1658, 1524, 250, 1467,
	155, 1462, 1470, 1522, 285, 1632, 1640, 0, 158, 252,
	1655, 1497, 1513, 197, 0, 318, 1608, 372, 0, 1589,
	317, 254, 365, 1623, 1686, 371, 1525, 349, 379, 383,
	219, 1565, 188, 339, 210, 205, 1504, 1645, 1451, 227,
	306, 200, 246, 1543, 1614, 1498, 193, 1626, 1597, 1660,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 1656, 1639,
	1662, 1491, 1471, 1482, 1472, 1512, 1688, 236, 228, 1663,
	1661, 376, 0, 327, 326, 1528, 235, 1642, 0, 0,
	313, 0, 243, 163, 1667, 385, 176, 248, 356, 0,
	222, 284, 199, 1610, 294, 1510, 157, 309, 266, 268,
	265, 269, 225, 0, 0, 1638, 311, 329, 360, 178,
	345, 0, 0, 0, 0, 320, 0, 0, 1694, 260,
	214, 218, 229, 240, 1609, 316, 346, 377, 1600, 173,
	166, 348, 370, 183, 328, 331, 384, 1634, 0, 168,
	1682, 1657, 1591, 1546, 1552, 1453, 0, 167, 1630, 1502,
	1517, 1490, 1604, 1489, 224, 1621, 368, 369, 198, 386,
	1465, 1702, 169, 1466, 1701, 281, 289, 280, 1705, 364,
	1683, 1592, 1577, 1575, 1458, 1681, 1590, 1576, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 1579,
	0, 164, 0, 343, 1692, 1717, 347, 180, 1484, 1649,
	359, 0, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 1625, 1714, 293, 319, 187, 374, 340,
	211, 1480, 286, 1483, 1478, 1481, 1479, 1583, 1584, 1697,
	1698, 1699, 1637, 1473, 0, 1675, 1676, 0, 1570, 1685,
	1459, 0, 1653, 0, 0, 1617, 1712, 1530, 194, 0,
	1455, 1456, 1457, 0, 1560, 1561, 0, 0, 1671, 1670,
	1669, 1672, 0, 1706, 1704, 1707, 1474, 1495, 1516, 1566,
	1567, 1569, 1601, 1602, 1647, 1620, 1629, 1562, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 1588, 159, 170, 251,
	1713, 312, 221, 1442, 1450, 1477, 1485, 1486, 1487, 1488,
	1493, 1500, 0, 1507, 1515, 1518, 1519, 1527, 1533, 1534,
	1535, 1536, 1545, 1547, 1548, 1549, 1550, 1551, 1555, 1556,
	1558, 1571, 1572, 1578, 1586, 1587, 1594, 1595, 0, 1624,
	1627, 1636, 1641, 1644, 1650, 1652, 1659, 1664, 1666, 1703,
	1711, 1716, 375, 203, 1568, 1593, 1631, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 0, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 1677, 1541, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 1526, 161, 1673, 1708, 1605, 1619, 1689,
	1651, 354, 1544, 1693, 1494, 1523, 1710, 1529, 1532, 1613,
	1460, 1582, 290, 1520, 1461, 1444, 1499, 1448, 1511, 1449,
	1496, 208, 1492, 1654, 1585, 1691, 1564, 1606, 1616, 207,
	196, 1574, 1573, 1679, 1509, 1508, 1611, 1668, 1690, 1563,
	0, 1700, 253, 1665, 0, 378, 342, 273, 0, 0,
	1559, 1674, 1580, 1643, 1542, 1615, 1476, 1598, 1695, 1521,
	1607, 1696, 0, 0, 0, 0, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1603, 1687, 1514,
	0, 1554, 1612, 1715, 1447, 1599, 0, 1452, 1463, 1709,
	1680, 1505, 1506, 212, 0, 0, 0, 0, 0, 0,
	0, 1557, 1581, 1633, 1539, 373, 1618, 1628, 1646, 1531,
	307, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	1501, 0, 1596, 0, 0, 0, 1468, 1454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1553, 0, 0, 0, 1475, 1445, 1503, 1635, 1446, 1443,
	274, 1464, 1648, 1678, 1540, 242, 0, 1684, 1538, 1537,
	1622, 1469, 1658, 1524, 250, 1467, 155, 1462, 1470, 1522,
	285, 1632, 1640, 0, 158, 252, 1655, 1497, 1513, 197,
	0, 318, 1608, 372, 0, 1589, 317, 254, 365, 1623,
	1686, 371, 1525, 349, 379, 383, 219, 1565, 188, 339,
	210, 205, 1504, 1645, 1451, 227, 306, 200, 246, 1543,
	1614, 1498, 193, 1626, 1597, 1660, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 1656, 1639, 1662, 1491, 1471, 1482,
	1472, 1512, 1688, 236, 228, 1663, 1661, 376, 0, 327,
	326, 1528, 235, 1642, 0, 0, 313, 0, 243, 163,
	1667, 385, 176, 248, 356, 0, 222, 284, 199, 1610,
	294, 1510, 157, 309, 266, 268, 265, 269, 225, 0,
	0, 1638, 311, 329, 360, 178, 345, 0, 0, 0,
	0, 320, 0, 0, 1694, 260, 214, 218, 229, 240,
	1609, 316, 346, 377, 1600, 173, 166, 348, 370, 183,
	328, 331, 384, 1634, 0, 168, 1682, 1657, 1591, 1546,
	1552, 1453, 0, 167, 1630, 1502, 1517, 1490, 1604, 1489,
	224, 1621, 368, 369, 198, 386, 1465, 1702, 169, 1466,
	1701, 281, 289, 280, 1705, 364, 1683, 1592, 1577, 1575,
	1458, 1681, 1590, 1576, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 1579, 0, 164, 0, 343,
	1692, 1717, 347, 180, 1484, 1649, 359, 1905, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 1625,
	1714, 293, 319, 187, 374, 340, 211, 1480, 286, 1483,
	1478, 1481, 1479, 1583, 1584, 1697, 1698, 1699, 1637, 1473,
	0, 1675, 1676, 0, 1570, 1685, 1459, 0, 1653, 0,
	0, 1617, 1712, 1530, 194, 0, 1455, 1456, 1457, 0,
	1560, 1561, 0, 0, 1671, 1670, 1669, 1672, 0, 1706,
	1704, 1707, 1474, 1495, 1516, 1566, 1567, 1569, 1601, 1602,
	1647, 1620, 1629, 1562, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 1588, 159, 170, 251, 1713, 312, 221, 1442,
	1450, 1477, 1485, 1486, 1487, 1488, 1493, 1500, 0, 1507,
	1515, 1518, 1519, 1527, 1533, 1534, 1535, 1536, 1545, 1547,
	1548, 1549, 1550, 1551, 1555, 1556, 1558, 1571, 1572, 1578,
	1586, 1587, 1594, 1595, 0, 1624, 1627, 1636, 1641, 1644,
	1650, 1652, 1659, 1664, 1666, 1703, 1711, 1716, 375, 203,
	1568, 1593, 1631, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 0, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 1677, 1541,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 1526,
	161, 1673, 1708, 1605, 1619, 1689, 1651, 354, 1544, 1693,
	1494, 1523, 1710, 1529, 1532, 1613, 1460, 1582, 290, 1520,
	1461, 1444, 1499, 1448, 1511, 1449, 1496, 208, 1492, 1654,
	1585, 1691, 1564, 1606, 1616, 207, 196, 1574, 1573, 1679,
	1509, 1508, 1611, 1668, 1690, 1563, 0, 1700, 253, 1665,
	0, 378, 342, 273, 0, 0, 1559, 1674, 1580, 1643,
	1542, 1615, 1476, 1598, 1695, 1521, 1607, 1696, 0, 0,
	0, 0, 957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1603, 1687, 1514, 0, 1554, 1612, 1715,
	1447, 1599, 0, 1452, 1463, 1709, 1680, 1505, 1506, 212,
	0, 0, 0, 0, 0, 0, 0, 1557, 1581, 1633,
	1539, 373, 1618, 1628, 1646, 1531, 307, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 1501, 0, 1596, 0,
	0, 0, 1468, 1454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1553, 0, 0, 0,
	1475, 1445, 1503, 1635, 1446, 1443, 274, 1464, 1648, 1678,
	1540, 242, 0, 1684, 1538, 1537, 1622, 1469, 1658, 1524,
	250, 1467, 155, 1462, 1470, 1522, 285, 1632, 1640, 0,
	158, 252, 1655, 1497, 1513, 197, 0, 318, 1608, 372,
	0, 1589, 317, 254, 365, 1623, 1686, 371, 1525, 349,
	379, 383, 219, 1565, 188, 339, 210, 205, 1504, 1645,
	1451, 227, 306, 200, 246, 1543, 1614, 1498, 193, 1626,
	1597, 1660, 338, 362, 160, 270, 363, 382, 177, 355,
	271, 278, 190, 192, 191, 172, 332, 361, 182, 195,
	1656, 1639, 1662, 1491, 1471, 1482, 1472, 1512, 1688, 236,
	228, 1663, 1661, 376, 0, 327, 326, 1528, 235, 1642,
	0, 0, 313, 0, 243, 163, 1667, 385, 176, 248,
	356, 0, 222, 284, 199, 1610, 294, 1510, 157, 309,
	266, 268, 265, 269, 225, 0, 0, 1638, 311, 329,
	360, 178, 345, 0, 0, 0, 0, 320, 0, 0,
	1694, 260, 214, 218, 229, 240, 1609, 316, 346, 377,
	1600, 173, 166, 348, 370, 183, 328, 331, 384, 1634,
	0, 168, 1682, 1657, 1591, 1546, 1552, 1453, 0, 167,
	1630, 1502, 1517, 1490, 1604, 1489, 224, 1621, 368, 369,
	198, 386, 1465, 1702, 169, 1466, 1701, 281, 289, 280,
	1705, 364, 1683, 1592, 1577, 1575, 1458, 1681, 1590, 1576,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 1579, 0, 164, 0, 343, 1692, 1717, 347, 180,
	1484, 1649, 359, 0, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 1625, 1714, 293, 319, 187,
	374, 340, 211, 1480, 286, 1483, 1478, 1481, 1479, 1583,
	1584, 1697, 1698, 1699, 1637, 1473, 0, 1675, 1676, 0,
	1570, 1685, 1459, 0, 1653, 0, 0, 1617, 1712, 1530,
	194, 0, 1455, 1456, 1457, 0, 1560, 1561, 0, 0,
	1671, 1670, 1669, 1672, 0, 1706, 1704, 1707, 1474, 1495,
	1516, 1566, 1567, 1569, 1601, 1602, 1647, 1620, 1629, 1562,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 1588, 159,
	170, 251, 1713, 312, 221, 1442, 1450, 1477, 1485, 1486,
	1487, 1488, 1493, 1500, 0, 1507, 1515, 1518, 1519, 1527,
	1533, 1534, 1535, 1536, 1545, 1547, 1548, 1549, 1550, 1551,
	1555, 1556, 1558, 1571, 1572, 1578, 1586, 1587, 1594, 1595,
	0, 1624, 1627, 1636, 1641, 1644, 1650, 1652, 1659, 1664,
	1666, 1703, 1711, 1716, 375, 203, 1568, 1593, 1631, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 0, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 1677, 1541, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 1526, 161, 1673, 1708, 1605,
	1619, 1689, 1651, 354, 1544, 1693, 1494, 1523, 1710, 1529,
	1532, 1613, 1460, 1582, 290, 1520, 1461, 1444, 1499, 1448,
	1511, 1449, 1496, 208, 1492, 1654, 1585, 1691, 1564, 1606,
	1616, 207, 196, 1574, 1573, 1679, 1509, 1508, 1611, 1668,
	1690, 1563, 0, 1700, 253, 1665, 0, 378, 342, 273,
	0, 0, 1559, 1674, 1580, 1643, 1542, 1615, 1476, 1598,
	1695, 1521, 1607, 1696, 0, 0, 0, 0, 3422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	1687, 1514, 0, 1554, 1612, 1715, 1447, 1599, 0, 1452,
	1463, 1709, 1680, 1505, 1506, 212, 0, 0, 0, 0,
	0, 0, 0, 1557, 1581, 1633, 1539, 373, 1618, 1628,
	1646, 1531, 307, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 1596, 0, 0, 0, 1468, 1454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 0, 0, 1475, 1445, 1503, 1635,
	1446, 1443, 274, 1464, 1648, 1678, 1540, 242, 0, 1684,
	1538, 1537, 1622, 1469, 1658, 1524, 250, 1467, 155, 1462,
	1470, 1522, 285, 1632, 1640, 0, 158, 252, 1655, 1497,
	1513, 197, 0, 318, 1608, 372, 0, 1589, 317, 254,
	365, 1623, 1686, 371, 1525, 349, 379, 383, 219, 1565,
	188, 339, 210, 205, 1504, 1645, 1451, 227, 306, 200,
	246, 1543, 1614, 1498, 193, 1626, 1597, 1660, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 1656, 1639, 1662, 1491,
	1471, 1482, 3425, 3426, 3427, 236, 228, 1663, 1661, 376,
	0, 327, 326, 1528, 235, 1642, 0, 0, 313, 0,
	243, 163, 1667, 385, 176, 248, 356, 0, 222, 284,
	199, 1610, 294, 1510, 157, 309, 266, 268, 265, 269,
	225, 0, 0, 1638, 311, 329, 360, 178, 345, 0,
	0, 0, 0, 320, 0, 0, 1694, 260, 214, 218,
	229, 240, 1609, 316, 346, 377, 1600, 173, 166, 348,
	370, 183, 328, 331, 384, 1634, 0, 168, 1682, 1657,
	1591, 1546, 1552, 1453, 0, 167, 1630, 1502, 1517, 1490,
	1604, 1489, 224, 1621, 368, 369, 198, 386, 1465, 1702,
	169, 1466, 1701, 281, 289, 280, 1705, 364, 1683, 1592,
	1577, 1575, 1458, 1681, 1590, 1576, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 1579, 0, 164,
	0, 343, 1692, 1717, 347, 180, 1484, 1649, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 1625, 1714, 293, 319, 187, 374, 340, 211, 1480,
	286, 1483, 1478, 1481, 1479, 1583, 1584, 1697, 1698, 1699,
	1637, 1473, 0, 1675, 1676, 0, 1570, 1685, 1459, 0,
	1653, 0, 0, 1617, 1712, 1530, 194, 0, 1455, 1456,
	1457, 0, 1560, 1561, 0, 0, 1671, 1670, 1669, 1672,
	0, 1706, 1704, 1707, 1474, 1495, 1516, 1566, 1567, 1569,
	1601, 1602, 1647, 1620, 1629, 1562, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 1588, 159, 170, 251, 1713, 312,
	221, 1442, 1450, 1477, 1485, 1486, 1487, 1488, 1493, 1500,
	0, 1507, 1515, 1518, 1519, 1527, 1533, 1534, 1535, 1536,
	1545, 1547, 1548, 1549, 1550, 1551, 1555, 1556, 1558, 1571,
	1572, 1578, 1586, 1587, 1594, 1595, 0, 1624, 1627, 1636,
	1641, 1644, 1650, 1652, 1659, 1664, 1666, 1703, 1711, 1716,
	375, 203, 1568, 1593, 1631, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	1677, 1541, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 1526, 161, 1673, 1708, 1605, 1619, 1689, 1651, 354,
	1544, 1693, 1494, 1523, 1710, 1529, 1532, 1613, 1460, 1582,
	290, 1520, 1461, 1444, 1499, 1448, 1511, 1449, 1496, 208,
	1492, 1654, 1585, 1691, 1564, 1606, 1616, 207, 196, 1574,
	1573, 1679, 1509, 1508, 1611, 1668, 1690, 1563, 0, 1700,
	253, 1665, 0, 378, 342, 273, 0, 0, 1559, 1674,
	1580, 1643, 1542, 1615, 1476, 1598, 1695, 1521, 1607, 1696,
	0, 0, 0, 0, 2672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1603, 1687, 1514, 0, 1554,
	1612, 1715, 1447, 1599, 0, 1452, 1463, 1709, 1680, 1505,
	1506, 212, 0, 0, 0, 0, 0, 0, 0, 1557,
	1581, 1633, 1539, 373, 1618, 1628, 1646, 1531, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	1596, 0, 0, 0, 1468, 1454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1553, 0,
	0, 0, 1475, 1445, 1503, 1635, 1446, 1443, 274, 1464,
	1648, 1678, 1540, 242, 0, 1684, 1538, 1537, 1622, 1469,
	1658, 1524, 250, 1467, 155, 1462, 1470, 1522, 285, 1632,
	1640, 0, 158, 252, 1655, 1497, 1513, 197, 0, 318,
	1608, 372, 0, 1589, 317, 254, 365, 1623, 1686, 371,
	1525, 349, 379, 383, 219, 1565, 188, 339, 210, 205,
	1504, 1645, 1451, 227, 306, 200, 246, 1543, 1614, 1498,
	193, 1626, 1597, 1660, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 1656, 1639, 1662, 1491, 1471, 1482, 1472, 1512,
	1688, 236, 228, 1663, 1661, 376, 0, 327, 326, 1528,
	235, 1642, 0, 0, 313, 0, 243, 163, 1667, 385,
	176, 248, 356, 0, 222, 284, 199, 1610, 294, 1510,
	157, 309, 266, 268, 265, 269, 225, 0, 0, 1638,
	311, 329, 360, 178, 345, 0, 0, 0, 0, 320,
	0, 0, 1694, 260, 214, 218, 229, 240, 1609, 316,
	346, 377, 1600, 173, 166, 348, 370, 183, 328, 331,
	384, 1634, 0, 168, 1682, 1657, 1591, 1546, 1552, 1453,
	0, 167, 1630, 1502, 1517, 1490, 1604, 1489, 224, 1621,
	368, 369, 198, 386, 1465, 1702, 169, 1466, 1701, 281,
	289, 280, 1705, 364, 1683, 1592, 1577, 1575, 1458, 1681,
	1590, 1576, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 1579, 0, 164, 0, 343, 1692, 1717,
	347, 180, 1484, 1649, 359, 0, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 1625, 1714, 293,
	319, 187, 374, 340, 211, 1480, 286, 1483, 1478, 1481,
	1479, 1583, 1584, 1697, 1698, 1699, 1637, 1473, 0, 1675,
	1676, 0, 1570, 1685, 1459, 0, 1653, 0, 0, 1617,
	1712, 1530, 194, 0, 1455, 1456, 1457, 0, 1560, 1561,
	0, 0, 1671, 1670, 1669, 1672, 0, 1706, 1704, 1707,
	1474, 1495, 1516, 1566, 1567, 1569, 1601, 1602, 1647, 1620,
	1629, 1562, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	1588, 159, 170, 251, 1713, 312, 221, 1442, 1450, 1477,
	1485, 1486, 1487, 1488, 1493, 1500, 0, 1507, 1515, 1518,
	1519, 1527, 1533, 1534, 1535, 1536, 1545, 1547, 1548, 1549,
	1550, 1551, 1555, 1556, 1558, 1571, 1572, 1578, 1586, 1587,
	1594, 1595, 0, 1624, 1627, 1636, 1641, 1644, 1650, 1652,
	1659, 1664, 1666, 1703, 1711, 1716, 375, 203, 1568, 1593,
	1631, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	0, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 1677, 1541, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 1526, 161, 1673,
	1708, 1605, 1619, 1689, 1651, 354, 1544, 1693, 1494, 1523,
	1710, 1529, 1532, 1613, 1460, 1582, 290, 1520, 1461, 1444,
	1499, 1448, 1511, 1449, 1496, 208, 1492, 1654, 1585, 1691,
	1564, 1606, 1616, 207, 196, 1574, 1573, 1679, 1509, 1508,
	1611, 1668, 1690, 1563, 0, 1700, 253, 1665, 0, 378,
	342, 273, 0, 0, 1559, 1674, 1580, 1643, 1542, 1615,
	1476, 1598, 1695, 1521, 1607, 1696, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1603, 1687, 1514, 0, 1554, 1612, 1715, 1447, 1599,
	0, 1452, 1463, 1709, 1680, 1505, 1506, 212, 0, 0,
	0, 0, 0, 0, 0, 1557, 1581, 1633, 1539, 373,
	1618, 1628, 1646, 1531, 307, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 1501, 0, 1596, 0, 0, 0,
	1468, 1454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1553, 0, 0, 0, 1475, 1445,
	1503, 1635, 1446, 1443, 274, 1464, 1648, 1678, 1540, 242,
	0, 1684, 1538, 1537, 1622, 1469, 1658, 1524, 250, 1467,
	155, 1462, 1470, 1522, 285, 1632, 1640, 0, 158, 252,
	1655, 1497, 1513, 197, 0, 318, 1608, 372, 0, 1589,
	317, 254, 365, 1623, 1686, 371, 1525, 349, 379, 383,
	219, 1565, 188, 339, 210, 205, 1504, 1645, 1451, 227,
	306, 200, 246, 1543, 1614, 1498, 193, 1626, 1597, 1660,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 1656, 1639,
	1662, 1491, 1471, 1482, 1472, 1512, 1688, 236, 228, 1663,
	1661, 376, 0, 327, 326, 1528, 235, 1642, 0, 0,
	313, 0, 243, 163, 1667, 385, 176, 248, 356, 0,
	222, 284, 199, 1610, 294, 1510, 157, 309, 266, 268,
	265, 269, 225, 0, 0, 1638, 311, 329, 360, 178,
	345, 0, 0, 0, 0, 320, 0, 0, 1694, 260,
	214, 218, 229, 240, 1609, 316, 346, 377, 1600, 173,
	166, 348, 370, 183, 328, 331, 384, 1634, 0, 168,
	1682, 1657, 1591, 1546, 1552, 1453, 0, 167, 1630, 1502,
	1517, 1490, 1604, 1489, 224, 1621, 368, 369, 198, 386,
	1465, 1702, 169, 1466, 1701, 281, 289, 280, 1705, 364,
	1683, 1592, 1577, 1575, 1458, 1681, 1590, 1576, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 1579,
	0, 164, 0, 343, 1692, 1717, 347, 180, 1484, 1649,
	359, 0, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 1625, 1714, 293, 319, 187, 374, 340,
	211, 1480, 286, 1483, 1478, 1481, 1479, 1583, 1584, 1697,
	1698, 1699, 1637, 1473, 0, 1675, 1676, 0, 1570, 1685,
	1459, 0, 1653, 0, 0, 1617, 1712, 1530, 194, 0,
	1455, 1456, 1457, 0, 1560, 1561, 0, 0, 1671, 1670,
	1669, 1672, 0, 1706, 1704, 1707, 1474, 1495, 1516, 1566,
	1567, 1569, 1601, 1602, 1647, 1620, 1629, 1562, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 1588, 159, 170, 251,
	1713, 312, 221, 1442, 1450, 1477, 1485, 1486, 1487, 1488,
	1493, 1500, 0, 1507, 1515, 1518, 1519, 1527, 1533, 1534,
	1535, 1536, 1545, 1547, 1548, 1549, 1550, 1551, 1555, 1556,
	1558, 1571, 1572, 1578, 1586, 1587, 1594, 1595, 0, 1624,
	1627, 1636, 1641, 1644, 1650, 1652, 1659, 1664, 1666, 1703,
	1711, 1716, 375, 203, 1568, 1593, 1631, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 0, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 1677, 1541, 156, 0, 0, 162, 354, 0,
	0, 0, 0, 1526, 161, 1673, 1708, 1605, 1619, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 2026, 2030, 0, 0, 253,
	0, 961, 378, 342, 273, 964, 963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 957, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 962, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 2029, 242, 154, 0, 0, 0, 2023, 0, 2024,
	2025, 250, 965, 155, 0, 2021, 2028, 285, 0, 0,
	142, 158, 252, 0, 0, 0, 197, 954, 318, 0,
	372, 960, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 144, 327, 326, 0, 235,
	0, 145, 136, 313, 146, 243, 163, 0, 385, 176,
	248, 356, 959, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 140, 147, 0, 311,
	329, 360, 178, 345, 138, 139, 141, 149, 320, 150,
	151, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	369, 198, 386, 0, 0, 169, 0, 0, 281, 289,
	280, 0, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 0, 0, 164, 0, 343, 0, 0, 347,
	180, 0, 0, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 0, 0, 293, 319,
	187, 374, 340, 211, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 0, 0,
	0, 194, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 0,
	159, 170, 251, 0, 312, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 203, 0, 0, 0,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 354, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 290, 161, 0, 0,
	0, 1176, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 207, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 961, 378,
	342, 273, 964, 963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1177, 0, 1180, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 962, 0, 1172, 1173, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 373,
	0, 0, 0, 0, 307, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 242,
	154, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	155, 0, 0, 0, 285, 0, 0, 142, 158, 252,
	0, 0, 0, 197, 0, 318, 0, 372, 960, 0,
	317, 254, 365, 0, 0, 371, 0, 349, 379, 383,
	219, 0, 188, 339, 210, 205, 0, 0, 0, 227,
	306, 200, 246, 0, 0, 0, 193, 0, 0, 0,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 228, 0,
	0, 376, 144, 327, 326, 0, 235, 0, 145, 136,
	313, 146, 243, 163, 0, 385, 176, 248, 356, 959,
	222, 284, 199, 0, 294, 0, 157, 309, 266, 268,
	265, 269, 225, 140, 147, 0, 311, 329, 360, 178,
	345, 138, 139, 141, 149, 320, 150, 151, 0, 260,
	214, 218, 229, 240, 0, 316, 346, 377, 0, 173,
	166, 348, 370, 183, 328, 331, 384, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 153, 0, 0, 0, 194, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 961, 378, 342, 273, 964,
	963, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 957, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 154, 0, 0,
	0, 0, 0, 0, 0, 250, 965, 155, 0, 955,
	0, 285, 0, 0, 142, 158, 252, 0, 0, 0,
	197, 954, 318, 0, 372, 960, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 144,
	327, 326, 0, 235, 0, 145, 136, 313, 146, 243,
	163, 0, 385, 176, 248, 356, 959, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	140, 147, 0, 311, 329, 360, 178, 345, 138, 139,
	141, 149, 320, 150, 151, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 224, 0, 368, 369, 198, 386, 0, 0, 169,
	0, 0, 281, 289, 280, 0, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 217, 231, 304, 256,
	305, 232, 276, 275, 277, 258, 0, 0, 164, 0,
	343, 0, 0, 347, 180, 0, 0, 359, 143, 310,
	181, 223, 215, 303, 279, 174, 234, 341, 247, 255,
	0, 0, 293, 319, 187, 374, 340, 211, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 194, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 165, 175, 186, 204,
	202, 216, 244, 267, 272, 298, 330, 335, 350, 351,
	352, 353, 206, 0, 209, 185, 314, 184, 257, 237,
	299, 357, 358, 0, 159, 170, 251, 0, 312, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	203, 0, 0, 0, 171, 179, 189, 201, 213, 220,
	230, 233, 238, 239, 241, 245, 259, 261, 262, 263,
	264, 282, 283, 287, 288, 291, 292, 295, 296, 297,
	301, 302, 308, 148, 315, 321, 322, 323, 324, 325,
	333, 334, 336, 337, 344, 366, 367, 380, 381, 354,
	0, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	290, 161, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 207, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 961, 378, 342, 273, 964, 963, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1177, 0, 1180, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 242, 154, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 155, 0, 0, 0, 285, 0,
	0, 142, 158, 252, 0, 0, 0, 197, 1854, 318,
	0, 372, 960, 0, 317, 254, 365, 0, 0, 371,
	0, 349, 379, 383, 219, 0, 188, 339, 210, 205,
	0, 0, 0, 227, 306, 200, 246, 0, 0, 0,
	193, 0, 0, 0, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 228, 0, 0, 376, 144, 327, 326, 0,
	235, 0, 145, 136, 313, 146, 243, 163, 0, 385,
	176, 248, 356, 959, 222, 284, 199, 0, 294, 0,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 0,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 0, 260, 214, 218, 229, 240, 0, 316,
	346, 377, 0, 173, 166, 348, 370, 183, 328, 331,
	384, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 143, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 153, 0,
	0, 0, 194, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	148, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 961,
	378, 342, 273, 964, 963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2788, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 962, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 154, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 142, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 960,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 144, 327, 326, 0, 235, 0, 145,
	136, 313, 146, 243, 163, 0, 385, 176, 248, 356,
	959, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 140, 147, 0, 311, 329, 360,
	178, 345, 138, 139, 141, 149, 320, 150, 151, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 224, 0, 368, 369, 198,
	386, 0, 0, 169, 0, 0, 281, 289, 280, 0,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	217, 231, 304, 256, 305, 232, 276, 275, 277, 258,
	0, 0, 164, 0, 343, 0, 0, 347, 180, 0,
	0, 359, 143, 310, 181, 223, 215, 303, 279, 174,
	234, 341, 247, 255, 0, 0, 293, 319, 187, 374,
	340, 211, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 194,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	165, 175, 186, 204, 202, 216, 244, 267, 272, 298,
	330, 335, 350, 351, 352, 353, 206, 0, 209, 185,
	314, 184, 257, 237, 299, 357, 358, 0, 159, 170,
	251, 0, 312, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 203, 0, 0, 0, 171, 179,
	189, 201, 213, 220, 230, 233, 238, 239, 241, 245,
	259, 261, 262, 263, 264, 282, 283, 287, 288, 291,
	292, 295, 296, 297, 301, 302, 308, 148, 315, 321,
	322, 323, 324, 325, 333, 334, 336, 337, 344, 366,
	367, 380, 381, 354, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 290, 161, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 207, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 961, 378, 342, 273,
	964, 963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2783, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 0, 307, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 242, 154, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 155, 0,
	0, 0, 285, 0, 0, 142, 158, 252, 0, 0,
	0, 197, 0, 318, 0, 372, 960, 0, 317, 254,
	365, 0, 0, 371, 0, 349, 379, 383, 219, 0,
	188, 339, 210, 205, 0, 0, 0, 227, 306, 200,
	246, 0, 0, 0, 193, 0, 0, 0, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 228, 0, 0, 376,
	144, 327, 326, 0, 235, 0, 145, 136, 313, 146,
	243, 163, 0, 385, 176, 248, 356, 959, 222, 284,
	199, 0, 294, 0, 157, 309, 266, 268, 265, 269,
	225, 140, 147, 0, 311, 329, 360, 178, 345, 138,
	139, 141, 149, 320, 150, 151, 0, 260, 214, 218,
	229, 240, 0, 316, 346, 377, 0, 173, 166, 348,
	370, 183, 328, 331, 384, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 143,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 153, 0, 0, 0, 194, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 148, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	0, 0, 156, 36, 354, 162, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2300, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 154,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 142, 158, 252, 0,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 144, 327, 326, 0, 235, 0, 145, 136, 313,
	146, 243, 163, 0, 385, 176, 248, 356, 128, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 140, 147, 0, 311, 329, 360, 178, 345,
	138, 139, 141, 149, 320, 150, 151, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 224, 0, 368, 369, 198, 386, 0,
	0, 169, 0, 0, 281, 289, 280, 0, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 217, 231,
	304, 256, 305, 232, 276, 275, 277, 258, 0, 0,
	164, 0, 343, 0, 0, 347, 180, 0, 0, 359,
	143, 310, 181, 223, 215, 303, 279, 174, 234, 341,
	247, 255, 0, 0, 293, 319, 187, 374, 340, 211,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 0, 0, 0, 194, 131, 0,
	0, 0, 132, 0, 0, 133, 134, 0, 0, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1989, 300, 165, 175,
	186, 204, 202, 216, 244, 267, 272, 298, 330, 335,
	350, 351, 352, 353, 206, 0, 209, 185, 314, 184,
	257, 237, 299, 357, 358, 0, 159, 170, 251, 494,
	312, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 203, 0, 0, 0, 171, 179, 189, 201,
	213, 220, 230, 233, 238, 239, 241, 245, 259, 261,
	262, 263, 264, 282, 283, 287, 288, 291, 292, 295,
	296, 297, 301, 302, 308, 148, 315, 321, 322, 323,
	324, 325, 333, 334, 336, 337, 344, 366, 367, 380,
	381, 354, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 290, 161, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 207,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 378, 342, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 0,
	307, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 242, 154, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 155, 0, 0, 0,
	285, 0, 0, 142, 158, 252, 0, 0, 0, 197,
	0, 318, 0, 372, 0, 0, 317, 254, 365, 0,
	0, 371, 0, 349, 379, 383, 219, 0, 188, 339,
	210, 205, 0, 0, 0, 227, 306, 200, 246, 0,
	0, 0, 193, 0, 0, 0, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 228, 0, 0, 376, 144, 327,
	326, 0, 235, 0, 145, 136, 313, 146, 243, 163,
	0, 385, 176, 248, 356, 128, 222, 284, 199, 0,
	294, 0, 157, 309, 266, 268, 265, 269, 225, 140,
	147, 0, 311, 329, 360, 178, 345, 138, 139, 141,
	149, 320, 150, 151, 0, 260, 214, 218, 229, 240,
	0, 316, 346, 377, 0, 173, 166, 348, 370, 183,
	328, 331, 384, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 143, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 194, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 148, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 154, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 0, 0,
	142, 158, 252, 0, 0, 0, 197, 0, 318, 0,
	372, 2100, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 144, 327, 326, 0, 235,
	0, 145, 136, 313, 146, 243, 163, 0, 385, 176,
	248, 356, 128, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 140, 147, 0, 311,
	329, 360, 178, 345, 138, 139, 141, 149, 320, 150,
	151, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	369, 198, 386, 0, 0, 169, 0, 0, 281, 289,
	280, 0, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 0, 0, 164, 0, 343, 0, 0, 347,
	180, 0, 0, 359, 143, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 0, 0, 293, 319,
	187, 374, 340, 211, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 152, 153, 0, 0,
	0, 194, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 0,
	159, 170, 251, 0, 312, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 203, 0, 0, 0,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 148,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 354, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 290, 161, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 207, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 378,
	342, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 307, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 242,
	154, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	155, 0, 0, 0, 285, 0, 0, 142, 158, 252,
	0, 0, 0, 197, 0, 318, 0, 372, 0, 0,
	317, 254, 365, 0, 0, 371, 0, 349, 379, 383,
	219, 0, 188, 339, 210, 205, 0, 0, 0, 227,
	306, 200, 246, 0, 0, 0, 193, 0, 0, 0,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 228, 0,
	0, 376, 144, 327, 326, 0, 235, 0, 145, 136,
	313, 146, 243, 163, 0, 385, 176, 248, 356, 128,
	222, 284, 199, 0, 294, 0, 157, 309, 266, 268,
	265, 269, 225, 140, 147, 0, 311, 329, 360, 178,
	345, 138, 139, 141, 149, 320, 150, 151, 0, 260,
	214, 218, 229, 240, 0, 316, 346, 377, 0, 173,
	166, 348, 370, 183, 328, 331, 384, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 143, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 152, 153, 0, 0, 0, 194, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 148, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 1307, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 378, 342, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 154, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 142, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 0, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 144,
	327, 326, 0, 235, 0, 145, 136, 313, 146, 243,
	163, 0, 385, 176, 248, 356, 128, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	140, 147, 0, 311, 329, 360, 178, 345, 138, 139,
	141, 149, 320, 150, 151, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 224, 0, 368, 369, 198, 386, 0, 0, 169,
	0, 0, 281, 289, 280, 0, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 217, 231, 304, 256,
	305, 232, 276, 275, 277, 258, 0, 0, 164, 0,
	343, 0, 0, 347, 180, 0, 0, 359, 143, 310,
	181, 223, 215, 303, 279, 174, 234, 341, 247, 255,
	0, 0, 293, 319, 187, 374, 340, 211, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 194, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 165, 175, 186, 204,
	202, 216, 244, 267, 272, 298, 330, 335, 350, 351,
	352, 353, 206, 0, 209, 185, 314, 184, 257, 237,
	299, 357, 358, 0, 159, 170, 251, 0, 312, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	203, 0, 0, 0, 171, 179, 189, 201, 213, 220,
	230, 233, 238, 239, 241, 245, 259, 261, 262, 263,
	264, 282, 283, 287, 288, 291, 292, 295, 296, 297,
	301, 302, 308, 148, 315, 321, 322, 323, 324, 325,
	333, 334, 336, 337, 344, 366, 367, 380, 381, 354,
	0, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	290, 161, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 207, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 378, 342, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 123, 0, 242, 154, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 155, 0, 0, 0, 285, 0,
	0, 142, 158, 252, 0, 0, 0, 197, 0, 318,
	0, 372, 0, 0, 317, 254, 365, 0, 0, 371,
	0, 349, 379, 383, 219, 0, 188, 339, 210, 205,
	0, 0, 0, 227, 306, 200, 246, 0, 0, 0,
	193, 0, 0, 0, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 228, 0, 0, 376, 144, 327, 326, 0,
	235, 0, 145, 136, 313, 146, 243, 163, 0, 385,
	176, 248, 356, 128, 222, 284, 199, 0, 294, 0,
	157, 309, 266, 268, 265, 269, 225, 140, 147, 0,
	311, 329, 360, 178, 345, 138, 139, 141, 149, 320,
	150, 151, 0, 260, 214, 218, 229, 240, 0, 316,
	346, 377, 0, 173, 166, 348, 370, 183, 328, 331,
	384, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 143, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 153, 0,
	0, 0, 194, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	148, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	378, 342, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 154, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 142, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 0,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 144, 327, 326, 0, 235, 0, 145,
	136, 313, 146, 243, 163, 0, 385, 176, 248, 356,
	128, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 140, 147, 0, 311, 329, 360,
	178, 345, 138, 139, 141, 149, 320, 150, 151, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 224, 0, 368, 369, 198,
	386, 0, 0, 169, 0, 0, 281, 289, 280, 0,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	217, 231, 304, 256, 305, 232, 276, 275, 277, 258,
	0, 0, 164, 0, 343, 0, 0, 347, 180, 0,
	0, 359, 143, 310, 181, 223, 215, 303, 279, 174,
	234, 341, 247, 255, 0, 0, 293, 319, 187, 374,
	340, 211, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 194,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	165, 175, 186, 204, 202, 216, 244, 267, 272, 298,
	330, 335, 350, 351, 352, 353, 206, 0, 209, 185,
	314, 184, 257, 237, 299, 357, 358, 0, 159, 170,
	251, 0, 312, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 203, 0, 0, 0, 171, 179,
	189, 201, 213, 220, 230, 233, 238, 239, 241, 245,
	259, 261, 262, 263, 264, 282, 283, 287, 288, 291,
	292, 295, 296, 297, 301, 302, 308, 148, 315, 321,
	322, 323, 324, 325, 333, 334, 336, 337, 344, 366,
	367, 380, 381, 0, 0, 156, 0, 0, 162, 460,
	354, 454, 465, 448, 0, 161, 0, 0, 0, 0,
	0, 290, 0, 0, 471, 0, 0, 0, 0, 0,
	208, 0, 0, 455, 0, 0, 0, 0, 207, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 378, 342, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 446, 449, 0, 0, 0, 274,
	0, 0, 0, 453, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	457, 0, 0, 158, 252, 461, 0, 0, 197, 0,
	318, 0, 372, 0, 0, 317, 254, 365, 0, 464,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 0, 327, 326,
	0, 235, 0, 0, 0, 313, 0, 243, 163, 0,
	385, 176, 248, 356, 0, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 0, 0,
	0, 474, 329, 360, 178, 345, 450, 451, 452, 458,
	459, 462, 463, 466, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 224,
	0, 368, 369, 198, 386, 0, 0, 169, 0, 0,
	281, 289, 280, 0, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 217, 231, 304, 256, 305, 232,
	276, 275, 277, 258, 0, 0, 164, 0, 343, 0,
	0, 347, 180, 0, 0, 359, 0, 310, 181, 223,
	215, 303, 279, 174, 234, 341, 247, 255, 0, 0,
	293, 319, 187, 374, 340, 211, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 165, 175, 186, 204, 202, 216,
	244, 267, 272, 298, 330, 335, 350, 351, 352, 353,
	206, 0, 209, 185, 314, 184, 257, 237, 299, 357,
	358, 0, 159, 170, 251, 0, 312, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 203, 0,
	0, 0, 171, 179, 189, 201, 213, 220, 230, 233,
	238, 239, 241, 245, 259, 261, 262, 263, 264, 282,
	283, 287, 288, 291, 292, 295, 296, 297, 301, 302,
	308, 456, 315, 321, 322, 323, 324, 325, 333, 334,
	336, 337, 344, 366, 367, 380, 381, 0, 0, 156,
	0, 0, 162, 460, 354, 454, 465, 448, 0, 161,
	0, 0, 0, 0, 0, 290, 0, 0, 440, 0,
	0, 0, 0, 0, 208, 0, 0, 455, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 447, 446, 449,
	0, 0, 0, 274, 0, 0, 0, 453, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 457, 0, 0, 158, 252, 461,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 464, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 0, 327, 326, 0, 235, 0, 0, 0, 313,
	0, 243, 163, 0, 385, 176, 248, 356, 0, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 0, 443, 329, 360, 178, 345,
	450, 451, 452, 458, 459, 462, 463, 466, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 224, 0, 368, 369, 198, 386, 0,
	0, 169, 0, 0, 281, 289, 280, 0, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 217, 231,
	304, 256, 305, 232, 276, 275, 277, 258, 0, 0,
	164, 0, 343, 0, 0, 347, 180, 0, 0, 359,
	0, 310, 181, 223, 215, 303, 279, 174, 234, 341,
	247, 255, 0, 0, 293, 319, 187, 374, 340, 211,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 165, 175,
	186, 204, 202, 216, 244, 267, 272, 298, 330, 335,
	350, 351, 352, 353, 206, 0, 209, 185, 314, 184,
	257, 237, 299, 357, 358, 0, 159, 170, 251, 0,
	312, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 203, 0, 0, 0, 171, 179, 189, 201,
	213, 220, 230, 233, 238, 239, 241, 245, 259, 261,
	262, 263, 264, 282, 283, 287, 288, 291, 292, 295,
	296, 297, 301, 302, 308, 456, 315, 321, 322, 323,
	324, 325, 333, 334, 336, 337, 344, 366, 367, 380,
	381, 354, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 290, 161, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 207,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 378, 342, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 0,
	307, 226, 1192, 1191, 1201, 1202, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1193, 0, 0, 1203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 155, 0, 0, 0,
	285, 0, 0, 0, 158, 252, 0, 0, 0, 197,
	0, 318, 0, 372, 0, 0, 317, 254, 365, 0,
	0, 371, 0, 349, 379, 383, 219, 0, 188, 339,
	210, 205, 0, 0, 0, 227, 306, 200, 246, 0,
	0, 0, 193, 0, 0, 0, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 228, 0, 0, 376, 0, 327,
	326, 0, 235, 0, 0, 0, 313, 0, 243, 163,
	0, 385, 176, 248, 356, 0, 222, 284, 199, 0,
	294, 0, 157, 309, 266, 268, 265, 269, 225, 0,
	0, 0, 311, 329, 360, 178, 345, 0, 0, 0,
	0, 320, 0, 0, 0, 260, 214, 218, 229, 240,
	0, 316, 346, 377, 0, 173, 166, 348, 370, 183,
	328, 331, 384, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 0, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 0, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 2305, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2307, 2309, 0, 0, 0,
	0, 0, 0, 129, 0, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 2303, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 0, 0, 2308, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 0, 0,
	0, 158, 252, 0, 0, 0, 197, 0, 318, 0,
	372, 0, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 0, 327, 326, 0, 235,
	0, 0, 0, 313, 0, 243, 163, 0, 385, 176,
	248, 356, 0, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 0, 0, 0, 311,
	329, 360, 178, 345, 0, 0, 0, 0, 320, 0,
	0, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	369, 198, 386, 0, 0, 169, 0, 0, 281, 289,
	280, 0, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 0, 0, 164, 0, 343, 0, 0, 347,
	180, 0, 0, 359, 0, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 0, 0, 293, 319,
	187, 374, 340, 211, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 131, 0, 0, 0, 132, 0, 0, 133,
	134, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 0,
	159, 170, 251, 0, 312, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 203, 0, 0, 0,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 0,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 354, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 290, 161, 0, 0,
	0, 2305, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 207, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 378,
	342, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2307, 2309, 0, 0, 0, 0, 0, 0,
	129, 0, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 307, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 242,
	0, 0, 2308, 0, 0, 0, 0, 0, 250, 0,
	155, 0, 0, 0, 285, 0, 0, 0, 158, 252,
	0, 0, 0, 197, 0, 318, 0, 372, 0, 0,
	317, 254, 365, 0, 0, 371, 0, 349, 379, 383,
	219, 0, 188, 339, 210, 205, 0, 0, 0, 227,
	306, 200, 246, 0, 0, 0, 193, 0, 0, 0,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 228, 0,
	0, 376, 0, 327, 326, 0, 235, 0, 0, 0,
	313, 0, 243, 163, 0, 385, 176, 248, 356, 0,
	222, 284, 199, 0, 294, 0, 157, 309, 266, 268,
	265, 269, 225, 0, 0, 0, 311, 329, 360, 178,
	345, 0, 0, 0, 0, 320, 0, 0, 0, 260,
	214, 218, 229, 240, 0, 316, 346, 377, 0, 173,
	166, 348, 370, 183, 328, 331, 384, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 0, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 0, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 378, 342, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 0, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 0, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 0,
	327, 326, 0, 235, 0, 0, 0, 313, 0, 243,
	163, 0, 385, 176, 248, 356, 0, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	0, 0, 0, 311, 329, 360, 178, 345, 0, 0,
	0, 0, 320, 0, 0, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 224, 0, 368, 369, 198, 386, 0, 0, 169,
	0, 0, 281, 289, 280, 0, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 217, 231, 304, 256,
	305, 232, 276, 275, 277, 258, 0, 0, 164, 0,
	343, 0, 0, 347, 180, 0, 0, 359, 0, 310,
	181, 223, 215, 303, 279, 174, 234, 341, 247, 255,
	0, 0, 293, 319, 187, 374, 340, 211, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 165, 175, 186, 204,
	202, 216, 244, 267, 272, 298, 330, 335, 350, 351,
	352, 353, 206, 0, 209, 185, 314, 184, 257, 237,
	299, 357, 358, 0, 159, 170, 251, 0, 312, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	203, 0, 0, 480, 171, 179, 189, 201, 213, 220,
	230, 233, 238, 239, 241, 245, 259, 261, 262, 263,
	264, 282, 283, 287, 288, 291, 292, 295, 296, 297,
	301, 302, 308, 0, 315, 321, 322, 323, 324, 325,
	333, 334, 336, 337, 344, 366, 367, 380, 381, 354,
	0, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	290, 161, 0, 0, 0, 3526, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 207, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 378, 342, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 307, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 155, 0, 0, 0, 285, 0,
	0, 0, 158, 252, 0, 0, 0, 197, 0, 318,
	0, 372, 0, 0, 317, 254, 365, 0, 0, 371,
	0, 349, 379, 383, 219, 0, 188, 339, 210, 205,
	0, 0, 0, 227, 306, 200, 246, 0, 0, 0,
	193, 0, 0, 0, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 228, 0, 0, 376, 0, 327, 326, 0,
	235, 0, 0, 0, 313, 0, 243, 163, 0, 385,
	176, 248, 356, 0, 222, 284, 199, 0, 294, 0,
	157, 309, 266, 268, 265, 269, 225, 0, 0, 0,
	311, 329, 360, 178, 345, 0, 0, 0, 0, 320,
	0, 0, 0, 260, 214, 218, 229, 240, 0, 316,
	346, 377, 0, 173, 166, 348, 370, 183, 328, 331,
	384, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 0, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 131, 0, 0, 0, 132, 0, 0,
	133, 134, 0, 0, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	0, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 2616, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	378, 342, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 0, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 0,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 0, 327, 326, 0, 235, 0, 0,
	0, 313, 0, 243, 163, 0, 385, 176, 248, 356,
	0, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 0, 0, 0, 311, 329, 360,
	178, 345, 0, 0, 0, 0, 320, 0, 0, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 224, 0, 368, 369, 198,
	386, 0, 0, 169, 0, 0, 281, 289, 280, 0,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	217, 231, 304, 256, 305, 232, 276, 275, 277, 258,
	0, 0, 164, 0, 343, 0, 0, 347, 180, 0,
	0, 359, 0, 310, 181, 223, 215, 303, 279, 174,
	234, 341, 247, 255, 0, 0, 293, 319, 187, 374,
	340, 211, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	165, 175, 186, 204, 202, 216, 244, 267, 272, 298,
	330, 335, 350, 351, 352, 353, 206, 0, 209, 185,
	314, 184, 257, 237, 299, 357, 358, 0, 159, 170,
	251, 0, 312, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 203, 0, 0, 0, 171, 179,
	189, 201, 213, 220, 230, 233, 238, 239, 241, 245,
	259, 261, 262, 263, 264, 282, 283, 287, 288, 291,
	292, 295, 296, 297, 301, 302, 308, 0, 315, 321,
	322, 323, 324, 325, 333, 334, 336, 337, 344, 366,
	367, 380, 381, 354, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 290, 161, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 207, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 378, 342, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 0, 307, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 155, 0,
	0, 0, 285, 0, 0, 0, 158, 252, 0, 0,
	0, 197, 0, 318, 0, 372, 0, 0, 317, 254,
	365, 0, 0, 371, 0, 349, 379, 383, 219, 0,
	188, 339, 210, 205, 0, 0, 0, 227, 306, 200,
	246, 0, 0, 0, 193, 0, 0, 0, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 228, 0, 0, 376,
	0, 327, 326, 0, 235, 0, 0, 0, 313, 0,
	243, 163, 0, 385, 176, 248, 356, 0, 222, 284,
	199, 0, 294, 0, 157, 309, 266, 268, 265, 269,
	225, 0, 0, 0, 311, 329, 360, 178, 345, 0,
	0, 0, 0, 320, 0, 0, 0, 260, 214, 218,
	229, 240, 0, 316, 346, 377, 0, 173, 166, 348,
	370, 183, 328, 331, 384, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 131, 0, 0,
	0, 132, 0, 0, 133, 134, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	354, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 290, 161, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 0, 207, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 378, 342, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	0, 0, 0, 158, 252, 0, 0, 0, 197, 0,
	318, 0, 372, 0, 0, 317, 254, 365, 0, 0,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 0, 327, 326,
	0, 235, 0, 0, 0, 313, 0, 243, 163, 0,
	385, 176, 248, 356, 0, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 0, 0,
	0, 311, 329, 360, 178, 345, 0, 0, 0, 0,
	320, 0, 0, 0, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 224,
	0, 368, 369, 198, 386, 0, 0, 169, 0, 0,
	281, 289, 280, 0, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 217, 231, 304, 256, 305, 232,
	276, 275, 277, 258, 0, 0, 164, 0, 343, 0,
	0, 347, 180, 0, 0, 359, 0, 310, 181, 223,
	215, 303, 279, 174, 234, 341, 247, 255, 0, 0,
	293, 319, 187, 374, 340, 211, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 165, 175, 186, 204, 202, 216,
	244, 267, 272, 298, 330, 335, 350, 351, 352, 353,
	206, 0, 209, 185, 314, 184, 257, 237, 299, 357,
	358, 0, 159, 170, 251, 0, 312, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 203, 0,
	0, 0, 171, 179, 189, 201, 213, 220, 230, 233,
	238, 239, 241, 245, 259, 261, 262, 263, 264, 282,
	283, 287, 288, 291, 292, 295, 296, 297, 301, 302,
	308, 0, 315, 321, 322, 323, 324, 325, 333, 334,
	336, 337, 344, 366, 367, 380, 381, 354, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 290, 161,
	0, 3485, 0, 0, 0, 0, 0, 208, 3483, 0,
	0, 0, 0, 0, 0, 207, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 378, 342, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 0, 307, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 155, 0, 0, 0, 285, 0, 0, 0,
	158, 252, 0, 0, 0, 197, 0, 318, 0, 372,
	0, 0, 317, 254, 365, 0, 0, 371, 0, 349,
	379, 383, 219, 0, 188, 339, 210, 205, 0, 0,
	0, 227, 306, 200, 246, 0, 0, 0, 193, 0,
	0, 0, 338, 362, 160, 270, 363, 382, 177, 355,
	271, 278, 190, 192, 191, 172, 332, 361, 182, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	228, 0, 0, 376, 0, 327, 326, 0, 235, 0,
	3484, 0, 313, 0, 243, 163, 0, 385, 176, 248,
	356, 0, 222, 284, 199, 0, 294, 0, 157, 309,
	266, 268, 265, 269, 225, 0, 0, 0, 311, 329,
	360, 178, 345, 0, 0, 0, 0, 320, 0, 0,
	0, 260, 214, 218, 229, 240, 0, 316, 346, 377,
	0, 173, 166, 348, 370, 183, 328, 331, 384, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 369,
	198, 386, 0, 0, 169, 0, 0, 281, 289, 280,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 0, 0, 164, 0, 343, 0, 0, 347, 180,
	0, 0, 359, 0, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 0, 0, 293, 319, 187,
	374, 340, 211, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 0, 159,
	170, 251, 0, 312, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 203, 0, 0, 0, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 0, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 354, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 290, 161, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2436, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 0, 158, 252, 0,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 2437, 2438, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 0, 327, 326, 0, 235, 0, 0, 0, 313,
	0, 243, 163, 0, 385, 176, 248, 356, 0, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 0, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 224, 0, 368, 369, 198, 386, 0,
	0, 169, 0, 0, 281, 289, 280, 0, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 217, 231,
	304, 256, 305, 232, 276, 275, 277, 258, 0, 0,
	164, 0, 343, 0, 0, 347, 180, 0, 0, 359,
	0, 310, 181, 223, 215, 303, 279, 174, 234, 341,
	247, 255, 0, 0, 293, 319, 187, 374, 340, 211,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 165, 175,
	186, 204, 202, 216, 244, 267, 272, 298, 330, 335,
	350, 351, 352, 353, 206, 0, 209, 185, 314, 184,
	257, 237, 299, 357, 358, 0, 159, 170, 251, 0,
	312, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 203, 0, 0, 0, 171, 179, 189, 201,
	213, 220, 230, 233, 238, 239, 241, 245, 259, 261,
	262, 263, 264, 282, 283, 287, 288, 291, 292, 295,
	296, 297, 301, 302, 308, 0, 315, 321, 322, 323,
	324, 325, 333, 334, 336, 337, 344, 366, 367, 380,
	381, 354, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 290, 161, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 207,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 378, 342, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 468, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 0,
	307, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 155, 0, 0, 0,
	285, 0, 0, 0, 158, 252, 0, 0, 0, 197,
	0, 318, 0, 372, 0, 0, 317, 254, 365, 0,
	0, 371, 0, 349, 379, 383, 219, 0, 188, 339,
	210, 205, 0, 0, 0, 227, 306, 200, 246, 0,
	0, 0, 193, 0, 0, 0, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 228, 0, 0, 376, 0, 327,
	326, 0, 235, 0, 0, 0, 313, 0, 243, 163,
	0, 385, 176, 248, 356, 0, 222, 284, 199, 0,
	294, 0, 157, 309, 266, 268, 265, 269, 225, 0,
	0, 0, 311, 329, 360, 178, 345, 0, 0, 0,
	0, 320, 0, 0, 0, 260, 214, 218, 229, 240,
	0, 316, 346, 377, 0, 173, 166, 348, 370, 183,
	328, 331, 384, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 0, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 0, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 0, 0, 0, 0, 208, 1323,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 957, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 0, 0,
	0, 158, 252, 0, 0, 0, 197, 0, 318, 0,
	372, 0, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 0, 327, 326, 0, 235,
	0, 0, 0, 313, 0, 243, 163, 0, 385, 176,
	248, 356, 0, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 0, 0, 0, 311,
	329, 360, 178, 345, 0, 0, 0, 0, 320, 0,
	0, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	369, 198, 386, 0, 0, 169, 0, 0, 281, 289,
	280, 0, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 0, 0, 164, 0, 343, 0, 0, 347,
	180, 0, 0, 359, 0, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 0, 0, 293, 319,
	187, 374, 340, 211, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 0,
	159, 170, 251, 0, 312, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 203, 0, 0, 0,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 0,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 354, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 290, 161, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 0, 0, 0,
	0, 0, 0, 207, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 378,
	342, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 468, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 373,
	0, 0, 0, 0, 307, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	155, 0, 0, 0, 285, 0, 0, 0, 158, 252,
	0, 0, 0, 197, 0, 318, 0, 372, 0, 0,
	317, 254, 365, 0, 0, 371, 0, 349, 379, 383,
	219, 0, 188, 339, 210, 205, 0, 0, 0, 227,
	306, 200, 246, 0, 0, 0, 193, 0, 0, 0,
	338, 362, 160, 270, 363, 382, 177, 355, 271, 278,
	190, 192, 191, 172, 332, 361, 182, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 228, 0,
	0, 376, 0, 327, 326, 0, 235, 0, 0, 0,
	313, 0, 243, 163, 0, 385, 176, 248, 356, 0,
	222, 284, 199, 0, 294, 0, 157, 309, 266, 268,
	265, 269, 225, 0, 0, 0, 311, 329, 360, 178,
	345, 0, 0, 0, 0, 320, 0, 0, 0, 260,
	214, 218, 229, 240, 0, 316, 346, 377, 0, 173,
	166, 348, 370, 183, 328, 331, 384, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 224, 0, 368, 369, 198, 386,
	0, 0, 169, 0, 0, 281, 289, 280, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 217,
	231, 304, 256, 305, 232, 276, 275, 277, 258, 0,
	0, 164, 0, 343, 0, 0, 347, 180, 0, 0,
	359, 0, 310, 181, 223, 215, 303, 279, 174, 234,
	341, 247, 255, 0, 0, 293, 319, 187, 374, 340,
	211, 0, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 165,
	175, 186, 204, 202, 216, 244, 267, 272, 298, 330,
	335, 350, 351, 352, 353, 206, 0, 209, 185, 314,
	184, 257, 237, 299, 357, 358, 0, 159, 170, 251,
	0, 312, 221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 203, 0, 0, 0, 171, 179, 189,
	201, 213, 220, 230, 233, 238, 239, 241, 245, 259,
	261, 262, 263, 264, 282, 283, 287, 288, 291, 292,
	295, 296, 297, 301, 302, 308, 0, 315, 321, 322,
	323, 324, 325, 333, 334, 336, 337, 344, 366, 367,
	380, 381, 354, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 290, 161, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 0, 0, 0, 0, 0, 0,
	207, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 378, 342, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2774, 0, 0, 0, 2776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 307, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 155, 0, 0,
	0, 285, 0, 0, 0, 158, 252, 0, 0, 0,
	197, 0, 318, 0, 372, 0, 0, 317, 254, 365,
	0, 0, 371, 0, 349, 379, 383, 219, 0, 188,
	339, 210, 205, 0, 0, 0, 227, 306, 200, 246,
	0, 0, 0, 193, 0, 0, 0, 338, 362, 160,
	270, 363, 382, 177, 355, 271, 278, 190, 192, 191,
	172, 332, 361, 182, 195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 228, 0, 0, 376, 0,
	327, 326, 0, 235, 0, 0, 0, 313, 0, 243,
	163, 0, 385, 176, 248, 356, 0, 222, 284, 199,
	0, 294, 0, 157, 309, 266, 268, 265, 269, 225,
	0, 0, 0, 311, 329, 360, 178, 345, 0, 0,
	0, 0, 320, 0, 0, 0, 260, 214, 218, 229,
	240, 0, 316, 346, 377, 0, 173, 166, 348, 370,
	183, 328, 331, 384, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 224, 0, 368, 369, 198, 386, 0, 0, 169,
	0, 0, 281, 289, 280, 0, 364, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 217, 231, 304, 256,
	305, 232, 276, 275, 277, 258, 0, 0, 164, 0,
	343, 0, 0, 347, 180, 0, 0, 359, 0, 310,
	181, 223, 215, 303, 279, 174, 234, 341, 247, 255,
	0, 0, 293, 319, 187, 374, 340, 211, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 165, 175, 186, 204,
	202, 216, 244, 267, 272, 298, 330, 335, 350, 351,
	352, 353, 206, 0, 209, 185, 314, 184, 257, 237,
	299, 357, 358, 0, 159, 170, 251, 0, 312, 221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	203, 0, 0, 0, 171, 179, 189, 201, 213, 220,
	230, 233, 238, 239, 241, 245, 259, 261, 262, 263,
	264, 282, 283, 287, 288, 291, 292, 295, 296, 297,
	301, 302, 308, 0, 315, 321, 322, 323, 324, 325,
	333, 334, 336, 337, 344, 366, 367, 380, 381, 354,
	0, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	290, 161, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 207, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 378, 342, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 307, 226,
	0, 0, 0, 0, 0, 0, 2761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 0, 155, 0, 0, 0, 285, 0,
	0, 0, 158, 252, 0, 0, 0, 197, 0, 318,
	0, 372, 0, 0, 317, 254, 365, 0, 0, 371,
	0, 349, 379, 383, 219, 0, 188, 339, 210, 205,
	0, 0, 0, 227, 306, 200, 246, 0, 0, 0,
	193, 0, 0, 0, 338, 362, 160, 270, 363, 382,
	177, 355, 271, 278, 190, 192, 191, 172, 332, 361,
	182, 195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 228, 0, 0, 376, 0, 327, 326, 0,
	235, 0, 0, 0, 313, 0, 243, 163, 0, 385,
	176, 248, 356, 0, 222, 284, 199, 0, 294, 0,
	157, 309, 266, 268, 265, 269, 225, 0, 0, 0,
	311, 329, 360, 178, 345, 0, 0, 0, 0, 320,
	0, 0, 0, 260, 214, 218, 229, 240, 0, 316,
	346, 377, 0, 173, 166, 348, 370, 183, 328, 331,
	384, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 224, 0,
	368, 369, 198, 386, 0, 0, 169, 0, 0, 281,
	289, 280, 0, 364, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 217, 231, 304, 256, 305, 232, 276,
	275, 277, 258, 0, 0, 164, 0, 343, 0, 0,
	347, 180, 0, 0, 359, 0, 310, 181, 223, 215,
	303, 279, 174, 234, 341, 247, 255, 0, 0, 293,
	319, 187, 374, 340, 211, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 165, 175, 186, 204, 202, 216, 244,
	267, 272, 298, 330, 335, 350, 351, 352, 353, 206,
	0, 209, 185, 314, 184, 257, 237, 299, 357, 358,
	0, 159, 170, 251, 0, 312, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 203, 0, 0,
	0, 171, 179, 189, 201, 213, 220, 230, 233, 238,
	239, 241, 245, 259, 261, 262, 263, 264, 282, 283,
	287, 288, 291, 292, 295, 296, 297, 301, 302, 308,
	0, 315, 321, 322, 323, 324, 325, 333, 334, 336,
	337, 344, 366, 367, 380, 381, 354, 0, 156, 0,
	0, 162, 0, 0, 0, 0, 0, 290, 161, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 0, 0,
	0, 0, 0, 0, 207, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	378, 342, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 0, 0, 0, 0, 307, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 155, 0, 0, 0, 285, 0, 0, 0, 158,
	252, 0, 0, 0, 197, 0, 318, 0, 372, 0,
	0, 317, 254, 365, 0, 0, 371, 0, 349, 379,
	383, 219, 0, 188, 339, 210, 205, 0, 0, 0,
	227, 306, 200, 246, 0, 0, 0, 193, 0, 0,
	0, 338, 362, 160, 270, 363, 382, 177, 355, 271,
	278, 190, 192, 191, 172, 332, 361, 182, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 228,
	0, 0, 376, 0, 327, 326, 0, 235, 0, 0,
	0, 313, 0, 243, 163, 0, 385, 176, 248, 356,
	0, 222, 284, 199, 0, 294, 0, 157, 309, 266,
	268, 265, 269, 225, 0, 0, 0, 311, 329, 360,
	178, 345, 0, 0, 0, 0, 320, 0, 0, 0,
	260, 214, 218, 229, 240, 0, 316, 346, 377, 0,
	173, 166, 348, 370, 183, 328, 331, 384, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 224, 0, 368, 369, 198,
	386, 0, 0, 169, 0, 0, 281, 289, 280, 0,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	217, 231, 304, 256, 305, 232, 276, 275, 277, 258,
	0, 0, 164, 0, 343, 0, 0, 347, 180, 0,
	0, 359, 0, 310, 181, 223, 215, 303, 279, 174,
	234, 341, 247, 255, 0, 0, 293, 319, 187, 374,
	340, 211, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	165, 175, 186, 204, 202, 216, 244, 267, 272, 298,
	330, 335, 350, 351, 352, 353, 206, 0, 209, 185,
	314, 184, 257, 237, 299, 357, 358, 0, 159, 170,
	251, 0, 312, 221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 203, 0, 0, 0, 171, 179,
	189, 201, 213, 220, 230, 233, 238, 239, 241, 245,
	259, 261, 262, 263, 264, 282, 283, 287, 288, 291,
	292, 295, 296, 297, 301, 302, 308, 0, 315, 321,
	322, 323, 324, 325, 333, 334, 336, 337, 344, 366,
	367, 380, 381, 354, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 290, 161, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 0, 0, 0, 0, 0,
	0, 207, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 378, 342, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 0, 307, 226, 0, 0, 0, 0, 0, 0,
	2146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 155, 0,
	0, 0, 285, 0, 0, 0, 158, 252, 0, 0,
	0, 197, 0, 318, 0, 372, 0, 0, 317, 254,
	365, 0, 0, 371, 0, 349, 379, 383, 219, 0,
	188, 339, 210, 205, 0, 0, 0, 227, 306, 200,
	246, 0, 0, 0, 193, 0, 0, 0, 338, 362,
	160, 270, 363, 382, 177, 355, 271, 278, 190, 192,
	191, 172, 332, 361, 182, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 228, 0, 0, 376,
	0, 327, 326, 0, 235, 0, 0, 0, 313, 0,
	243, 163, 0, 385, 176, 248, 356, 0, 222, 284,
	199, 0, 294, 0, 157, 309, 266, 268, 265, 269,
	225, 0, 0, 0, 311, 329, 360, 178, 345, 0,
	0, 0, 0, 320, 0, 0, 0, 260, 214, 218,
	229, 240, 0, 316, 346, 377, 0, 173, 166, 348,
	370, 183, 328, 331, 384, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 224, 0, 368, 369, 198, 386, 0, 0,
	169, 0, 0, 281, 289, 280, 0, 364, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 217, 231, 304,
	256, 305, 232, 276, 275, 277, 258, 0, 0, 164,
	0, 343, 0, 0, 347, 180, 0, 0, 359, 0,
	310, 181, 223, 215, 303, 279, 174, 234, 341, 247,
	255, 0, 0, 293, 319, 187, 374, 340, 211, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 165, 175, 186,
	204, 202, 216, 244, 267, 272, 298, 330, 335, 350,
	351, 352, 353, 206, 0, 209, 185, 314, 184, 257,
	237, 299, 357, 358, 0, 159, 170, 251, 0, 312,
	221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 203, 0, 0, 0, 171, 179, 189, 201, 213,
	220, 230, 233, 238, 239, 241, 245, 259, 261, 262,
	263, 264, 282, 283, 287, 288, 291, 292, 295, 296,
	297, 301, 302, 308, 0, 315, 321, 322, 323, 324,
	325, 333, 334, 336, 337, 344, 366, 367, 380, 381,
	354, 0, 156, 0, 0, 162, 0, 0, 0, 0,
	0, 290, 161, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 0, 0, 0, 0, 0, 2183, 2184, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 378, 342, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 373, 0, 0, 0, 0, 307,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 155, 0, 0, 0, 285,
	0, 0, 0, 158, 252, 0, 0, 0, 197, 0,
	318, 0, 372, 0, 0, 317, 254, 365, 0, 0,
	371, 0, 349, 379, 383, 219, 0, 188, 339, 210,
	205, 0, 0, 0, 227, 306, 200, 246, 0, 0,
	0, 193, 0, 0, 0, 338, 362, 160, 270, 363,
	382, 177, 355, 271, 278, 190, 192, 191, 172, 332,
	361, 182, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 228, 0, 0, 376, 0, 327, 326,
	0, 235, 0, 0, 0, 313, 0, 243, 163, 0,
	385, 176, 248, 356, 0, 222, 284, 199, 0, 294,
	0, 157, 309, 266, 268, 265, 269, 225, 0, 0,
	0, 311, 329, 360, 178, 345, 0, 0, 0, 0,
	320, 0, 0, 0, 260, 214, 218, 229, 240, 0,
	316, 346, 377, 0, 173, 166, 348, 370, 183, 328,
	331, 384, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 224,
	0, 368, 369, 198, 386, 0, 0, 169, 0, 0,
	281, 289, 280, 0, 364, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 217, 231, 304, 256, 305, 232,
	276, 275, 277, 258, 0, 0, 164, 0, 343, 0,
	0, 347, 180, 0, 0, 359, 0, 310, 181, 223,
	215, 303, 279, 174, 234, 341, 247, 255, 0, 0,
	293, 319, 187, 374, 340, 211, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 165, 175, 186, 204, 202, 216,
	244, 267, 272, 298, 330, 335, 350, 351, 352, 353,
	206, 0, 209, 185, 314, 184, 257, 237, 299, 357,
	358, 0, 159, 170, 251, 0, 312, 221, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 203, 0,
	0, 0, 171, 179, 189, 201, 213, 220, 230, 233,
	238, 239, 241, 245, 259, 261, 262, 263, 264, 282,
	283, 287, 288, 291, 292, 295, 296, 297, 301, 302,
	308, 0, 315, 321, 322, 323, 324, 325, 333, 334,
	336, 337, 344, 366, 367, 380, 381, 354, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 290, 161,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 0,
	0, 0, 0, 0, 0, 207, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 378, 342, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 0, 0, 0, 307, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 155, 0, 0, 0, 285, 0, 0, 0,
	158, 252, 0, 0, 0, 197, 0, 318, 0, 372,
	0, 0, 317, 254, 365, 0, 0, 371, 0, 349,
	379, 383, 219, 0, 188, 339, 210, 205, 0, 0,
	0, 227, 306, 200, 246, 0, 0, 0, 193, 0,
	0, 0, 338, 362, 160, 270, 363, 382, 177, 355,
	271, 278, 190, 192, 191, 172, 332, 361, 182, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	228, 0, 0, 376, 0, 327, 326, 0, 235, 0,
	0, 0, 313, 0, 243, 163, 0, 385, 176, 248,
	356, 0, 222, 284, 199, 0, 294, 0, 157, 309,
	266, 268, 265, 269, 225, 0, 0, 0, 311, 329,
	360, 178, 345, 0, 0, 0, 0, 320, 0, 0,
	0, 260, 214, 218, 229, 240, 0, 316, 346, 377,
	0, 173, 166, 348, 370, 183, 328, 331, 384, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 224, 0, 368, 369,
	198, 386, 0, 0, 169, 0, 0, 281, 289, 280,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 217, 231, 304, 256, 305, 232, 276, 275, 277,
	258, 0, 0, 164, 0, 343, 0, 0, 347, 180,
	0, 0, 359, 0, 310, 181, 223, 215, 303, 279,
	174, 234, 341, 247, 255, 0, 0, 293, 319, 187,
	374, 340, 211, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 165, 175, 186, 204, 202, 216, 244, 267, 272,
	298, 330, 335, 350, 351, 352, 353, 206, 0, 209,
	185, 314, 184, 257, 237, 299, 357, 358, 0, 159,
	170, 251, 0, 312, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 203, 0, 0, 0, 171,
	179, 189, 201, 213, 220, 230, 233, 238, 239, 241,
	245, 259, 261, 262, 263, 264, 282, 283, 287, 288,
	291, 292, 295, 296, 297, 301, 302, 308, 0, 315,
	321, 322, 323, 324, 325, 333, 334, 336, 337, 344,
	366, 367, 380, 381, 354, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 290, 161, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 0, 0, 0, 0,
	0, 0, 207, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 378, 342,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 373, 0,
	0, 0, 0, 307, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 0, 155,
	0, 0, 0, 285, 0, 0, 0, 158, 252, 0,
	0, 0, 197, 0, 318, 0, 372, 0, 0, 317,
	254, 365, 0, 0, 371, 0, 349, 379, 383, 219,
	0, 188, 339, 210, 205, 0, 0, 0, 227, 306,
	200, 246, 0, 0, 0, 193, 0, 0, 0, 338,
	362, 160, 270, 363, 382, 177, 355, 271, 278, 190,
	192, 191, 172, 332, 361, 182, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 228, 0, 0,
	376, 0, 327, 326, 0, 235, 0, 0, 0, 313,
	0, 243, 163, 0, 385, 176, 248, 356, 0, 222,
	284, 199, 0, 294, 0, 157, 309, 266, 268, 265,
	269, 225, 0, 0, 0, 311, 329, 360, 178, 345,
	0, 0, 0, 0, 320, 0, 0, 0, 260, 214,
	218, 229, 240, 0, 316, 346, 377, 0, 173, 166,
	348, 370, 183, 328, 331, 384, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 224, 0, 368, 369, 198, 386, 0,
	0, 169, 0, 0, 281, 289, 280, 0, 364, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 217, 231,
	304, 256, 305, 232, 276, 275, 277, 258, 0, 0,
	164, 0, 343, 0, 0, 347, 180, 0, 0, 359,
	0, 310, 181, 223, 215, 303, 279, 174, 234, 341,
	247, 255, 0, 0, 293, 319, 187, 374, 340, 211,
	0, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 165, 175,
	186, 204, 202, 216, 244, 267, 272, 298, 330, 335,
	350, 351, 352, 353, 206, 0, 209, 185, 314, 184,
	257, 237, 299, 357, 358, 0, 159, 170, 251, 0,
	312, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 203, 0, 0, 0, 171, 179, 189, 201,
	213, 220, 230, 233, 238, 239, 241, 245, 259, 261,
	262, 263, 264, 282, 283, 287, 288, 291, 292, 295,
	296, 297, 301, 302, 308, 0, 315, 321, 322, 323,
	324, 325, 333, 334, 336, 337, 344, 366, 367, 380,
	381, 354, 0, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 290, 161, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 0, 0, 0, 0, 0, 0, 207,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 378, 342, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 0, 0, 0,
	307, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 155, 0, 0, 0,
	285, 0, 0, 0, 158, 252, 0, 0, 0, 197,
	0, 318, 0, 372, 0, 0, 317, 254, 365, 0,
	0, 371, 0, 349, 379, 383, 219, 0, 188, 339,
	210, 205, 0, 0, 0, 227, 306, 200, 246, 0,
	0, 0, 193, 0, 0, 0, 338, 362, 160, 270,
	363, 382, 177, 355, 271, 278, 190, 192, 191, 172,
	332, 361, 182, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 228, 0, 0, 376, 0, 327,
	326, 0, 235, 0, 0, 0, 313, 0, 243, 163,
	0, 385, 176, 248, 356, 0, 222, 284, 199, 0,
	294, 0, 157, 309, 266, 268, 265, 269, 225, 0,
	0, 0, 311, 329, 360, 178, 345, 0, 0, 0,
	0, 320, 0, 0, 0, 260, 214, 218, 229, 240,
	0, 316, 346, 377, 0, 173, 166, 348, 370, 183,
	328, 331, 384, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	224, 0, 368, 369, 198, 386, 0, 0, 169, 0,
	0, 281, 289, 280, 0, 364, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 217, 231, 304, 256, 305,
	232, 276, 275, 277, 258, 0, 0, 164, 0, 343,
	0, 0, 347, 180, 0, 0, 359, 0, 310, 181,
	223, 215, 303, 279, 174, 234, 341, 247, 255, 0,
	0, 293, 319, 187, 374, 340, 211, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 165, 175, 186, 204, 202,
	216, 244, 267, 272, 298, 330, 335, 350, 351, 352,
	353, 206, 0, 209, 185, 314, 184, 257, 237, 299,
	357, 358, 0, 159, 170, 251, 0, 312, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 203,
	0, 0, 0, 171, 179, 189, 201, 213, 220, 230,
	233, 238, 239, 241, 245, 259, 261, 262, 263, 264,
	282, 283, 287, 288, 291, 292, 295, 296, 297, 301,
	302, 308, 0, 315, 321, 322, 323, 324, 325, 333,
	334, 336, 337, 344, 366, 367, 380, 381, 354, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 290,
	161, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	0, 0, 0, 0, 0, 0, 207, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 378, 342, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 0, 0, 307, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 0, 155, 0, 0, 0, 285, 0, 0,
	0, 158, 252, 0, 0, 0, 197, 0, 318, 0,
	372, 0, 0, 317, 254, 365, 0, 0, 371, 0,
	349, 379, 383, 219, 0, 188, 339, 210, 205, 0,
	0, 0, 227, 306, 200, 246, 0, 0, 0, 193,
	0, 0, 0, 338, 362, 160, 270, 363, 382, 177,
	355, 271, 278, 190, 192, 191, 172, 332, 361, 182,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 228, 0, 0, 376, 0, 327, 326, 0, 235,
	0, 0, 0, 313, 0, 243, 163, 0, 385, 176,
	248, 356, 0, 222, 284, 199, 0, 294, 0, 157,
	309, 266, 268, 265, 269, 225, 0, 0, 0, 311,
	329, 360, 178, 345, 0, 0, 0, 0, 320, 0,
	0, 0, 260, 214, 218, 229, 240, 0, 316, 346,
	377, 0, 173, 166, 348, 370, 183, 328, 331, 384,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 224, 0, 368,
	369, 198, 386, 0, 0, 169, 0, 0, 281, 289,
	280, 0, 364, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 217, 231, 304, 256, 305, 232, 276, 275,
	277, 258, 0, 0, 164, 0, 343, 0, 0, 347,
	180, 0, 0, 359, 0, 310, 181, 223, 215, 303,
	279, 174, 234, 341, 247, 255, 0, 0, 293, 319,
	187, 374, 340, 211, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 165, 175, 186, 204, 202, 216, 244, 267,
	272, 298, 330, 335, 350, 351, 352, 353, 206, 0,
	209, 185, 314, 184, 257, 237, 299, 357, 358, 0,
	159, 170, 251, 0, 312, 221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 203, 0, 0, 0,
	171, 179, 189, 201, 213, 220, 230, 233, 238, 239,
	241, 245, 259, 261, 262, 263, 264, 282, 283, 287,
	288, 291, 292, 295, 296, 297, 301, 302, 308, 0,
	315, 321, 322, 323, 324, 325, 333, 334, 336, 337,
	344, 366, 367, 380, 381, 0, 0, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 161,
}

var yyPact = [...]int{
	5316, -1000, -438, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2250, -1000, -1000, 337, -1000,
	1301, 862, -1000, 376, 176, 35232, 809, 4017, 50054, 71,
	-1000, 71, 225, 658, 35849, 594, 772, 1654, 2126, 1653,
	74, -50, -52, 147, 37097, 36473, 33, -1000, 39565, 751,
	82, -1000, -1000, -1000, -1000, 2315, 239, -1000, -1000, 2235,
	2248, 2044, -1000, 8102, -1000, -1000, -1000, -1000, -1000, 22094,
	-1000, 2313, 35849, 29675, -1000, 803, 789, -164, 743, 743,
	577, 743, 743, 808, -1000, 335, 1214, -1000, -1000, -1000,
	-1000, 1204, 35849, 45118, 746, 48820, 746, 746, 746, 746,
	746, 746, 746, 35849, -1000, 919, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 35849, 1652, 2159,
	1136, 228, -1000, -1000, -1000, 1190, -1000, 601, 584, 582,
	460, 105, 1163, 2230, -1000, 1823, 2235, 2235, -1000, -1000,
	-1000, -1000, -1000, -1000, 977, -1000, -1000, 1254, 1254, 440,
	784, 240, 239, 1203, 2203, 2158, 2154, 1506, 2153, 630,
	2152, 1990, -22, -1000, 1651, 35849, -1000, -1000, 1467, 1462,
	370, 1887, 882, 2010, -1000, -1000, 395, 723, 1983, 507,
	1983, 1983, 1983, 1983, 1983, -59, 1983, 1983, 1983, 134,
	1983, 177, 1983, 1983, 1983, 1983, 1983, 1663, -1000, -1000,
	-1000, 491, 1885, 1881, 2009, 548, -1000, -1000, -1000, 1993,
	41416, 1931, -1000, 1823, -1000, -1000, -1000, 807, -1000, -123,
	1993, 2217, 1668, -1000, 39565, 2155, 1303, 14462, 2086, -1000,
	-1000, 1296, 2283, -1000, 29058, 906, -1000, 14462, 1627, 1823,
	-1000, -1000, 1823, -1000, 839, 944, -1000, 822, 897, -1000,
	-1000, 13826, 13826, 13826, 13826, 13826, 13826, 13826, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1823, 904, 901, 1823, 1823, 1823,
	1823, 1823, -1000, 12554, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1823, 1823, 1823, 1823,
	1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823,
	14462, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823,
	1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823,
	1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823,
	1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823,
	1823, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 751, 751, 34615, 1958, -140, 21458, -1000, -1000,
	-1000, -1000, 20186, 44501, 1202, -1000, -1000, -1000, -1000, 2151,
	-1000, -1000, 900, 897, 839, 837, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2250, -1000, -1000, 1857, 700, -1000,
	1272, 1272, 1272, 1272, 1272, 314, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1988, 48820, 35849, 341, 1650,
	1193, 1649, 50671, 50671, -1000, 266, 45118, 45118, 743, 310,
	45118, 313, 1956, 777, 1955, 775, 1645, 35849, 2183, 2008,
	35849, 1643, 1642, 50671, 50671, 45118, 45118, -1000, 27818, 1954,
	-1000, -1000, 1136, -1000, 6832, 14462, 743, 743, 35849, 35849,
	35849, 35849, 35849, -1000, -1000, 1136, 1136, 1136, 1136, 1159,
	2281, 1159, -1000, 1159, -1000, -1000, 14462, -1000, 13826, 43884,
	988, -1000, -1000, 50054, 634, 634, 634, -1000, 1640, 357,
	-1000, -1000, -1000, -1000, -1000, -1000, 1636, -1000, 2130, 630,
	630, -1000, 1578, 630, 1926, -1000, 1188, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 630,
	-1000, 13190, -418, -1000, -1000, 1953, -1000, 275, -1000, -1000,
	620, 2006, 620, 202, 45118, 45118, 45118, -1000, 1983, 48820,
	-1000, 1983, 1983, 1983, -96, 1983, 1983, -1000, -1000, 1983,
	-1000, -1000, -1000, -1000, -1000, 1983, -1000, -1000, -1000, 1983,
	1983, -1000, 1983, 1983, -1000, -1000, -1000, -1000, -1000, 45118,
	620, 203, 1945, 620, 45118, 45118, -1000, 119, 118, 115,
	103, -1000, -1000, -1000, -1000, 101, 100, -1000, -1000, -1000,
	1931, 41416, 2214, 17006, 35849, -121, -1000, -1000, 239, -1000,
	-1000, -1000, -1000, 1993, 1280, 2307, 1056, 1946, -1000, -1000,
	1929, -1000, 1270, 887, 1323, 2054, -1000, -1000, -1000, 35849,
	-1000, 14462, 14462, 14462, 1371, -1000, 30292, -1000, -1000, -1000,
	-1000, -1000, -1000, 18278, 1067, 13826, 1372, 1051, 13826, 13826,
	13826, 13826, 13826, 13826, 13826, 13826, 13826, 13826, 13826, 13826,
	13826, 13826, 13826, 1431, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1635, -1000, 239, 25910, 9374, 25910, 1477, 1477,
	48820, 916, 916, 916, 916, 916, 916, 37714, 2210, 25274,
	25910, 2210, 2210, 2210, 2210, 2210, 1668, 1807, 1191, 39565,
	12554, 9374, 9374, 9374, 1668, 14462, 14462, 9374, 9374, 11918,
	11282, 15734, 9374, 9374, 2210, 1220, 1191, 20186, 9374, -1000,
	-1000, 10646, -1000, -1000, -1000, -1000, -1000, 1668, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 48820, 48820, 9374, 9374,
	9374, 9374, 1668, 1668, 9374, 9374, 9374, 9374, 9374, 1668,
	1668, 1668, 1668, 9374, 9374, 9374, 9374, 9374, 9374, 9374,
	9374, 9374, 9374, 9374, 9374, 33998, 32764, 35849, 1952, 1891,
	-1000, 872, 20822, 1897, -1000, -111, -126, -140, -1000, -1000,
	915, -1000, -1000, -1000, 10010, -1000, 18914, 2235, 2044, -1000,
	28441, -1000, -1000, -34, -1000, -1000, -1000, 1969, -1000, 1977,
	322, 16, 1977, 1977, 1977, 1977, 1977, -1000, -1000, -1000,
	-1000, 21, -1000, -1000, -1000, -1000, -1000, 1987, 1986, -1000,
	1969, 1969, 1969, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1979, 401, 1976, 1976, 1976, 1976, 1976, -1000,
	-1000, -1000, -1000, 701, 701, 701, -1000, 14462, 1637, 2212,
	786, 310, 2164, 2182, 2164, 443, -1000, 868, 1985, -1000,
	863, 350, 1901, -1000, 217, 1762, 33381, -1000, -1000, -1000,
	-1000, -1000, 35849, 35849, 45118, 45118, 45118, 783, -1000, 35849,
	1928, -1000, -1000, -1000, -1000, -1000, 1861, -1000, 1762, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35849, -1000,
	-1000, 1565, 1191, 1634, 1633, 2203, -1000, -1000, -1000, 1189,
	-1000, -1000, -1000, -1000, 1136, 50054, 50054, 35849, 2203, 1136,
	1191, 799, 1992, 1823, 1668, -1000, -1000, 59, -1000, 55,
	-1000, -1000, -1000, 1631, -1000, 13826, 1926, 1926, -1000, 1926,
	630, 1477, 1926, -1000, 1805, 1275, 1546, 35849, -1000, 41416,
	-23, -1000, -132, 47586, -1000, -1000, -1000, 620, 47586, -1000,
	134, 165, -1000, 771, -1000, 1798, -1000, -1000, -1000, -1000,
	1983, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47586, 170, 200, 47586, 1861, 2280, -1000, -1000, -1000, -1000,
	2228, -1000, -1000, 1823, 1775, -1000, 857, -1000, -1000, -1000,
	-1000, -1000, -1000, 633, -1000, -1000, 1668, -1000, 48203, -1000,
	2050, 1303, 1303, 14462, -1000, -1000, -1000, 18914, 2229, -1000,
	2067, 2065, 2024, -1000, -1000, 1067, 1178, 1199, -1000, -1000,
	1408, -1000, -1000, -1000, -1000, -1000, 852, 1823, -1000, -1000,
	-1000, -1000, -1000, 3651, -1000, -1000, -1000, -1000, 1372, 13826,
	13826, 13826, 799, 3651, 3631, 1307, 3665, 916, 1184, 1184,
	972, 972, 972, 972, 972, 1081, 1081, -1000, -1000, -1000,
	1668, -1000, 1750, -1000, -1000, 1191, 850, -1000, -1000, -1000,
	-1000, -1000, -1000, 9374, -1000, -1000, -1000, 9374, 9374, 9374,
	9374, 9374, -1000, 14462, -1000, 1668, 1750, 1750, 1750, -1000,
	1263, 1167, 1632, 1750, 1017, 2279, 1750, 993, 2273, 1750,
	1103, 13826, 13826, 13826, 1750, 1750, 9374, 1228, -1000, 14462,
	1668, 1750, -1000, 1560, 1919, 1902, 1750, 1668, 1899, 1750,
	1750, -184, -184, 1668, 1750, 1668, 1750, 1750, -184, -184,
	-184, -184, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750,
	1750, 1750, 1750, 1750, 1034, 35849, -1000, 1893, 436, -1000,
	-1000, -1000, 2211, 32147, -1000, -1000, 38331, -1000, 1823, 1823,
	1034, 1773, 32764, -1000, -1000, 32764, 50054, 24638, -1000, 20186,
	-140, -76, -1000, -1000, 1897, -1000, -1000, 1473, -1000, -1000,
	1191, -1000, 848, 2155, 2210, 4198, 700, -1000, -1000, -1000,
	1982, 304, -1000, 2090, 945, 945, 935, 1604, 2084, -1000,
	-1000, 171, -44, -1000, -1000, -1000, 1461, -1000, 193, -1000,
	1977, 1977, 311, 1977, -1000, -1000, -1000, -1000, -1000, -1000,
	1543, 1543, -1000, -1000, -1000, -1000, 1460, -1000, 1979, -1000,
	1455, -1000, -1000, -1000, -1000, 171, 171, 171, 171, -1000,
	-1000, -1000, 1420, 2004, 48820, -1000, 35849, -1000, 2164, -1000,
	-1000, -1000, 409, -1000, -1000, -1000, 2265, -1000, -1000, 48820,
	43267, 48820, -1000, -1000, 141, 45118, 215, 398, 237, -1000,
	-1000, 762, -1000, 760, -1000, -1000, -1000, -1000, -1000, -1000,
	35849, 45118, -1000, -1000, -1000, -1000, -1000, 2256, 1628, 1625,
	-1000, -1000, -1000, 1159, 1136, -1000, -1000, 13826, 45118, -1000,
	576, -1000, -1000, -1000, 3651, -1000, -1000, -1000, 1034, 800,
	-1000, -1000, -51, -1000, -1000, 759, 847, 844, 47586, 755,
	-1000, 143, 45118, -1000, 48820, -1000, 2272, 2269, 169, 2268,
	45118, -1000, 86, -1000, 244, -1000, 17006, 25910, 1892, -1000,
	798, 866, 889, 706, 706, -1000, 1117, 706, 2141, 2140,
	1021, -1000, 1888, 1542, 1541, -1000, 2048, -1000, -1000, -1000,
	35849, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	24002, 9374, -1000, 799, 3651, 3609, -1000, 13826, -1000, 9374,
	-1000, 17642, 1668, 1750, 1750, 1750, 1750, 1750, 1191, -1000,
	-1000, -1000, -1000, 717, 1431, 717, -1000, 1431, -1000, 13826,
	13826, -1000, 13826, 13826, -1000, -1000, 13826, 3569, 3554, 3309,
	-277, -1000, 1886, 1080, -1000, 14462, 1357, -1000, -1000, -1000,
	13826, 13826, -1000, -1000, -1000, -1000, -1000, 46969, -1000, -184,
	-184, -184, -184, -184, -1000, -1000, -1000, -1000, -184, -184,
	-184, -184, -184, -184, -184, -184, -184, -184, -184, -184,
	241, 1823, -1000, 19550, 32764, 32764, 32764, 32764, 32764, -1000,
	2040, 2035, -1000, 2023, 2022, 2021, 354, 41416, 1796, 1668,
	449, 32147, -1000, 1823, -1000, 40799, 871, 797, 795, 793,
	9374, 13826, 2256, 32764, 1801, 1801, -1000, 841, -1000, -1000,
	-1000, -129, -148, -1000, -1000, -1000, 25910, -1000, -1000, -1000,
	4758, 2247, 1117, 1117, 1117, 1117, 283, 2149, 1117, 1117,
	1117, 1117, 1117, -229, -230, 1117, 1117, 1117, 1117, 1117,
	1117, 1117, 1117, 1117, 1117, 1117, 80, 1117, 1117, 1117,
	1117, 22730, 1117, -1000, 42033, 704, 2087, 670, 1604, 1604,
	1604, -1000, 1604, -1000, -1000, -1000, 1978, -1000, 1285, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1823, -430, 1453,
	2148, 749, 2300, -1000, 2083, -1000, 2082, 2081, 1539, -1000,
	-1000, 1763, 1741, 1739, -1000, -1000, -1000, 1977, -1000, 1794,
	-1000, 1784, 1867, -1000, 1780, 122, 35849, -1000, -1000, 2206,
	-1000, -1000, -1000, 2147, 1117, 1117, 1117, 2003, -1000, -1000,
	-1000, -1000, 1721, 1866, -1000, 1272, 48820, 48820, 48820, -1000,
	-284, 292, -1000, 45118, 184, 217, 498, 1624, 35849, 45118,
	-1000, -1000, -1000, 14462, -1000, -1000, 2203, -1000, 3651, 1762,
	-1000, -1000, 18, 35849, -1000, 45118, 982, 46352, 754, 45118,
	162, 164, -1000, 45118, 45118, 2267, 45118, 1861, 1538, -1000,
	-1000, 633, 45735, 1604, 870, -1000, -1000, 712, -1000, 206,
	1623, 31526, 30909, 48820, 2079, 2077, 1622, 35849, 48820, -1000,
	-1000, 49437, 1621, 14462, -1000, 48820, -1000, -1000, 48820, 48820,
	-1000, -1000, -1000, -1000, 1288, 8102, -1000, -1000, 1668, -1000,
	13826, 3651, -1000, -1000, 840, -1000, -184, -184, -184, -184,
	-184, 1668, 1969, 1969, -1000, 1969, 1976, -1000, 1969, 48,
	1969, 47, 1668, 1668, 1668, 2940, 1884, 1854, 1820, 1560,
	13826, 13826, 13826, 1823, -180, -1000, 1191, 14462, 1791, 1761,
	-1000, -1000, 1619, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2002, 19550, 1823, 16370, -1000, 48820, 1803, -1000, 1177,
	922, 1142, 1138, 839, 837, 436, 1975, 2001, 381, -1000,
	-1000, -1000, -1000, 2034, -1000, 2033, 2032, -1000, -1000, -1000,
	1963, -1000, -1000, 1865, 1823, 48820, 13826, 871, -1000, 1823,
	1823, 1823, 1668, 1644, 2250, 1801, -1000, -1000, 973, -1000,
	-1000, -1000, -1000, 144, 481, 481, 481, 1431, 1117, 2146,
	1117, 1117, 1451, 27182, 1537, 1536, 1535, 1117, 1117, 1449,
	1533, 27182, 1532, 645, 481, 481, 481, 1448, 1529, 286,
	-1000, 1525, 1456, 1454, 481, -1000, -245, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 481, 1778, -1000, 1969, 1969,
	2075, -1000, 945, -1000, -1000, -1000, -1000, -1000, 48820, -1000,
	13826, 2202, -1000, 1078, -1000, 1477, -1000, 1823, 1823, 1823,
	1823, 13826, -1000, -1000, -99, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1524, -1000, 1445, -1000, 1444, -1000,
	-1000, -369, 1968, 239, -1000, 1117, 1066, 1065, 1522, 35849,
	148, 43267, -1000, 1272, 1272, 1272, 265, 160, -1000, 1246,
	-1000, -1000, -1000, 1509, 1508, 1503, 1762, 219, 1245, 192,
	-1000, 2205, -1000, -1000, 1191, 1136, -57, -1000, -1000, 164,
	-1000, -1000, -1000, 45118, 164, -1000, -1000, 199, 1861, 1861,
	45118, 1861, -1000, -1000, 49437, 664, 1272, 1272, 1637, 945,
	2073, 670, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1618, -1000, 920, -1000, 753, 664,
	49437, 1191, 976, 1259, -1000, 2266, -1000, -1000, -1000, 3651,
	23366, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 315, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13826, 13826,
	13826, 13826, -1000, 1560, 1560, 1560, 13826, 1668, 1501, 1191,
	13826, 13826, 1014, -1000, -1000, 2178, 1760, 1792, -1000, -1000,
	8738, 1668, 2064, 1775, -1000, 39565, 1767, -1000, 2250, 19550,
	14462, 14462, 14462, 14462, -1000, -1000, 14462, 1966, -1000, 14462,
	-1000, -1000, -1000, -1000, -1000, 48820, 446, -1000, 14462, 1767,
	1675, -1000, 48820, 48820, 48820, -1000, 1500, 2235, -1000, -257,
	-1000, 263, 250, 222, -1000, -1000, -1000, -1000, -1000, 1431,
	1117, 27182, 1431, -1000, -1000, -1000, -1000, -1000, 1499, 1496,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -248, -1000, 873, 42033, 2168,
	2168, 1604, 1604, 1755, -1000, 1560, 1823, -1000, -1000, -1000,
	-1000, 7466, -1000, 7466, -1000, 7466, 7466, 1560, -1000, 1823,
	1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823, 1823,
	-1000, 1704, 1690, -1000, 42033, -1000, -1000, 1031, -1000, -1000,
	-1000, -1000, -1000, 2226, -1000, 148, -1000, 1494, 308, 287,
	-1000, 293, 291, 289, 271, 255, -1000, -1000, -1000, -1000,
	502, 265, -1000, -77, 1438, 1122, 2139, 160, -1000, 1436,
	1413, 1396, 1388, 539, -1000, -1000, -1000, -1000, 235, 217,
	-1000, 493, 1492, -1000, 2108, 2103, 2197, 164, 2197, 157,
	1861, 1673, -1000, -1000, 1605, -1000, -1000, 1965, 1604, 1604,
	-1000, 1603, -1000, -1000, 48820, -1000, 664, 2162, 2161, 1823,
	2256, 32764, 8102, -1000, -1000, -1000, -1000, 1560, 1560, 1560,
	1560, -1000, -1000, -1000, 201, -1000, -1000, 1560, 1560, 2250,
	2246, 2071, -1000, 1823, -1000, -1000, 1823, 242, -1000, 48820,
	2235, -1000, 1191, 1191, 1191, 1191, 1191, 48820, 1191, 1753,
	1823, 38948, -1000, 41416, 1672, 1672, 1672, -79, -1000, -260,
	1385, 27182, 1823, 27182, 1823, 1823, 592, -1000, 1431, -1000,
	-1000, -1000, -1000, -1000, -1000, 873, -1000, 27182, 1117, 1491,
	-1000, -1000, -1000, -1000, -1000, 660, 48820, -433, 13826, 1750,
	1750, 1750, -1000, 1750, -1000, -1000, -1000, 1748, -1000, 239,
	-1000, -1000, 358, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2121, 2119, 342, -1000, 1490, 1489, -1000, 486, 1450, 890,
	-189, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 479, 1602, -1000, 190, -1000, -1000, 748, 2094,
	2097, 2245, -1000, 45118, 2197, -1000, -1000, -1000, -1000, 171,
	171, 42033, 1637, 1964, -1000, -1000, -1000, 13826, -1000, 1012,
	2254, 1855, -1000, -1000, -1000, -1000, -1000, 1668, 186, -292,
	-1000, -1000, 1038, 14462, 2299, -1000, 1792, 1823, -1000, 239,
	-1000, -1000, 1736, -1000, -1000, -1000, 871, -1000, -1000, -1000,
	1823, 1823, 2244, -1000, 1668, 48820, 1668, 48820, 1822, 48820,
	1076, -1000, -1000, -1000, 1377, -1000, 35849, -1000, -1000, -1000,
	-1000, 1560, -1000, -1000, -1000, -1000, 873, -1000, 438, 4840,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1374, -1000,
	-1000, 1429, 474, 189, -1000, 2188, -1000, 1963, 1344, 2103,
	2243, 2101, 2099, -1000, 1488, -286, -1000, 1720, 1962, 42033,
	3651, 1714, -1000, 48820, 2252, 2241, -1000, -1000, 2047, -280,
	-298, 1668, 204, 204, 1838, 19550, 1792, 1668, -1000, -1000,
	25910, 1012, -337, -1000, 1672, -1000, 1672, 1668, 1668, 1672,
	1329, -1000, 1960, -433, -1000, 873, -1000, 431, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14462,
	14462, 26546, 4840, 173, -1000, 172, -1000, -1000, -1000, 1487,
	-1000, 1079, -1000, 1484, -1000, 2240, 2237, -1000, 212, 873,
	42033, 1718, -1000, 1012, 2057, -186, 14462, 14462, -1000, 2027,
	-1000, -1000, -1000, 224, -1000, 1026, 429, 1003, -1000, 1477,
	-1000, 1790, -1000, 1716, -1000, 1272, 1714, -262, -1000, -1000,
	-1000, -1000, -1000, 1823, 48820, -1000, -1000, 1601, 1600, -1000,
	1318, 1354, 264, 230, 356, -1000, -1000, -1000, -1000, -439,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1474, 1472, 42650,
	-1000, 1712, 873, -1000, 598, -1000, 48820, -1000, 1191, 1788,
	-1000, 1191, -287, 1241, -1000, -1000, -1000, -1000, -1000, 48820,
	1668, 25910, 268, -1000, -1000, 1305, 48820, 1688, -1000, -1000,
	-1000, 1155, -1000, 14462, 4840, 2225, 2223, 2222, 18, 25910,
	6417, -1000, -1000, -1000, -1000, 153, 1762, 873, -1000, 458,
	1786, -1000, 2185, 14462, -296, 224, -1000, 40182, -1000, -1000,
	1432, -224, -1000, 1672, 2000, 234, 1232, 4840, -1000, 1276,
	-440, 581, 239, 858, 915, -1000, -1000, -1000, 45118, -1000,
	1823, 48820, 1823, -1000, -300, -1000, 41416, -1000, -1000, 1281,
	-1000, 1999, 1998, 2261, -1000, -1000, -1000, -1000, -1000, -1000,
	4840, 39565, -1000, -441, 4840, 4460, -1000, -1000, -1000, 6221,
	-1000, -1000, -1000, -1000, 226, -1000, -1000, 2156, 1762, 15098,
	-1000, -1000, -1000, -1000, 453, -1000, -1000, 2298, -1000, 2286,
	776, 776, -1000, -443, -1000, 5917, -444, 742, 4840, 1194,
	-1000, 14462, -1000, 858, -1000, 13826, 1560, 1668, -1000, 1997,
	13826, 1996, -1000, -1000, -1000, 675, 1375, -1000, 5909, 1224,
	4840, -1000, -445, 734, 4840, -1000, 1157, -1000, 3651, -1000,
	-1000, -314, 1268, -315, -1000, -1000, -1000, -1000, -1000, 5620,
	-1000, -448, 4840, -1000, -316, -1000, 718, 5396, -449, -1000,
	-1000, 715, 4840, -1000,
}

var yyPgo = [...]int{
	0, 2710, 2709, 141, 174, 2708, 269, 2704, 2696, 45,
	2693, 30, 23, 20, 32, 2692, 2428, 2423, 2420, 2418,
	2416, 2690, 37, 2689, 2685, 2413, 2681, 2680, 2410, 2402,
	2400, 2398, 2678, 2677, 2676, 2389, 2384, 2382, 11, 2675,
	25, 2674, 2, 160, 189, 2673, 4, 2672, 2671, 19,
	2669, 2668, 2379, 2666, 2665, 2664, 106, 2663, 2371, 2367,
	2662, 2357, 2341, 2661, 2660, 2338, 2336, 2321, 2659, 2115,
	178, 351, 179, 190, 2657, 2656, 2655, 182, 2652, 169,
	2651, 2648, 2646, 128, 2645, 290, 116, 62, 125, 1354,
	2641, 17, 56, 295, 2640, 5, 2639, 124, 2628, 119,
	2626, 2625, 175, 2623, 153, 64, 104, 2619, 2618, 181,
	2617, 2616, 2614, 118, 2612, 2611, 183, 411, 2610, 2609,
	147, 2608, 55, 186, 52, 61, 2607, 110, 2606, 2605,
	2604, 46, 2110, 2603, 112, 159, 2590, 2589, 102, 2587,
	2586, 78, 2583, 2582, 2581, 148, 59, 2580, 2577, 49,
	2576, 100, 58, 2575, 71, 2573, 149, 2572, 2571, 2566,
	2565, 2564, 81, 2562, 63, 2561, 151, 133, 1118, 2560,
	2558, 15, 9, 2557, 44, 28, 8, 51, 26, 72,
	57, 134, 126, 117, 2556, 36, 50, 130, 103, 2555,
	109, 89, 48, 2553, 165, 2550, 86, 173, 164, 146,
	172, 2549, 2547, 2546, 195, 2545, 131, 94, 2543, 92,
	1220, 184, 2542, 2539, 114, 2538, 2537, 2533, 2532, 2531,
	90, 123, 2530, 2529, 187, 185, 188, 99, 2524, 42,
	3864, 4058, 150, 3990, 18, 170, 2523, 65, 2521, 2520,
	2518, 2598, 121, 7, 87, 180, 2515, 120, 138, 83,
	2513, 2511, 2509, 2507, 2505, 2503, 2501, 2500, 171, 348,
	2499, 2498, 2497, 2496, 35, 27, 13, 12, 2495, 145,
	144, 143, 2494, 162, 41, 2493, 2489, 137, 113, 2487,
	2485, 2484, 2483, 152, 95, 163, 34, 2482, 132, 139,
	191, 2478, 105, 2477, 2476, 223, 1775, 2475, 2474, 2473,
	2472, 115, 317, 2471, 2470, 2468, 39, 2466, 2465, 2463,
	2457, 2456, 84, 29, 38, 73, 22, 2455, 2454, 96,
	101, 43, 40, 2453, 3, 6, 10, 2452, 2451, 2450,
	2449, 2448, 2447, 2445, 98, 2444, 2442, 70, 2441, 2440,
	2439, 47, 2437, 2436, 2435, 157, 129, 54, 176, 93,
	16, 2434, 2433, 14, 2432, 140, 2431, 68, 2430, 66,
	2425, 2391, 67, 2386, 2375, 69, 2373, 2365, 177, 2043,
	508, 2361, 154, 127, 60, 85, 2354, 53, 2343, 0,
	868, 167, 243, 2334, 2325, 2323,
}

var yyR1 = [...]int{
	0, 378, 378, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 95, 95, 6, 94, 94,
	190, 190, 190, 190, 189, 189, 96, 96, 93, 93,
	102, 7, 7, 8, 8, 11, 11, 76, 76, 12,
	13, 13, 13, 13, 381, 381, 111, 111, 109, 109,
	110, 110, 187, 187, 14, 14, 14, 194, 194, 199,
	199, 199, 202, 202, 202, 202, 176, 177, 178, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 351, 351, 360, 360, 360, 361, 361, 359, 359,
	359, 359, 359, 363, 363, 364, 364, 362, 362, 362,
	362, 366, 366, 367, 367, 365, 365, 365, 365, 365,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 354,
	354, 354, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 369, 369, 370, 370, 371, 371,
	372, 372, 372, 372, 373, 373, 373, 373, 373, 374,
	374, 374, 374, 374, 374, 374, 375, 375, 376, 376,
	2, 332, 332, 333, 333, 334, 334, 334, 334, 335,
	335, 336, 336, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 26, 226, 226, 223, 223, 223, 224,
	224, 225, 225, 225, 353, 353, 353, 347, 347, 347,
	349, 349, 348, 348, 348, 350, 350, 355, 355, 355,
	355, 355, 357, 357, 357, 357, 357, 357, 358, 358,
	358, 356, 356, 50, 50, 51, 51, 51, 165, 165,
	165, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 331, 331, 331, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 297, 298, 298, 298, 298, 298, 298, 298, 298,
	284, 284, 285, 285, 285, 285, 285, 274, 274, 274,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 248, 248, 248, 248, 254, 254,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	253, 253, 253, 253, 253, 253, 253, 253, 255, 255,
	255, 255, 255, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 257, 257,
	257, 257, 257, 257, 257, 257, 283, 283, 259, 259,
	258, 258, 258, 277, 277, 278, 278, 278, 275, 275,
	275, 276, 276, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 263, 279, 264, 264, 265,
	265, 266, 266, 267, 267, 268, 268, 273, 273, 272,
	272, 272, 272, 272, 272, 269, 269, 269, 269, 270,
	270, 271, 282, 282, 282, 282, 282, 260, 37, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 318, 318, 216, 216, 217, 217, 287, 287, 316,
	316, 315, 315, 314, 314, 314, 296, 296, 311, 311,
	311, 311, 311, 311, 311, 311, 291, 291, 291, 290,
	290, 292, 292, 295, 295, 313, 313, 312, 312, 288,
	288, 288, 319, 319, 319, 319, 319, 289, 289, 289,
	289, 289, 320, 293, 293, 294, 294, 294, 325, 326,
	324, 324, 324, 324, 324, 128, 128, 128, 300, 300,
	300, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 302, 302, 302, 302, 302, 303, 303, 303, 303,
	303, 303, 377, 377, 377, 304, 304, 304, 305, 305,
	305, 305, 305, 306, 306, 306, 306, 307, 307, 308,
	308, 309, 309, 310, 310, 329, 329, 328, 328, 52,
	53, 57, 57, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 164, 164, 164, 221, 221,
	323, 321, 321, 322, 322, 17, 17, 55, 55, 352,
	352, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	327, 327, 327, 19, 19, 58, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 90, 208, 208, 207, 207, 206, 206, 206, 209,
	209, 209, 209, 246, 246, 246, 60, 60, 60, 69,
	69, 64, 64, 67, 67, 67, 70, 70, 71, 71,
	72, 72, 65, 66, 29, 30, 30, 30, 30, 31,
	222, 222, 62, 62, 63, 63, 63, 63, 82, 82,
	383, 383, 61, 384, 73, 74, 74, 75, 75, 75,
	212, 212, 79, 79, 79, 77, 77, 77, 78, 78,
	84, 84, 88, 88, 88, 88, 87, 87, 87, 87,
	167, 167, 172, 238, 238, 148, 148, 168, 168, 173,
	173, 173, 174, 174, 175, 175, 175, 175, 175, 170,
	170, 169, 169, 171, 136, 136, 236, 236, 236, 236,
	235, 235, 235, 235, 235, 235, 92, 92, 97, 97,
	99, 99, 99, 99, 99, 99, 103, 150, 150, 121,
	121, 122, 122, 122, 122, 122, 134, 134, 186, 186,
	185, 185, 188, 188, 98, 100, 100, 100, 100, 106,
	106, 107, 107, 108, 108, 220, 220, 243, 243, 243,
	112, 112, 112, 114, 113, 113, 113, 113, 113, 113,
	115, 115, 101, 101, 299, 299, 286, 250, 250, 251,
	385, 385, 385, 385, 116, 116, 118, 119, 119, 117,
	117, 117, 117, 117, 123, 123, 120, 124, 124, 124,
	124, 125, 125, 89, 89, 89, 89, 89, 89, 89,
	89, 205, 205, 127, 127, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 144, 144, 144, 144, 144,
	144, 129, 129, 129, 129, 129, 129, 129, 83, 83,
	145, 145, 145, 105, 104, 104, 86, 86, 85, 85,
	146, 146, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
	132, 132, 132, 132, 132, 132, 132, 132, 139, 139,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 142, 142, 142,
	142, 142, 142, 142, 142, 142, 142, 142, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 382, 382, 141, 140, 140, 140, 140, 140, 140,
	80, 80, 80, 80, 80, 244, 244, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 157, 157, 81, 81, 155, 155, 156, 158,
	158, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 131, 131, 131, 131, 131,
	131, 131, 131, 133, 133, 133, 159, 159, 147, 147,
	91, 160, 160, 161, 162, 162, 163, 163, 166, 179,
	179, 179, 180, 180, 180, 180, 135, 135, 181, 181,
	181, 130, 130, 130, 130, 130, 130, 130, 184, 184,
	183, 183, 182, 182, 182, 182, 182, 182, 191, 191,
	149, 149, 152, 152, 151, 153, 192, 192, 196, 196,
	196, 196, 193, 193, 197, 197, 197, 197, 200, 200,
	201, 201, 201, 198, 198, 198, 195, 195, 195, 240,
	240, 240, 203, 203, 213, 213, 210, 210, 211, 211,
	204, 204, 261, 261, 261, 219, 219, 218, 218, 218,
	214, 214, 214, 215, 215, 237, 237, 233, 233, 239,
	239, 234, 234, 241, 241, 242, 242, 330, 330, 280,
	280, 340, 340, 281, 281, 341, 341, 343, 343, 338,
	338, 339, 339, 342, 342, 32, 344, 344, 345, 345,
	346, 346, 346, 346, 33, 34, 34, 34, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 232, 232, 232, 232, 232, 232, 230,
	230, 230, 230, 230, 379, 380,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 5, 7, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 5, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 6, 8, 3, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 3, 3, 2, 2, 3,
	2, 3, 4, 2, 2, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 4, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 3, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 2, 3, 2, 3, 5, 3, 5,
	3, 5, 4, 5, 4, 3, 1, 0, 1, 3,
	3, 0, 1, 2, 2, 0, 1, 0, 1, 1,
	1, 1, 2, 2, 2, 5, 5, 4, 4, 4,
	4, 4, 2, 1, 2, 1, 2, 2, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 3, 2, 1,
	1, 0, 3, 1, 1, 0, 1, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 3, 5,
	3, 3, 5, 3, 2, 2, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 3, 3, 3, 3,
	3, 1, 10, 11, 11, 12, 12, 3, 3, 3,
	2, 1, 5, 1, 1, 0, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 2,
	3, 3, 3, 3, 3, 4, 4, 5, 3, 3,
	4, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 3, 3, 3, 2, 2, 4, 4,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 5, 8, 1, 4,
	5, 4, 5, 5, 5, 5, 8, 0, 1, 0,
	2, 0, 4, 0, 2, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 4, 5, 1, 2, 2, 4, 3, 6,
	5, 3, 9, 2, 2, 0, 1, 2, 0, 1,
	7, 1, 3, 8, 8, 3, 3, 3, 5, 3,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	0, 1, 1, 3, 2, 3, 3, 4, 3, 5,
	5, 5, 4, 4, 4, 2, 2, 2, 6, 2,
	4, 4, 4, 5, 8, 6, 3, 5, 4, 2,
	4, 3, 2, 4, 5, 6, 2, 6, 6, 3,
	3, 3, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 3, 2, 0, 1, 1, 2, 4, 1, 0,
	1, 2, 1, 2, 4, 4, 0, 1, 0, 3,
	0, 2, 4, 4, 2, 3, 4, 4, 5, 3,
	1, 1, 3, 3, 1, 1, 1, 1, 0, 3,
	1, 1, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 0, 1, 1, 0, 1, 1, 0, 1,
	3, 5, 1, 1, 3, 5, 1, 2, 3, 5,
	2, 2, 6, 0, 1, 0, 3, 0, 1, 0,
	2, 2, 4, 1, 2, 2, 2, 2, 2, 0,
	2, 1, 3, 3, 1, 3, 0, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	1, 4, 1, 3, 1, 1, 2, 2, 4, 2,
	6, 1, 4, 6, 3, 2, 0, 3, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 3, 2,
	2, 2, 12, 11, 1, 3, 3, 4, 3, 0,
	0, 3, 4, 3, 1, 3, 3, 2, 1, 1,
	3, 1, 1, 1, 1, 3, 3, 0, 5, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 1, 1, 5, 6,
	6, 6, 5, 5, 5, 6, 5, 5, 6, 5,
	5, 5, 5, 6, 5, 5, 5, 4, 4, 5,
	5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 4, 6, 6, 4, 8,
	8, 8, 8, 4, 6, 7, 7, 7, 9, 4,
	7, 5, 4, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 1, 3,
	1, 0, 2, 1, 0, 3, 1, 3, 2, 0,
	1, 1, 0, 2, 4, 4, 1, 1, 0, 2,
	4, 2, 4, 1, 3, 5, 4, 6, 0, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 3, 3, 1, 1, 0, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	1, 0, 4, 0, 1, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 3, 3, 1, 3, 2, 4,
	1, 2, 1, 2, 2, 2, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -378, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -96, 29,
	-54, 180, -53, 183, 182, 219, 184, 212, 64, 342,
	-67, 345, 346, -383, -222, 270, 271, 20, 37, 347,
	349, 30, 31, 233, 287, 289, 314, -4, 522, 181,
	343, 214, 213, 26, -6, -7, -379, 68, 641, -162,
	15, -73, -384, -73, -76, 9, 10, 8, 444, -73,
	-297, -220, 108, 68, 23, -215, -226, 88, 435, 188,
	-224, 283, 285, -213, -214, -223, 243, 253, 44, 199,
	198, 254, 189, 283, 189, 190, 192, 435, 188, 226,
	225, 283, 285, 189, -117, -241, -230, -231, 301, 72,
	-229, 461, 465, 468, 469, 474, 291, 81, 323, 324,
	315, 325, 209, 413, 284, 290, 293, 316, 608, 326,
	328, 329, 455, 456, 192, 202, 626, 308, 210, 519,
	254, 636, 629, 295, 403, 491, 342, 359, 351, 374,
	520, 579, 265, 341, 420, 492, 298, 258, 321, 580,
	409, 415, 268, 345, 512, 510, 493, 429, 234, 581,
	262, 264, 263, 248, 460, 269, 36, 215, 370, 304,
	243, 582, 495, 575, 494, 237, 507, 35, 27, 509,
	236, 432, 99, 583, 332, 417, 496, 391, 333, 232,
	584, 524, 302, 416, 366, 314, 117, 241, 280, 334,
	585, 392, 396, 586, 421, 288, 279, 514, 587, 588,
	335, 589, 191, 294, 497, 590, 244, 423, 299, 390,
	200, 521, 211, 48, 223, 424, 394, 513, 400, 591,
	331, 592, 593, 594, 595, 312, 310, 498, 311, 313,
	255, 260, 499, 53, 186, 398, 397, 399, 261, 419,
	379, 377, 596, 597, 303, 206, 434, 598, 599, 378,
	18, 600, 601, 427, 306, 602, 603, 604, 500, 515,
	490, 605, 606, 418, 393, 395, 242, 116, 607, 309,
	414, 318, 523, 292, 511, 609, 337, 222, 217, 428,
	327, 610, 611, 612, 613, 614, 286, 285, 346, 319,
	501, 347, 266, 615, 616, 502, 617, 618, 252, 235,
	431, 422, 52, 405, 619, 322, 338, 408, 343, 229,
	503, 504, 505, 506, 7, 259, 300, 516, 517, 412,
	320, 267, 253, 256, 381, 224, 620, 621, 368, 369,
	344, 227, 219, 111, 430, 574, 283, 339, 51, 230,
	622, 623, 257, 231, 348, 297, 371, 189, 133, 375,
	420, 180, 410, 411, 417, -291, 418, 225, 228, -246,
	189, -208, 409, 288, 309, 465, 231, 232, 190, 191,
	32, 422, 421, 413, -241, -69, 348, -69, -69, 193,
	348, -82, 184, 220, -117, -49, 72, 272, -49, 29,
	72, 72, 36, 72, 347, 412, 412, 75, 523, 234,
	21, -369, -350, 318, -368, -348, 181, 180, 10, 182,
	323, 324, 325, 190, 8, 30, 608, 207, 326, 327,
	6, 212, 328, 329, 226, 9, 330, -353, 74, 72,
	-229, 21, -369, -350, 318, -217, -216, 340, 400, -95,
	578, -93, -102, -243, -241, -230, 74, -204, 194, 344,
	-75, 5, -9, -3, 522, -180, 17, 16, -79, 54,
	55, -74, -87, 124, -89, -241, -126, 91, -132, 28,
	72, -229, 24, -131, 301, 220, -127, -154, -230, -153,
	-105, 133, -245, 122, 123, 130, 92, 176, -139, -137,
	-138, -140, -142, -143, 74, 73, 82, 75, 76, 77,
	78, 83, 84, 85, -233, -231, -228, 461, 465, 468,
	469, 474, -151, -379, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 58, 59, 459, 188,
	445, 446, 372, 8, 447, 448, 449, 518, 209, 453,
	94, 47, 563, 433, 443, 442, 441, 439, 440, 436,
	438, 437, 455, 456, 195, 435, 128, 444, 478, 479,
	480, 481, 482, 483, 484, 485, 487, 488, 486, 462,
	463, 464, 466, 467, 470, 471, 472, 473, 475, 476,
	477, 525, 185, 181, 184, 90, 23, 25, 526, 240,
	93, 357, 386, 452, 16, 20, 203, 187, 375, 201,
	132, 197, 204, 274, 276, 180, 62, 527, 275, 410,
	528, 529, 530, 531, 365, 363, 273, 532, 10, 26,
	213, 247, 533, 361, 182, 238, 97, 98, 535, 41,
	40, 307, 277, 214, 536, 362, 537, 538, 19, 65,
	205, 11, 199, 228, 635, 539, 287, 13, 115, 14,
	540, 541, 542, 543, 194, 110, 190, 625, 60, 245,
	544, 355, 545, 546, 547, 548, 549, 356, 87, 550,
	551, 107, 552, 56, 489, 32, 233, 576, 450, 553,
	554, 38, 37, 385, 389, 384, 555, 401, 108, 17,
	30, 556, 557, 221, 388, 354, 383, 577, 558, 559,
	250, 63, 340, 364, 639, 33, 66, 218, 336, 305,
	42, 88, 15, 246, 61, 34, 457, 112, 640, 367,
	196, 225, 561, 425, 249, 562, 113, 360, 578, 207,
	109, 349, 183, 317, 271, 208, 564, 289, 565, 239,
	114, 411, 566, 567, 454, 29, 212, 270, 353, 198,
	568, 251, 282, 272, 281, 569, 570, 296, 43, 637,
	624, 189, 39, 96, 387, 352, 382, 193, 451, 226,
	278, 5, 44, 31, 406, 9, 330, 64, 67, 376,
	373, 571, 380, 638, 12, 572, 458, 522, 426, 89,
	573, 407, -73, -73, -73, -193, 344, -200, -197, 421,
	422, -198, -201, -195, -154, 400, 605, 606, 420, 375,
	419, -233, -241, -230, 301, 220, 133, 462, 463, 464,
	94, 372, 445, 478, 436, 438, 433, 437, 435, 28,
	479, 24, 85, 480, 459, 195, 8, 176, 466, 467,
	481, 482, 483, 58, 439, 440, 518, 128, 91, 484,
	485, 83, 487, 488, 563, 444, 59, 486, 188, 472,
	471, 470, 473, 447, 448, 84, 441, 442, 443, 47,
	476, 475, 477, -2, -6, 6, -117, -298, -285, -289,
	-233, -230, -231, -232, 216, 204, -320, 72, -229, 301,
	220, 50, 86, 55, 54, 201, 190, 192, 444, -211,
	195, -211, 226, 225, -225, 251, -211, -211, 189, -224,
	100, 100, -55, -117, -352, -347, -353, -210, 195, -233,
	-210, -210, -210, -210, -210, -210, -210, -117, 177, -109,
	-117, 72, 29, -209, 108, 12, 435, 188, 189, 225,
	226, 192, -293, 11, 110, 229, 229, 229, 230, 229,
	-207, 412, 414, 227, 415, 416, 12, -90, 108, 19,
	-379, -180, -180, 125, -71, 90, -71, 72, 347, 193,
	-63, -3, -13, -11, -12, -9, 100, -134, 23, 29,
	29, 74, 51, 29, -44, -43, -45, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 29,
	-331, 68, -280, 400, 72, -344, -345, -117, 75, 75,
	66, 309, 66, 69, 193, 69, 66, -370, 319, 68,
	-370, 285, 319, 320, 253, 283, 192, -370, -370, 285,
	-370, -370, -370, -370, -370, 412, -370, -370, -370, 321,
	322, -370, 410, 192, -370, -370, -370, -370, -370, 71,
	66, 69, 309, 66, 11, 66, -317, 133, 332, 333,
	334, 335, 331, 309, 336, 337, 338, 229, 339, -4,
	-93, 69, -184, -379, 189, 425, -8, -6, -379, 21,
	22, -380, 70, -95, -181, 19, 30, -135, 75, 78,
	-163, -166, -89, -241, 50, -77, 21, 22, 80, 11,
	-236, 90, 88, 89, 107, -235, 23, 72, -229, -230,
	74, -231, -232, 177, -89, -129, 110, 91, 108, 109,
	93, 119, 118, 129, 122, 123, 124, 125, 126, 127,
	128, 120, 121, 132, 100, 101, 102, 103, 104, 105,
	106, -205, -379, -105, -379, 177, -379, 177, 178, 179,
	177, -132, -132, -132, -132, -132, -132, -132, -379, 177,
	177, -379, -379, -379, -379, -379, -9, -146, -89, 522,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -157, -89, -379, -379, -382,
	-141, -379, -382, -141, -382, -141, -382, -379, -382, -141,
	-382, -141, -382, -382, -141, -382, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -204, -204, 11, -109, -110,
	-120, -241, 69, -194, -199, 423, 425, 344, -198, -198,
	-240, -233, 74, 28, 100, 29, 177, -162, -73, 70,
	69, -289, -248, -254, -256, -255, -257, -252, -253, 372,
	375, 379, 377, 373, 378, 133, 376, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 29, 215,
	368, 369, 370, 371, 392, 393, 394, 395, 396, 397,
	398, 399, 351, 374, 520, 352, 353, 354, 355, 356,
	357, 359, 360, 361, 362, 363, 364, 365, 366, -248,
	-248, -248, -248, 72, 229, -230, -320, 68, -233, -117,
	-226, -224, 72, 91, 72, -116, -233, -241, -123, -233,
	-241, 252, -356, -355, -347, -350, -211, -225, -347, 257,
	255, 256, 69, 193, 69, 193, 71, -109, 24, 66,
	-111, -117, 72, 72, -116, -123, -349, -347, -350, -242,
	-241, -227, 525, 185, 21, 181, 184, 90, 23, 25,
	526, 240, 93, 357, 133, 462, 463, 464, 386, 452,
	16, 20, 203, 94, 187, 372, 375, 201, 132, 197,
	204, 274, 276, 445, 478, 180, 62, 527, 436, 438,
	433, 437, 275, 435, 410, 528, 529, 530, 531, 365,
	363, 273, 28, 532, 10, 479, 26, 213, 247, 22,
	533, 126, 361, 182, 238, 97, 98, 535, 41, 40,
	307, 24, 277, 214, 85, 536, 480, 362, 537, 538,
	19, 65, 205, 11, 199, 228, 635, 539, 287, 13,
	459, 115, 14, 540, 541, 542, 543, 195, 194, 110,
	190, 625, 60, 245, 8, 544, 355, 545, 546, 547,
	548, 549, 356, 176, 87, 550, 551, 107, 552, 56,
	466, 467, 489, 45, 32, 233, 481, 482, 576, 483,
	450, 553, 554, 38, 37, 385, 389, 384, 555, 401,
	58, 108, 17, 439, 440, 30, 556, 557, 518, 221,
	388, 354, 383, 577, 558, 559, 128, 250, 63, 91,
	340, 484, 485, 83, 364, 639, 33, 66, 218, 336,
	305, 42, 88, 15, 246, 61, 34, 457, 112, 640,
	487, 367, 196, 225, 561, 425, 249, 562, 113, 488,
	360, 578, 207, 109, 349, 183, 563, 444, 317, 271,
	208, 564, 289, 59, 565, 239, 114, 486, 188, 411,
	566, 6, 567, 454, 29, 212, 270, 353, 198, 568,
	251, 282, 272, 281, 569, 49, 570, 296, 43, 472,
	471, 470, 473, 637, 57, 447, 448, 624, 189, 39,
	96, 387, 352, 382, 193, 451, 226, 84, 278, 5,
	44, 31, 406, 9, 330, 64, 67, 441, 442, 443,
	47, 376, 373, 571, 476, 380, 475, 477, 638, 95,
	12, 572, 458, 522, 426, 89, 573, 407, 69, -209,
	74, -245, -89, -211, -211, -117, -117, -117, -117, -117,
	-209, -209, -209, -209, -206, 11, 110, 11, -206, -206,
	-89, -132, -347, 437, 124, -241, -72, -70, 206, -70,
	-72, 72, 72, 347, 72, 33, -44, -44, 74, -44,
	69, 100, -44, 70, -146, -330, 625, 69, -346, 23,
	425, 426, 401, -372, 189, 228, 225, 66, -372, -368,
	327, -349, -348, -347, -370, -371, -233, -370, -370, -370,
	412, -370, -370, -370, -370, -370, -370, -370, -370, -353,
	-372, 287, 69, -372, -349, -347, 331, 331, 331, 331,
	331, 331, -102, 23, -183, -182, -234, -230, -231, -232,
	216, -233, -227, -117, 426, 427, -9, -190, 87, 9,
	110, 69, 18, 69, -179, 25, 26, 177, -133, 51,
	75, 78, -212, 49, -117, -89, -89, -89, -144, 83,
	91, 84, 85, -235, 216, 124, -242, -234, -231, -230,
	301, 220, -227, -132, -145, -151, -105, 79, 110, 108,
	109, 93, -132, -132, -132, -132, -132, -132, -132, -132,
	-132, -132, -132, -132, -132, -132, -132, -244, 72, 74,
	72, -234, -85, -88, 124, -89, -241, -234, -131, 83,
	-131, -233, -233, -77, -234, 413, -234, -77, -77, -77,
	-77, -77, -380, 69, -380, -9, -85, -85, -85, -380,
	-89, -89, -85, -85, -154, 74, -85, -154, 74, -85,
	-132, 450, 451, 452, -85, -85, -77, -155, -156, 95,
	-154, -85, -380, -132, -233, -233, -85, -86, -85, -85,
	-85, -380, -380, -88, -85, -88, -85, -85, -380, -380,
	-380, -380, -85, -85, -85, -85, -85, -85, -85, -85,
	-85, -85, -85, -85, -119, 87, -117, -92, -97, -99,
	-100, -121, -104, -379, -98, -101, -117, -105, 72, 489,
	-117, -109, -381, 11, 67, -381, 69, 177, -197, -200,
	69, 424, 426, 427, -194, -266, -267, 132, 66, 86,
	-89, -234, -242, -180, -79, -300, -285, -287, -288, -289,
	-311, 204, -319, 196, 198, 199, 44, -290, 205, 190,
	45, -249, -275, 405, 406, -259, 68, -258, 68, -258,
	380, 372, 375, 373, -258, -258, -258, -258, -258, 373,
	68, 68, -259, -259, -259, -277, 68, -277, 367, -278,
	68, -278, -278, -278, -278, -249, -249, -249, -249, -320,
	-320, -320, -89, -237, 67, 23, 192, -273, -272, -269,
	-270, -271, -268, 28, 24, -273, -50, 240, 210, 177,
	68, 177, 243, 244, -351, 69, 28, -357, 284, -117,
	220, -117, -117, -347, -347, -353, -327, 208, 203, -117,
	69, 69, -117, 74, 72, 72, -134, -294, 11, 110,
	-209, -241, -241, -117, -134, -209, -83, 216, 67, -382,
	-380, 349, 350, 72, -132, -43, -131, 70, -118, 87,
	74, -345, -243, 400, 426, -373, 124, -233, -372, -373,
	-376, 522, 193, 70, 69, -370, -373, 305, 287, -373,
	11, -318, 19, -104, -379, -380, 69, 177, -57, -56,
	185, 182, 183, 186, 187, -323, 403, 181, 237, 236,
	222, -380, -189, 34, 35, -233, 52, -135, -135, -166,
	-203, 19, 11, 47, 47, -78, 57, 83, 84, 85,
	177, -379, -145, -132, -132, -132, -83, 90, -380, 69,
	-380, 177, -86, -85, -85, -85, -85, -85, -89, -380,
	-380, -380, -380, 69, 67, 23, -380, 67, -380, 11,
	11, -380, 11, 11, -380, -380, 11, -132, -132, -132,
	-380, -380, -85, -158, -156, 97, -89, -380, -380, -380,
	69, 69, -380, -380, -380, -380, -167, 457, -167, -380,
	-380, -380, -380, -380, -167, -167, -167, -167, -380, -380,
	-380, -380, -380, -380, -380, -380, -380, -380, -380, -380,
	-187, 112, -117, 29, 69, -112, -114, -113, -115, 56,
	60, 62, 57, 58, 59, 413, 63, -220, -92, -103,
	47, -379, -122, 112, -124, 23, -243, 64, 194, 65,
	-379, -379, -187, 67, -92, -92, -120, -241, 124, -199,
	-202, 428, 425, 431, 72, 74, 177, -181, -304, -301,
	69, 112, 632, 403, 491, 420, 28, 375, 492, 132,
	81, 493, 234, 36, 190, 495, 432, 332, 496, 497,
	200, 498, 499, 500, 293, 501, 343, 502, 503, 504,
	505, 320, 5, -289, 68, 72, -295, -230, 45, -290,
	-292, -290, -290, -295, 72, -295, 45, 83, 91, -265,
	-267, 133, -262, -263, -279, -282, -260, 23, 635, 408,
	375, 28, 66, 403, 196, 45, 44, 199, 81, -276,
	407, 75, 75, 468, -258, -258, -258, 380, -258, -283,
	74, -283, 75, -277, 75, 70, 66, -233, -176, -117,
	-270, -269, -271, 375, 420, 132, 432, -51, 8, 9,
	10, -233, -332, -333, -334, -233, 110, 245, 246, -233,
	-360, 317, -355, 285, 294, 90, 16, 522, 193, 193,
	-117, -347, -125, 12, 72, 72, -206, -209, -132, -350,
	231, 232, -187, 189, -346, 193, 177, 177, -373, 193,
	308, -349, -233, 11, 11, 305, 11, -349, 341, -182,
	-234, 69, -221, -290, -329, -288, -289, -328, 197, 204,
	-221, 204, 201, -290, 205, 196, 197, -218, -290, 193,
	23, -221, -221, -296, 100, -221, 32, 32, 112, 69,
	74, 74, 53, -117, -84, -177, 124, -234, -86, -83,
	90, -132, -88, 124, -242, -380, -380, -380, -380, -380,
	-380, -247, 133, 372, 215, 370, 363, 390, 377, 405,
	368, 406, -244, -247, -244, -132, -132, -132, -132, -132,
	11, 11, 11, 519, -162, 99, -89, 96, -132, -132,
	-233, -172, -379, -167, -167, -167, -167, -167, -168, -167,
	-168, -168, -168, -168, -168, -168, -168, -168, -168, -168,
	-168, -130, 29, 47, -379, -9, -379, -192, -196, -154,
	-230, -232, 216, 301, 220, -97, -99, -99, -97, -99,
	56, 56, 56, 61, 56, 61, 61, 56, 56, -113,
	-243, -380, -380, -150, 239, -379, 33, -243, -124, 190,
	190, 190, -86, -132, -125, -92, -125, -125, 177, 425,
	429, 430, -301, 16, -296, -296, -296, -296, 420, 375,
	132, 29, -296, -296, -296, -296, -296, 494, 494, -296,
	-296, -296, -296, -296, -296, -296, -296, -296, -296, -296,
	344, -296, -296, -296, -296, -302, -377, 74, 75, 81,
	323, 293, 72, -229, -227, -296, -313, -312, -233, -230,
	196, -319, 44, -319, -295, -295, -295, -295, 68, 83,
	-379, 636, 75, 29, -131, 123, -127, 433, 439, 440,
	434, -379, 84, 85, 9, 45, 45, 45, 74, 70,
	70, 70, -258, 70, 69, 70, 69, 70, 69, -128,
	583, 91, -117, -178, 23, 29, -296, -296, -296, 66,
	70, 69, -248, -233, -233, -233, -363, 522, 290, -361,
	-359, 296, 297, 298, 299, 300, -350, 295, -357, 292,
	74, 72, -117, -347, -89, -134, -264, -265, -117, -349,
	124, 124, -233, 193, -349, 305, -375, 522, -349, -349,
	11, -349, 74, -56, 68, -284, 72, -229, -295, -214,
	196, 72, 72, 72, -230, -229, -231, -232, 72, -230,
	-229, -231, -232, -233, 45, 45, 72, -117, -233, -284,
	72, -89, -233, -233, -233, -190, 69, -87, -380, -132,
	177, -168, -168, -168, -168, -168, -380, -259, -259, -259,
	-278, -259, 356, -259, 356, -380, -380, -380, 19, 19,
	19, 19, -380, -132, -132, -132, -379, -81, 454, -89,
	69, 69, -238, 72, -191, 66, -192, -149, -152, -151,
	-379, -9, -380, -183, 6, 522, -188, -233, -125, 69,
	100, 100, 100, 100, -107, -106, 66, 67, -108, 66,
	-106, 56, 56, 56, -186, 68, 69, -151, -379, -188,
	-132, -124, -379, -379, -379, -380, 69, -162, -125, -305,
	-306, 113, 513, -307, 554, -302, -302, -302, -244, -296,
	29, -296, -296, 75, -377, 74, 74, 74, -296, -296,
	75, 74, -377, 74, 206, 209, 211, -302, -302, -302,
	75, 74, -303, 28, 509, 366, 510, 511, 512, 74,
	28, 75, 28, 75, -302, 506, -302, 70, 69, -259,
	-259, 45, -292, -185, -233, -132, 23, 72, 133, -131,
	-382, -379, -382, -379, -382, -379, -379, -132, -138, 433,
	443, 442, 441, 439, 440, 436, 438, 437, 455, 456,
	74, 75, 75, 583, 68, -9, -176, -296, 72, 133,
	72, 133, 74, -117, -335, -336, -337, 81, 521, 91,
	247, 248, 206, 249, 250, 251, -334, -248, -248, -248,
	-366, -367, -365, 293, 315, 316, 301, -364, -362, 310,
	311, 312, 313, 90, 74, 74, 74, -358, 284, 90,
	293, 16, 23, -209, -338, -207, -375, -349, -375, 287,
	-349, -284, -164, 209, 210, -248, -248, -237, -292, 45,
	72, -219, 193, 23, 193, -164, -284, 29, 182, 87,
	-94, 11, -177, -177, 124, -264, 72, -132, -132, -132,
	-132, -380, -380, -380, -132, -380, 74, -132, -132, -148,
	112, 27, -191, 69, -380, -380, 47, -380, -380, 69,
	-162, -196, -89, -89, -89, -89, -89, 68, -89, -185,
	239, -380, -124, -220, -185, -185, -185, 74, -180, -308,
	515, -379, 415, -379, 415, 514, 45, -244, -296, -377,
	-244, 74, 74, 507, 508, -315, -314, 67, 200, 81,
	-312, -179, -179, -295, -295, 70, 69, -380, -379, -85,
	-85, -85, -380, -85, -380, 70, 70, -313, -176, -178,
	72, 133, 19, -177, -337, 74, 251, 247, 251, 251,
	251, 251, 252, -354, 81, 291, -365, 302, 588, 286,
	317, 75, 75, 111, 30, 31, -362, 75, 75, 75,
	75, -359, 16, 522, -357, 292, 74, 74, -339, 38,
	-341, 39, -374, 23, -375, -374, 305, 70, 72, -249,
	-249, 68, -295, -295, 72, -233, -164, 28, 28, -379,
	-125, -92, -87, -380, -380, -380, -380, -80, 110, 522,
	-380, -380, -162, 16, 45, -152, -149, 47, -9, -379,
	-233, -180, -185, 70, -151, -122, -243, -380, -380, -380,
	415, -309, 516, 75, -377, -379, -377, -379, -379, -379,
	254, -244, -314, -377, -296, 74, 207, -233, -274, 638,
	637, -132, -380, -380, -380, -380, 70, -9, 238, -178,
	36, 36, 243, 244, 74, 74, 28, 303, 176, 28,
	75, 176, 460, 292, 74, 72, 293, -261, 194, -342,
	43, -340, -281, 42, 16, -347, -374, -313, -237, 68,
	-132, -321, -322, 112, -159, 13, -177, -380, 520, 63,
	523, -173, 114, 113, -146, 9, -149, -9, 70, -124,
	-379, -379, 16, -380, -185, -380, -185, -131, 72, -185,
	100, 75, -117, -380, -316, -315, -176, 239, -22, -3,
	-11, -12, -13, -14, -16, -52, -17, -18, -23, -24,
	-19, -58, -59, -67, -65, -66, -62, -61, -27, -25,
	-28, -20, -29, -30, -31, -35, -36, -26, -37, 94,
	195, 273, 342, 75, 28, 75, 28, 306, 293, 23,
	-186, 75, -341, 16, -343, 40, 41, 74, 522, 70,
	68, -313, -380, 69, -233, -160, 14, 16, 53, 521,
	524, -380, -174, 93, -175, 111, 460, -136, 75, 176,
	-174, -192, -380, -299, -286, -234, -321, -306, -380, -380,
	-380, -380, -380, 75, 68, -274, -165, 241, 242, -176,
	-89, -89, 72, -48, -239, 276, 277, 278, -234, -38,
	-22, 304, 304, 74, 38, 114, 74, 16, 16, 285,
	-316, -313, 70, -322, 47, -170, 458, -161, -89, -147,
	-91, -89, 53, -175, 116, 117, 239, 116, 117, -131,
	-380, 69, -248, -380, -310, 517, -379, -185, -176, 72,
	72, -39, -40, 95, 96, 274, 275, 279, -248, 69,
	641, 74, 74, 28, 290, 21, -350, 70, -316, 223,
	-169, -171, -233, 69, 522, 90, -233, -380, -286, -250,
	490, 24, 75, -185, 70, -178, 99, 97, -40, -89,
	-38, 19, 19, 19, -264, -234, 99, -22, 307, -316,
	224, 69, 23, -91, 523, -175, 23, -243, 74, 490,
	-380, -325, -326, 66, -15, -21, -14, -11, -12, -13,
	342, 522, 94, -38, 96, 641, -49, 75, -9, -47,
	-46, 75, -49, 281, 91, 282, 72, -266, -350, -379,
	-171, -172, 524, -243, -251, 74, -326, 66, -325, 66,
	10, 9, -176, -38, -95, 641, -38, 99, 97, -41,
	-42, 98, -22, 69, 280, 28, -132, 221, -385, 83,
	28, 333, -324, 208, 203, 206, 29, -324, 641, 99,
	641, 195, -38, 99, 97, -42, -89, -46, -132, -380,
	-380, 66, -132, 66, 202, 28, 83, 99, 94, 641,
	195, -38, 96, 535, 66, 535, 99, 641, -38, 535,
	195, 99, 641, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1284, 863, 863, 0, 863,
	965, -2, 709, 0, 0, 0, 0, -2, 828, 829,
	832, 829, 829, 858, 860, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, -2, 0, 1360,
	0, 861, 850, 851, 41, 0, 0, 2224, 2, 1292,
	0, 872, 865, 0, 863, 863, 863, 67, 68, 0,
	99, 0, 0, 0, 966, 0, 0, 0, 1358, 1358,
	251, 1358, 1358, 0, 1374, 249, 0, 1355, 1370, 1371,
	1372, 0, 0, 0, 1356, 0, 1356, 1356, 1356, 1356,
	1356, 1356, 1356, 0, 774, 999, 1001, 1002, 1003, 1383,
	1384, 2219, 2220, 2221, 2222, 2223, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 0, 0, 0,
	819, 0, 785, 786, 787, 0, 789, 0, 0, 0,
	0, 0, 799, 802, 806, 0, 1292, 1292, 586, 587,
	588, 824, 825, 813, 826, 831, 830, 838, 838, 0,
	830, 56, 0, 0, 946, 326, 328, 0, 348, 0,
	351, 354, 1389, 844, 0, 0, 1414, 1415, 0, 0,
	0, 0, 0, 2118, 194, 265, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 0, 196, 196, 196, 2127,
	196, 0, 196, 196, 196, 196, 196, 264, 254, 255,
	256, 0, 0, 0, 2118, 0, 566, 563, 564, 57,
	0, 46, 58, 1308, 967, 968, 969, 0, 1361, 833,
	0, 867, 0, 39, 0, 1298, 0, 0, 875, 873,
	874, 864, 0, 886, 916, 0, 1013, 1847, 1019, -2,
	-2, -2, 1760, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1705, 0, 0, 0, 0, 0, 1802, 1092, 1093,
	1094, 1095, 1096, 1097, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, -2, -2, -2, 1251, 1252, 0, 2219, 2220, 2221,
	2222, 2223, 1325, 0, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1828, 1891, 1779, 1896,
	1724, 0, 1716, 1793, 1920, 1921, 0, 1836, 2200, 0,
	-2, 1945, 1884, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2210, 2211, 1786, 1734, 1844, 1885, 1725, 1746,
	1765, 1814, 1815, 1817, 1849, 1850, 1868, 1877, 1895, 1706,
	1707, 1708, 1809, 1810, 1917, 1916, 1915, 1918, 1951, 1949,
	1952, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1703, 1704, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1726, 1727, 1728, 1733, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1781,
	1782, 1783, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804,
	1805, 1806, 1807, 1808, 1811, 1812, 1813, 1816, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830,
	1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1845, 1846, 1848, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880,
	1881, 1882, 1883, 1886, 1887, 1888, 1889, 1890, 1892, 1893,
	1894, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1919,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1946,
	1947, 1948, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1360, 1360, 0, 84, 2177, 0, 1332, -2,
	-2, 1334, 0, 0, 0, -2, -2, -2, -2, 1717,
	-2, 1251, 0, 0, 0, 0, 1705, 1706, 1707, 1708,
	1714, 1716, 1724, 1725, 1729, 1730, 1731, 1732, 1734, 1743,
	1746, 1760, 1763, 1765, 1779, 1786, 1793, 1802, 1809, 1810,
	1814, 1815, 1817, 1828, 1831, 1832, 1836, 1844, 1847, 1849,
	1850, 1851, 1868, 1877, 1884, 1885, 1891, 1895, 1896, 1915,
	1916, 1917, 1918, 1920, 1921, 1932, 1942, 1943, 1944, 1945,
	1949, 1951, 1952, 100, 1284, 863, 101, 0, 392, 393,
	0, 0, 0, 0, 0, 0, 611, 1377, 1378, 2213,
	2214, 2215, 2216, 2217, 2218, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 1358, 251,
	0, 0, 755, 0, 756, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 773, 0, 775,
	78, 776, 819, 778, 0, 0, 1358, 1358, 0, 0,
	0, 0, 0, 613, 614, 819, 819, 819, 819, 816,
	0, 816, 796, 816, 814, 815, 0, 801, 0, 0,
	0, 809, 810, 0, -2, 836, -2, 845, 0, 0,
	852, 854, 855, 856, 857, 853, 0, 862, 0, 0,
	0, 330, 0, 0, 350, 332, 0, 335, 336, 337,
	338, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	353, 0, 1387, 1390, 849, 1405, 1406, 0, 1416, 1417,
	200, 0, 200, 0, 0, 0, 0, 163, 196, 0,
	165, 196, 196, 196, 0, 196, 196, 172, 173, 196,
	175, 176, 177, 178, 179, 196, 181, 182, 183, 196,
	196, 186, 196, 196, 189, 190, 191, 192, 193, 263,
	200, 0, 0, 200, 0, 0, 548, 0, 0, 0,
	0, 553, 554, 555, 556, 0, 0, 559, 560, -2,
	45, 0, 0, 0, 0, 0, 42, 63, 0, 868,
	869, 62, 2225, 0, 50, 0, 0, 1293, 1296, 1297,
	1285, 1286, 1289, 0, 0, 870, 876, 877, 866, 0,
	887, 0, 0, 0, 0, 917, 0, 920, 921, 922,
	923, 924, 925, 0, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1020, 0, 1034, 0, 0, 0, 0, 0, 0,
	0, 1085, 1086, 1087, 1088, 1089, 1090, 0, 875, 0,
	0, 875, 875, 875, 875, 875, 0, 0, 1060, 1957,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 875, 0, 1243, 0, 0, 1154,
	1163, 0, 1155, 1164, 1156, 1165, 1157, 0, 1158, 1166,
	1159, 1167, 1160, 1161, 1168, 1162, 0, 0, 0, 1056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 999, 0, 85, 87, 0, 0, 2177, 1335, 1336,
	521, 1349, 1350, 1351, 0, 1347, 0, 1292, 872, 628,
	0, 394, 410, 498, 425, 426, 427, 488, 429, 490,
	490, 0, 490, 490, 490, 490, 490, 465, 466, 467,
	468, 469, 471, 472, 473, 474, 475, 0, 0, 448,
	488, 488, 488, 452, 478, 479, 480, 481, 482, 483,
	484, 485, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 493, 493, 495, 495, 495, 495, 495, 410,
	410, 410, 410, 0, 0, 0, 610, 0, 1375, 0,
	0, 251, -2, 0, -2, 0, 994, 0, 0, 1004,
	0, 0, 111, 281, 267, 110, 0, 245, 250, 246,
	247, 248, 0, 0, 0, 0, 258, 770, 1357, 0,
	763, 76, 764, 765, 766, 767, 768, 260, 769, 1000,
	1385, 1386, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 0, 777,
	820, 0, 822, 0, 0, 946, 782, 783, 784, 615,
	790, 791, 792, 798, 819, 0, 0, 0, 946, 819,
	800, 1048, 803, 1171, 0, 827, 842, 0, 837, 0,
	843, 847, 846, 0, 859, 0, 327, 329, 331, 349,
	0, 0, 352, 355, 0, 0, 0, 0, 1408, 0,
	1410, 1412, 0, 0, 201, 202, 203, 200, 0, 195,
	0, 218, 266, 0, 164, 0, 198, 166, 167, 168,
	196, 170, 171, 174, 180, 184, 185, 187, 188, 262,
	0, 0, 0, 0, 161, 0, 549, 550, 551, 552,
	561, 558, 59, 0, 0, 1310, 1313, 1314, 1315, 1316,
	1317, 1381, 1382, 0, 834, 835, 0, 37, 0, 1299,
	0, 0, 0, 0, 1288, 1290, 1291, 0, 0, 1273,
	0, 0, 878, 871, 40, 1014, 1015, 1016, 1018, 1035,
	0, 1037, 1039, 918, 919, 888, 0, 1253, 1254, 1255,
	1256, 1257, -2, 1025, 1026, 1050, 1051, 1052, 0, 0,
	0, 0, 1048, 1030, 0, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1084, 1185, 1186,
	0, 1262, 0, 1058, 882, 883, 0, 1263, 1082, 1272,
	1083, 1258, 1091, 1056, 1260, 1261, 1259, 0, 0, 0,
	0, 0, 1053, 0, 1324, 0, 0, 0, 0, 1132,
	0, 0, 0, 0, 1066, 1265, 0, 1066, 1265, 0,
	0, 1818, 1930, 1710, 0, 0, 0, 1249, 1246, 0,
	0, 0, 1172, 0, 0, 0, 0, 0, 1057, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 998, 0, 926, 928,
	929, 930, -2, 0, 934, 935, 1007, 1054, 1383, 0,
	-2, 0, 0, 74, 75, 0, 0, 0, 1333, 0,
	0, 0, 90, 91, 86, 1337, 522, 0, -2, 1344,
	1345, 1253, 0, 1298, 875, 685, 395, 397, 398, 399,
	0, 593, 601, 0, 0, 591, 593, 593, 0, 589,
	590, 402, 501, 499, 500, 428, 0, 453, 0, 454,
	490, 490, 490, 490, 457, 458, 460, 463, 464, 470,
	0, 0, 449, 450, 451, 440, 0, 441, 493, 443,
	0, 444, 445, 446, 447, 403, 404, 405, 406, 607,
	608, 609, 0, 0, 0, 96, 0, 105, -2, 529,
	530, 531, 0, 526, 1359, 106, 0, 283, 284, 0,
	221, 0, 252, 253, 113, 0, 0, 268, 0, 389,
	390, 0, 757, 0, 759, 257, 761, 771, 772, 762,
	0, 0, 79, 821, 779, 780, 781, 1011, 0, 0,
	793, 817, 818, 816, 819, 797, 811, 0, 0, 804,
	0, 841, 839, 848, 947, 333, 334, 356, 82, 0,
	1388, 1407, 0, 1411, 1413, 0, 204, 206, 0, 0,
	155, 0, 0, 197, 0, 169, 0, 0, 0, 0,
	0, 557, 0, 60, 0, 1309, 0, 0, 710, 711,
	-2, 748, 1367, 748, 748, 734, 576, 748, 0, 0,
	0, 64, 51, 0, 2014, 54, 0, 1294, 1295, 1287,
	0, 1352, 1353, 1274, 1275, 97, 879, 1036, 1038, 1040,
	0, 1056, 1027, 1048, 1031, 0, 1028, 0, 1022, 0,
	1130, 0, 0, 0, 0, 0, 0, 0, 1061, -2,
	1128, 1129, 1131, 0, 0, 0, 1135, 0, 1138, 0,
	0, 1178, 0, 0, 1179, 1143, 0, 0, 0, 0,
	0, 1149, 1284, 0, 1247, 0, 0, 1152, 1153, 1173,
	0, 0, 1174, 1175, 1176, 1177, 1117, 0, 1118, 0,
	0, 0, 0, 0, 1124, 1125, 1126, 1127, 897, 897,
	897, 897, 897, 897, 897, 897, 897, 897, 897, 897,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 970,
	0, 0, 973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 0, 941, 0, 1007, 0, 0, 0,
	1056, 0, 1011, 0, 1011, 1011, 81, 0, 1006, 88,
	89, 0, 0, 95, 523, 524, 0, 220, 391, 629,
	0, 0, 576, 576, 576, 576, 0, 0, 576, 576,
	576, 576, 576, 0, 0, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 0, 576, 576, 576,
	576, 0, 576, 396, 0, 594, 0, 0, 593, 593,
	593, 592, 593, 584, 594, 585, 0, 411, 0, 413,
	414, 415, 416, 417, 418, 419, 420, 0, 0, 0,
	0, 0, 0, 516, 0, 543, 545, 0, 0, 424,
	502, 0, 0, 0, 459, 455, 456, 490, 461, 0,
	486, 0, 0, 442, 0, 625, 0, 1376, 98, 0,
	532, 533, 534, 0, 576, 576, 576, 0, 285, 286,
	287, 995, 0, 222, 223, 0, 0, 0, 0, 1005,
	123, 0, 282, 0, 0, 0, 0, 0, 0, 0,
	77, 261, 788, 0, 616, 617, 946, 795, 1049, 805,
	807, 808, 517, 0, 1409, 0, 0, 0, 0, 0,
	0, 216, 199, 0, 0, 0, 0, 162, 0, 1311,
	1312, 0, 0, 593, 0, 735, 736, 0, 749, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1368,
	1369, 0, 0, 0, 577, 0, 743, 744, 0, 0,
	52, 53, 1300, 38, 50, 0, 889, 1264, 0, 1029,
	0, 1032, 1059, 884, 0, 1098, 897, 897, 897, 897,
	897, 0, 488, 488, 1232, 488, 495, 1235, 488, 1237,
	488, 1240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1244, 1151, 1250, 0, 0, 0,
	890, 891, 893, 1119, 1120, 1121, 1122, 1123, 1102, 898,
	1103, 1104, 1106, 1107, 1109, 1110, 1111, 1112, 1114, 1115,
	1116, 1318, 0, 0, 0, 1303, 0, 1011, 1326, 0,
	0, 0, 0, 2213, 2214, 927, 961, 963, 0, 958,
	971, 972, 974, 0, 976, 0, 0, 979, 980, 981,
	948, 933, 1055, 936, 0, 0, 0, 1007, 945, 0,
	0, 0, 0, 0, 1284, 1011, 72, 73, 0, 92,
	93, 94, 630, 697, 0, 0, 0, 0, 576, 0,
	576, 576, 0, 0, 0, 0, 0, 576, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 0, 0, 0, 666, 667, 671, 672, 673,
	674, 675, 682, 683, 684, 0, 0, 595, 488, 488,
	0, 599, 591, 600, 578, 580, 581, 583, 0, 412,
	0, 0, 423, 0, 503, 0, 505, 1171, 1171, 1171,
	0, 0, 1023, 1024, 0, 542, 544, 546, 547, 489,
	491, 492, 462, 476, 0, 477, 0, 496, 0, 612,
	626, 0, 0, 0, 96, 576, 0, 0, 0, 0,
	229, 0, 225, 0, 0, 0, 131, 0, 114, 115,
	116, 118, 119, 0, 0, 0, 112, 0, 270, 0,
	273, 274, 758, 760, 1012, 819, 1399, 518, 996, 216,
	205, 207, 208, 0, 216, 219, 156, 0, 157, 159,
	0, 158, 562, 712, 0, 745, 0, 0, 1375, 591,
	0, -2, 715, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 0, 741, 0, 717, 0, 745,
	0, 738, 0, 0, 55, 48, 97, 97, 1099, 1033,
	0, 1101, 1105, 1100, 1108, 1113, 1133, 1229, 517, 1233,
	1234, 1236, 1238, 1239, 1241, 1137, 1134, 1136, 0, 0,
	0, 0, 1144, 0, 0, 0, 0, 0, 0, 1248,
	0, 0, 895, 894, 65, 0, 1318, 1301, 1320, 1322,
	0, 0, 0, 0, -2, 1689, 0, 952, 1284, 0,
	0, 0, 0, 0, 955, 962, 0, 0, 956, 0,
	957, 975, 977, 978, 931, 0, 0, 937, 0, 0,
	-2, 944, 0, 0, 0, 954, 0, 1292, 71, 699,
	688, 0, 0, 0, 698, 631, 632, 633, 634, 0,
	576, 0, 0, 638, 639, 641, 642, 643, 0, 0,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 676, 677, 678, 679, 680, 681, 660,
	661, 662, 663, 664, 665, 0, 670, 568, 0, 1289,
	1289, 593, 593, 0, 950, 0, 0, 519, 520, 504,
	506, 0, 508, 0, 510, 0, 0, 0, 515, 1171,
	1171, 1171, 1171, 1171, 1171, 1171, 1171, 1171, 0, 0,
	487, 0, 0, 627, 0, 96, 98, 0, 537, 538,
	539, 540, 541, 0, 97, 230, 231, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 224, 226, 227, 228,
	149, 132, 133, 0, 0, 0, 0, 124, 125, 0,
	0, 0, 0, 0, 120, 121, 122, 269, 0, 0,
	272, 0, 0, 794, 1401, 1395, 209, 216, 209, 0,
	160, 0, 714, 746, 0, 410, 410, 0, 593, 593,
	737, 0, 1365, 1366, 0, 732, 745, 0, 0, 0,
	1011, 0, 0, 880, 885, 1230, 1231, 0, 0, 0,
	0, 1145, 1146, 1147, 1180, 1150, 1245, 0, 0, 1284,
	0, 0, 66, 0, 1323, -2, 0, 0, 83, 0,
	1292, 1327, 1328, 1329, 1330, 1331, 959, 0, 964, 0,
	0, 1007, 942, 0, 0, 0, 0, 0, 70, 701,
	0, 0, 0, 0, 0, 0, 0, 635, 0, 640,
	636, 644, 645, 668, 669, 567, 571, 0, 576, 0,
	596, 597, 598, 579, 582, 0, 0, 407, 0, 0,
	0, 0, 512, 0, 514, 494, 497, 0, 103, 0,
	535, 536, 0, 98, 232, 233, 234, 235, 237, 238,
	0, 0, 0, 109, 0, 0, 134, 0, 0, 0,
	0, 144, 145, 146, 147, 148, 126, 127, 128, 129,
	130, 117, 0, 0, 271, 0, 276, 277, 1362, 1403,
	-2, 0, 152, 0, 209, 154, 217, 713, 747, 400,
	401, 0, 1375, 0, 716, 731, 733, 0, 740, 0,
	1276, 49, 97, 1139, 1141, 1140, 1142, 0, 0, 0,
	1169, 1170, 899, 0, 0, 1321, 1302, 0, 1306, 0,
	953, 69, 0, 949, 938, 940, 1007, 1008, 1009, 1010,
	0, 686, 0, 700, 0, 0, 0, 0, 0, 0,
	0, 637, 572, 573, 0, 575, 0, 951, 421, 408,
	409, 0, 507, 509, 511, 513, 569, 96, 0, 56,
	239, 240, 241, 242, 150, 151, 135, 136, 0, 138,
	139, 0, 0, 0, 279, 0, 275, 948, 0, 1395,
	0, 1397, 0, 1394, 0, 210, 153, 0, 0, 0,
	739, 0, 751, 0, 1281, 0, 881, 1148, 0, 0,
	0, 0, 0, 0, 896, 0, 1305, 0, 960, 943,
	0, 0, 697, 689, 0, 691, 0, 0, 0, 0,
	0, 574, 0, 407, 102, 570, 104, 288, 96, 359,
	360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 0,
	0, 0, 56, 0, 140, 0, 142, 143, 278, 0,
	36, 0, 1402, 0, 1400, 0, 0, 1396, 0, 569,
	0, 0, 750, 0, 0, 909, 0, 0, 1181, 0,
	1184, 892, 900, 0, 903, 0, 0, 0, 914, 0,
	901, 1319, -2, 0, 984, 0, 0, 703, 690, 692,
	693, 694, 695, 0, 0, 422, 96, 0, 0, 108,
	0, 0, 1377, 0, 0, -2, -2, -2, 1379, 0,
	357, 137, 141, 280, 1363, 1364, 1404, 0, 0, 0,
	718, 0, 569, 752, 0, 47, 0, 1282, 1283, 1277,
	1278, 1280, 1182, 0, 904, 905, 906, 907, 908, 0,
	0, 0, 0, 687, 702, 0, 0, 0, 98, 289,
	290, 0, 299, 0, 56, 0, 0, 0, 517, 0,
	56, 1398, 1392, 211, 212, 213, 215, 569, 742, 0,
	910, 911, 0, 0, 0, 0, 915, 0, 985, 986,
	0, 0, 704, 0, 602, 56, 0, 56, 300, 0,
	0, 0, 0, 0, 521, 1380, 243, 358, 0, 719,
	0, 0, 0, 1279, 0, 902, 0, 983, 989, 0,
	696, 603, 604, 0, 96, 291, 292, 293, 294, 295,
	56, 0, 297, 0, 56, 56, 309, 310, 311, 56,
	318, 320, 321, 322, 0, 324, 325, 313, 214, 0,
	912, 913, 1183, 982, 990, 988, 605, 0, 606, 0,
	0, 0, 107, 0, 57, 56, 0, 0, 56, 0,
	306, 0, 312, 0, 323, 0, 0, 1837, 987, 0,
	0, 0, 618, 620, 621, 0, 0, 619, 56, 0,
	-2, 302, 0, 0, 56, 307, 0, 319, 314, 753,
	754, 0, 0, 0, 622, 623, 624, 296, 298, 56,
	304, 0, 56, 991, 0, 993, 0, 56, 0, 992,
	303, 0, -2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 641,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	57935, 611, 57936, 612, 57937, 613, 57938, 614, 57939, 615,
	57940, 616, 57941, 617, 57942, 618, 57943, 619, 57944, 620,
	57945, 621, 57946, 622, 57947, 623, 57948, 624, 57949, 625,
	57950, 626, 57951, 627, 57952, 628, 57953, 629, 57954, 630,
	57955, 631, 57956, 632, 57957, 633, 57958, 634, 57959, 635,
	57960, 636, 57961, 637, 57962, 638, 57963, 639, 57964, 640,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:562
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:597
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:609
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:620
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:636
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:647
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:653
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:657
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:664
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:673
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:681
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:685
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:694
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:702
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:712
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:716
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:721
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:725
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:731
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:735
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:741
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:747
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:761
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:769
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:775
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:788
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:804
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:810
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:816
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:820
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:824
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:828
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:834
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:838
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:848
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:852
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:858
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:862
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:867
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:871
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:877
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:881
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:888
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:897
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:901
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:907
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:915
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:921
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:925
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:929
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:933
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:938
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:943
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:948
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:968
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:973
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:977
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:983
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:989
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:997
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1005
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1009
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1013
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1032
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1041
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1045
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1050
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1068
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1074
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1078
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1090
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1095
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1123
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1127
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1132
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1142
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1160
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1172
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1176
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1180
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1184
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1209
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1218
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1224
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1229
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1234
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1238
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1242
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1248
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1253
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1257
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1261
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1265
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1269
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1367
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1371
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1387
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1391
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1395
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1405
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1410
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1429
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1441
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1468
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1472
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1476
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1480
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1484
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1488
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1492
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1497
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1501
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1506
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1510
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1517
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1529
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1533
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1549
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1561
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1566
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1580
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1594
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1602
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1606
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1610
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1614
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1628
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1634
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1638
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1702
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1716
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1722
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1762
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1766
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1770
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1774
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1780
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1784
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1788
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1792
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1796
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1800
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1806
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1810
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1814
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1824
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1853
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1877
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1883
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1887
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1897
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1903
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1909
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1914
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1919
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1925
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1943
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1965
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1971
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1980
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2034
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2042
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2052
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2068
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2155
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2173
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2214
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2228
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2244
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2261
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2271
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2276
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2280
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2324
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2340
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2349
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2362
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2366
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2393
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2402
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2411
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2420
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2429
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2438
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2447
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2456
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 422:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2465
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2485
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2561
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2763
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2768
		{
			yyVAL.sqlVal = nil
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2772
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2777
		{
			yyVAL.sqlVal = nil
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2790
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2794
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2802
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2806
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2812
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2820
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2833
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2843
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2847
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2869
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2873
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2877
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2885
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2889
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2893
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2897
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2903
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2914
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.str = yyDollar[1].str
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2924
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2933
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = yyDollar[1].str
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2943
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2952
		{
			yyVAL.boolean = false
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.boolean = true
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2961
		{
			yyVAL.charsetCollates = nil
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2965
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2971
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2979
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2983
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2987
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2991
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2997
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3001
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3005
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3009
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3015
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3019
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3025
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3031
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3035
		{
			yyVAL.colKeyOpt = colKey
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3039
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3053
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3065
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3069
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3073
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3077
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3085
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3089
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3097
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3101
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3114
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3122
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3125
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = yyDollar[1].str
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3131
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3135
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3140
		{
			yyVAL.indexOptions = nil
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3150
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3154
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3164
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3169
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3175
		{
			yyVAL.str = ""
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3187
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3191
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3195
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3199
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3203
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3220
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3234
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3240
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3249
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3253
		{
			yyVAL.str = yyDollar[1].str
		}
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3258
		{
			yyVAL.str = ""
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3262
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3268
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3272
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3288
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3292
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 602:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3302
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 603:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3306
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3310
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 605:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3314
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 606:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3318
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3324
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3337
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3341
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3347
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3357
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3362
		{
			yyVAL.str = ""
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3370
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3376
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3382
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3388
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3392
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3396
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3400
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3404
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3409
		{
			yyVAL.boolean = true
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.boolean = true
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			yyVAL.boolean = false
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3422
		{
			yyVAL.str = ""
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3430
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3436
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3444
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3448
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3452
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3456
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3460
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3464
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3468
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3472
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3488
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3492
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3500
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3532
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3536
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3544
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3548
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3556
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3560
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3564
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3568
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3576
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3588
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3621
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3625
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3629
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3633
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3637
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3641
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3652
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 687:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3666
		{
			yyVAL.str = yyDollar[1].str
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3682
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3688
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3696
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 696:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3700
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3745
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3750
		{
			yyVAL.str = string("")
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3763
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3780
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 713:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3786
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3793
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3804
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3808
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 718:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3813
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 719:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3817
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3821
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3826
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3831
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3836
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3841
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3846
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3851
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3861
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3875
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3879
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3886
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3902
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3908
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3913
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 739:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3917
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3921
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3925
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 742:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3931
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3937
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3941
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.columnOrder = nil
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3954
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3959
		{
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3961
		{
		}
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3965
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3975
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 753:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3981
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 754:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3985
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3991
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3995
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4001
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4005
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4013
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4017
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4023
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4031
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4035
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4043
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4051
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4059
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4067
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4075
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4083
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4092
		{

		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4106
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4110
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4116
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4122
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4127
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4131
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4135
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4139
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4143
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4148
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4152
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4156
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4160
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4164
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4168
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 788:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4172
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4176
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4180
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4184
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4188
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4192
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 794:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4196
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 795:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4201
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4210
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4214
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4218
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4222
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4228
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4240
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4245
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4249
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4254
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4258
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4262
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4270
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4276
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4282
		{
			yyVAL.boolean = false
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4286
		{
			yyVAL.boolean = true
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = ""
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4316
		{
			yyVAL.showFilter = nil
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4320
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4324
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4328
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = ""
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = SessionStr
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = GlobalStr
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4348
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4352
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4356
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4361
		{
			yyVAL.bytes = nil
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4371
		{
			yyVAL.statement = &Begin{}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4381
		{
			yyVAL.statement = &Begin{}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4385
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4389
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4394
		{
			yyVAL.bytes = nil
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.bytes = nil
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4403
		{
			yyVAL.bytes = nil
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yyVAL.bytes = nil
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4412
		{
			yyVAL.bytes = nil
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4416
		{
			yyVAL.bytes = nil
		}
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4422
		{
			yyVAL.statement = &Commit{}
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4428
		{
			yyVAL.statement = &Rollback{}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4434
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4440
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4444
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4448
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4452
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4458
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4501
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4507
		{
			setAllowComments(yylex, true)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4511
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4517
		{
			yyVAL.bytes2 = nil
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4521
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.str = UnionStr
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4531
		{
			yyVAL.str = UnionAllStr
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4535
		{
			yyVAL.str = UnionDistinctStr
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4540
		{
			yyVAL.byt = 0
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.byt = 1
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4549
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4553
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.str = SQLCacheStr
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4562
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = DistinctStr
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4575
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4579
		{
			yyVAL.str = StraightJoinHint
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4593
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4604
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4612
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4616
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4626
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4630
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4634
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4640
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4644
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 892:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4650
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4655
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4658
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4663
		{
			yyVAL.exprs = nil
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4667
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4672
		{
			yyVAL.over = nil
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4676
		{
			yyVAL.over = yyDollar[1].over
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4681
		{
			yyVAL.frame = nil
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4685
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4689
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4696
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4734
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4738
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4742
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4746
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4753
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4761
		{
			yyVAL.window = nil
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4764
		{
			yyVAL.window = yyDollar[2].window
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4773
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4779
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4792
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4797
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4805
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4809
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4831
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4835
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4855
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4859
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4875
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4883
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4889
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4893
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4899
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4904
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4915
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4919
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4923
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4927
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4931
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4942
		{
			yyVAL.expr = nil
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4946
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4951
		{
			yyVAL.columns = nil
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4955
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4961
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4965
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4981
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4995
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4999
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5003
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5007
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5013
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5015
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5019
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5021
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5025
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5027
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5030
		{
			yyVAL.empty = struct{}{}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5032
		{
			yyVAL.empty = struct{}{}
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5037
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.str = JoinStr
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5051
		{
			yyVAL.str = JoinStr
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5055
		{
			yyVAL.str = JoinStr
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.str = StraightJoinStr
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5067
		{
			yyVAL.str = LeftJoinStr
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5071
		{
			yyVAL.str = LeftJoinStr
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5075
		{
			yyVAL.str = RightJoinStr
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5079
		{
			yyVAL.str = RightJoinStr
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5083
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5087
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5093
		{
			yyVAL.str = NaturalJoinStr
		}
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5097
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 982:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5107
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 983:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5111
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5117
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5122
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5130
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5142
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5146
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5152
		{

		}
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5170
		{

		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5174
		{

		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5178
		{

		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5182
		{

		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5192
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5198
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5208
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5214
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5218
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5222
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5226
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5230
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5236
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5240
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5246
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5251
		{
			yyVAL.indexHints = nil
		}
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5255
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1009:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5259
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5263
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5268
		{
			yyVAL.expr = nil
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5272
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5282
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5286
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5290
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5294
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5298
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5302
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5306
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5312
		{
			yyVAL.str = ""
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5316
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5332
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5336
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5340
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5344
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5348
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5352
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5356
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5360
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5364
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5368
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5374
		{
			yyVAL.str = IsNullStr
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5378
		{
			yyVAL.str = IsNotNullStr
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5382
		{
			yyVAL.str = IsTrueStr
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = IsFalseStr
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5394
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5400
		{
			yyVAL.str = EqualStr
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5404
		{
			yyVAL.str = LessThanStr
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5408
		{
			yyVAL.str = GreaterThanStr
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5412
		{
			yyVAL.str = LessEqualStr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5416
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5420
		{
			yyVAL.str = NotEqualStr
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5424
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5429
		{
			yyVAL.expr = nil
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5433
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5443
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5447
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5453
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5459
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5463
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5469
		{
			yyVAL.selectExprs = nil
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5476
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5480
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5486
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5490
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5496
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5500
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5504
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5508
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5512
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5516
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5520
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5524
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5528
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5532
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5536
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5540
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5544
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5548
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5552
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5556
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5560
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5564
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5568
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5572
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5576
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5580
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5584
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5588
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5592
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5596
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5604
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5618
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5622
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5626
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5646
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1099:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5650
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5660
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5664
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5668
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5672
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5676
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5680
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5684
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5688
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5692
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5696
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5700
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5704
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5708
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5712
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5716
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5733
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5737
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5741
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5745
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5749
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5753
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5757
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5761
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5765
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5769
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5773
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5784
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5788
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5792
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5796
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5800
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5804
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5808
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5812
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5816
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5820
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5824
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1139:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5828
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1140:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5832
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5836
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5840
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5844
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5848
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1145:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5852
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1146:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5856
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5860
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1148:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5864
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5868
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1150:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5872
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5876
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5880
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5884
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5894
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5898
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5902
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5907
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5912
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5917
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5923
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5928
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5932
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5937
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5941
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5945
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5950
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5955
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5960
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5964
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5968
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5979
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5989
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5993
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5997
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6001
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6005
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6009
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = ""
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6019
		{
			yyVAL.str = BooleanModeStr
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6023
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1183:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6027
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6031
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6037
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6041
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6047
		{
			yyVAL.str = Armscii8Str
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6051
		{
			yyVAL.str = AsciiStr
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6055
		{
			yyVAL.str = Big5Str
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6059
		{
			yyVAL.str = UBinaryStr
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6063
		{
			yyVAL.str = Cp1250Str
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6067
		{
			yyVAL.str = Cp1251Str
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6071
		{
			yyVAL.str = Cp1256Str
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6075
		{
			yyVAL.str = Cp1257Str
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6079
		{
			yyVAL.str = Cp850Str
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6083
		{
			yyVAL.str = Cp852Str
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6087
		{
			yyVAL.str = Cp866Str
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6091
		{
			yyVAL.str = Cp932Str
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6095
		{
			yyVAL.str = Dec8Str
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6099
		{
			yyVAL.str = EucjpmsStr
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6103
		{
			yyVAL.str = EuckrStr
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6107
		{
			yyVAL.str = Gb18030Str
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6111
		{
			yyVAL.str = Gb2312Str
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6115
		{
			yyVAL.str = GbkStr
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6119
		{
			yyVAL.str = Geostd8Str
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6123
		{
			yyVAL.str = GreekStr
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6127
		{
			yyVAL.str = HebrewStr
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6131
		{
			yyVAL.str = Hp8Str
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6135
		{
			yyVAL.str = Keybcs2Str
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6139
		{
			yyVAL.str = Koi8rStr
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6143
		{
			yyVAL.str = Koi8uStr
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6147
		{
			yyVAL.str = Latin1Str
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6151
		{
			yyVAL.str = Latin2Str
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6155
		{
			yyVAL.str = Latin5Str
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6159
		{
			yyVAL.str = Latin7Str
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6163
		{
			yyVAL.str = MacceStr
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6167
		{
			yyVAL.str = MacromanStr
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6171
		{
			yyVAL.str = SjisStr
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6175
		{
			yyVAL.str = Swe7Str
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6179
		{
			yyVAL.str = Tis620Str
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6183
		{
			yyVAL.str = Ucs2Str
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6187
		{
			yyVAL.str = UjisStr
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6191
		{
			yyVAL.str = Utf16Str
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6195
		{
			yyVAL.str = Utf16leStr
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6199
		{
			yyVAL.str = Utf32Str
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6203
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6207
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6217
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6221
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6225
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6229
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6233
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6237
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6243
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6247
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6251
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6255
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6259
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6263
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6267
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6272
		{
			yyVAL.expr = nil
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6276
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6281
		{
			yyVAL.str = string("")
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6285
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6291
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6295
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6301
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6306
		{
			yyVAL.expr = nil
		}
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6310
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6316
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6320
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6324
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6328
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6332
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6336
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6340
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6344
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6348
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6352
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6356
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6360
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6364
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6368
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6374
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6378
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6382
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6386
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6390
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6394
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6398
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6402
		{
			yyVAL.expr = &NullVal{}
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6408
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6412
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6416
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6421
		{
			yyVAL.exprs = nil
		}
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6425
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6431
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6435
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6441
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6446
		{
			yyVAL.expr = nil
		}
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6450
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6456
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6461
		{
			yyVAL.orderBy = nil
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6465
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6471
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6475
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6481
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6486
		{
			yyVAL.str = AscScr
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6490
		{
			yyVAL.str = AscScr
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6494
		{
			yyVAL.str = DescScr
		}
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6499
		{
			yyVAL.limit = nil
		}
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6503
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6507
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6511
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6517
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6521
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6526
		{
			yyVAL.str = ""
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6530
		{
			yyVAL.str = ForUpdateStr
		}
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6534
		{
			yyVAL.str = ShareModeStr
		}
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6547
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6551
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6555
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6559
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6564
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6568
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6572
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6578
		{
			yyVAL.columns = nil
		}
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6582
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6588
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6592
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6598
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6602
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6606
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6610
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6614
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6618
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6623
		{
			yyVAL.assignExprs = nil
		}
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6627
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6633
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6637
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6643
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6647
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6653
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6659
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6669
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6673
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6679
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6682
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6686
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6690
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6696
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6700
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6706
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6717
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6730
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6743
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6749
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6753
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6759
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6763
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6767
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6773
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6777
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6781
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6788
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6795
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6799
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6803
		{
			yyVAL.expr = &Default{}
		}
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6812
		{
			yyVAL.byt = 0
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6814
		{
			yyVAL.byt = 1
		}
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6817
		{
			yyVAL.byt = 0
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6819
		{
			yyVAL.byt = 1
		}
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6822
		{
			yyVAL.byt = 0
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6824
		{
			yyVAL.byt = 1
		}
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6827
		{
			yyVAL.str = ""
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6829
		{
			yyVAL.str = IgnoreStr
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6832
		{
			yyVAL.sqlVal = nil
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6834
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6836
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6840
		{
			yyVAL.empty = struct{}{}
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6842
		{
			yyVAL.empty = struct{}{}
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6845
		{
			yyVAL.empty = struct{}{}
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6847
		{
			yyVAL.empty = struct{}{}
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6849
		{
			yyVAL.empty = struct{}{}
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6853
		{
			yyVAL.str = UniqueStr
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6855
		{
			yyVAL.str = FulltextStr
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6857
		{
			yyVAL.str = SpatialStr
		}
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6860
		{
			yyVAL.str = ""
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6862
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6865
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6867
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6871
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6875
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6881
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6885
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6892
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6898
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6902
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6909
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6914
		{
			yyVAL.str = string("")
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6916
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6919
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6921
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6924
		{
			yyVAL.EnclosedBy = nil
		}
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6928
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6933
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6937
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6942
		{
			yyVAL.sqlVal = nil
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6946
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6951
		{
			yyVAL.sqlVal = nil
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6955
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6960
		{
			yyVAL.Fields = nil
		}
	case 1400:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6964
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6969
		{
			yyVAL.Lines = nil
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6973
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6978
		{
			yyVAL.sqlVal = nil
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6982
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6988
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6994
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6998
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7004
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7008
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7014
		{
			yyVAL.lockType = LockRead
		}
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7018
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7022
		{
			yyVAL.lockType = LockWrite
		}
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7026
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7032
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7038
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7042
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7046
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7894
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7903
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
