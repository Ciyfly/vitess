// Code generated by goyacc -o sql.go -v y.output sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const MAXVALUE = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const TRIGGERS = 57551
const FUNCTION = 57552
const STATUS = 57553
const VARIABLES = 57554
const WARNINGS = 57555
const ERRORS = 57556
const KILL = 57557
const CONNECTION = 57558
const SEQUENCE = 57559
const ENABLE = 57560
const DISABLE = 57561
const EACH = 57562
const ROW = 57563
const BEFORE = 57564
const FOLLOWS = 57565
const PRECEDES = 57566
const DEFINER = 57567
const INVOKER = 57568
const INOUT = 57569
const OUT = 57570
const DETERMINISTIC = 57571
const CONTAINS = 57572
const READS = 57573
const MODIFIES = 57574
const SQL = 57575
const SECURITY = 57576
const TEMPORARY = 57577
const ALGORITHM = 57578
const MERGE = 57579
const TEMPTABLE = 57580
const UNDEFINED = 57581
const CLASS_ORIGIN = 57582
const SUBCLASS_ORIGIN = 57583
const MESSAGE_TEXT = 57584
const MYSQL_ERRNO = 57585
const CONSTRAINT_CATALOG = 57586
const CONSTRAINT_SCHEMA = 57587
const CONSTRAINT_NAME = 57588
const CATALOG_NAME = 57589
const SCHEMA_NAME = 57590
const TABLE_NAME = 57591
const COLUMN_NAME = 57592
const CURSOR_NAME = 57593
const SIGNAL = 57594
const RESIGNAL = 57595
const SQLSTATE = 57596
const DECLARE = 57597
const CONDITION = 57598
const CURSOR = 57599
const CONTINUE = 57600
const EXIT = 57601
const UNDO = 57602
const HANDLER = 57603
const FOUND = 57604
const SQLWARNING = 57605
const SQLEXCEPTION = 57606
const USER = 57607
const IDENTIFIED = 57608
const ROLE = 57609
const REUSE = 57610
const GRANT = 57611
const GRANTS = 57612
const REVOKE = 57613
const NONE = 57614
const ATTRIBUTE = 57615
const RANDOM = 57616
const PASSWORD = 57617
const INITIAL = 57618
const AUTHENTICATION = 57619
const SSL = 57620
const X509 = 57621
const CIPHER = 57622
const ISSUER = 57623
const SUBJECT = 57624
const ACCOUNT = 57625
const EXPIRE = 57626
const NEVER = 57627
const DAY = 57628
const OPTION = 57629
const OPTIONAL = 57630
const EXCEPT = 57631
const ADMIN = 57632
const PRIVILEGES = 57633
const MAX_QUERIES_PER_HOUR = 57634
const MAX_UPDATES_PER_HOUR = 57635
const MAX_CONNECTIONS_PER_HOUR = 57636
const MAX_USER_CONNECTIONS = 57637
const FLUSH = 57638
const FAILED_LOGIN_ATTEMPTS = 57639
const PASSWORD_LOCK_TIME = 57640
const REQUIRE = 57641
const PROXY = 57642
const ROUTINE = 57643
const TABLESPACE = 57644
const CLIENT = 57645
const SLAVE = 57646
const EVENT = 57647
const EXECUTE = 57648
const FILE = 57649
const RELOAD = 57650
const REPLICATION = 57651
const SHUTDOWN = 57652
const SUPER = 57653
const USAGE = 57654
const LOGS = 57655
const ENGINE = 57656
const ERROR = 57657
const GENERAL = 57658
const HOSTS = 57659
const OPTIMIZER_COSTS = 57660
const RELAY = 57661
const SLOW = 57662
const USER_RESOURCES = 57663
const NO_WRITE_TO_BINLOG = 57664
const CHANNEL = 57665
const BEGIN = 57666
const START = 57667
const TRANSACTION = 57668
const COMMIT = 57669
const ROLLBACK = 57670
const SAVEPOINT = 57671
const WORK = 57672
const RELEASE = 57673
const BIT = 57674
const TINYINT = 57675
const SMALLINT = 57676
const MEDIUMINT = 57677
const INT = 57678
const INTEGER = 57679
const BIGINT = 57680
const INTNUM = 57681
const SERIAL = 57682
const REAL = 57683
const DOUBLE = 57684
const FLOAT_TYPE = 57685
const DECIMAL = 57686
const NUMERIC = 57687
const DEC = 57688
const FIXED = 57689
const PRECISION = 57690
const TIME = 57691
const TIMESTAMP = 57692
const DATETIME = 57693
const YEAR = 57694
const CHAR = 57695
const VARCHAR = 57696
const BOOL = 57697
const CHARACTER = 57698
const VARBINARY = 57699
const NCHAR = 57700
const NVARCHAR = 57701
const NATIONAL = 57702
const VARYING = 57703
const TEXT = 57704
const TINYTEXT = 57705
const MEDIUMTEXT = 57706
const LONGTEXT = 57707
const LONG = 57708
const BLOB = 57709
const TINYBLOB = 57710
const MEDIUMBLOB = 57711
const LONGBLOB = 57712
const JSON = 57713
const ENUM = 57714
const GEOMETRY = 57715
const POINT = 57716
const LINESTRING = 57717
const POLYGON = 57718
const GEOMETRYCOLLECTION = 57719
const MULTIPOINT = 57720
const MULTILINESTRING = 57721
const MULTIPOLYGON = 57722
const LOCAL = 57723
const LOW_PRIORITY = 57724
const NULLX = 57725
const AUTO_INCREMENT = 57726
const APPROXNUM = 57727
const SIGNED = 57728
const UNSIGNED = 57729
const ZEROFILL = 57730
const SRID = 57731
const COLLATION = 57732
const DATABASES = 57733
const SCHEMAS = 57734
const TABLES = 57735
const FULL = 57736
const PROCESSLIST = 57737
const COLUMNS = 57738
const FIELDS = 57739
const ENGINES = 57740
const PLUGINS = 57741
const NAMES = 57742
const CHARSET = 57743
const GLOBAL = 57744
const SESSION = 57745
const ISOLATION = 57746
const LEVEL = 57747
const READ = 57748
const WRITE = 57749
const ONLY = 57750
const REPEATABLE = 57751
const COMMITTED = 57752
const UNCOMMITTED = 57753
const SERIALIZABLE = 57754
const ENCRYPTION = 57755
const CURRENT_TIMESTAMP = 57756
const DATABASE = 57757
const CURRENT_DATE = 57758
const CURRENT_USER = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const REPLACE = 57766
const CONVERT = 57767
const CAST = 57768
const SUBSTR = 57769
const SUBSTRING = 57770
const TRIM = 57771
const LEADING = 57772
const TRAILING = 57773
const BOTH = 57774
const GROUP_CONCAT = 57775
const SEPARATOR = 57776
const TIMESTAMPADD = 57777
const TIMESTAMPDIFF = 57778
const OVER = 57779
const WINDOW = 57780
const GROUPING = 57781
const CURRENT = 57782
const AVG = 57783
const BIT_AND = 57784
const BIT_OR = 57785
const BIT_XOR = 57786
const COUNT = 57787
const JSON_ARRAYAGG = 57788
const JSON_OBJECTAGG = 57789
const MAX = 57790
const MIN = 57791
const STDDEV_POP = 57792
const STDDEV = 57793
const STD = 57794
const STDDEV_SAMP = 57795
const SUM = 57796
const VAR_POP = 57797
const VARIANCE = 57798
const VAR_SAMP = 57799
const CUME_DIST = 57800
const DENSE_RANK = 57801
const FIRST_VALUE = 57802
const LAG = 57803
const LAST_VALUE = 57804
const LEAD = 57805
const NTH_VALUE = 57806
const NTILE = 57807
const ROW_NUMBER = 57808
const PERCENT_RANK = 57809
const RANK = 57810
const JSON_TABLE = 57811
const PATH = 57812
const AVG_ROW_LENGTH = 57813
const CHECKSUM = 57814
const COMPRESSION = 57815
const DIRECTORY = 57816
const DELAY_KEY_WRITE = 57817
const ENGINE_ATTRIBUTE = 57818
const INSERT_METHOD = 57819
const MAX_ROWS = 57820
const MIN_ROWS = 57821
const PACK_KEYS = 57822
const ROW_FORMAT = 57823
const SECONDARY_ENGINE_ATTRIBUTE = 57824
const STATS_AUTO_RECALC = 57825
const STATS_PERSISTENT = 57826
const STATS_SAMPLE_PAGES = 57827
const STORAGE = 57828
const DISK = 57829
const MEMORY = 57830
const DYNAMIC = 57831
const COMPRESSED = 57832
const REDUNDANT = 57833
const COMPACT = 57834
const LIST = 57835
const HASH = 57836
const PARTITIONS = 57837
const SUBPARTITION = 57838
const SUBPARTITIONS = 57839
const MATCH = 57840
const AGAINST = 57841
const BOOLEAN = 57842
const LANGUAGE = 57843
const WITH = 57844
const QUERY = 57845
const EXPANSION = 57846
const ACCESSIBLE = 57847
const ASENSITIVE = 57848
const CUBE = 57849
const DAY_HOUR = 57850
const DAY_MICROSECOND = 57851
const DAY_MINUTE = 57852
const DAY_SECOND = 57853
const DELAYED = 57854
const DISTINCTROW = 57855
const DUAL = 57856
const EMPTY = 57857
const FETCH = 57858
const FLOAT4 = 57859
const FLOAT8 = 57860
const GET = 57861
const HIGH_PRIORITY = 57862
const HOUR_MICROSECOND = 57863
const HOUR_MINUTE = 57864
const HOUR_SECOND = 57865
const INSENSITIVE = 57866
const INT1 = 57867
const INT2 = 57868
const INT3 = 57869
const INT4 = 57870
const INT8 = 57871
const IO_AFTER_GTIDS = 57872
const IO_BEFORE_GTIDS = 57873
const ITERATE = 57874
const LEAVE = 57875
const LINEAR = 57876
const LOOP = 57877
const MASTER_BIND = 57878
const MASTER_SSL_VERIFY_SERVER_CERT = 57879
const MIDDLEINT = 57880
const MINUTE_MICROSECOND = 57881
const MINUTE_SECOND = 57882
const PURGE = 57883
const READ_WRITE = 57884
const REPEAT = 57885
const RETURN = 57886
const RLIKE = 57887
const SECOND_MICROSECOND = 57888
const SENSITIVE = 57889
const SPECIFIC = 57890
const SQL_BIG_RESULT = 57891
const SQL_SMALL_RESULT = 57892
const VARCHARACTER = 57893
const WHILE = 57894
const YEAR_MONTH = 57895
const UNUSED = 57896
const DESCRIPTION = 57897
const LATERAL = 57898
const MEMBER = 57899
const RECURSIVE = 57900
const BUCKETS = 57901
const CLONE = 57902
const COMPONENT = 57903
const DEFINITION = 57904
const ENFORCED = 57905
const EXCLUDE = 57906
const GEOMCOLLECTION = 57907
const GET_MASTER_PUBLIC_KEY = 57908
const HISTOGRAM = 57909
const HISTORY = 57910
const INACTIVE = 57911
const INVISIBLE = 57912
const LOCKED = 57913
const MASTER_COMPRESSION_ALGORITHMS = 57914
const MASTER_PUBLIC_KEY_PATH = 57915
const MASTER_TLS_CIPHERSUITES = 57916
const MASTER_ZSTD_COMPRESSION_LEVEL = 57917
const NESTED = 57918
const NETWORK_NAMESPACE = 57919
const NOWAIT = 57920
const NULLS = 57921
const OJ = 57922
const OLD = 57923
const ORDINALITY = 57924
const ORGANIZATION = 57925
const OTHERS = 57926
const PERSIST = 57927
const PERSIST_ONLY = 57928
const PRIVILEGE_CHECKS_USER = 57929
const PROCESS = 57930
const REFERENCE = 57931
const REQUIRE_ROW_FORMAT = 57932
const RESOURCE = 57933
const RESPECT = 57934
const RESTART = 57935
const RETAIN = 57936
const SECONDARY = 57937
const SECONDARY_ENGINE = 57938
const SECONDARY_LOAD = 57939
const SECONDARY_UNLOAD = 57940
const SKIP = 57941
const THREAD_PRIORITY = 57942
const TIES = 57943
const VCPU = 57944
const VISIBLE = 57945
const SYSTEM = 57946
const INFILE = 57947
const ACTIVE = 57948
const AGGREGATE = 57949
const ANY = 57950
const ARRAY = 57951
const ASCII = 57952
const AT = 57953
const AUTOEXTEND_SIZE = 57954
const ENDS = 57955
const EVENTS = 57956
const GENERATED = 57957
const ALWAYS = 57958
const STORED = 57959
const VIRTUAL = 57960
const NVAR = 57961
const PASSWORD_LOCK = 57962

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"DUAL",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	639, 35,
	-2, 56,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	189, 1342,
	190, 1361,
	-2, 249,
	-1, 47,
	229, 819,
	230, 819,
	-2, 808,
	-1, 67,
	5, 61,
	-2, 43,
	-1, 500,
	177, 1731,
	-2, 1009,
	-1, 501,
	177, 1371,
	-2, 1365,
	-1, 502,
	177, 1372,
	-2, 1366,
	-1, 532,
	177, 1839,
	-2, 1260,
	-1, 533,
	177, 1920,
	-2, 1011,
	-1, 534,
	177, 1751,
	-2, 1012,
	-1, 601,
	177, 1702,
	-2, 1230,
	-1, 604,
	177, 1719,
	-2, 1159,
	-1, 605,
	177, 1932,
	-2, 1159,
	-1, 606,
	177, 1931,
	-2, 1159,
	-1, 607,
	177, 1930,
	-2, 1159,
	-1, 608,
	177, 1819,
	-2, 1159,
	-1, 609,
	177, 1820,
	-2, 1159,
	-1, 610,
	177, 1717,
	-2, 1159,
	-1, 611,
	177, 1718,
	-2, 1159,
	-1, 612,
	177, 1720,
	-2, 1159,
	-1, 860,
	100, 2026,
	177, 2026,
	-2, 1326,
	-1, 861,
	100, 2131,
	177, 2131,
	-2, 1327,
	-1, 866,
	100, 2050,
	177, 2050,
	-2, 1328,
	-1, 867,
	100, 2092,
	177, 2092,
	-2, 1329,
	-1, 868,
	100, 2093,
	177, 2093,
	-2, 1330,
	-1, 869,
	100, 1969,
	177, 1969,
	-2, 1334,
	-1, 871,
	100, 2071,
	177, 2071,
	-2, 1336,
	-1, 1127,
	5, 61,
	-2, 44,
	-1, 1390,
	1, 523,
	639, 523,
	-2, 521,
	-1, 1392,
	1, 523,
	639, 523,
	-2, 521,
	-1, 1845,
	177, 1374,
	-2, 1370,
	-1, 1965,
	1, 920,
	5, 920,
	12, 920,
	13, 920,
	14, 920,
	15, 920,
	17, 920,
	19, 920,
	29, 920,
	30, 920,
	56, 920,
	57, 920,
	58, 920,
	59, 920,
	60, 920,
	62, 920,
	63, 920,
	66, 920,
	67, 920,
	69, 920,
	70, 920,
	87, 920,
	412, 920,
	456, 920,
	639, 920,
	-2, 953,
	-1, 1973,
	67, 78,
	69, 78,
	-2, 82,
	-1, 1990,
	177, 1843,
	-2, 1331,
	-1, 2066,
	1, 524,
	639, 524,
	-2, 521,
	-1, 2156,
	44, 701,
	196, 703,
	198, 701,
	199, 701,
	-2, 744,
	-1, 2205,
	5, 62,
	-2, 1041,
	-1, 2778,
	196, 704,
	-2, 702,
	-1, 2851,
	69, 1615,
	70, 1615,
	177, 1615,
	-2, 851,
	-1, 2877,
	1, 995,
	5, 995,
	12, 995,
	13, 995,
	14, 995,
	15, 995,
	17, 995,
	19, 995,
	29, 995,
	30, 995,
	56, 995,
	57, 995,
	58, 995,
	59, 995,
	60, 995,
	62, 995,
	63, 995,
	66, 995,
	67, 995,
	69, 995,
	70, 995,
	87, 995,
	412, 995,
	456, 995,
	639, 995,
	-2, 953,
	-1, 3065,
	5, 62,
	-2, 1292,
	-1, 3168,
	41, 1381,
	-2, 1379,
	-1, 3386,
	5, 62,
	-2, 1295,
	-1, 3409,
	279, 315,
	-2, 1436,
	-1, 3410,
	279, 316,
	-2, 1476,
	-1, 3411,
	279, 317,
	-2, 1652,
	-1, 3583,
	95, 301,
	97, 301,
	99, 301,
	-2, 56,
	-1, 3614,
	97, 308,
	98, 308,
	99, 308,
	-2, 56,
}

const yyPrivate = 57344

const yyLast = 49975

var yyAct = [...]int{
	544, 76, 3413, 3534, 2415, 3564, 3575, 1141, 2558, 3515,
	3475, 3378, 3516, 3308, 3536, 3313, 3, 3414, 977, 433,
	3434, 3316, 7, 3315, 6, 3456, 2721, 504, 3314, 5,
	3317, 8, 2940, 3276, 3388, 474, 3106, 2887, 2673, 3275,
	3236, 508, 502, 2584, 3376, 1224, 2871, 3168, 2013, 2844,
	1225, 2512, 2061, 3170, 486, 2288, 2290, 2845, 493, 2085,
	2284, 2352, 79, 543, 2763, 2998, 2449, 3022, 2976, 2738,
	416, 419, 1817, 2992, 2585, 2674, 470, 76, 3309, 1969,
	1247, 91, 2841, 458, 458, 464, 2004, 521, 130, 2772,
	2663, 130, 484, 2356, 1870, 2431, 1011, 130, 1797, 994,
	2017, 2662, 2862, 1425, 1810, 2031, 2155, 461, 461, 1799,
	1320, 130, 1424, 2853, 104, 2315, 2273, 2528, 2047, 1962,
	1427, 2357, 483, 1035, 1961, 124, 1876, 947, 2000, 2131,
	2566, 865, 1751, 1930, 415, 130, 949, 2479, 2114, 511,
	1798, 1401, 2406, 2043, 1142, 2266, 1722, 940, 2069, 2068,
	2067, 1847, 1298, 1149, 862, 130, 461, 1921, 949, 1145,
	1965, 1302, 1043, 1064, 2065, 1301, 130, 2588, 939, 858,
	1163, 489, 937, 859, 1988, 1975, 67, 435, 1396, 1756,
	473, 990, 436, 513, 1042, 1393, 1805, 100, 960, 96,
	81, 965, 974, 478, 3614, 3609, 3601, 2019, 1248, 2370,
	3583, 3581, 3559, 988, 2373, 3529, 3464, 78, 3238, 3237,
	2688, 1749, 2719, 3147, 2963, 2891, 3611, 976, 3607, 3605,
	2378, 2377, 36, 36, 36, 428, 2977, 3546, 83, 3145,
	89, 451, 499, 445, 456, 439, 2979, 3374, 3508, 3284,
	3160, 3478, 2374, 39, 3148, 2579, 2888, 2099, 36, 2443,
	36, 3362, 2099, 2735, 3373, 446, 3283, 2380, 2550, 2363,
	3449, 944, 3220, 2580, 3205, 2286, 3096, 2364, 3090, 3103,
	3104, 2932, 2645, 2644, 3513, 853, 854, 855, 3485, 3256,
	472, 2778, 1153, 2351, 77, 77, 77, 3196, 962, 74,
	967, 968, 3430, 970, 2243, 1180, 1179, 1189, 1190, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1181, 1878, 2920, 1191,
	77, 2835, 77, 1381, 2385, 2945, 959, 2951, 2953, 2952,
	2949, 2950, 2948, 2947, 2946, 87, 85, 86, 1755, 118,
	114, 115, 3382, 116, 3382, 2626, 2954, 2955, 2627, 2628,
	1931, 998, 999, 2308, 1133, 1002, 2307, 1985, 1986, 2309,
	3377, 2982, 1753, 1754, 1752, 1807, 1808, 1303, 2130, 1304,
	1984, 1015, 1016, 3218, 1773, 1093, 120, 119, 3379, 427,
	3379, 426, 2376, 2382, 2605, 2379, 2279, 2280, 1000, 1001,
	77, 935, 1014, 77, 430, 2015, 2016, 2129, 1061, 468,
	2020, 495, 2980, 2981, 2983, 2984, 2985, 2023, 2025, 2032,
	2024, 1021, 2821, 2020, 3046, 438, 437, 440, 2637, 2037,
	956, 2032, 956, 76, 76, 444, 2819, 425, 2044, 1735,
	410, 1025, 2657, 2422, 121, 130, 122, 480, 1029, 484,
	2475, 1794, 448, 3383, 1030, 3383, 1032, 452, 1382, 1101,
	1382, 1031, 956, 2275, 2278, 2279, 2280, 2276, 469, 2277,
	2282, 455, 2438, 2863, 2864, 1793, 1022, 1023, 1792, 1033,
	1791, 3573, 991, 1790, 2467, 1789, 3502, 1097, 1098, 130,
	1382, 76, 3174, 1077, 2762, 1131, 2999, 3000, 3001, 3002,
	2993, 2745, 1136, 2275, 2278, 2279, 2280, 2276, 2996, 2277,
	2282, 2163, 2157, 2158, 3350, 2156, 2159, 2160, 1068, 2472,
	3250, 1200, 2994, 2995, 1202, 2143, 1065, 1204, 3416, 3415,
	3258, 3142, 3352, 3146, 130, 1108, 3572, 3019, 1109, 2144,
	2664, 2665, 2739, 2740, 2741, 2742, 2743, 2666, 130, 3260,
	3010, 2442, 2166, 1784, 3423, 2440, 1216, 2086, 1166, 1219,
	1220, 1221, 1222, 1223, 3008, 1228, 2165, 2164, 441, 442,
	443, 449, 1763, 453, 454, 457, 3524, 1077, 3164, 2748,
	484, 405, 3568, 3461, 3459, 3460, 1012, 417, 1013, 1015,
	1016, 3531, 3140, 112, 117, 411, 964, 963, 2375, 1408,
	1409, 1407, 1399, 2372, 2529, 3139, 997, 77, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 966, 1245, 1246, 1249, 1249, 1249, 1255, 1249,
	1249, 1255, 1249, 1255, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1201, 2889, 2922, 3138, 1127, 3252, 3137,
	2636, 2736, 3136, 3134, 966, 3135, 1100, 2739, 2740, 2741,
	2742, 2743, 383, 1170, 2978, 2420, 2531, 113, 131, 1115,
	131, 429, 132, 3440, 132, 133, 134, 133, 134, 108,
	106, 135, 3311, 135, 3080, 2891, 1250, 1252, 1254, 1256,
	1258, 1260, 1261, 1263, 1736, 2635, 1026, 3197, 2764, 2611,
	131, 2391, 2718, 2137, 132, 2386, 2032, 133, 134, 386,
	2421, 3282, 2162, 135, 2022, 3380, 2046, 3380, 395, 403,
	404, 3143, 2423, 97, 1076, 1077, 3094, 420, 3257, 3092,
	2281, 1755, 3242, 3095, 3525, 2441, 485, 485, 485, 2668,
	1010, 1069, 3484, 1007, 3161, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1128, 2444, 392, 1753, 1754, 393, 1110, 88,
	401, 402, 485, 1925, 68, 1125, 3574, 418, 418, 2667,
	421, 1135, 3351, 3228, 1087, 3251, 3163, 2747, 3246, 3247,
	106, 3540, 2080, 2081, 3535, 3401, 3402, 2921, 2923, 2924,
	2925, 111, 2457, 2458, 2076, 1006, 1150, 1008, 1009, 2281,
	3538, 3504, 3473, 3234, 1251, 1253, 1172, 1257, 1259, 2371,
	1262, 1757, 413, 2533, 3023, 3024, 2911, 398, 2537, 2912,
	2532, 2913, 2530, 99, 2075, 3579, 2012, 2535, 3596, 1706,
	956, 447, 2677, 110, 109, 2485, 2777, 956, 399, 2281,
	2534, 2010, 956, 2293, 2295, 1121, 2010, 1759, 414, 1084,
	1758, 956, 1226, 3615, 946, 2536, 2538, 3612, 3033, 3602,
	3584, 108, 3107, 961, 979, 3262, 479, 1120, 1116, 1117,
	1118, 1119, 1122, 1123, 1124, 1126, 3109, 3034, 106, 1073,
	2760, 2466, 2462, 2446, 2445, 2138, 1413, 1411, 107, 111,
	2497, 2012, 1027, 2064, 958, 2618, 2617, 2616, 130, 2460,
	865, 957, 1132, 384, 969, 865, 2012, 949, 382, 1244,
	1082, 77, 2012, 3037, 1206, 1207, 2858, 2218, 101, 1205,
	102, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 2360, 1203, 991, 2807, 397, 387, 388,
	1083, 408, 1079, 2012, 2215, 389, 391, 2625, 385, 407,
	406, 1180, 1179, 1189, 1190, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1181, 2096, 2464, 1191, 2463, 2312, 2095, 2197,
	418, 2011, 3128, 2294, 2186, 2153, 1080, 1081, 2485, 2079,
	2077, 418, 956, 1980, 1820, 2486, 2010, 458, 1403, 1208,
	3537, 3539, 400, 1208, 3255, 3108, 1314, 1218, 1315, 3577,
	949, 130, 3578, 1072, 3576, 1217, 458, 1426, 1171, 989,
	461, 461, 2970, 1306, 461, 110, 109, 2968, 1307, 1191,
	1205, 130, 1989, 3122, 130, 1989, 3120, 1989, 3032, 461,
	461, 3277, 130, 3129, 1989, 2957, 2011, 1296, 1387, 1989,
	2710, 1024, 130, 130, 130, 130, 130, 1293, 1294, 2115,
	2304, 2011, 2707, 1377, 1378, 1379, 1380, 2011, 991, 1181,
	2496, 1419, 1191, 461, 2493, 2757, 3038, 130, 98, 1989,
	2706, 1402, 1732, 2971, 1384, 1406, 1989, 2702, 2969, 1713,
	1714, 1715, 1716, 1717, 1206, 1207, 3060, 1319, 2011, 1989,
	2698, 3418, 458, 1707, 2492, 2485, 1989, 2404, 1813, 2489,
	1989, 2402, 2488, 2491, 1989, 2400, 1718, 1719, 1720, 1721,
	1747, 1206, 1207, 2708, 2505, 461, 461, 461, 1989, 2398,
	949, 1989, 2395, 2267, 1730, 1723, 1782, 1316, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1181, 3606, 76, 1191, 3441,
	3442, 3150, 76, 3438, 3439, 3287, 3286, 1389, 2211, 1388,
	461, 1159, 484, 1162, 2106, 461, 461, 3304, 1404, 1726,
	1415, 1727, 1405, 2565, 1423, 2501, 996, 3419, 1162, 3457,
	1422, 3491, 130, 3490, 949, 130, 1429, 3151, 1766, 1709,
	2860, 1017, 1809, 1004, 2859, 1764, 1711, 1712, 1180, 1179,
	1189, 1190, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1181,
	130, 2857, 1191, 76, 1854, 1744, 1312, 1166, 1160, 1161,
	1159, 2552, 1806, 1160, 1161, 1159, 3604, 1788, 484, 1852,
	1853, 1851, 1739, 1740, 1724, 1787, 1742, 1162, 1034, 1228,
	972, 94, 1162, 971, 1881, 1883, 1922, 1827, 1848, 1161,
	1159, 1922, 1745, 2231, 484, 3600, 949, 1139, 949, 1762,
	1761, 949, 1729, 2107, 3526, 1391, 1765, 1162, 949, 2686,
	949, 949, 995, 3479, 1184, 1185, 1186, 1187, 1188, 1181,
	130, 2222, 1191, 3009, 1898, 3003, 93, 1019, 3039, 1907,
	1910, 1840, 1005, 1160, 1161, 1159, 1156, 1923, 1783, 2125,
	3457, 1786, 1839, 2803, 2883, 1966, 3587, 3565, 3586, 1802,
	1811, 2210, 1162, 2209, 1710, 3597, 77, 949, 949, 3348,
	1795, 1811, 3253, 1874, 1849, 1880, 92, 1850, 1127, 2929,
	3486, 1346, 1160, 1161, 1159, 1728, 1146, 1887, 1889, 1147,
	1140, 3397, 1170, 3355, 3347, 1836, 130, 130, 130, 3305,
	3221, 1162, 865, 1180, 1179, 1189, 1190, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1181, 1960, 3349, 1191, 1845, 3254,
	3598, 949, 3158, 1832, 1834, 1835, 2930, 1226, 3157, 3156,
	1995, 1833, 1871, 1959, 1872, 1973, 3155, 3149, 1180, 1179,
	1189, 1190, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1181,
	2927, 2962, 1191, 526, 525, 528, 529, 530, 531, 1936,
	2961, 1938, 527, 1882, 2917, 2907, 1846, 2500, 2900, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1993, 1333, 2053, 2054, 2055, 2056,
	2183, 2184, 2185, 2093, 1970, 1994, 2689, 2928, 1822, 2411,
	2009, 2409, 2033, 2034, 2035, 2036, 2383, 130, 1067, 2040,
	2041, 2042, 1066, 130, 130, 461, 461, 461, 1818, 1819,
	130, 2412, 1823, 3549, 3512, 1824, 2001, 1828, 1829, 1830,
	1982, 1987, 1913, 1978, 1981, 3466, 2310, 1974, 2311, 1160,
	1161, 1159, 1926, 3465, 2087, 1040, 944, 1998, 1996, 3420,
	2089, 2090, 2049, 2050, 2051, 2052, 3417, 2097, 1162, 1886,
	3361, 1845, 1890, 1891, 1892, 1893, 1894, 1347, 1039, 2057,
	2058, 2059, 3249, 3248, 3233, 2045, 2091, 2092, 1160, 1161,
	1159, 1160, 1161, 1159, 3165, 1919, 2021, 3133, 2026, 2027,
	2028, 2029, 2030, 3102, 3101, 3087, 1226, 1162, 36, 37,
	1162, 1903, 1904, 3056, 3006, 1875, 1160, 1161, 1159, 3005,
	3004, 2972, 57, 2959, 3528, 2926, 2918, 2073, 73, 2910,
	2908, 39, 61, 62, 2904, 1162, 1160, 1161, 1159, 58,
	1899, 1900, 1901, 2903, 3458, 3454, 1905, 1906, 1909, 1912,
	2902, 1917, 1918, 2769, 2695, 1162, 2508, 1924, 2507, 1160,
	1161, 1159, 2407, 2126, 2101, 1741, 48, 2554, 3453, 94,
	77, 3259, 3182, 2360, 1073, 3176, 3030, 1929, 1162, 1932,
	1933, 2840, 2797, 2793, 1937, 2779, 1939, 1940, 978, 2749,
	1992, 2452, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 2451, 2213, 2119, 2195, 1140, 2103,
	2293, 2295, 1360, 1363, 1364, 1365, 1366, 1367, 1368, 2102,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1873, 1348,
	1349, 1350, 1351, 1327, 1331, 1361, 1328, 1334, 1330, 1332,
	1329, 1140, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1737, 1734, 2060, 1180, 1179, 1189, 1190, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1181, 1421, 1420, 1191, 1392,
	1390, 1062, 41, 69, 44, 43, 46, 992, 424, 1180,
	1179, 1189, 1190, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1181, 422, 1255, 1191, 1414, 981, 982, 983, 984, 985,
	986, 987, 3116, 1140, 47, 72, 71, 3116, 3488, 130,
	1107, 45, 1189, 1190, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1181, 2935, 3471, 1191, 63, 130, 130, 130, 1140,
	2294, 3175, 2122, 1180, 1179, 1189, 1190, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1181, 3124, 2100, 1191, 2128, 3367,
	1140, 3445, 1140, 130, 3123, 130, 2450, 2150, 2728, 949,
	2935, 3426, 55, 56, 949, 2111, 2838, 2935, 3363, 2700,
	1362, 2699, 2117, 3116, 3292, 2935, 3240, 3116, 3211, 64,
	2696, 65, 2108, 3116, 3115, 3505, 949, 2113, 1976, 949,
	1065, 3069, 1140, 2152, 1140, 2935, 2934, 2104, 2716, 2715,
	1976, 2187, 2712, 2713, 2712, 2711, 66, 2270, 1140, 3477,
	2112, 2195, 1140, 2270, 949, 1180, 1179, 1189, 1190, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1181, 2140, 2139, 1191,
	1896, 2123, 1896, 1140, 49, 70, 2450, 51, 52, 59,
	80, 60, 1318, 1317, 1977, 2842, 1979, 2299, 2856, 1706,
	1175, 2135, 1178, 2837, 2856, 2269, 1977, 2084, 1706, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 2121, 1176, 1177, 1174,
	3063, 1896, 2270, 2142, 2127, 1848, 2145, 1180, 1179, 1189,
	1190, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1181, 1815,
	1840, 1191, 2099, 2856, 2195, 2270, 1970, 1112, 2083, 2873,
	2134, 1994, 1180, 1179, 1189, 1190, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1181, 2828, 936, 1191, 2149, 3302, 526,
	525, 528, 529, 530, 531, 2729, 2714, 2287, 527, 1882,
	2175, 2120, 2296, 2297, 2173, 2174, 1966, 2506, 1111, 1966,
	1814, 1071, 484, 1070, 2478, 1983, 1071, 2195, 1895, 1897,
	2827, 1849, 2237, 2236, 2192, 1073, 1902, 1743, 2098, 1816,
	1129, 130, 1785, 2188, 77, 2292, 1750, 1845, 1706, 130,
	1412, 1410, 130, 1300, 3398, 3364, 2872, 77, 130, 3273,
	2198, 130, 130, 130, 865, 3179, 3077, 2964, 2018, 2863,
	2864, 2182, 2048, 2020, 1934, 1935, 2300, 2685, 2268, 2301,
	2044, 1941, 1942, 1943, 1944, 2350, 1077, 2283, 2078, 2039,
	2038, 1385, 68, 1180, 1179, 1189, 1190, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1181, 2242, 2244, 1191, 1059, 2062,
	2359, 2361, 2250, 2251, 2252, 2253, 2116, 3595, 2230, 3593,
	3553, 3551, 3517, 2866, 2842, 2189, 2190, 2191, 2727, 1180,
	1179, 1189, 1190, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1181, 2413, 1760, 1191, 1417, 949, 1970, 130, 1113, 1074,
	432, 2604, 2601, 2870, 2869, 1970, 2603, 2602, 1970, 2298,
	949, 949, 949, 2868, 1150, 2384, 461, 2387, 2355, 2599,
	2358, 1384, 2302, 2393, 2600, 458, 2456, 1306, 2598, 2597,
	2313, 130, 461, 2405, 2416, 2305, 2349, 2223, 2224, 2225,
	3436, 76, 490, 491, 3372, 2509, 2172, 1154, 1155, 461,
	1826, 3428, 3066, 2180, 2179, 3202, 484, 1429, 3029, 2938,
	2792, 2791, 2694, 2693, 2692, 2362, 463, 949, 2447, 2354,
	3264, 461, 2408, 949, 2679, 3267, 1152, 1402, 3360, 461,
	2410, 3359, 3169, 3167, 3245, 949, 949, 3244, 423, 1738,
	3152, 3153, 1143, 2448, 2204, 2504, 2394, 2503, 2397, 2399,
	2401, 2403, 2454, 1144, 2897, 2419, 2417, 2418, 2723, 130,
	2388, 2389, 2390, 2392, 2638, 2439, 2396, 1313, 1057, 949,
	2232, 2199, 2200, 2201, 2202, 2203, 1041, 1038, 1037, 993,
	3498, 3186, 3185, 2071, 2559, 1818, 1819, 3011, 3061, 2072,
	1416, 2468, 3506, 3353, 3012, 3171, 2510, 2943, 2453, 2474,
	2228, 2461, 1036, 2477, 2465, 2722, 94, 2581, 2583, 2063,
	2459, 1966, 1966, 1966, 1966, 1966, 1154, 1155, 2480, 2490,
	2495, 1796, 484, 1137, 1138, 2482, 949, 3497, 2287, 3496,
	2612, 2551, 3495, 2476, 2178, 2487, 2514, 2498, 2499, 3130,
	1966, 2502, 2177, 484, 2483, 2539, 2148, 1840, 2541, 1020,
	487, 2586, 2582, 130, 130, 130, 130, 130, 2521, 2607,
	1802, 2515, 2519, 3422, 3421, 3371, 130, 2614, 2516, 2540,
	130, 3357, 3296, 1898, 130, 3268, 3201, 2630, 488, 80,
	3370, 3279, 130, 2450, 2425, 2426, 2427, 3554, 2455, 2615,
	3555, 3554, 3571, 3041, 2767, 949, 2473, 2471, 2470, 2219,
	2622, 2216, 2146, 1725, 1157, 2621, 3555, 2623, 2624, 3289,
	2691, 2687, 1812, 936, 482, 82, 2560, 2561, 2562, 2563,
	2564, 3327, 50, 53, 1845, 3329, 19, 3328, 18, 1,
	2670, 2593, 2594, 949, 2596, 2592, 3330, 20, 2595, 2606,
	3331, 21, 3326, 15, 3325, 14, 3319, 10, 3342, 34,
	1970, 1970, 1970, 1970, 1970, 2136, 2681, 2682, 2683, 1768,
	2684, 2991, 2514, 3340, 33, 2990, 2518, 1970, 3339, 32,
	2619, 2997, 2629, 3338, 28, 3337, 27, 2734, 2678, 1970,
	2680, 3336, 26, 3334, 23, 3333, 22, 2737, 2542, 2543,
	2437, 2544, 2545, 3335, 24, 2546, 130, 3324, 13, 458,
	2744, 3321, 12, 3320, 11, 3318, 9, 3007, 1400, 2555,
	2556, 3141, 975, 2082, 1063, 3358, 949, 949, 949, 2057,
	3263, 2059, 3265, 461, 3166, 3014, 2975, 2974, 130, 461,
	2430, 2429, 1058, 2720, 2703, 1748, 2118, 2481, 2484, 2094,
	2161, 2147, 2746, 130, 1114, 461, 2002, 949, 3448, 461,
	3219, 3089, 2890, 461, 461, 2886, 461, 2314, 2919, 1997,
	3387, 938, 2774, 90, 2105, 2750, 1003, 390, 1999, 2368,
	2620, 2782, 2787, 949, 2671, 3266, 1060, 130, 949, 2553,
	2755, 2774, 2775, 2730, 2367, 949, 2381, 2014, 949, 949,
	2751, 2833, 2066, 2070, 2366, 2365, 3261, 2369, 1324, 2697,
	1322, 2151, 2701, 1323, 1321, 2754, 1326, 1325, 2705, 3548,
	3483, 2804, 394, 2167, 2794, 2756, 1308, 2753, 3408, 2761,
	2709, 2847, 76, 2765, 2766, 2770, 2768, 2839, 2796, 2704,
	1158, 537, 105, 54, 3031, 2494, 2776, 484, 466, 467,
	95, 103, 1825, 396, 1199, 2176, 2690, 2306, 863, 864,
	856, 2168, 2875, 1130, 1384, 3285, 2802, 2879, 2880, 2881,
	3429, 2586, 3474, 2843, 949, 3400, 949, 2848, 1148, 3431,
	2814, 2815, 3369, 2816, 3278, 2229, 2818, 2194, 2820, 2196,
	1243, 1920, 510, 2610, 2846, 3059, 3433, 1831, 524, 523,
	522, 2855, 2817, 519, 520, 949, 2784, 2789, 3381, 1821,
	2578, 1173, 2205, 2206, 2207, 2208, 2717, 507, 497, 2212,
	2214, 2878, 1964, 2217, 1957, 2874, 2220, 2221, 2124, 2274,
	2850, 2226, 2227, 2670, 2884, 2826, 2272, 2233, 2234, 2885,
	2235, 2670, 2271, 2238, 2239, 1418, 2240, 2241, 2867, 1297,
	2245, 2246, 2247, 2248, 2249, 2865, 2861, 2285, 1968, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 1963, 76, 1967, 38, 3040, 2876, 2966, 949, 2895,
	1018, 2901, 2511, 2892, 2893, 2894, 412, 484, 2834, 2909,
	3195, 2181, 84, 481, 492, 25, 17, 1028, 16, 1802,
	2806, 2154, 973, 2914, 2915, 2916, 40, 42, 2752, 2424,
	2074, 3407, 3533, 2931, 1044, 3563, 3455, 2965, 31, 30,
	130, 29, 949, 2939, 2933, 3332, 2936, 2937, 509, 2944,
	2830, 2831, 2832, 3341, 1180, 1179, 1189, 1190, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1181, 3323, 3322, 1191, 3519,
	3518, 4, 1134, 461, 75, 35, 934, 2973, 2798, 2,
	461, 0, 0, 0, 2774, 0, 0, 2958, 0, 2960,
	495, 3016, 0, 0, 126, 2986, 3018, 2671, 3027, 0,
	0, 0, 0, 126, 0, 2671, 0, 0, 0, 0,
	2774, 0, 2987, 2988, 2989, 0, 2877, 476, 0, 0,
	949, 3015, 0, 3013, 0, 3042, 3043, 0, 0, 0,
	0, 3021, 2836, 0, 3035, 2678, 0, 0, 874, 0,
	3028, 126, 942, 3017, 0, 0, 0, 0, 2956, 0,
	3020, 0, 0, 0, 3025, 3026, 0, 3036, 0, 3091,
	3093, 126, 0, 0, 0, 130, 0, 0, 2586, 0,
	0, 0, 126, 0, 0, 3079, 2057, 0, 0, 0,
	0, 0, 3084, 3085, 3086, 949, 0, 2514, 3070, 0,
	2942, 3045, 949, 949, 949, 0, 3062, 0, 0, 0,
	1151, 3071, 0, 0, 3082, 0, 0, 0, 0, 3088,
	0, 2670, 0, 0, 3118, 0, 1249, 1249, 1249, 1255,
	1249, 1249, 1255, 1249, 1255, 1264, 1265, 0, 0, 3083,
	0, 0, 2522, 2523, 2524, 2525, 2526, 2527, 0, 0,
	3126, 0, 0, 0, 0, 0, 125, 0, 949, 409,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 3099,
	0, 3097, 0, 3127, 3100, 0, 0, 0, 0, 475,
	3113, 3114, 0, 3125, 0, 0, 0, 949, 0, 3111,
	3112, 3110, 0, 3105, 496, 0, 0, 0, 0, 0,
	873, 0, 0, 125, 0, 0, 3131, 1250, 1252, 1254,
	1256, 1258, 1260, 1261, 1263, 0, 0, 0, 0, 0,
	3187, 0, 1966, 125, 3132, 0, 0, 0, 2608, 2609,
	0, 0, 0, 0, 125, 0, 0, 0, 3047, 3048,
	3049, 3050, 0, 3154, 2847, 3144, 3054, 2847, 3207, 3162,
	3057, 3058, 3173, 3159, 3177, 3178, 0, 949, 0, 0,
	0, 2875, 3172, 484, 130, 2671, 0, 0, 0, 0,
	3180, 3181, 0, 3223, 0, 3225, 3226, 3227, 0, 0,
	0, 3190, 3189, 0, 3184, 0, 0, 3188, 0, 0,
	3210, 0, 949, 3206, 0, 0, 3204, 2292, 0, 3214,
	949, 3203, 3200, 0, 130, 3209, 130, 2846, 76, 0,
	2846, 0, 0, 3119, 2670, 3121, 2670, 3213, 0, 0,
	0, 0, 3230, 484, 3212, 1251, 1253, 0, 1257, 1259,
	2670, 1262, 0, 0, 0, 1226, 0, 0, 3243, 949,
	0, 126, 0, 0, 0, 3072, 3073, 3074, 3075, 0,
	0, 3076, 0, 3241, 3078, 0, 0, 0, 0, 0,
	0, 1970, 3222, 1226, 3224, 0, 0, 0, 0, 0,
	0, 0, 0, 3229, 0, 0, 0, 0, 3231, 0,
	0, 0, 0, 0, 0, 126, 2847, 0, 76, 0,
	0, 0, 0, 0, 461, 1075, 0, 0, 3271, 3294,
	3295, 0, 949, 484, 0, 0, 3270, 0, 0, 0,
	0, 0, 0, 3272, 0, 0, 0, 0, 0, 0,
	0, 0, 3280, 0, 76, 0, 3310, 0, 0, 0,
	476, 0, 3288, 3291, 3301, 3290, 3298, 0, 3300, 2825,
	3303, 3312, 0, 0, 476, 0, 949, 0, 949, 2846,
	949, 3293, 0, 0, 1167, 3269, 0, 130, 2671, 2805,
	2671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2813, 0, 2671, 0, 0, 0, 0, 0,
	0, 0, 0, 2822, 2823, 2824, 0, 0, 3354, 0,
	2829, 3356, 3365, 125, 3306, 0, 949, 3403, 0, 0,
	949, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2586, 3384, 3385, 3391, 3390, 0, 949, 0, 0,
	0, 0, 0, 0, 0, 2849, 3230, 76, 3399, 0,
	495, 3239, 0, 0, 0, 0, 0, 125, 1180, 1179,
	1189, 1190, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1181,
	0, 0, 1191, 535, 0, 0, 0, 3424, 0, 0,
	0, 0, 0, 2882, 0, 0, 0, 0, 949, 3437,
	0, 0, 0, 0, 0, 0, 0, 0, 3450, 0,
	0, 3427, 475, 3425, 3389, 3452, 0, 949, 0, 0,
	0, 3443, 0, 0, 0, 0, 475, 0, 3274, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	0, 3451, 0, 0, 0, 0, 0, 0, 0, 0,
	3472, 949, 458, 3470, 1179, 1189, 1190, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1181, 3412, 0, 1191, 0, 76,
	0, 3494, 0, 872, 0, 76, 461, 941, 0, 0,
	0, 0, 0, 949, 0, 0, 0, 0, 0, 3489,
	3482, 3492, 3501, 3487, 0, 3503, 949, 0, 949, 980,
	0, 3509, 76, 949, 3527, 0, 0, 76, 3507, 0,
	3446, 0, 0, 0, 0, 3543, 949, 2559, 0, 1226,
	3530, 3523, 484, 3522, 0, 3545, 3544, 3511, 3521, 3462,
	3520, 458, 3542, 3556, 130, 76, 3552, 3557, 3550, 76,
	76, 3560, 0, 3558, 76, 0, 0, 0, 0, 0,
	0, 0, 3532, 0, 0, 461, 3547, 3501, 949, 0,
	0, 3566, 0, 130, 0, 3389, 0, 0, 0, 0,
	76, 0, 3580, 76, 0, 3585, 0, 0, 130, 3588,
	0, 3590, 0, 3499, 0, 0, 0, 3501, 0, 0,
	0, 0, 76, 0, 76, 0, 2549, 0, 76, 0,
	3603, 0, 0, 0, 3051, 3052, 3053, 0, 3055, 3501,
	0, 3501, 76, 2548, 0, 76, 0, 3610, 0, 0,
	76, 3064, 3065, 0, 3067, 76, 0, 3068, 0, 3501,
	0, 0, 0, 0, 0, 0, 0, 3501, 0, 0,
	0, 0, 3501, 0, 126, 0, 0, 874, 0, 0,
	3081, 0, 874, 0, 0, 0, 0, 0, 0, 0,
	0, 3404, 3405, 0, 1078, 1085, 1086, 1088, 1089, 1090,
	1091, 1092, 0, 1094, 1095, 1096, 0, 1099, 0, 1102,
	1103, 1104, 1105, 1106, 0, 0, 0, 0, 3432, 3435,
	0, 0, 0, 0, 0, 0, 0, 2808, 2809, 2810,
	2811, 2812, 0, 1180, 1179, 1189, 1190, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1181, 0, 3117, 1191, 0, 0,
	1180, 1179, 1189, 1190, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1181, 0, 0, 1191, 1383, 2631, 2632, 2633, 2634,
	0, 3541, 2639, 2640, 2641, 2642, 2643, 126, 0, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2547, 2658, 2659, 2660, 2661, 0, 2672, 126, 0, 0,
	126, 0, 0, 0, 0, 3493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3569, 0, 126, 126,
	126, 126, 126, 0, 0, 3435, 1299, 0, 0, 873,
	0, 0, 0, 0, 873, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2517, 0, 3594, 0, 0, 0,
	0, 3191, 3192, 3193, 3194, 0, 0, 0, 0, 0,
	0, 3198, 3199, 0, 0, 0, 0, 0, 0, 2724,
	2725, 2726, 1180, 1179, 1189, 1190, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1181, 0, 0, 1191, 0, 3215, 3216,
	3217, 536, 0, 0, 0, 0, 0, 1180, 1179, 1189,
	1190, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1181, 0,
	0, 1191, 0, 3589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 1395, 1398, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 476, 125,
	1800, 126, 125, 0, 0, 1395, 1398, 0, 0, 0,
	1428, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 125, 125, 125, 125, 0, 126, 0, 0, 0,
	0, 0, 0, 1167, 127, 943, 0, 0, 0, 0,
	1842, 0, 0, 0, 0, 1733, 0, 0, 0, 3281,
	0, 0, 2193, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3297, 0, 3299, 0,
	1180, 1179, 1189, 1190, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1181, 0, 3307, 1191, 0, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 874, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3366,
	0, 0, 0, 2896, 0, 2898, 2899, 0, 0, 3375,
	0, 0, 2905, 2906, 0, 3386, 0, 0, 0, 0,
	475, 0, 3392, 125, 3393, 3394, 3395, 3396, 0, 0,
	0, 0, 126, 126, 126, 0, 0, 0, 0, 874,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 1842, 0, 0, 0, 942, 0, 0,
	0, 0, 1428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2967, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3444, 0, 0, 3447, 0, 0, 0, 475, 0,
	1879, 1879, 1879, 0, 0, 0, 1879, 1879, 1879, 1879,
	0, 1879, 1879, 0, 0, 0, 873, 1879, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 126,
	126, 0, 0, 0, 0, 0, 126, 1879, 1879, 1879,
	1879, 0, 0, 1879, 1879, 1879, 1879, 1879, 3481, 0,
	0, 0, 1879, 1879, 1879, 1879, 1879, 1879, 1879, 1879,
	1879, 1879, 1879, 1879, 125, 125, 125, 0, 0, 0,
	0, 873, 872, 0, 127, 0, 2348, 872, 1309, 0,
	0, 0, 0, 0, 0, 1428, 0, 0, 0, 0,
	0, 3514, 0, 0, 0, 0, 0, 0, 0, 2322,
	0, 0, 0, 0, 0, 0, 0, 2329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 2348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1767, 0, 0, 1770, 1771, 1772, 0, 1774,
	1775, 0, 2322, 1776, 36, 3098, 0, 0, 0, 1777,
	2329, 0, 2326, 1778, 1779, 0, 1780, 1781, 57, 0,
	0, 0, 0, 0, 73, 0, 0, 39, 0, 0,
	0, 1386, 0, 3591, 3592, 125, 0, 1394, 1397, 0,
	0, 125, 125, 2316, 0, 0, 0, 1169, 125, 0,
	0, 0, 0, 0, 0, 2326, 0, 0, 1394, 1397,
	0, 0, 0, 2325, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2317, 0, 0, 0,
	0, 0, 3343, 0, 0, 3562, 3565, 3561, 0, 0,
	0, 0, 0, 0, 0, 0, 2325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1769, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2330, 2328, 0, 0, 0, 0,
	0, 0, 0, 0, 2336, 0, 0, 0, 41, 69,
	44, 43, 46, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 3344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 1804, 0, 0, 2328, 0,
	47, 72, 71, 0, 0, 0, 3232, 45, 0, 0,
	0, 0, 0, 0, 2340, 0, 0, 0, 0, 126,
	0, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 2347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2333, 0, 0, 0, 2340, 55, 56,
	0, 3345, 0, 0, 2342, 0, 0, 1804, 0, 1804,
	0, 0, 1884, 0, 0, 64, 0, 65, 0, 1885,
	0, 1804, 1804, 0, 2347, 0, 0, 0, 0, 1842,
	0, 0, 0, 0, 0, 2323, 2333, 0, 0, 0,
	0, 0, 66, 0, 0, 0, 0, 2342, 0, 872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2319, 0, 0, 0, 125, 1927, 1928,
	3346, 70, 0, 51, 52, 59, 0, 60, 2323, 0,
	2321, 0, 0, 0, 2109, 2110, 125, 0, 0, 0,
	0, 0, 2332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 872, 0, 2319, 0, 0, 0,
	0, 125, 0, 475, 0, 0, 0, 0, 1804, 0,
	0, 0, 941, 2321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2332, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2320, 2324, 2327, 0, 2331, 2334, 2335, 2337, 2338, 2339,
	2341, 2343, 2344, 2345, 2346, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 476, 0,
	0, 1428, 0, 0, 126, 0, 0, 126, 0, 0,
	0, 874, 0, 2320, 2324, 2327, 0, 2331, 2334, 2335,
	2337, 2338, 2339, 2341, 2343, 2344, 2345, 2346, 0, 0,
	0, 0, 2353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 1879, 68, 0,
	0, 1879, 1879, 1879, 1879, 1879, 0, 0, 0, 0,
	127, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	1879, 127, 127, 127, 127, 127, 0, 0, 0, 0,
	0, 2318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	475, 0, 0, 0, 2318, 0, 125, 0, 0, 125,
	2303, 1428, 0, 873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1800, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1346, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1842, 0, 0, 0,
	0, 0, 0, 1801, 127, 0, 0, 0, 0, 2141,
	0, 0, 0, 3463, 0, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 1169, 0, 0, 0,
	0, 0, 0, 1841, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2587, 126,
	126, 126, 126, 126, 0, 0, 0, 1333, 0, 0,
	0, 0, 476, 0, 0, 0, 126, 0, 0, 0,
	476, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 1428, 2676,
	2133, 0, 0, 0, 0, 2133, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 127, 127, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2133, 0, 0,
	2133, 0, 0, 0, 36, 0, 1841, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 73, 2171, 0, 39, 0, 0,
	0, 0, 126, 0, 1804, 0, 0, 0, 0, 0,
	873, 125, 125, 125, 125, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 475, 0, 0, 0, 125, 0,
	0, 0, 475, 0, 126, 0, 77, 1879, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3343, 0, 0, 0, 127, 3613, 0, 0,
	0, 0, 127, 127, 0, 2353, 0, 2781, 2786, 127,
	0, 0, 0, 126, 1360, 1363, 1364, 1365, 1366, 1367,
	1368, 0, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	0, 1348, 1349, 1350, 1351, 1327, 1331, 1361, 1328, 1334,
	1330, 1332, 1329, 0, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 41, 69,
	44, 43, 46, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 3344, 0, 0, 872, 0, 2587, 0,
	1800, 36, 0, 0, 0, 0, 0, 0, 0, 0,
	47, 72, 71, 0, 0, 57, 125, 45, 0, 0,
	0, 73, 0, 0, 39, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 77, 0, 125, 0, 0, 55, 56,
	0, 3345, 0, 0, 0, 0, 2414, 0, 0, 0,
	0, 0, 1362, 496, 0, 64, 0, 65, 0, 3343,
	0, 2428, 2432, 2436, 3608, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 66, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3346, 70, 0, 51, 52, 59, 126, 60, 2133, 0,
	873, 0, 0, 0, 2469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 1804, 0, 0,
	0, 36, 0, 0, 0, 41, 69, 44, 43, 46,
	0, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	3344, 73, 0, 0, 39, 0, 0, 0, 127, 0,
	1804, 0, 0, 0, 0, 0, 0, 47, 72, 71,
	0, 1804, 0, 0, 45, 0, 0, 127, 36, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 77, 0, 0, 0, 0, 73, 0,
	0, 39, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2557, 0, 3343,
	0, 0, 0, 0, 3599, 55, 56, 36, 3345, 0,
	0, 476, 0, 0, 0, 2587, 0, 0, 0, 0,
	77, 57, 64, 872, 65, 0, 0, 73, 0, 0,
	39, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 3343, 0, 0, 66,
	0, 3582, 1841, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 77,
	3567, 0, 0, 0, 0, 0, 0, 3346, 70, 0,
	51, 52, 59, 0, 60, 41, 69, 44, 43, 46,
	0, 0, 0, 0, 2676, 3343, 0, 0, 0, 0,
	3344, 0, 0, 0, 2675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 47, 72, 71,
	0, 0, 0, 2676, 45, 0, 0, 0, 0, 0,
	0, 0, 41, 69, 44, 43, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 475, 47, 72, 71, 873, 0, 0,
	0, 45, 0, 0, 0, 55, 56, 0, 3345, 0,
	0, 41, 69, 44, 43, 46, 0, 2731, 2732, 2733,
	127, 0, 64, 0, 65, 0, 3344, 0, 127, 0,
	126, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	127, 0, 0, 47, 72, 71, 0, 0, 2759, 66,
	45, 0, 55, 56, 0, 3345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 64,
	476, 65, 476, 0, 2790, 0, 0, 3346, 70, 2795,
	51, 52, 59, 0, 60, 68, 2799, 0, 0, 2800,
	2801, 0, 0, 0, 0, 0, 66, 0, 0, 0,
	0, 55, 56, 0, 3345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 64, 0,
	65, 0, 0, 0, 3346, 70, 127, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 0, 0, 872, 0, 1804, 0, 2854, 2676, 0,
	0, 0, 0, 3346, 70, 0, 51, 52, 59, 0,
	60, 0, 125, 496, 0, 0, 0, 0, 36, 0,
	0, 0, 0, 0, 0, 0, 2854, 0, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 73, 0,
	0, 39, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 475, 126, 475, 0, 0, 0, 36, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 73, 0,
	77, 39, 0, 0, 0, 68, 0, 0, 0, 1841,
	0, 0, 2676, 0, 0, 0, 0, 0, 0, 2941,
	0, 0, 0, 0, 0, 0, 3343, 0, 2587, 0,
	0, 3500, 0, 0, 0, 0, 0, 0, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2432, 0, 0, 3343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 127, 127, 127, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 68, 0, 2676, 0, 0, 0, 0, 0, 0,
	0, 127, 41, 69, 44, 43, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 3344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 47, 72, 71, 0, 0, 0,
	0, 45, 41, 69, 44, 43, 46, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	873, 0, 0, 0, 47, 72, 71, 0, 0, 0,
	872, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 3345, 2941, 0, 0, 0,
	0, 0, 0, 2941, 2941, 2941, 0, 0, 0, 64,
	476, 65, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 56, 0, 3345, 66, 0, 0, 476,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 64,
	0, 65, 1708, 0, 476, 0, 0, 0, 0, 2675,
	0, 0, 127, 0, 3346, 70, 0, 51, 52, 59,
	0, 60, 0, 0, 0, 0, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2675, 0,
	2783, 2788, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 3346, 70, 0, 51, 52, 59,
	0, 60, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 0, 0, 0, 0, 3183, 0,
	0, 0, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 475, 0, 3208, 0, 0, 0, 0, 0, 0,
	0, 2941, 0, 0, 0, 0, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3235, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2941, 0, 2941,
	0, 2941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2675, 0, 0,
	0, 3368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2941, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3480, 0, 1804,
	0, 0, 0, 0, 2941, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 832, 0, 349, 594, 836, 679, 702, 845,
	708, 710, 773, 655, 750, 286, 699, 656, 0, 0,
	647, 503, 648, 680, 206, 500, 806, 751, 834, 736,
	766, 776, 205, 194, 743, 742, 823, 691, 690, 771,
	819, 833, 0, 0, 602, 250, 0, 0, 373, 337,
	270, 0, 0, 734, 0, 587, 588, 719, 775, 667,
	762, 838, 700, 767, 839, 77, 0, 0, 0, 501,
	526, 525, 528, 529, 530, 531, 0, 0, 137, 527,
	532, 533, 534, 0, 729, 772, 850, 646, 498, 517,
	651, 601, 0, 824, 687, 688, 209, 0, 0, 0,
	0, 0, 0, 0, 732, 749, 791, 716, 368, 778,
	787, 801, 709, 303, 223, 0, 0, 0, 0, 514,
	515, 494, 0, 0, 0, 617, 0, 516, 0, 661,
	512, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 518, 0, 0, 127, 666, 644, 685,
	793, 645, 643, 271, 658, 590, 822, 717, 239, 154,
	828, 715, 615, 781, 662, 810, 703, 247, 660, 155,
	657, 663, 701, 282, 790, 796, 599, 158, 249, 807,
	681, 694, 195, 0, 313, 768, 367, 506, 754, 312,
	251, 360, 782, 830, 366, 704, 344, 374, 378, 216,
	737, 186, 334, 207, 203, 686, 800, 650, 224, 302,
	198, 243, 720, 774, 682, 191, 785, 761, 812, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 808, 795, 814,
	677, 664, 669, 665, 693, 831, 233, 225, 815, 813,
	371, 144, 322, 321, 707, 232, 798, 145, 136, 309,
	146, 240, 163, 818, 380, 176, 245, 351, 505, 219,
	281, 197, 770, 290, 692, 157, 305, 263, 265, 262,
	266, 222, 140, 147, 794, 307, 324, 355, 178, 340,
	138, 139, 141, 149, 315, 150, 151, 837, 257, 211,
	215, 226, 237, 769, 311, 341, 372, 763, 173, 166,
	343, 365, 183, 323, 326, 379, 792, 168, 826, 809,
	756, 722, 728, 652, 0, 167, 788, 684, 696, 676,
	764, 675, 221, 780, 363, 364, 196, 381, 593, 841,
	169, 659, 840, 278, 285, 277, 843, 359, 827, 757,
	746, 744, 653, 825, 755, 745, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 255, 748, 0, 164,
	0, 338, 835, 852, 342, 180, 670, 802, 354, 143,
	306, 181, 220, 212, 299, 276, 174, 231, 336, 244,
	252, 784, 849, 289, 314, 185, 369, 335, 208, 604,
	616, 610, 612, 611, 608, 609, 607, 606, 605, 618,
	591, 592, 595, 596, 597, 739, 829, 654, 600, 805,
	613, 614, 777, 847, 589, 192, 538, 630, 631, 632,
	539, 633, 634, 540, 541, 635, 636, 637, 638, 542,
	639, 640, 641, 619, 620, 621, 622, 623, 624, 625,
	626, 629, 627, 628, 735, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 598, 159, 170, 248, 848, 308, 218,
	642, 649, 668, 671, 672, 673, 674, 678, 683, 0,
	689, 695, 697, 698, 706, 711, 712, 713, 714, 721,
	723, 724, 725, 726, 727, 730, 731, 733, 740, 741,
	747, 752, 753, 759, 760, 0, 783, 786, 603, 797,
	799, 803, 804, 811, 816, 817, 842, 846, 851, 370,
	201, 738, 758, 789, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	297, 298, 304, 148, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 821,
	718, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	705, 161, 820, 844, 765, 779, 832, 0, 349, 594,
	836, 679, 702, 845, 708, 710, 773, 655, 750, 286,
	699, 656, 0, 0, 647, 503, 648, 680, 206, 500,
	806, 751, 834, 736, 766, 776, 205, 194, 743, 742,
	823, 691, 690, 771, 819, 833, 0, 0, 602, 250,
	0, 0, 373, 337, 270, 0, 0, 734, 0, 587,
	588, 719, 775, 667, 762, 838, 700, 767, 839, 77,
	0, 1140, 0, 501, 526, 525, 528, 529, 530, 531,
	0, 0, 137, 527, 532, 533, 534, 0, 729, 772,
	850, 646, 498, 517, 651, 601, 0, 824, 687, 688,
	209, 0, 0, 0, 0, 0, 0, 0, 732, 749,
	791, 716, 368, 778, 787, 801, 709, 303, 223, 0,
	0, 0, 0, 514, 515, 0, 0, 0, 0, 617,
	0, 516, 0, 661, 512, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 518, 0, 0,
	0, 666, 644, 685, 793, 645, 643, 271, 658, 590,
	822, 717, 239, 154, 828, 715, 615, 781, 662, 810,
	703, 247, 660, 155, 657, 663, 701, 282, 790, 796,
	599, 158, 249, 807, 681, 694, 195, 0, 313, 768,
	367, 506, 754, 312, 251, 360, 782, 830, 366, 704,
	344, 374, 378, 216, 737, 186, 334, 207, 203, 686,
	800, 650, 224, 302, 198, 243, 720, 774, 682, 191,
	785, 761, 812, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 808, 795, 814, 677, 664, 669, 665, 693, 831,
	233, 225, 815, 813, 371, 144, 322, 321, 707, 232,
	798, 145, 136, 309, 146, 240, 163, 818, 380, 176,
	245, 351, 505, 219, 281, 197, 770, 290, 692, 157,
	305, 263, 265, 262, 266, 222, 140, 147, 794, 307,
	324, 355, 178, 340, 138, 139, 141, 149, 315, 150,
	151, 837, 257, 211, 215, 226, 237, 769, 311, 341,
	372, 763, 173, 166, 343, 365, 183, 323, 326, 379,
	792, 168, 826, 809, 756, 722, 728, 652, 0, 167,
	788, 684, 696, 676, 764, 675, 221, 780, 363, 364,
	196, 381, 593, 841, 169, 659, 840, 278, 285, 277,
	843, 359, 827, 757, 746, 744, 653, 825, 755, 745,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 748, 0, 164, 0, 338, 835, 852, 342, 180,
	670, 802, 354, 143, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 784, 849, 289, 314, 185,
	369, 335, 208, 604, 616, 610, 612, 611, 608, 609,
	607, 606, 605, 618, 591, 592, 595, 596, 597, 739,
	829, 654, 600, 805, 613, 614, 777, 847, 589, 192,
	538, 630, 631, 632, 539, 633, 634, 540, 541, 635,
	636, 637, 638, 542, 639, 640, 641, 619, 620, 621,
	622, 623, 624, 625, 626, 629, 627, 628, 735, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 598, 159, 170,
	248, 848, 308, 218, 642, 649, 668, 671, 672, 673,
	674, 678, 683, 0, 689, 695, 697, 698, 706, 711,
	712, 713, 714, 721, 723, 724, 725, 726, 727, 730,
	731, 733, 740, 741, 747, 752, 753, 759, 760, 0,
	783, 786, 603, 797, 799, 803, 804, 811, 816, 817,
	842, 846, 851, 370, 201, 738, 758, 789, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 148, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 821, 718, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 705, 161, 820, 844, 765, 779,
	832, 0, 349, 594, 836, 679, 702, 845, 708, 710,
	773, 655, 750, 286, 699, 656, 0, 0, 647, 503,
	648, 680, 206, 500, 806, 751, 834, 736, 766, 776,
	205, 194, 743, 742, 823, 691, 690, 771, 819, 833,
	0, 0, 602, 250, 0, 0, 373, 337, 270, 0,
	0, 734, 0, 587, 588, 719, 775, 667, 762, 838,
	700, 767, 839, 77, 0, 0, 0, 501, 526, 525,
	528, 529, 530, 531, 0, 0, 137, 527, 532, 533,
	534, 0, 729, 772, 850, 646, 498, 517, 651, 601,
	0, 824, 687, 688, 209, 0, 0, 0, 0, 0,
	0, 0, 732, 749, 791, 716, 368, 778, 787, 801,
	709, 303, 223, 0, 0, 0, 0, 514, 515, 1877,
	0, 0, 0, 617, 0, 516, 0, 661, 512, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 518, 0, 0, 0, 666, 644, 685, 793, 645,
	643, 271, 658, 590, 822, 717, 239, 154, 828, 715,
	615, 781, 662, 810, 703, 247, 660, 155, 657, 663,
	701, 282, 790, 796, 599, 158, 249, 807, 681, 694,
	195, 0, 313, 768, 367, 506, 754, 312, 251, 360,
	782, 830, 366, 704, 344, 374, 378, 216, 737, 186,
	334, 207, 203, 686, 800, 650, 224, 302, 198, 243,
	720, 774, 682, 191, 785, 761, 812, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 808, 795, 814, 677, 664,
	669, 665, 693, 831, 233, 225, 815, 813, 371, 144,
	322, 321, 707, 232, 798, 145, 136, 309, 146, 240,
	163, 818, 380, 176, 245, 351, 505, 219, 281, 197,
	770, 290, 692, 157, 305, 263, 265, 262, 266, 222,
	140, 147, 794, 307, 324, 355, 178, 340, 138, 139,
	141, 149, 315, 150, 151, 837, 257, 211, 215, 226,
	237, 769, 311, 341, 372, 763, 173, 166, 343, 365,
	183, 323, 326, 379, 792, 168, 826, 809, 756, 722,
	728, 652, 0, 167, 788, 684, 696, 676, 764, 675,
	221, 780, 363, 364, 196, 381, 593, 841, 169, 659,
	840, 278, 285, 277, 843, 359, 827, 757, 746, 744,
	653, 825, 755, 745, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 748, 0, 164, 0, 338,
	835, 852, 342, 180, 670, 802, 354, 143, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 784,
	849, 289, 314, 185, 369, 335, 208, 604, 616, 610,
	612, 611, 608, 609, 607, 606, 605, 618, 591, 592,
	595, 596, 597, 739, 829, 654, 600, 805, 613, 614,
	777, 847, 589, 192, 538, 630, 631, 632, 539, 633,
	634, 540, 541, 635, 636, 637, 638, 542, 639, 640,
	641, 619, 620, 621, 622, 623, 624, 625, 626, 629,
	627, 628, 735, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 598, 159, 170, 248, 848, 308, 218, 642, 649,
	668, 671, 672, 673, 674, 678, 683, 0, 689, 695,
	697, 698, 706, 711, 712, 713, 714, 721, 723, 724,
	725, 726, 727, 730, 731, 733, 740, 741, 747, 752,
	753, 759, 760, 0, 783, 786, 603, 797, 799, 803,
	804, 811, 816, 817, 842, 846, 851, 370, 201, 738,
	758, 789, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 148, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 821, 718, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 705, 161,
	820, 844, 765, 779, 832, 0, 349, 594, 836, 679,
	702, 845, 708, 710, 773, 655, 750, 286, 699, 656,
	0, 0, 647, 503, 648, 680, 206, 500, 806, 751,
	834, 736, 766, 776, 205, 194, 743, 742, 823, 691,
	690, 771, 819, 833, 0, 0, 602, 250, 0, 0,
	373, 337, 270, 0, 0, 734, 0, 587, 588, 719,
	775, 667, 762, 838, 700, 1990, 839, 77, 0, 0,
	0, 501, 526, 525, 528, 529, 530, 531, 0, 0,
	137, 527, 532, 533, 534, 1991, 729, 772, 850, 646,
	498, 517, 651, 601, 0, 824, 687, 688, 209, 0,
	0, 0, 0, 0, 0, 0, 732, 749, 791, 716,
	368, 778, 787, 801, 709, 303, 223, 0, 0, 0,
	0, 514, 515, 0, 0, 0, 0, 617, 0, 516,
	0, 661, 512, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 518, 0, 0, 0, 666,
	644, 685, 793, 645, 643, 271, 658, 590, 822, 717,
	239, 154, 828, 715, 615, 781, 662, 810, 703, 247,
	660, 155, 657, 663, 701, 282, 790, 796, 599, 158,
	249, 807, 681, 694, 195, 0, 313, 768, 367, 506,
	754, 312, 251, 360, 782, 830, 366, 704, 344, 374,
	378, 216, 737, 186, 334, 207, 203, 686, 800, 650,
	224, 302, 198, 243, 720, 774, 682, 191, 785, 761,
	812, 333, 357, 160, 267, 358, 377, 177, 350, 268,
	275, 188, 190, 189, 172, 327, 356, 182, 193, 808,
	795, 814, 677, 664, 669, 665, 693, 831, 233, 225,
	815, 813, 371, 144, 322, 321, 707, 232, 798, 145,
	136, 309, 146, 240, 163, 818, 380, 176, 245, 351,
	505, 219, 281, 197, 770, 290, 692, 157, 305, 263,
	265, 262, 266, 222, 140, 147, 794, 307, 324, 355,
	178, 340, 138, 139, 141, 149, 315, 150, 151, 837,
	257, 211, 215, 226, 237, 769, 311, 341, 372, 763,
	173, 166, 343, 365, 183, 323, 326, 379, 792, 168,
	826, 809, 756, 722, 728, 652, 0, 167, 788, 684,
	696, 676, 764, 675, 221, 780, 363, 364, 196, 381,
	593, 841, 169, 659, 840, 278, 285, 277, 843, 359,
	827, 757, 746, 744, 653, 825, 755, 745, 246, 214,
	228, 300, 253, 301, 229, 273, 272, 274, 255, 748,
	0, 164, 0, 338, 835, 852, 342, 180, 670, 802,
	354, 143, 306, 181, 220, 212, 299, 276, 174, 231,
	336, 244, 252, 784, 849, 289, 314, 185, 369, 335,
	208, 604, 616, 610, 612, 611, 608, 609, 607, 606,
	605, 618, 591, 592, 595, 596, 597, 739, 829, 654,
	600, 805, 613, 614, 777, 847, 589, 192, 538, 630,
	631, 632, 539, 633, 634, 540, 541, 635, 636, 637,
	638, 542, 639, 640, 641, 619, 620, 621, 622, 623,
	624, 625, 626, 629, 627, 628, 735, 296, 165, 175,
	184, 202, 200, 213, 241, 264, 269, 294, 325, 330,
	345, 346, 347, 348, 204, 0, 0, 0, 0, 0,
	254, 234, 295, 352, 353, 598, 159, 170, 248, 848,
	308, 218, 642, 649, 668, 671, 672, 673, 674, 678,
	683, 0, 689, 695, 697, 698, 706, 711, 712, 713,
	714, 721, 723, 724, 725, 726, 727, 730, 731, 733,
	740, 741, 747, 752, 753, 759, 760, 0, 783, 786,
	603, 797, 799, 803, 804, 811, 816, 817, 842, 846,
	851, 370, 201, 738, 758, 789, 171, 179, 187, 199,
	210, 217, 227, 230, 235, 236, 238, 242, 256, 258,
	259, 260, 261, 279, 280, 283, 284, 287, 288, 291,
	292, 293, 297, 298, 304, 148, 310, 316, 317, 318,
	319, 320, 328, 329, 331, 332, 339, 361, 362, 375,
	376, 821, 718, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 705, 161, 820, 844, 765, 779, 832, 0,
	349, 594, 836, 679, 702, 845, 708, 710, 773, 655,
	750, 286, 699, 656, 0, 0, 647, 892, 648, 680,
	206, 890, 806, 751, 834, 736, 766, 776, 205, 194,
	743, 742, 823, 691, 690, 771, 819, 833, 0, 0,
	602, 250, 0, 0, 373, 337, 270, 0, 0, 734,
	0, 587, 588, 719, 775, 667, 762, 838, 700, 767,
	839, 77, 0, 1140, 0, 501, 526, 525, 528, 529,
	530, 531, 0, 0, 137, 527, 532, 533, 534, 0,
	729, 772, 850, 646, 909, 517, 651, 601, 0, 824,
	687, 688, 209, 0, 0, 0, 0, 0, 0, 0,
	732, 749, 791, 716, 368, 778, 787, 801, 709, 303,
	223, 0, 0, 0, 0, 514, 515, 0, 0, 0,
	0, 617, 0, 516, 0, 661, 512, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 518,
	0, 0, 0, 666, 644, 685, 793, 645, 643, 271,
	658, 590, 822, 717, 239, 154, 828, 715, 615, 781,
	662, 810, 703, 247, 660, 155, 657, 663, 701, 282,
	790, 796, 599, 158, 249, 807, 681, 694, 195, 0,
	313, 768, 367, 506, 754, 312, 251, 360, 782, 830,
	366, 704, 344, 374, 378, 216, 737, 186, 334, 207,
	203, 686, 800, 650, 224, 302, 198, 243, 720, 774,
	682, 191, 785, 761, 812, 333, 357, 160, 267, 358,
	377, 177, 350, 268, 275, 188, 190, 189, 172, 327,
	356, 182, 193, 808, 795, 814, 677, 664, 669, 665,
	693, 831, 233, 225, 815, 813, 371, 144, 322, 321,
	707, 232, 798, 145, 136, 309, 146, 240, 163, 818,
	380, 176, 245, 351, 505, 219, 281, 197, 770, 290,
	692, 157, 305, 263, 265, 262, 266, 222, 140, 147,
	794, 307, 324, 355, 178, 340, 138, 139, 141, 149,
	315, 150, 151, 837, 257, 211, 215, 226, 237, 769,
	311, 341, 372, 763, 173, 166, 343, 365, 183, 323,
	326, 379, 792, 168, 826, 809, 756, 722, 728, 652,
	0, 167, 788, 684, 696, 676, 764, 675, 221, 780,
	363, 364, 196, 381, 593, 841, 169, 659, 840, 278,
	285, 277, 843, 359, 827, 757, 746, 744, 653, 825,
	755, 745, 246, 214, 228, 300, 253, 301, 229, 273,
	272, 274, 255, 748, 0, 164, 0, 338, 835, 852,
	342, 180, 670, 802, 354, 143, 306, 181, 220, 212,
	299, 276, 174, 231, 336, 244, 252, 784, 849, 289,
	314, 185, 369, 335, 208, 604, 616, 610, 612, 611,
	608, 609, 607, 606, 605, 618, 591, 592, 595, 596,
	597, 739, 829, 654, 600, 805, 613, 614, 777, 847,
	589, 192, 538, 630, 631, 632, 539, 633, 634, 540,
	541, 635, 636, 637, 638, 542, 639, 640, 641, 619,
	620, 621, 622, 623, 624, 625, 626, 629, 627, 628,
	735, 296, 165, 175, 184, 202, 200, 213, 241, 264,
	269, 294, 325, 330, 345, 346, 347, 348, 204, 0,
	0, 0, 0, 0, 254, 234, 295, 352, 353, 598,
	159, 170, 248, 848, 308, 218, 642, 649, 668, 671,
	672, 673, 674, 678, 683, 0, 689, 695, 697, 698,
	706, 711, 712, 713, 714, 721, 723, 724, 725, 726,
	727, 730, 731, 733, 740, 741, 747, 752, 753, 759,
	760, 0, 783, 786, 603, 797, 799, 803, 804, 811,
	816, 817, 842, 846, 851, 370, 201, 738, 758, 789,
	171, 179, 187, 199, 210, 217, 227, 230, 235, 236,
	238, 242, 256, 258, 259, 260, 261, 279, 280, 283,
	284, 287, 288, 291, 292, 293, 297, 298, 304, 148,
	310, 316, 317, 318, 319, 320, 328, 329, 331, 332,
	339, 361, 362, 375, 376, 821, 718, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 705, 161, 820, 844,
	765, 779, 832, 0, 349, 594, 836, 679, 702, 845,
	708, 710, 773, 655, 750, 286, 699, 656, 0, 0,
	647, 503, 648, 680, 206, 500, 806, 751, 834, 736,
	766, 776, 205, 194, 743, 742, 823, 691, 690, 771,
	819, 833, 0, 0, 602, 250, 0, 0, 373, 337,
	270, 0, 0, 734, 0, 587, 588, 719, 775, 667,
	762, 838, 700, 767, 839, 77, 0, 0, 0, 501,
	526, 1911, 528, 529, 530, 531, 0, 0, 137, 527,
	532, 533, 534, 0, 729, 772, 850, 646, 498, 517,
	651, 601, 0, 824, 687, 688, 209, 0, 0, 0,
	0, 0, 0, 0, 732, 749, 791, 716, 368, 778,
	787, 801, 709, 303, 223, 0, 0, 0, 0, 514,
	515, 1877, 0, 0, 0, 617, 0, 516, 0, 661,
	512, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 518, 0, 0, 0, 666, 644, 685,
	793, 645, 643, 271, 658, 590, 822, 717, 239, 154,
	828, 715, 615, 781, 662, 810, 703, 247, 660, 155,
	657, 663, 701, 282, 790, 796, 599, 158, 249, 807,
	681, 694, 195, 0, 313, 768, 367, 506, 754, 312,
	251, 360, 782, 830, 366, 704, 344, 374, 378, 216,
	737, 186, 334, 207, 203, 686, 800, 650, 224, 302,
	198, 243, 720, 774, 682, 191, 785, 761, 812, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 808, 795, 814,
	677, 664, 669, 665, 693, 831, 233, 225, 815, 813,
	371, 144, 322, 321, 707, 232, 798, 145, 136, 309,
	146, 240, 163, 818, 380, 176, 245, 351, 505, 219,
	281, 197, 770, 290, 692, 157, 305, 263, 265, 262,
	266, 222, 140, 147, 794, 307, 324, 355, 178, 340,
	138, 139, 141, 149, 315, 150, 151, 837, 257, 211,
	215, 226, 237, 769, 311, 341, 372, 763, 173, 166,
	343, 365, 183, 323, 326, 379, 792, 168, 826, 809,
	756, 722, 728, 652, 0, 167, 788, 684, 696, 676,
	764, 675, 221, 780, 363, 364, 196, 381, 593, 841,
	169, 659, 840, 278, 285, 277, 843, 359, 827, 757,
	746, 744, 653, 825, 755, 745, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 255, 748, 0, 164,
	0, 338, 835, 852, 342, 180, 670, 802, 354, 143,
	306, 181, 220, 212, 299, 276, 174, 231, 336, 244,
	252, 784, 849, 289, 314, 185, 369, 335, 208, 604,
	616, 610, 612, 611, 608, 609, 607, 606, 605, 618,
	591, 592, 595, 596, 597, 739, 829, 654, 600, 805,
	613, 614, 777, 847, 589, 192, 538, 630, 631, 632,
	539, 633, 634, 540, 541, 635, 636, 637, 638, 542,
	639, 640, 641, 619, 620, 621, 622, 623, 624, 625,
	626, 629, 627, 628, 735, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 598, 159, 170, 248, 848, 308, 218,
	642, 649, 668, 671, 672, 673, 674, 678, 683, 0,
	689, 695, 697, 698, 706, 711, 712, 713, 714, 721,
	723, 724, 725, 726, 727, 730, 731, 733, 740, 741,
	747, 752, 753, 759, 760, 0, 783, 786, 603, 797,
	799, 803, 804, 811, 816, 817, 842, 846, 851, 370,
	201, 738, 758, 789, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	297, 298, 304, 148, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 821,
	718, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	705, 161, 820, 844, 765, 779, 832, 0, 349, 594,
	836, 679, 702, 845, 708, 710, 773, 655, 750, 286,
	699, 656, 0, 0, 647, 503, 648, 680, 206, 500,
	806, 751, 834, 736, 766, 776, 205, 194, 743, 742,
	823, 691, 690, 771, 819, 833, 0, 0, 602, 250,
	0, 0, 373, 337, 270, 0, 0, 734, 0, 587,
	588, 719, 775, 667, 762, 838, 700, 767, 839, 77,
	0, 0, 0, 501, 526, 1908, 528, 529, 530, 531,
	0, 0, 137, 527, 532, 533, 534, 0, 729, 772,
	850, 646, 498, 517, 651, 601, 0, 824, 687, 688,
	209, 0, 0, 0, 0, 0, 0, 0, 732, 749,
	791, 716, 368, 778, 787, 801, 709, 303, 223, 0,
	0, 0, 0, 514, 515, 1877, 0, 0, 0, 617,
	0, 516, 0, 661, 512, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 518, 0, 0,
	0, 666, 644, 685, 793, 645, 643, 271, 658, 590,
	822, 717, 239, 154, 828, 715, 615, 781, 662, 810,
	703, 247, 660, 155, 657, 663, 701, 282, 790, 796,
	599, 158, 249, 807, 681, 694, 195, 0, 313, 768,
	367, 506, 754, 312, 251, 360, 782, 830, 366, 704,
	344, 374, 378, 216, 737, 186, 334, 207, 203, 686,
	800, 650, 224, 302, 198, 243, 720, 774, 682, 191,
	785, 761, 812, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 808, 795, 814, 677, 664, 669, 665, 693, 831,
	233, 225, 815, 813, 371, 144, 322, 321, 707, 232,
	798, 145, 136, 309, 146, 240, 163, 818, 380, 176,
	245, 351, 505, 219, 281, 197, 770, 290, 692, 157,
	305, 263, 265, 262, 266, 222, 140, 147, 794, 307,
	324, 355, 178, 340, 138, 139, 141, 149, 315, 150,
	151, 837, 257, 211, 215, 226, 237, 769, 311, 341,
	372, 763, 173, 166, 343, 365, 183, 323, 326, 379,
	792, 168, 826, 809, 756, 722, 728, 652, 0, 167,
	788, 684, 696, 676, 764, 675, 221, 780, 363, 364,
	196, 381, 593, 841, 169, 659, 840, 278, 285, 277,
	843, 359, 827, 757, 746, 744, 653, 825, 755, 745,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 748, 0, 164, 0, 338, 835, 852, 342, 180,
	670, 802, 354, 143, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 784, 849, 289, 314, 185,
	369, 335, 208, 604, 616, 610, 612, 611, 608, 609,
	607, 606, 605, 618, 591, 592, 595, 596, 597, 739,
	829, 654, 600, 805, 613, 614, 777, 847, 589, 192,
	538, 630, 631, 632, 539, 633, 634, 540, 541, 635,
	636, 637, 638, 542, 639, 640, 641, 619, 620, 621,
	622, 623, 624, 625, 626, 629, 627, 628, 735, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 598, 159, 170,
	248, 848, 308, 218, 642, 649, 668, 671, 672, 673,
	674, 678, 683, 0, 689, 695, 697, 698, 706, 711,
	712, 713, 714, 721, 723, 724, 725, 726, 727, 730,
	731, 733, 740, 741, 747, 752, 753, 759, 760, 0,
	783, 786, 603, 797, 799, 803, 804, 811, 816, 817,
	842, 846, 851, 370, 201, 738, 758, 789, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 148, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 821, 718, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 705, 161, 820, 844, 765, 779,
	832, 36, 349, 594, 836, 679, 702, 845, 708, 710,
	773, 655, 750, 286, 699, 656, 0, 0, 647, 503,
	648, 680, 206, 500, 806, 751, 834, 736, 766, 776,
	205, 194, 743, 742, 823, 691, 690, 771, 819, 833,
	0, 0, 602, 250, 0, 0, 373, 337, 270, 0,
	0, 734, 0, 587, 588, 719, 775, 667, 762, 838,
	700, 767, 839, 77, 0, 0, 0, 501, 526, 525,
	528, 529, 530, 531, 0, 0, 137, 527, 532, 533,
	534, 0, 729, 772, 850, 646, 498, 517, 651, 601,
	0, 824, 687, 688, 209, 0, 0, 0, 0, 0,
	0, 0, 732, 749, 791, 716, 368, 778, 787, 801,
	709, 303, 223, 0, 0, 0, 0, 514, 515, 0,
	0, 0, 0, 617, 0, 516, 0, 661, 512, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 518, 0, 0, 0, 666, 644, 685, 793, 645,
	643, 271, 658, 590, 822, 717, 239, 154, 828, 715,
	615, 781, 662, 810, 703, 247, 660, 155, 657, 663,
	701, 282, 790, 796, 599, 158, 249, 807, 681, 694,
	195, 0, 313, 768, 367, 506, 754, 312, 251, 360,
	782, 830, 366, 704, 344, 374, 378, 216, 737, 186,
	334, 207, 203, 686, 800, 650, 224, 302, 198, 243,
	720, 774, 682, 191, 785, 761, 812, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 808, 795, 814, 677, 664,
	669, 665, 693, 831, 233, 225, 815, 813, 371, 144,
	322, 321, 707, 232, 798, 145, 136, 309, 146, 240,
	163, 818, 380, 176, 245, 351, 505, 219, 281, 197,
	770, 290, 692, 157, 305, 263, 265, 262, 266, 222,
	140, 147, 794, 307, 324, 355, 178, 340, 138, 139,
	141, 149, 315, 150, 151, 837, 257, 211, 215, 226,
	237, 769, 311, 341, 372, 763, 173, 166, 343, 365,
	183, 323, 326, 379, 792, 168, 826, 809, 756, 722,
	728, 652, 0, 167, 788, 684, 696, 676, 764, 675,
	221, 780, 363, 364, 196, 381, 593, 841, 169, 659,
	840, 278, 285, 277, 843, 359, 827, 757, 746, 744,
	653, 825, 755, 745, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 748, 0, 164, 0, 338,
	835, 852, 342, 180, 670, 802, 354, 143, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 784,
	849, 289, 314, 185, 369, 335, 208, 604, 616, 610,
	612, 611, 608, 609, 607, 606, 605, 618, 591, 592,
	595, 596, 597, 739, 829, 654, 600, 805, 613, 614,
	777, 847, 589, 192, 538, 630, 631, 632, 539, 633,
	634, 540, 541, 635, 636, 637, 638, 542, 639, 640,
	641, 619, 620, 621, 622, 623, 624, 625, 626, 629,
	627, 628, 735, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 598, 159, 170, 248, 1227, 308, 218, 642, 649,
	668, 671, 672, 673, 674, 678, 683, 0, 689, 695,
	697, 698, 706, 711, 712, 713, 714, 721, 723, 724,
	725, 726, 727, 730, 731, 733, 740, 741, 747, 752,
	753, 759, 760, 0, 783, 786, 603, 797, 799, 803,
	804, 811, 816, 817, 842, 846, 851, 370, 201, 738,
	758, 789, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 148, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 821, 718, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 705, 161,
	820, 844, 765, 779, 832, 0, 349, 594, 836, 679,
	702, 845, 708, 710, 773, 655, 750, 286, 699, 656,
	0, 0, 647, 503, 648, 680, 206, 500, 806, 751,
	834, 736, 766, 776, 205, 194, 743, 742, 823, 691,
	690, 771, 819, 833, 0, 0, 602, 250, 0, 0,
	373, 337, 270, 0, 0, 734, 0, 587, 588, 719,
	775, 667, 762, 838, 700, 767, 839, 77, 0, 1746,
	0, 501, 526, 525, 528, 529, 530, 531, 0, 0,
	137, 527, 532, 533, 534, 0, 729, 772, 850, 646,
	498, 517, 651, 601, 0, 824, 687, 688, 209, 0,
	0, 0, 0, 0, 0, 0, 732, 749, 791, 716,
	368, 778, 787, 801, 709, 303, 223, 0, 0, 0,
	0, 514, 515, 0, 0, 0, 0, 617, 0, 516,
	0, 661, 512, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 581,
	582, 583, 584, 585, 586, 518, 0, 0, 0, 666,
	644, 685, 793, 645, 643, 271, 658, 590, 822, 717,
	239, 154, 828, 715, 615, 781, 662, 810, 703, 247,
	660, 155, 657, 663, 701, 282, 790, 796, 599, 158,
	249, 807, 681, 694, 195, 0, 313, 768, 367, 506,
	754, 312, 251, 360, 782, 830, 366, 704, 344, 374,
	378, 216, 737, 186, 334, 207, 203, 686, 800, 650,
	224, 302, 198, 243, 720, 774, 682, 191, 785, 761,
	812, 333, 357, 160, 267, 358, 377, 177, 350, 268,
	275, 188, 190, 189, 172, 327, 356, 182, 193, 808,
	795, 814, 677, 664, 669, 665, 693, 831, 233, 225,
	815, 813, 371, 144, 322, 321, 707, 232, 798, 145,
	136, 309, 146, 240, 163, 818, 380, 176, 245, 351,
	505, 219, 281, 197, 770, 290, 692, 157, 305, 263,
	265, 262, 266, 222, 140, 147, 794, 307, 324, 355,
	178, 340, 138, 139, 141, 149, 315, 150, 151, 837,
	257, 211, 215, 226, 237, 769, 311, 341, 372, 763,
	173, 166, 343, 365, 183, 323, 326, 379, 792, 168,
	826, 809, 756, 722, 728, 652, 0, 167, 788, 684,
	696, 676, 764, 675, 221, 780, 363, 364, 196, 381,
	593, 841, 169, 659, 840, 278, 285, 277, 843, 359,
	827, 757, 746, 744, 653, 825, 755, 745, 246, 214,
	228, 300, 253, 301, 229, 273, 272, 274, 255, 748,
	0, 164, 0, 338, 835, 852, 342, 180, 670, 802,
	354, 143, 306, 181, 220, 212, 299, 276, 174, 231,
	336, 244, 252, 784, 849, 289, 314, 185, 369, 335,
	208, 604, 616, 610, 612, 611, 608, 609, 607, 606,
	605, 618, 591, 592, 595, 596, 597, 739, 829, 654,
	600, 805, 613, 614, 777, 847, 589, 192, 538, 630,
	631, 632, 539, 633, 634, 540, 541, 635, 636, 637,
	638, 542, 639, 640, 641, 619, 620, 621, 622, 623,
	624, 625, 626, 629, 627, 628, 735, 296, 165, 175,
	184, 202, 200, 213, 241, 264, 269, 294, 325, 330,
	345, 346, 347, 348, 204, 0, 0, 0, 0, 0,
	254, 234, 295, 352, 353, 598, 159, 170, 248, 848,
	308, 218, 642, 649, 668, 671, 672, 673, 674, 678,
	683, 0, 689, 695, 697, 698, 706, 711, 712, 713,
	714, 721, 723, 724, 725, 726, 727, 730, 731, 733,
	740, 741, 747, 752, 753, 759, 760, 0, 783, 786,
	603, 797, 799, 803, 804, 811, 816, 817, 842, 846,
	851, 370, 201, 738, 758, 789, 171, 179, 187, 199,
	210, 217, 227, 230, 235, 236, 238, 242, 256, 258,
	259, 260, 261, 279, 280, 283, 284, 287, 288, 291,
	292, 293, 297, 298, 304, 148, 310, 316, 317, 318,
	319, 320, 328, 329, 331, 332, 339, 361, 362, 375,
	376, 821, 718, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 705, 161, 820, 844, 765, 779, 832, 0,
	349, 594, 836, 679, 702, 845, 708, 710, 773, 655,
	750, 286, 699, 656, 0, 0, 647, 892, 648, 680,
	206, 890, 806, 751, 834, 736, 766, 776, 205, 194,
	743, 742, 823, 691, 690, 771, 819, 833, 0, 0,
	602, 250, 0, 0, 373, 337, 270, 0, 0, 734,
	0, 587, 588, 719, 775, 667, 762, 838, 700, 767,
	839, 77, 0, 0, 0, 501, 526, 525, 528, 529,
	530, 531, 0, 0, 137, 527, 532, 533, 534, 0,
	729, 772, 850, 646, 909, 517, 651, 601, 0, 824,
	687, 688, 209, 0, 0, 0, 0, 0, 0, 0,
	732, 749, 791, 716, 368, 778, 787, 801, 709, 303,
	223, 0, 0, 0, 0, 514, 515, 0, 0, 0,
	0, 617, 0, 516, 0, 661, 512, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 582, 583, 584, 585, 586, 518,
	0, 0, 0, 666, 644, 685, 793, 645, 643, 271,
	658, 590, 822, 717, 239, 154, 828, 715, 615, 781,
	662, 810, 703, 247, 660, 155, 657, 663, 701, 282,
	790, 796, 599, 158, 249, 807, 681, 694, 195, 0,
	313, 768, 367, 506, 754, 312, 251, 360, 782, 830,
	366, 704, 344, 374, 378, 216, 737, 186, 334, 207,
	203, 686, 800, 650, 224, 302, 198, 243, 720, 774,
	682, 191, 785, 761, 812, 333, 357, 160, 267, 358,
	377, 177, 350, 268, 275, 188, 190, 189, 172, 327,
	356, 182, 193, 808, 795, 814, 677, 664, 669, 665,
	693, 831, 233, 225, 815, 813, 371, 144, 322, 321,
	707, 232, 798, 145, 136, 309, 146, 240, 163, 818,
	380, 176, 245, 351, 505, 219, 281, 197, 770, 290,
	692, 157, 305, 263, 265, 262, 266, 222, 140, 147,
	794, 307, 324, 355, 178, 340, 138, 139, 141, 149,
	315, 150, 151, 837, 257, 211, 215, 226, 237, 769,
	311, 341, 372, 763, 173, 166, 343, 365, 183, 323,
	326, 379, 792, 168, 826, 809, 756, 722, 728, 652,
	0, 167, 788, 684, 696, 676, 764, 675, 221, 780,
	363, 364, 196, 381, 593, 841, 169, 659, 840, 278,
	285, 277, 843, 359, 827, 757, 746, 744, 653, 825,
	755, 745, 246, 214, 228, 300, 253, 301, 229, 273,
	272, 274, 255, 748, 0, 164, 0, 338, 835, 852,
	342, 180, 670, 802, 354, 143, 306, 181, 220, 212,
	299, 276, 174, 231, 336, 244, 252, 784, 849, 289,
	314, 185, 369, 335, 208, 604, 616, 610, 612, 611,
	608, 609, 607, 606, 605, 618, 591, 592, 595, 596,
	597, 739, 829, 654, 600, 805, 613, 614, 777, 847,
	589, 192, 538, 630, 631, 632, 539, 633, 634, 540,
	541, 635, 636, 637, 638, 542, 639, 640, 641, 619,
	620, 621, 622, 623, 624, 625, 626, 629, 627, 628,
	735, 296, 165, 175, 184, 202, 200, 213, 241, 264,
	269, 294, 325, 330, 345, 346, 347, 348, 204, 0,
	0, 0, 0, 0, 254, 234, 295, 352, 353, 598,
	159, 170, 248, 848, 308, 218, 642, 649, 668, 671,
	672, 673, 674, 678, 683, 0, 689, 695, 697, 698,
	706, 711, 712, 713, 714, 721, 723, 724, 725, 726,
	727, 730, 731, 733, 740, 741, 747, 752, 753, 759,
	760, 0, 783, 786, 603, 797, 799, 803, 804, 811,
	816, 817, 842, 846, 851, 370, 201, 738, 758, 789,
	171, 179, 187, 199, 210, 217, 227, 230, 235, 236,
	238, 242, 256, 258, 259, 260, 261, 279, 280, 283,
	284, 287, 288, 291, 292, 293, 297, 298, 304, 148,
	310, 316, 317, 318, 319, 320, 328, 329, 331, 332,
	339, 361, 362, 375, 376, 821, 718, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 705, 161, 820, 844,
	765, 779, 832, 0, 349, 594, 836, 679, 702, 845,
	708, 710, 773, 655, 750, 286, 699, 656, 0, 0,
	647, 503, 648, 680, 206, 500, 806, 751, 834, 736,
	766, 776, 205, 194, 743, 742, 823, 691, 690, 771,
	819, 833, 0, 0, 602, 250, 0, 0, 373, 337,
	270, 0, 0, 734, 0, 587, 588, 719, 775, 667,
	762, 838, 700, 767, 839, 77, 0, 0, 0, 501,
	526, 525, 528, 529, 530, 531, 0, 0, 137, 527,
	532, 533, 534, 0, 729, 772, 850, 646, 498, 517,
	651, 601, 0, 824, 687, 688, 209, 0, 0, 0,
	0, 0, 0, 0, 732, 749, 791, 716, 368, 778,
	787, 801, 709, 303, 223, 0, 0, 0, 0, 514,
	515, 0, 0, 0, 0, 617, 0, 516, 0, 661,
	512, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 556, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 518, 0, 0, 0, 666, 644, 685,
	793, 645, 643, 271, 658, 590, 822, 717, 239, 154,
	828, 715, 615, 781, 662, 810, 703, 247, 660, 155,
	657, 663, 701, 282, 790, 796, 599, 158, 249, 807,
	681, 694, 195, 0, 313, 768, 367, 506, 754, 312,
	251, 360, 782, 830, 366, 704, 344, 374, 378, 216,
	737, 186, 334, 207, 203, 686, 800, 650, 224, 302,
	198, 243, 720, 774, 682, 191, 785, 761, 812, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 808, 795, 814,
	677, 664, 669, 665, 693, 831, 233, 225, 815, 813,
	371, 144, 322, 321, 707, 232, 798, 145, 136, 309,
	146, 240, 163, 818, 380, 176, 245, 351, 505, 219,
	281, 197, 770, 290, 692, 157, 305, 263, 265, 262,
	266, 222, 140, 147, 794, 307, 324, 355, 178, 340,
	138, 139, 141, 149, 315, 150, 151, 837, 257, 211,
	215, 226, 237, 769, 311, 341, 372, 763, 173, 166,
	343, 365, 183, 323, 326, 379, 792, 168, 826, 809,
	756, 722, 728, 652, 0, 167, 788, 684, 696, 676,
	764, 675, 221, 780, 363, 364, 196, 381, 593, 841,
	169, 659, 840, 278, 285, 277, 843, 359, 827, 757,
	746, 744, 653, 825, 755, 745, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 255, 748, 0, 164,
	0, 338, 835, 852, 342, 180, 670, 802, 354, 143,
	306, 181, 220, 212, 299, 276, 174, 231, 336, 244,
	252, 784, 849, 289, 314, 185, 369, 335, 208, 604,
	616, 610, 612, 611, 608, 609, 607, 606, 605, 618,
	591, 592, 595, 596, 597, 739, 829, 654, 600, 805,
	613, 614, 777, 847, 589, 192, 538, 630, 631, 632,
	539, 633, 634, 540, 541, 635, 636, 637, 638, 542,
	639, 640, 641, 619, 620, 621, 622, 623, 624, 625,
	626, 629, 627, 628, 735, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 598, 159, 170, 248, 848, 308, 218,
	642, 649, 668, 671, 672, 673, 674, 678, 683, 0,
	689, 695, 697, 698, 706, 711, 712, 713, 714, 721,
	723, 724, 725, 726, 727, 730, 731, 733, 740, 741,
	747, 752, 753, 759, 760, 0, 783, 786, 603, 797,
	799, 803, 804, 811, 816, 817, 842, 846, 851, 370,
	201, 738, 758, 789, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	297, 298, 304, 148, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 821,
	718, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	705, 161, 820, 844, 765, 779, 832, 0, 349, 594,
	836, 679, 702, 845, 708, 710, 773, 655, 750, 286,
	699, 656, 0, 0, 647, 892, 648, 680, 206, 890,
	806, 751, 834, 736, 766, 776, 205, 194, 743, 742,
	823, 691, 690, 771, 819, 833, 0, 0, 602, 250,
	0, 0, 373, 337, 270, 0, 0, 734, 0, 587,
	588, 719, 775, 667, 762, 838, 700, 767, 839, 77,
	0, 0, 0, 501, 526, 525, 528, 529, 530, 531,
	0, 0, 137, 527, 532, 533, 534, 0, 729, 772,
	850, 646, 909, 517, 651, 601, 0, 824, 687, 688,
	209, 0, 0, 0, 0, 0, 0, 0, 732, 749,
	791, 716, 368, 778, 787, 801, 709, 303, 223, 0,
	0, 0, 0, 514, 515, 0, 0, 0, 0, 617,
	0, 516, 0, 661, 512, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 583, 584, 585, 586, 518, 0, 0,
	0, 666, 644, 685, 793, 645, 643, 271, 658, 590,
	822, 717, 239, 154, 828, 715, 615, 781, 662, 810,
	703, 247, 660, 155, 657, 663, 701, 282, 790, 796,
	599, 158, 249, 807, 681, 694, 195, 0, 313, 768,
	367, 506, 3570, 312, 251, 360, 782, 830, 366, 704,
	344, 374, 378, 216, 737, 186, 334, 207, 203, 686,
	800, 650, 224, 302, 198, 243, 720, 774, 682, 191,
	785, 761, 812, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 808, 795, 814, 677, 664, 669, 665, 693, 831,
	233, 225, 815, 813, 371, 144, 322, 321, 707, 232,
	798, 145, 136, 309, 146, 240, 163, 818, 380, 176,
	245, 351, 505, 219, 281, 197, 770, 290, 692, 157,
	305, 263, 265, 262, 266, 222, 140, 147, 794, 307,
	324, 355, 178, 340, 138, 139, 141, 149, 315, 150,
	151, 837, 257, 211, 215, 226, 237, 769, 311, 341,
	372, 763, 173, 166, 343, 365, 183, 323, 326, 379,
	792, 168, 826, 809, 756, 722, 728, 652, 0, 167,
	788, 684, 696, 676, 764, 675, 221, 780, 363, 364,
	196, 381, 593, 841, 169, 659, 840, 278, 285, 277,
	843, 359, 827, 757, 746, 744, 653, 825, 755, 745,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 748, 0, 164, 0, 338, 835, 852, 342, 180,
	670, 802, 354, 143, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 784, 849, 289, 314, 185,
	369, 335, 208, 604, 616, 610, 612, 611, 608, 609,
	607, 606, 605, 618, 591, 592, 595, 596, 597, 739,
	829, 654, 600, 805, 613, 614, 777, 847, 589, 192,
	538, 630, 631, 632, 539, 633, 634, 540, 541, 635,
	636, 637, 638, 542, 639, 640, 641, 619, 620, 621,
	622, 623, 624, 625, 626, 629, 627, 628, 735, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 598, 159, 170,
	248, 848, 308, 218, 642, 649, 668, 671, 672, 673,
	674, 678, 683, 0, 689, 695, 697, 698, 706, 711,
	712, 713, 714, 721, 723, 724, 725, 726, 727, 730,
	731, 733, 740, 741, 747, 752, 753, 759, 760, 0,
	783, 786, 603, 797, 799, 803, 804, 811, 816, 817,
	842, 846, 851, 370, 201, 738, 758, 789, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 148, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 821, 718, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 705, 161, 820, 844, 765, 779,
	832, 0, 349, 594, 836, 679, 702, 845, 708, 710,
	773, 655, 750, 286, 699, 656, 0, 0, 647, 892,
	648, 680, 206, 890, 806, 751, 834, 736, 766, 776,
	205, 194, 743, 742, 823, 691, 690, 771, 819, 833,
	0, 0, 602, 250, 0, 0, 373, 337, 270, 0,
	0, 734, 0, 587, 588, 719, 775, 667, 762, 838,
	700, 767, 839, 77, 0, 0, 0, 501, 526, 525,
	528, 529, 530, 531, 0, 0, 137, 527, 532, 533,
	534, 0, 729, 772, 850, 646, 909, 517, 651, 601,
	0, 824, 687, 688, 209, 0, 0, 0, 0, 0,
	0, 0, 732, 749, 791, 716, 368, 778, 787, 801,
	709, 303, 223, 0, 0, 0, 0, 514, 515, 0,
	0, 0, 0, 617, 0, 516, 0, 661, 512, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 518, 0, 0, 0, 666, 644, 685, 793, 645,
	643, 271, 658, 590, 822, 717, 239, 154, 828, 715,
	615, 781, 662, 810, 703, 247, 660, 155, 657, 663,
	701, 282, 790, 796, 599, 158, 249, 807, 681, 694,
	195, 0, 313, 768, 367, 506, 754, 312, 251, 360,
	782, 830, 366, 704, 344, 374, 378, 216, 737, 186,
	334, 207, 203, 686, 800, 650, 224, 302, 198, 243,
	720, 774, 682, 191, 785, 761, 812, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 808, 795, 814, 677, 664,
	669, 665, 693, 831, 233, 225, 815, 813, 371, 144,
	322, 321, 707, 232, 798, 145, 136, 309, 146, 240,
	163, 818, 380, 176, 245, 351, 505, 219, 281, 197,
	770, 290, 692, 157, 305, 263, 265, 262, 266, 222,
	140, 147, 794, 307, 324, 355, 178, 340, 138, 139,
	141, 149, 315, 150, 151, 837, 257, 211, 215, 226,
	237, 769, 311, 341, 372, 763, 173, 166, 343, 365,
	183, 323, 326, 379, 792, 168, 826, 809, 756, 722,
	728, 652, 0, 167, 788, 684, 696, 676, 764, 675,
	221, 780, 363, 364, 196, 381, 593, 841, 169, 659,
	840, 278, 285, 277, 843, 359, 827, 757, 746, 744,
	653, 825, 755, 745, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 748, 0, 164, 0, 338,
	835, 852, 342, 180, 670, 802, 354, 143, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 784,
	849, 289, 314, 185, 369, 335, 208, 604, 616, 610,
	612, 611, 608, 609, 607, 606, 605, 618, 591, 592,
	595, 596, 597, 1914, 1915, 1916, 600, 805, 613, 614,
	777, 847, 589, 192, 538, 630, 631, 632, 539, 633,
	634, 540, 541, 635, 636, 637, 638, 542, 639, 640,
	641, 619, 620, 621, 622, 623, 624, 625, 626, 629,
	627, 628, 735, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 598, 159, 170, 248, 848, 308, 218, 642, 649,
	668, 671, 672, 673, 674, 678, 683, 0, 689, 695,
	697, 698, 706, 711, 712, 713, 714, 721, 723, 724,
	725, 726, 727, 730, 731, 733, 740, 741, 747, 752,
	753, 759, 760, 0, 783, 786, 603, 797, 799, 803,
	804, 811, 816, 817, 842, 846, 851, 370, 201, 738,
	758, 789, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 148, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 821, 718, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 705, 161,
	820, 844, 765, 779, 1677, 2851, 349, 1532, 1681, 1482,
	1511, 1698, 1517, 1520, 1601, 1448, 1570, 286, 1508, 1449,
	1432, 1487, 1436, 1499, 1437, 1484, 206, 1480, 1642, 1573,
	1679, 1552, 1594, 1604, 205, 194, 1562, 1561, 1667, 1497,
	1496, 1599, 1656, 1678, 1551, 0, 1688, 250, 1653, 952,
	373, 337, 270, 955, 954, 1547, 1662, 1568, 1631, 1530,
	1603, 1464, 1586, 1683, 1509, 1595, 1684, 77, 0, 1140,
	0, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 1591, 1675, 1502, 953, 1542, 1600, 1703, 1435,
	1587, 0, 1440, 1451, 1697, 1668, 1493, 1494, 209, 0,
	0, 0, 0, 0, 0, 0, 1545, 1569, 1621, 1527,
	368, 1606, 1616, 1634, 1519, 303, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, 1584, 0, 0,
	0, 1456, 1442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 1463,
	1433, 1491, 1623, 1434, 1431, 271, 1452, 1636, 1666, 1528,
	239, 154, 1672, 1526, 1525, 1610, 1457, 1646, 1512, 247,
	1455, 155, 1450, 1458, 1510, 282, 1620, 1628, 142, 158,
	249, 1643, 1485, 1501, 195, 1803, 313, 1596, 367, 951,
	1577, 312, 251, 360, 1611, 1674, 366, 1513, 344, 374,
	378, 216, 1553, 186, 334, 207, 203, 1492, 1633, 1439,
	224, 302, 198, 243, 1531, 1602, 1486, 191, 1614, 1585,
	1648, 333, 357, 160, 267, 358, 377, 177, 350, 268,
	275, 188, 190, 189, 172, 327, 356, 182, 193, 1644,
	1627, 1650, 1479, 1459, 1470, 1460, 1500, 1676, 233, 225,
	1651, 1649, 371, 144, 322, 321, 1516, 232, 1630, 145,
	136, 309, 146, 240, 163, 1655, 380, 176, 245, 351,
	950, 219, 281, 197, 1598, 290, 1498, 157, 305, 263,
	265, 262, 266, 222, 140, 147, 1626, 307, 324, 355,
	178, 340, 138, 139, 141, 149, 315, 150, 151, 1682,
	257, 211, 215, 226, 237, 1597, 311, 341, 372, 1588,
	173, 166, 343, 365, 183, 323, 326, 379, 1622, 168,
	1670, 1645, 1579, 1534, 1540, 1441, 0, 167, 1618, 1490,
	1505, 1478, 1592, 1477, 221, 1609, 363, 364, 196, 381,
	1453, 1690, 169, 1454, 1689, 278, 285, 277, 1693, 359,
	1671, 1580, 1565, 1563, 1446, 1669, 1578, 1564, 246, 214,
	228, 300, 253, 301, 229, 273, 272, 274, 255, 1567,
	0, 164, 0, 338, 1680, 1705, 342, 180, 1472, 1637,
	354, 143, 306, 181, 220, 212, 299, 276, 174, 231,
	336, 244, 252, 1613, 1702, 289, 314, 185, 369, 335,
	208, 1468, 1471, 1466, 1469, 1467, 1571, 1572, 1685, 1686,
	1687, 1625, 1461, 0, 1663, 1664, 0, 1558, 1673, 1447,
	0, 1641, 152, 153, 1605, 1700, 1518, 192, 131, 1443,
	1444, 1445, 132, 1548, 1549, 133, 134, 1659, 1658, 1657,
	1660, 135, 1694, 1692, 1695, 1462, 1483, 1504, 1554, 1555,
	1557, 1589, 1590, 1635, 1608, 1617, 1550, 296, 165, 175,
	184, 202, 200, 213, 241, 264, 269, 294, 325, 330,
	345, 346, 347, 348, 204, 0, 0, 0, 0, 0,
	254, 234, 295, 352, 353, 1576, 159, 170, 248, 2852,
	308, 218, 1430, 1438, 1465, 1473, 1474, 1475, 1476, 1481,
	1488, 0, 1495, 1503, 1506, 1507, 1515, 1521, 1522, 1523,
	1524, 1533, 1535, 1536, 1537, 1538, 1539, 1543, 1544, 1546,
	1559, 1560, 1566, 1574, 1575, 1582, 1583, 0, 1612, 1615,
	1624, 1629, 1632, 1638, 1640, 1647, 1652, 1654, 1691, 1699,
	1704, 370, 201, 1556, 1581, 1619, 171, 179, 187, 199,
	210, 217, 227, 230, 235, 236, 238, 242, 256, 258,
	259, 260, 261, 279, 280, 283, 284, 287, 288, 291,
	292, 293, 297, 298, 304, 148, 310, 316, 317, 318,
	319, 320, 328, 329, 331, 332, 339, 361, 362, 375,
	376, 1665, 1529, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1514, 161, 1661, 1696, 1593, 1607, 1677, 1639,
	349, 1532, 1681, 1482, 1511, 1698, 1517, 1520, 1601, 1448,
	1570, 286, 1508, 1449, 1432, 1487, 1436, 1499, 1437, 1484,
	206, 1480, 1642, 1573, 1679, 1552, 1594, 1604, 205, 194,
	1562, 1561, 1667, 1497, 1496, 1599, 1656, 1678, 1551, 0,
	1688, 250, 1653, 952, 373, 337, 270, 955, 954, 1547,
	1662, 1568, 1631, 1530, 1603, 1464, 1586, 1683, 1509, 1595,
	1684, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 1591, 1675, 1502, 953,
	1542, 1600, 1703, 1435, 1587, 0, 1440, 1451, 1697, 1668,
	1493, 1494, 209, 0, 0, 0, 0, 0, 0, 0,
	1545, 1569, 1621, 1527, 368, 1606, 1616, 1634, 1519, 303,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	0, 1584, 0, 0, 0, 1456, 1442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 1463, 1433, 1491, 1623, 1434, 1431, 271,
	1452, 1636, 1666, 1528, 239, 154, 1672, 1526, 1525, 1610,
	1457, 1646, 1512, 247, 1455, 155, 1450, 1458, 1510, 282,
	1620, 1628, 142, 158, 249, 1643, 1485, 1501, 195, 1803,
	313, 1596, 367, 951, 1577, 312, 251, 360, 1611, 1674,
	366, 1513, 344, 374, 378, 216, 1553, 186, 334, 207,
	203, 1492, 1633, 1439, 224, 302, 198, 243, 1531, 1602,
	1486, 191, 1614, 1585, 1648, 333, 357, 160, 267, 358,
	377, 177, 350, 268, 275, 188, 190, 189, 172, 327,
	356, 182, 193, 1644, 1627, 1650, 1479, 1459, 1470, 1460,
	1500, 1676, 233, 225, 1651, 1649, 371, 144, 322, 321,
	1516, 232, 1630, 145, 136, 309, 146, 240, 163, 1655,
	380, 176, 245, 351, 950, 219, 281, 197, 1598, 290,
	1498, 157, 305, 263, 265, 262, 266, 222, 140, 147,
	1626, 307, 324, 355, 178, 340, 138, 139, 141, 149,
	315, 150, 151, 1682, 257, 211, 215, 226, 237, 1597,
	311, 341, 372, 1588, 173, 166, 343, 365, 183, 323,
	326, 379, 1622, 168, 1670, 1645, 1579, 1534, 1540, 1441,
	0, 167, 1618, 1490, 1505, 1478, 1592, 1477, 221, 1609,
	363, 364, 196, 381, 1453, 1690, 169, 1454, 1689, 278,
	285, 277, 1693, 359, 1671, 1580, 1565, 1563, 1446, 1669,
	1578, 1564, 246, 214, 228, 300, 253, 301, 229, 273,
	272, 274, 255, 1567, 0, 164, 0, 338, 1680, 1705,
	342, 180, 1472, 1637, 354, 143, 306, 181, 220, 212,
	299, 276, 174, 231, 336, 244, 252, 1613, 1702, 289,
	314, 185, 369, 335, 208, 1468, 1471, 1466, 1469, 1467,
	1571, 1572, 1685, 1686, 1687, 1625, 1461, 0, 1663, 1664,
	0, 1558, 1673, 1447, 0, 1641, 152, 153, 1605, 1700,
	1518, 192, 131, 1443, 1444, 1445, 132, 1548, 1549, 133,
	134, 1659, 1658, 1657, 1660, 135, 1694, 1692, 1695, 1462,
	1483, 1504, 1554, 1555, 1557, 1589, 1590, 1635, 1608, 1617,
	1550, 296, 165, 175, 184, 202, 200, 213, 241, 264,
	269, 294, 325, 330, 345, 346, 347, 348, 204, 0,
	0, 0, 0, 0, 254, 234, 295, 352, 353, 1576,
	159, 170, 248, 1701, 308, 218, 1430, 1438, 1465, 1473,
	1474, 1475, 1476, 1481, 1488, 0, 1495, 1503, 1506, 1507,
	1515, 1521, 1522, 1523, 1524, 1533, 1535, 1536, 1537, 1538,
	1539, 1543, 1544, 1546, 1559, 1560, 1566, 1574, 1575, 1582,
	1583, 0, 1612, 1615, 1624, 1629, 1632, 1638, 1640, 1647,
	1652, 1654, 1691, 1699, 1704, 370, 201, 1556, 1581, 1619,
	171, 179, 187, 199, 210, 217, 227, 230, 235, 236,
	238, 242, 256, 258, 259, 260, 261, 279, 280, 283,
	284, 287, 288, 291, 292, 293, 297, 298, 304, 148,
	310, 316, 317, 318, 319, 320, 328, 329, 331, 332,
	339, 361, 362, 375, 376, 1665, 1529, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1514, 161, 1661, 1696,
	1593, 1607, 1677, 1639, 349, 1532, 1681, 1482, 1511, 1698,
	1517, 1520, 1601, 1448, 1570, 286, 1508, 1449, 1432, 1487,
	1436, 1499, 1437, 1484, 206, 1480, 1642, 1573, 1679, 1552,
	1594, 1604, 205, 194, 1562, 1561, 1667, 1497, 1496, 1599,
	1656, 1678, 1551, 0, 1688, 250, 1653, 0, 373, 337,
	270, 0, 0, 1547, 1662, 1568, 1631, 1530, 1603, 1464,
	1586, 1683, 1509, 1595, 1684, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	1591, 1675, 1502, 0, 1542, 1600, 1703, 1435, 1587, 0,
	1440, 1451, 1697, 1668, 1493, 1494, 209, 0, 0, 0,
	0, 0, 0, 0, 1545, 1569, 1621, 1527, 368, 1606,
	1616, 1634, 1519, 303, 223, 0, 0, 0, 0, 0,
	0, 2520, 0, 1489, 0, 1584, 0, 0, 0, 1456,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 1463, 1433, 1491,
	1623, 1434, 1431, 271, 1452, 1636, 1666, 1528, 239, 154,
	1672, 1526, 1525, 1610, 1457, 1646, 1512, 247, 1455, 155,
	1450, 1458, 1510, 282, 1620, 1628, 142, 158, 249, 1643,
	1485, 1501, 195, 0, 313, 1596, 367, 1844, 1577, 312,
	251, 360, 1611, 1674, 366, 1513, 344, 374, 378, 216,
	1553, 186, 334, 207, 203, 1492, 1633, 1439, 224, 302,
	198, 243, 1531, 1602, 1486, 191, 1614, 1585, 1648, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 1644, 1627, 1650,
	1479, 1459, 1470, 1460, 1500, 1676, 233, 225, 1651, 1649,
	371, 144, 322, 321, 1516, 232, 1630, 145, 136, 309,
	146, 240, 163, 1655, 380, 176, 245, 351, 1843, 219,
	281, 197, 1598, 290, 1498, 157, 305, 263, 265, 262,
	266, 222, 140, 147, 1626, 307, 324, 355, 178, 340,
	138, 139, 141, 149, 315, 150, 151, 1682, 257, 211,
	215, 226, 237, 1597, 311, 341, 372, 1588, 173, 166,
	343, 365, 183, 323, 326, 379, 1622, 168, 1670, 1645,
	1579, 1534, 1540, 1441, 0, 167, 1618, 1490, 1505, 1478,
	1592, 1477, 221, 1609, 363, 364, 196, 381, 1453, 1690,
	169, 1454, 1689, 278, 285, 277, 1693, 359, 1671, 1580,
	1565, 1563, 1446, 1669, 1578, 1564, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 255, 1567, 0, 164,
	0, 338, 1680, 1705, 342, 180, 1472, 1637, 354, 143,
	306, 181, 220, 212, 299, 276, 174, 231, 336, 244,
	252, 1613, 1702, 289, 314, 185, 369, 335, 208, 1468,
	1471, 1466, 1469, 1467, 1571, 1572, 1685, 1686, 1687, 1625,
	1461, 0, 1663, 1664, 0, 1558, 1673, 1447, 0, 1641,
	152, 153, 1605, 1700, 1518, 192, 131, 1443, 1444, 1445,
	132, 1548, 1549, 133, 134, 1659, 1658, 1657, 1660, 135,
	1694, 1692, 1695, 1462, 1483, 1504, 1554, 1555, 1557, 1589,
	1590, 1635, 1608, 1617, 1550, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 1576, 159, 170, 248, 1701, 308, 218,
	1430, 1438, 1465, 1473, 1474, 1475, 1476, 1481, 1488, 0,
	1495, 1503, 1506, 1507, 1515, 1521, 1522, 1523, 1524, 1533,
	1535, 1536, 1537, 1538, 1539, 1543, 1544, 1546, 1559, 1560,
	1566, 1574, 1575, 1582, 1583, 0, 1612, 1615, 1624, 1629,
	1632, 1638, 1640, 1647, 1652, 1654, 1691, 1699, 1704, 370,
	201, 1556, 1581, 1619, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	297, 298, 304, 148, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 1665,
	1529, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1514, 161, 1661, 1696, 1593, 1607, 1677, 1639, 349, 1532,
	1681, 1482, 1511, 1698, 1517, 1520, 1601, 1448, 1570, 286,
	1508, 1449, 1432, 1487, 1436, 1499, 1437, 1484, 206, 1480,
	1642, 1573, 1679, 1552, 1594, 1604, 205, 194, 1562, 1561,
	1667, 1497, 1496, 1599, 1656, 1678, 1551, 0, 1688, 250,
	1653, 0, 373, 337, 270, 0, 0, 1547, 1662, 1568,
	1631, 1530, 1603, 1464, 1586, 1683, 1509, 1595, 1684, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 1591, 1675, 1502, 0, 1542, 1600,
	1703, 1435, 1587, 0, 1440, 1451, 1697, 1668, 1493, 1494,
	209, 0, 0, 0, 0, 0, 0, 0, 1545, 1569,
	1621, 1527, 368, 1606, 1616, 1634, 1519, 303, 223, 0,
	0, 0, 0, 0, 0, 1838, 0, 1489, 0, 1584,
	0, 0, 0, 1456, 1442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 1463, 1433, 1491, 1623, 1434, 1431, 271, 1452, 1636,
	1666, 1528, 239, 154, 1672, 1526, 1525, 1610, 1457, 1646,
	1512, 247, 1455, 155, 1450, 1458, 1510, 282, 1620, 1628,
	142, 158, 249, 1643, 1485, 1501, 195, 0, 313, 1596,
	367, 1844, 1577, 312, 251, 360, 1611, 1674, 366, 1513,
	344, 374, 378, 216, 1553, 186, 334, 207, 203, 1492,
	1633, 1439, 224, 302, 198, 243, 1531, 1602, 1486, 191,
	1614, 1585, 1648, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 1644, 1627, 1650, 1479, 1459, 1470, 1460, 1500, 1676,
	233, 225, 1651, 1649, 371, 144, 322, 321, 1516, 232,
	1630, 145, 136, 309, 146, 240, 163, 1655, 380, 176,
	245, 351, 1843, 219, 281, 197, 1598, 290, 1498, 157,
	305, 263, 265, 262, 266, 222, 140, 147, 1626, 307,
	324, 355, 178, 340, 138, 139, 141, 149, 315, 150,
	151, 1682, 257, 211, 215, 226, 237, 1597, 311, 341,
	372, 1588, 173, 166, 343, 365, 183, 323, 326, 379,
	1622, 168, 1670, 1645, 1579, 1534, 1540, 1441, 0, 167,
	1618, 1490, 1505, 1478, 1592, 1477, 221, 1609, 363, 364,
	196, 381, 1453, 1690, 169, 1454, 1689, 278, 285, 277,
	1693, 359, 1671, 1580, 1565, 1563, 1446, 1669, 1578, 1564,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 1567, 0, 164, 0, 338, 1680, 1705, 342, 180,
	1472, 1637, 354, 143, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 1613, 1702, 289, 314, 185,
	369, 335, 208, 1468, 1471, 1466, 1469, 1467, 1571, 1572,
	1685, 1686, 1687, 1625, 1461, 0, 1663, 1664, 0, 1558,
	1673, 1447, 0, 1641, 152, 153, 1605, 1700, 1518, 192,
	131, 1443, 1444, 1445, 132, 1548, 1549, 133, 134, 1659,
	1658, 1657, 1660, 135, 1694, 1692, 1695, 1462, 1483, 1504,
	1554, 1555, 1557, 1589, 1590, 1635, 1608, 1617, 1550, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 1576, 159, 170,
	248, 1701, 308, 218, 1430, 1438, 1465, 1473, 1474, 1475,
	1476, 1481, 1488, 0, 1495, 1503, 1506, 1507, 1515, 1521,
	1522, 1523, 1524, 1533, 1535, 1536, 1537, 1538, 1539, 1543,
	1544, 1546, 1559, 1560, 1566, 1574, 1575, 1582, 1583, 0,
	1612, 1615, 1624, 1629, 1632, 1638, 1640, 1647, 1652, 1654,
	1691, 1699, 1704, 370, 201, 1556, 1581, 1619, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 148, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 1665, 1529, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1514, 161, 1661, 1696, 1593, 1607,
	1677, 1639, 349, 1532, 1681, 1482, 1511, 1698, 1517, 1520,
	1601, 1448, 1570, 286, 1508, 1449, 1432, 1487, 1436, 1499,
	1437, 1484, 206, 1480, 1642, 1573, 1679, 1552, 1594, 1604,
	205, 194, 1562, 1561, 1667, 1497, 1496, 1599, 1656, 1678,
	1551, 0, 1688, 250, 1653, 0, 373, 337, 270, 0,
	0, 1547, 1662, 1568, 1631, 1530, 1603, 1464, 1586, 1683,
	1509, 1595, 1684, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 1591, 1675,
	1502, 0, 1542, 1600, 1703, 1435, 1587, 0, 1440, 1451,
	1697, 1668, 1493, 1494, 209, 0, 0, 0, 0, 0,
	0, 0, 1545, 1569, 1621, 1527, 368, 1606, 1616, 1634,
	1519, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 0, 1584, 0, 0, 0, 1456, 1442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 1463, 1433, 1491, 1623, 1434,
	1431, 271, 1452, 1636, 1666, 1528, 239, 154, 1672, 1526,
	1525, 1610, 1457, 1646, 1512, 247, 1455, 155, 1450, 1458,
	1510, 282, 1620, 1628, 142, 158, 249, 1643, 1485, 1501,
	195, 0, 313, 1596, 367, 1844, 1577, 312, 251, 360,
	1611, 1674, 366, 1513, 344, 374, 378, 216, 1553, 186,
	334, 207, 203, 1492, 1633, 1439, 224, 302, 198, 243,
	1531, 1602, 1486, 191, 1614, 1585, 1648, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 1644, 1627, 1650, 1479, 1459,
	1470, 1460, 1500, 1676, 233, 225, 1651, 1649, 371, 144,
	322, 321, 1516, 232, 1630, 145, 136, 309, 146, 240,
	163, 1655, 380, 176, 245, 351, 1843, 219, 281, 197,
	1598, 290, 1498, 157, 305, 263, 265, 262, 266, 222,
	140, 147, 1626, 307, 324, 355, 178, 340, 138, 139,
	141, 149, 315, 150, 151, 1682, 257, 211, 215, 226,
	237, 1597, 311, 341, 372, 1588, 173, 166, 343, 365,
	183, 323, 326, 379, 1622, 168, 1670, 1645, 1579, 1534,
	1540, 1441, 0, 167, 1618, 1490, 1505, 1478, 1592, 1477,
	221, 1609, 363, 364, 196, 381, 1453, 1690, 169, 1454,
	1689, 278, 285, 277, 1693, 359, 1671, 1580, 1565, 1563,
	1446, 1669, 1578, 1564, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 1567, 0, 164, 0, 338,
	1680, 1705, 342, 180, 1472, 1637, 354, 143, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 1613,
	1702, 289, 314, 185, 369, 335, 208, 1468, 1471, 1466,
	1469, 1467, 1571, 1572, 1685, 1686, 1687, 1625, 1461, 0,
	1663, 1664, 0, 1558, 1673, 1447, 0, 1641, 152, 153,
	1605, 1700, 1518, 192, 131, 1443, 1444, 1445, 132, 1548,
	1549, 133, 134, 1659, 1658, 1657, 1660, 135, 1694, 1692,
	1695, 1462, 1483, 1504, 1554, 1555, 1557, 1589, 1590, 1635,
	1608, 1617, 1550, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 1576, 159, 170, 248, 1701, 308, 218, 1430, 1438,
	1465, 1473, 1474, 1475, 1476, 1481, 1488, 0, 1495, 1503,
	1506, 1507, 1515, 1521, 1522, 1523, 1524, 1533, 1535, 1536,
	1537, 1538, 1539, 1543, 1544, 1546, 1559, 1560, 1566, 1574,
	1575, 1582, 1583, 0, 1612, 1615, 1624, 1629, 1632, 1638,
	1640, 1647, 1652, 1654, 1691, 1699, 1704, 370, 201, 1556,
	1581, 1619, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 148, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 1665, 1529, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1514, 161,
	1661, 1696, 1593, 1607, 832, 0, 349, 897, 836, 679,
	702, 845, 708, 710, 773, 655, 750, 286, 699, 656,
	0, 0, 647, 892, 648, 680, 206, 890, 806, 751,
	834, 736, 766, 776, 205, 194, 743, 742, 823, 691,
	690, 771, 819, 833, 0, 0, 930, 250, 0, 952,
	373, 337, 270, 955, 954, 734, 0, 904, 917, 719,
	775, 667, 762, 838, 700, 767, 839, 0, 0, 0,
	0, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 912, 926, 893, 953, 729, 772, 850, 646,
	909, 0, 651, 881, 0, 824, 687, 688, 209, 0,
	0, 0, 0, 0, 0, 0, 732, 749, 791, 716,
	368, 778, 787, 801, 709, 303, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 908, 0, 0,
	0, 661, 877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 898, 0, 0, 0, 666,
	644, 685, 793, 645, 643, 271, 658, 919, 822, 717,
	239, 154, 828, 715, 896, 781, 662, 810, 703, 247,
	660, 155, 657, 663, 701, 282, 790, 796, 142, 158,
	249, 807, 681, 694, 195, 2589, 313, 768, 367, 2591,
	754, 312, 251, 360, 782, 830, 366, 704, 344, 374,
	378, 216, 737, 186, 334, 207, 203, 686, 800, 650,
	224, 302, 198, 243, 720, 774, 682, 191, 785, 761,
	812, 333, 357, 160, 267, 358, 377, 177, 350, 268,
	275, 188, 190, 189, 172, 327, 356, 182, 193, 808,
	795, 814, 677, 664, 669, 665, 693, 831, 233, 225,
	815, 813, 371, 144, 322, 321, 707, 232, 798, 145,
	136, 309, 146, 240, 163, 818, 380, 176, 245, 351,
	2590, 219, 281, 197, 770, 290, 692, 157, 305, 263,
	265, 262, 266, 222, 140, 147, 794, 307, 324, 355,
	178, 340, 138, 139, 141, 149, 315, 150, 151, 837,
	257, 211, 215, 226, 237, 769, 311, 341, 372, 763,
	173, 166, 343, 365, 183, 323, 326, 379, 792, 168,
	826, 809, 756, 722, 728, 652, 0, 167, 788, 684,
	696, 676, 764, 675, 221, 780, 363, 364, 196, 381,
	882, 841, 169, 659, 840, 278, 285, 277, 843, 359,
	827, 757, 746, 744, 653, 825, 755, 745, 246, 214,
	228, 300, 253, 301, 229, 273, 272, 274, 255, 748,
	0, 164, 0, 338, 835, 852, 342, 180, 670, 802,
	354, 143, 306, 181, 220, 212, 299, 276, 174, 231,
	336, 244, 252, 784, 849, 289, 314, 185, 369, 335,
	208, 887, 889, 885, 888, 886, 905, 906, 927, 928,
	929, 916, 883, 0, 924, 925, 0, 739, 829, 654,
	0, 805, 152, 153, 777, 847, 895, 192, 131, 878,
	879, 880, 132, 899, 900, 133, 134, 922, 921, 920,
	923, 135, 932, 931, 933, 884, 891, 894, 901, 902,
	903, 910, 911, 918, 913, 914, 735, 296, 165, 175,
	184, 202, 200, 213, 241, 264, 269, 294, 325, 330,
	345, 346, 347, 348, 204, 0, 0, 0, 0, 0,
	254, 234, 295, 352, 353, 907, 159, 170, 248, 848,
	308, 218, 642, 649, 668, 671, 672, 673, 674, 678,
	683, 0, 689, 695, 697, 698, 706, 711, 712, 713,
	714, 721, 723, 724, 725, 726, 727, 730, 731, 733,
	740, 741, 747, 752, 753, 759, 760, 0, 783, 786,
	915, 797, 799, 803, 804, 811, 816, 817, 842, 846,
	851, 370, 201, 738, 758, 789, 171, 179, 187, 199,
	210, 217, 227, 230, 235, 236, 238, 242, 256, 258,
	259, 260, 261, 279, 280, 283, 284, 287, 288, 291,
	292, 293, 297, 298, 304, 148, 310, 316, 317, 318,
	319, 320, 328, 329, 331, 332, 339, 361, 362, 375,
	376, 821, 718, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 705, 161, 820, 844, 765, 779, 832, 0,
	349, 897, 836, 679, 702, 845, 708, 710, 773, 655,
	750, 286, 699, 656, 0, 0, 647, 892, 648, 680,
	206, 890, 806, 751, 834, 736, 766, 776, 205, 194,
	743, 742, 823, 691, 690, 771, 819, 833, 0, 0,
	930, 250, 0, 0, 373, 337, 270, 0, 0, 734,
	0, 904, 917, 719, 775, 667, 762, 838, 700, 767,
	839, 0, 0, 0, 0, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 0, 912, 926, 893, 0,
	729, 772, 850, 646, 909, 0, 651, 881, 0, 824,
	687, 688, 209, 0, 0, 0, 0, 0, 0, 0,
	732, 749, 791, 716, 368, 778, 787, 801, 709, 303,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 908, 0, 0, 0, 661, 877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 898,
	0, 0, 0, 666, 644, 685, 793, 645, 643, 271,
	658, 919, 822, 717, 239, 154, 828, 715, 896, 781,
	662, 810, 703, 247, 660, 155, 657, 663, 701, 282,
	790, 796, 142, 158, 249, 807, 681, 694, 195, 0,
	313, 768, 367, 876, 754, 312, 251, 360, 782, 830,
	366, 704, 344, 374, 378, 216, 737, 186, 334, 207,
	203, 686, 800, 650, 224, 302, 198, 243, 720, 774,
	682, 191, 785, 761, 812, 333, 357, 160, 267, 358,
	377, 177, 350, 268, 275, 188, 190, 189, 172, 327,
	356, 182, 193, 808, 795, 814, 677, 664, 669, 665,
	693, 831, 233, 225, 815, 813, 371, 144, 322, 321,
	707, 232, 798, 145, 136, 309, 146, 240, 163, 818,
	380, 176, 245, 351, 875, 219, 281, 197, 770, 290,
	692, 157, 305, 263, 265, 262, 266, 222, 140, 147,
	794, 307, 324, 355, 178, 340, 138, 139, 141, 149,
	315, 150, 151, 837, 257, 211, 215, 226, 237, 769,
	311, 341, 372, 763, 173, 166, 343, 365, 183, 323,
	326, 379, 792, 168, 826, 809, 756, 722, 728, 652,
	0, 167, 788, 684, 696, 676, 764, 675, 221, 780,
	363, 364, 196, 381, 882, 841, 169, 659, 840, 278,
	285, 277, 843, 359, 827, 757, 746, 744, 653, 825,
	755, 745, 246, 214, 228, 300, 253, 301, 229, 273,
	272, 274, 255, 748, 0, 164, 0, 338, 835, 852,
	342, 180, 670, 802, 354, 143, 306, 181, 220, 212,
	299, 276, 174, 231, 336, 244, 252, 784, 849, 289,
	314, 185, 369, 335, 208, 887, 889, 885, 888, 886,
	905, 906, 927, 928, 929, 916, 883, 0, 924, 925,
	0, 739, 829, 654, 0, 805, 152, 153, 777, 847,
	895, 192, 131, 878, 879, 880, 132, 899, 900, 133,
	134, 922, 921, 920, 923, 135, 932, 931, 933, 884,
	891, 894, 901, 902, 903, 910, 911, 918, 913, 914,
	735, 296, 165, 175, 184, 202, 200, 213, 241, 264,
	269, 294, 325, 330, 345, 346, 347, 348, 204, 0,
	0, 0, 0, 0, 254, 234, 295, 352, 353, 907,
	159, 170, 248, 848, 308, 218, 642, 649, 668, 671,
	672, 673, 674, 678, 683, 0, 689, 695, 697, 698,
	706, 711, 712, 713, 714, 721, 723, 724, 725, 726,
	727, 730, 731, 733, 740, 741, 747, 752, 753, 759,
	760, 0, 783, 786, 915, 797, 799, 803, 804, 811,
	816, 817, 842, 846, 851, 370, 201, 738, 758, 789,
	171, 179, 187, 199, 210, 217, 227, 230, 235, 236,
	238, 242, 256, 258, 259, 260, 261, 279, 280, 283,
	284, 287, 288, 291, 292, 293, 297, 298, 304, 148,
	310, 316, 317, 318, 319, 320, 328, 329, 331, 332,
	339, 361, 362, 375, 376, 821, 718, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 705, 161, 820, 844,
	765, 779, 832, 0, 349, 897, 836, 679, 702, 845,
	708, 710, 773, 655, 750, 286, 699, 656, 0, 0,
	647, 892, 648, 680, 206, 890, 806, 751, 834, 736,
	766, 776, 205, 194, 743, 742, 823, 691, 690, 771,
	819, 833, 0, 0, 930, 250, 0, 0, 373, 337,
	270, 0, 0, 734, 0, 904, 917, 719, 775, 667,
	762, 838, 700, 767, 839, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	912, 926, 893, 0, 729, 772, 850, 646, 909, 0,
	651, 881, 0, 824, 687, 688, 209, 0, 0, 0,
	0, 0, 0, 0, 732, 749, 791, 716, 368, 778,
	787, 801, 709, 303, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 908, 0, 0, 0, 661,
	877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 898, 0, 0, 0, 666, 644, 685,
	793, 645, 643, 271, 658, 919, 822, 717, 239, 154,
	828, 715, 896, 781, 662, 810, 703, 247, 660, 155,
	657, 663, 701, 282, 790, 796, 142, 158, 249, 807,
	681, 694, 195, 0, 313, 768, 367, 876, 754, 312,
	251, 360, 782, 830, 366, 704, 344, 374, 378, 216,
	737, 186, 334, 207, 203, 686, 800, 650, 224, 302,
	198, 243, 720, 774, 682, 191, 785, 761, 812, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 808, 795, 814,
	677, 664, 669, 665, 693, 831, 233, 225, 815, 813,
	371, 144, 322, 321, 707, 232, 798, 145, 136, 309,
	146, 240, 163, 818, 380, 176, 245, 351, 875, 219,
	281, 197, 770, 290, 692, 157, 305, 263, 265, 262,
	266, 222, 140, 147, 794, 307, 324, 355, 178, 340,
	138, 139, 141, 149, 315, 150, 151, 837, 257, 211,
	215, 226, 237, 769, 311, 341, 372, 763, 173, 166,
	343, 365, 183, 323, 326, 379, 792, 168, 826, 809,
	756, 722, 728, 652, 0, 167, 788, 684, 696, 676,
	764, 675, 221, 780, 363, 364, 196, 381, 882, 841,
	169, 870, 840, 278, 285, 277, 843, 359, 827, 757,
	746, 744, 653, 825, 755, 745, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 866, 748, 0, 164,
	0, 338, 835, 852, 342, 180, 670, 802, 354, 143,
	306, 181, 220, 212, 299, 871, 869, 860, 861, 244,
	252, 784, 849, 289, 314, 185, 369, 335, 208, 887,
	889, 885, 888, 886, 905, 906, 927, 928, 929, 916,
	883, 0, 924, 925, 0, 739, 829, 654, 0, 805,
	152, 153, 777, 847, 895, 192, 131, 878, 879, 880,
	132, 899, 900, 133, 134, 922, 921, 920, 923, 135,
	932, 931, 933, 884, 891, 894, 901, 902, 903, 910,
	911, 918, 913, 914, 735, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 907, 159, 170, 248, 848, 308, 218,
	642, 649, 668, 671, 672, 673, 674, 678, 683, 0,
	689, 695, 697, 698, 706, 711, 712, 713, 714, 721,
	723, 724, 725, 726, 727, 730, 731, 733, 740, 741,
	747, 752, 753, 759, 760, 0, 783, 786, 915, 797,
	799, 803, 804, 811, 816, 817, 842, 846, 851, 370,
	201, 738, 758, 789, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	867, 868, 304, 148, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 821,
	718, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	705, 161, 820, 844, 765, 779, 832, 0, 349, 897,
	836, 679, 702, 845, 708, 710, 773, 655, 750, 286,
	699, 656, 0, 0, 647, 892, 648, 680, 206, 890,
	806, 751, 834, 736, 766, 776, 205, 194, 743, 742,
	823, 691, 690, 771, 819, 833, 0, 0, 930, 250,
	0, 0, 373, 337, 270, 0, 0, 734, 0, 904,
	917, 719, 775, 667, 762, 838, 700, 767, 839, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 912, 926, 893, 0, 729, 772,
	850, 646, 909, 0, 651, 881, 0, 824, 687, 688,
	209, 0, 0, 0, 0, 0, 0, 0, 732, 749,
	791, 716, 368, 778, 787, 801, 709, 303, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 908,
	0, 0, 0, 661, 877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 898, 0, 0,
	0, 666, 644, 685, 793, 645, 643, 271, 658, 919,
	822, 717, 239, 154, 828, 715, 896, 781, 662, 810,
	703, 247, 660, 155, 657, 663, 701, 282, 790, 796,
	142, 158, 249, 807, 681, 694, 195, 0, 313, 768,
	367, 876, 754, 312, 251, 360, 782, 830, 366, 704,
	344, 374, 378, 216, 737, 186, 334, 207, 203, 686,
	800, 650, 224, 302, 198, 243, 720, 774, 682, 191,
	785, 761, 812, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 808, 795, 814, 677, 664, 669, 665, 693, 831,
	233, 225, 815, 813, 371, 144, 322, 321, 707, 232,
	798, 145, 136, 309, 146, 240, 163, 818, 380, 176,
	245, 351, 875, 219, 281, 197, 770, 290, 692, 157,
	305, 263, 265, 262, 266, 222, 140, 147, 794, 307,
	324, 355, 178, 340, 138, 139, 141, 149, 315, 150,
	151, 837, 257, 211, 215, 226, 237, 769, 311, 341,
	372, 763, 173, 166, 343, 1305, 183, 323, 326, 379,
	792, 168, 826, 809, 756, 722, 728, 652, 0, 167,
	788, 684, 696, 676, 764, 675, 221, 780, 363, 364,
	196, 381, 882, 841, 169, 659, 840, 278, 285, 277,
	843, 359, 827, 757, 746, 744, 653, 825, 755, 745,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 748, 0, 164, 0, 338, 835, 852, 342, 180,
	670, 802, 354, 143, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 784, 849, 289, 314, 185,
	369, 335, 208, 887, 889, 885, 888, 886, 905, 906,
	927, 928, 929, 916, 883, 0, 924, 925, 0, 739,
	829, 654, 0, 805, 152, 153, 777, 847, 895, 192,
	131, 878, 879, 880, 132, 899, 900, 133, 134, 922,
	921, 920, 923, 135, 932, 931, 933, 884, 891, 894,
	901, 902, 903, 910, 911, 918, 913, 914, 735, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 907, 159, 170,
	248, 848, 308, 218, 642, 649, 668, 671, 672, 673,
	674, 678, 683, 0, 689, 695, 697, 698, 706, 711,
	712, 713, 714, 721, 723, 724, 725, 726, 727, 730,
	731, 733, 740, 741, 747, 752, 753, 759, 760, 0,
	783, 786, 915, 797, 799, 803, 804, 811, 816, 817,
	842, 846, 851, 370, 201, 738, 758, 789, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 148, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 821, 718, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 705, 161, 820, 844, 765, 779,
	832, 0, 349, 897, 836, 679, 702, 845, 708, 710,
	773, 655, 750, 286, 699, 656, 0, 0, 647, 892,
	648, 680, 206, 890, 806, 751, 834, 736, 766, 776,
	205, 194, 743, 742, 823, 691, 690, 771, 819, 833,
	0, 0, 930, 250, 0, 0, 373, 337, 270, 0,
	0, 734, 0, 904, 917, 719, 775, 667, 762, 838,
	700, 767, 839, 0, 0, 0, 0, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 912, 926,
	893, 0, 729, 772, 850, 646, 909, 0, 651, 881,
	0, 824, 687, 688, 209, 0, 0, 0, 0, 0,
	0, 0, 732, 749, 791, 716, 368, 778, 787, 801,
	709, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 908, 0, 0, 0, 661, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 898, 0, 0, 0, 666, 644, 685, 793, 645,
	643, 271, 658, 919, 822, 717, 239, 154, 828, 715,
	896, 781, 662, 810, 703, 247, 660, 155, 657, 663,
	701, 282, 790, 796, 142, 158, 249, 807, 681, 694,
	195, 0, 313, 768, 367, 876, 754, 312, 251, 360,
	782, 830, 366, 704, 344, 374, 378, 216, 737, 186,
	334, 207, 203, 686, 800, 650, 224, 302, 198, 243,
	720, 774, 682, 191, 785, 761, 812, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 808, 795, 814, 677, 664,
	669, 665, 693, 831, 233, 225, 815, 813, 371, 144,
	322, 321, 707, 232, 798, 145, 136, 309, 146, 240,
	163, 818, 380, 176, 245, 351, 875, 219, 281, 197,
	770, 290, 692, 157, 305, 263, 265, 262, 266, 222,
	140, 147, 794, 307, 324, 355, 178, 340, 138, 139,
	141, 149, 315, 150, 151, 837, 257, 211, 215, 226,
	237, 769, 311, 341, 372, 763, 173, 166, 343, 857,
	183, 323, 326, 379, 792, 168, 826, 809, 756, 722,
	728, 652, 0, 167, 788, 684, 696, 676, 764, 675,
	221, 780, 363, 364, 196, 381, 882, 841, 169, 870,
	840, 278, 285, 277, 843, 359, 827, 757, 746, 744,
	653, 825, 755, 745, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 866, 748, 0, 164, 0, 338,
	835, 852, 342, 180, 670, 802, 354, 143, 306, 181,
	220, 212, 299, 871, 869, 860, 861, 244, 252, 784,
	849, 289, 314, 185, 369, 335, 208, 887, 889, 885,
	888, 886, 905, 906, 927, 928, 929, 916, 883, 0,
	924, 925, 0, 739, 829, 654, 0, 805, 152, 153,
	777, 847, 895, 192, 131, 878, 879, 880, 132, 899,
	900, 133, 134, 922, 921, 920, 923, 135, 932, 931,
	933, 884, 891, 894, 901, 902, 903, 910, 911, 918,
	913, 914, 735, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 907, 159, 170, 248, 848, 308, 218, 642, 649,
	668, 671, 672, 673, 674, 678, 683, 0, 689, 695,
	697, 698, 706, 711, 712, 713, 714, 721, 723, 724,
	725, 726, 727, 730, 731, 733, 740, 741, 747, 752,
	753, 759, 760, 0, 783, 786, 915, 797, 799, 803,
	804, 811, 816, 817, 842, 846, 851, 370, 201, 738,
	758, 789, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 867, 868,
	304, 148, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 821, 718, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 705, 161,
	820, 844, 765, 779, 1677, 1639, 349, 1532, 1681, 1482,
	1511, 1698, 1517, 1520, 1601, 1448, 1570, 286, 1508, 1449,
	1432, 1487, 1436, 1499, 1437, 1484, 206, 1480, 1642, 1573,
	1679, 1552, 1594, 1604, 205, 194, 1562, 1561, 1667, 1497,
	1496, 1599, 1656, 1678, 1551, 0, 1688, 250, 1653, 0,
	373, 337, 270, 0, 0, 1547, 1662, 1568, 1631, 1530,
	1603, 1464, 1586, 1683, 1509, 1595, 1684, 0, 0, 0,
	0, 2669, 0, 2664, 2665, 0, 0, 0, 0, 0,
	2666, 0, 1591, 1675, 1502, 0, 1542, 1600, 1703, 1435,
	1587, 0, 1440, 1451, 1697, 1668, 1493, 1494, 209, 0,
	0, 0, 0, 0, 0, 0, 1545, 1569, 1621, 1527,
	368, 1606, 1616, 1634, 1519, 303, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, 1584, 0, 0,
	0, 1456, 1442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 1463,
	1433, 1491, 1623, 1434, 1431, 271, 1452, 1636, 1666, 1528,
	239, 0, 1672, 1526, 1525, 1610, 1457, 1646, 1512, 247,
	1455, 155, 1450, 1458, 1510, 282, 1620, 1628, 0, 158,
	249, 1643, 1485, 1501, 195, 0, 313, 1596, 367, 0,
	1577, 312, 251, 360, 1611, 1674, 366, 1513, 344, 374,
	378, 216, 1553, 186, 334, 207, 203, 1492, 1633, 1439,
	224, 302, 198, 243, 1531, 1602, 1486, 191, 1614, 1585,
	1648, 333, 357, 160, 267, 358, 377, 177, 350, 268,
	275, 188, 190, 189, 172, 327, 356, 182, 193, 1644,
	1627, 1650, 1479, 1459, 1470, 1460, 1500, 1676, 233, 225,
	1651, 1649, 371, 0, 322, 321, 1516, 232, 1630, 0,
	0, 309, 2668, 240, 163, 1655, 380, 176, 245, 351,
	0, 219, 281, 197, 1598, 290, 1498, 157, 305, 263,
	265, 262, 266, 222, 0, 0, 1626, 307, 324, 355,
	178, 340, 2667, 0, 0, 0, 315, 0, 0, 1682,
	257, 211, 215, 226, 237, 1597, 311, 341, 372, 1588,
	173, 166, 343, 365, 183, 323, 326, 379, 1622, 168,
	1670, 1645, 1579, 1534, 1540, 1441, 0, 167, 1618, 1490,
	1505, 1478, 1592, 1477, 221, 1609, 363, 364, 196, 381,
	1453, 1690, 169, 1454, 1689, 278, 285, 277, 1693, 359,
	1671, 1580, 1565, 1563, 1446, 1669, 1578, 1564, 246, 214,
	228, 300, 253, 301, 229, 273, 272, 274, 255, 1567,
	0, 164, 0, 338, 1680, 1705, 342, 180, 1472, 1637,
	354, 0, 306, 181, 220, 212, 299, 276, 174, 231,
	336, 244, 252, 1613, 1702, 289, 314, 185, 369, 335,
	208, 1468, 1471, 1466, 1469, 1467, 1571, 1572, 1685, 1686,
	1687, 1625, 1461, 0, 1663, 1664, 0, 1558, 1673, 1447,
	0, 1641, 0, 0, 1605, 1700, 1518, 192, 0, 1443,
	1444, 1445, 0, 1548, 1549, 0, 0, 1659, 1658, 1657,
	1660, 0, 1694, 1692, 1695, 1462, 1483, 1504, 1554, 1555,
	1557, 1589, 1590, 1635, 1608, 1617, 1550, 296, 165, 175,
	184, 202, 200, 213, 241, 264, 269, 294, 325, 330,
	345, 346, 347, 348, 204, 0, 0, 0, 0, 0,
	254, 234, 295, 352, 353, 1576, 159, 170, 248, 1701,
	308, 218, 1430, 1438, 1465, 1473, 1474, 1475, 1476, 1481,
	1488, 0, 1495, 1503, 1506, 1507, 1515, 1521, 1522, 1523,
	1524, 1533, 1535, 1536, 1537, 1538, 1539, 1543, 1544, 1546,
	1559, 1560, 1566, 1574, 1575, 1582, 1583, 0, 1612, 1615,
	1624, 1629, 1632, 1638, 1640, 1647, 1652, 1654, 1691, 1699,
	1704, 370, 201, 1556, 1581, 1619, 171, 179, 187, 199,
	210, 217, 227, 230, 235, 236, 238, 242, 256, 258,
	259, 260, 261, 279, 280, 283, 284, 287, 288, 291,
	292, 293, 297, 298, 304, 0, 310, 316, 317, 318,
	319, 320, 328, 329, 331, 332, 339, 361, 362, 375,
	376, 1665, 1529, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1514, 161, 1661, 1696, 1593, 1607, 1677, 1639,
	349, 1532, 1681, 1482, 1511, 1698, 1517, 1520, 1601, 1448,
	1570, 286, 1508, 1449, 1432, 1487, 1436, 1499, 1437, 1484,
	206, 1480, 1642, 1573, 1679, 1552, 1594, 1604, 205, 194,
	1562, 1561, 1667, 1497, 1496, 1599, 1656, 1678, 1551, 0,
	1688, 250, 1653, 0, 373, 337, 270, 0, 0, 1547,
	1662, 1568, 1631, 1530, 1603, 1464, 1586, 1683, 1509, 1595,
	1684, 0, 0, 0, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1591, 1675, 1502, 0,
	1542, 1600, 1703, 1435, 1587, 0, 1440, 1451, 1697, 1668,
	1493, 1494, 209, 0, 0, 0, 0, 0, 0, 0,
	1545, 1569, 1621, 1527, 368, 1606, 1616, 1634, 1519, 303,
	223, 0, 0, 0, 0, 0, 0, 3044, 0, 1489,
	0, 1584, 0, 0, 0, 1456, 1442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 1463, 1433, 1491, 1623, 1434, 1431, 271,
	1452, 1636, 1666, 1528, 239, 0, 1672, 1526, 1525, 1610,
	1457, 1646, 1512, 247, 1455, 155, 1450, 1458, 1510, 282,
	1620, 1628, 0, 158, 249, 1643, 1485, 1501, 195, 0,
	313, 1596, 367, 0, 1577, 312, 251, 360, 1611, 1674,
	366, 1513, 344, 374, 378, 216, 1553, 186, 334, 207,
	203, 1492, 1633, 1439, 224, 302, 198, 243, 1531, 1602,
	1486, 191, 1614, 1585, 1648, 333, 357, 160, 267, 358,
	377, 177, 350, 268, 275, 188, 190, 189, 172, 327,
	356, 182, 193, 1644, 1627, 1650, 1479, 1459, 1470, 1460,
	1500, 1676, 233, 225, 1651, 1649, 371, 0, 322, 321,
	1516, 232, 1630, 0, 0, 309, 0, 240, 163, 1655,
	380, 176, 245, 351, 0, 219, 281, 197, 1598, 290,
	1498, 157, 305, 263, 265, 262, 266, 222, 0, 0,
	1626, 307, 324, 355, 178, 340, 0, 0, 0, 0,
	315, 0, 0, 1682, 257, 211, 215, 226, 237, 1597,
	311, 341, 372, 1588, 173, 166, 343, 365, 183, 323,
	326, 379, 1622, 168, 1670, 1645, 1579, 1534, 1540, 1441,
	0, 167, 1618, 1490, 1505, 1478, 1592, 1477, 221, 1609,
	363, 364, 196, 381, 1453, 1690, 169, 1454, 1689, 278,
	285, 277, 1693, 359, 1671, 1580, 1565, 1563, 1446, 1669,
	1578, 1564, 246, 214, 228, 300, 253, 301, 229, 273,
	272, 274, 255, 1567, 0, 164, 0, 338, 1680, 1705,
	342, 180, 1472, 1637, 354, 0, 306, 181, 220, 212,
	299, 276, 174, 231, 336, 244, 252, 1613, 1702, 289,
	314, 185, 369, 335, 208, 1468, 1471, 1466, 1469, 1467,
	1571, 1572, 1685, 1686, 1687, 1625, 1461, 0, 1663, 1664,
	0, 1558, 1673, 1447, 0, 1641, 0, 0, 1605, 1700,
	1518, 192, 0, 1443, 1444, 1445, 0, 1548, 1549, 0,
	0, 1659, 1658, 1657, 1660, 0, 1694, 1692, 1695, 1462,
	1483, 1504, 1554, 1555, 1557, 1589, 1590, 1635, 1608, 1617,
	1550, 296, 165, 175, 184, 202, 200, 213, 241, 264,
	269, 294, 325, 330, 345, 346, 347, 348, 204, 0,
	0, 0, 0, 0, 254, 234, 295, 352, 353, 1576,
	159, 170, 248, 1701, 308, 218, 1430, 1438, 1465, 1473,
	1474, 1475, 1476, 1481, 1488, 0, 1495, 1503, 1506, 1507,
	1515, 1521, 1522, 1523, 1524, 1533, 1535, 1536, 1537, 1538,
	1539, 1543, 1544, 1546, 1559, 1560, 1566, 1574, 1575, 1582,
	1583, 0, 1612, 1615, 1624, 1629, 1632, 1638, 1640, 1647,
	1652, 1654, 1691, 1699, 1704, 370, 201, 1556, 1581, 1619,
	171, 179, 187, 199, 210, 217, 227, 230, 235, 236,
	238, 242, 256, 258, 259, 260, 261, 279, 280, 283,
	284, 287, 288, 291, 292, 293, 297, 298, 304, 0,
	310, 316, 317, 318, 319, 320, 328, 329, 331, 332,
	339, 361, 362, 375, 376, 1665, 1529, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1514, 161, 1661, 1696,
	1593, 1607, 1677, 1639, 349, 1532, 1681, 1482, 1511, 1698,
	1517, 1520, 1601, 1448, 1570, 286, 1508, 1449, 1432, 1487,
	1436, 1499, 1437, 1484, 206, 1480, 1642, 1573, 1679, 1552,
	1594, 1604, 205, 194, 1562, 1561, 1667, 1497, 1496, 1599,
	1656, 1678, 1551, 0, 1688, 250, 1653, 0, 373, 337,
	270, 0, 0, 1547, 1662, 1568, 1631, 1530, 1603, 1464,
	1586, 1683, 1509, 1595, 1684, 0, 0, 0, 0, 948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1591, 1675, 1502, 0, 1542, 1600, 1703, 1435, 1587, 0,
	1440, 1451, 1697, 1668, 1493, 1494, 209, 0, 0, 0,
	0, 0, 0, 0, 1545, 1569, 1621, 1527, 368, 1606,
	1616, 1634, 1519, 303, 223, 0, 0, 0, 0, 0,
	0, 2513, 0, 1489, 0, 1584, 0, 0, 0, 1456,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 1463, 1433, 1491,
	1623, 1434, 1431, 271, 1452, 1636, 1666, 1528, 239, 0,
	1672, 1526, 1525, 1610, 1457, 1646, 1512, 247, 1455, 155,
	1450, 1458, 1510, 282, 1620, 1628, 0, 158, 249, 1643,
	1485, 1501, 195, 0, 313, 1596, 367, 0, 1577, 312,
	251, 360, 1611, 1674, 366, 1513, 344, 374, 378, 216,
	1553, 186, 334, 207, 203, 1492, 1633, 1439, 224, 302,
	198, 243, 1531, 1602, 1486, 191, 1614, 1585, 1648, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 1644, 1627, 1650,
	1479, 1459, 1470, 1460, 1500, 1676, 233, 225, 1651, 1649,
	371, 0, 322, 321, 1516, 232, 1630, 0, 0, 309,
	0, 240, 163, 1655, 380, 176, 245, 351, 0, 219,
	281, 197, 1598, 290, 1498, 157, 305, 263, 265, 262,
	266, 222, 0, 0, 1626, 307, 324, 355, 178, 340,
	0, 0, 0, 0, 315, 0, 0, 1682, 257, 211,
	215, 226, 237, 1597, 311, 341, 372, 1588, 173, 166,
	343, 365, 183, 323, 326, 379, 1622, 168, 1670, 1645,
	1579, 1534, 1540, 1441, 0, 167, 1618, 1490, 1505, 1478,
	1592, 1477, 221, 1609, 363, 364, 196, 381, 1453, 1690,
	169, 1454, 1689, 278, 285, 277, 1693, 359, 1671, 1580,
	1565, 1563, 1446, 1669, 1578, 1564, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 255, 1567, 0, 164,
	0, 338, 1680, 1705, 342, 180, 1472, 1637, 354, 0,
	306, 181, 220, 212, 299, 276, 174, 231, 336, 244,
	252, 1613, 1702, 289, 314, 185, 369, 335, 208, 1468,
	1471, 1466, 1469, 1467, 1571, 1572, 1685, 1686, 1687, 1625,
	1461, 0, 1663, 1664, 0, 1558, 1673, 1447, 0, 1641,
	0, 0, 1605, 1700, 1518, 192, 0, 1443, 1444, 1445,
	0, 1548, 1549, 0, 0, 1659, 1658, 1657, 1660, 0,
	1694, 1692, 1695, 1462, 1483, 1504, 1554, 1555, 1557, 1589,
	1590, 1635, 1608, 1617, 1550, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 1576, 159, 170, 248, 1701, 308, 218,
	1430, 1438, 1465, 1473, 1474, 1475, 1476, 1481, 1488, 0,
	1495, 1503, 1506, 1507, 1515, 1521, 1522, 1523, 1524, 1533,
	1535, 1536, 1537, 1538, 1539, 1543, 1544, 1546, 1559, 1560,
	1566, 1574, 1575, 1582, 1583, 0, 1612, 1615, 1624, 1629,
	1632, 1638, 1640, 1647, 1652, 1654, 1691, 1699, 1704, 370,
	201, 1556, 1581, 1619, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	297, 298, 304, 0, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 1665,
	1529, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1514, 161, 1661, 1696, 1593, 1607, 1677, 1639, 349, 1532,
	1681, 1482, 1511, 1698, 1517, 1520, 1601, 1448, 1570, 286,
	1508, 1449, 1432, 1487, 1436, 1499, 1437, 1484, 206, 1480,
	1642, 1573, 1679, 1552, 1594, 1604, 205, 194, 1562, 1561,
	1667, 1497, 1496, 1599, 1656, 1678, 1551, 0, 1688, 250,
	1653, 0, 373, 337, 270, 0, 0, 1547, 1662, 1568,
	1631, 1530, 1603, 1464, 1586, 1683, 1509, 1595, 1684, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1591, 1675, 1502, 0, 1542, 1600,
	1703, 1435, 1587, 0, 1440, 1451, 1697, 1668, 1493, 1494,
	209, 0, 0, 0, 0, 0, 0, 0, 1545, 1569,
	1621, 1527, 368, 1606, 1616, 1634, 1519, 303, 223, 0,
	0, 0, 0, 0, 0, 2304, 0, 1489, 0, 1584,
	0, 0, 0, 1456, 1442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 1463, 1433, 1491, 1623, 1434, 1431, 271, 1452, 1636,
	1666, 1528, 239, 0, 1672, 1526, 1525, 1610, 1457, 1646,
	1512, 247, 1455, 155, 1450, 1458, 1510, 282, 1620, 1628,
	0, 158, 249, 1643, 1485, 1501, 195, 0, 313, 1596,
	367, 0, 1577, 312, 251, 360, 1611, 1674, 366, 1513,
	344, 374, 378, 216, 1553, 186, 334, 207, 203, 1492,
	1633, 1439, 224, 302, 198, 243, 1531, 1602, 1486, 191,
	1614, 1585, 1648, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 1644, 1627, 1650, 1479, 1459, 1470, 1460, 1500, 1676,
	233, 225, 1651, 1649, 371, 0, 322, 321, 1516, 232,
	1630, 0, 0, 309, 0, 240, 163, 1655, 380, 176,
	245, 351, 0, 219, 281, 197, 1598, 290, 1498, 157,
	305, 263, 265, 262, 266, 222, 0, 0, 1626, 307,
	324, 355, 178, 340, 0, 0, 0, 0, 315, 0,
	0, 1682, 257, 211, 215, 226, 237, 1597, 311, 341,
	372, 1588, 173, 166, 343, 365, 183, 323, 326, 379,
	1622, 168, 1670, 1645, 1579, 1534, 1540, 1441, 0, 167,
	1618, 1490, 1505, 1478, 1592, 1477, 221, 1609, 363, 364,
	196, 381, 1453, 1690, 169, 1454, 1689, 278, 285, 277,
	1693, 359, 1671, 1580, 1565, 1563, 1446, 1669, 1578, 1564,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 1567, 0, 164, 0, 338, 1680, 1705, 342, 180,
	1472, 1637, 354, 0, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 1613, 1702, 289, 314, 185,
	369, 335, 208, 1468, 1471, 1466, 1469, 1467, 1571, 1572,
	1685, 1686, 1687, 1625, 1461, 0, 1663, 1664, 0, 1558,
	1673, 1447, 0, 1641, 0, 0, 1605, 1700, 1518, 192,
	0, 1443, 1444, 1445, 0, 1548, 1549, 0, 0, 1659,
	1658, 1657, 1660, 0, 1694, 1692, 1695, 1462, 1483, 1504,
	1554, 1555, 1557, 1589, 1590, 1635, 1608, 1617, 1550, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 1576, 159, 170,
	248, 1701, 308, 218, 1430, 1438, 1465, 1473, 1474, 1475,
	1476, 1481, 1488, 0, 1495, 1503, 1506, 1507, 1515, 1521,
	1522, 1523, 1524, 1533, 1535, 1536, 1537, 1538, 1539, 1543,
	1544, 1546, 1559, 1560, 1566, 1574, 1575, 1582, 1583, 0,
	1612, 1615, 1624, 1629, 1632, 1638, 1640, 1647, 1652, 1654,
	1691, 1699, 1704, 370, 201, 1556, 1581, 1619, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 0, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 1665, 1529, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 1514, 161, 1661, 1696, 1593, 1607,
	1677, 1639, 349, 1532, 1681, 1482, 1511, 1698, 1517, 1520,
	1601, 1448, 1570, 286, 1508, 1449, 1432, 1487, 1436, 1499,
	1437, 1484, 206, 1480, 1642, 1573, 1679, 1552, 1594, 1604,
	205, 194, 1562, 1561, 1667, 1497, 1496, 1599, 1656, 1678,
	1551, 0, 1688, 250, 1653, 0, 373, 337, 270, 0,
	0, 1547, 1662, 1568, 1631, 1530, 1603, 1464, 1586, 1683,
	1509, 1595, 1684, 0, 0, 0, 0, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1591, 1675,
	1502, 0, 1542, 1600, 1703, 1435, 1587, 0, 1440, 1451,
	1697, 1668, 1493, 1494, 209, 0, 0, 0, 0, 0,
	0, 0, 1545, 1569, 1621, 1527, 368, 1606, 1616, 1634,
	1519, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 1489, 0, 1584, 0, 0, 0, 1456, 1442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1541, 0, 0, 0, 1463, 1433, 1491, 1623, 1434,
	1431, 271, 1452, 1636, 1666, 1528, 239, 0, 1672, 1526,
	1525, 1610, 1457, 1646, 1512, 247, 1455, 155, 1450, 1458,
	1510, 282, 1620, 1628, 0, 158, 249, 1643, 1485, 1501,
	195, 0, 313, 1596, 367, 0, 1577, 312, 251, 360,
	1611, 1674, 366, 1513, 344, 374, 378, 216, 1553, 186,
	334, 207, 203, 1492, 1633, 1439, 224, 302, 198, 243,
	1531, 1602, 1486, 191, 1614, 1585, 1648, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 1644, 1627, 1650, 1479, 1459,
	1470, 1460, 1500, 1676, 233, 225, 1651, 1649, 371, 0,
	322, 321, 1516, 232, 1630, 0, 0, 309, 0, 240,
	163, 1655, 380, 176, 245, 351, 0, 219, 281, 197,
	1598, 290, 1498, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 1626, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 1682, 257, 211, 215, 226,
	237, 1597, 311, 341, 372, 1588, 173, 166, 343, 365,
	183, 323, 326, 379, 1622, 168, 1670, 1645, 1579, 1534,
	1540, 1441, 0, 167, 1618, 1490, 1505, 1478, 1592, 1477,
	221, 1609, 363, 364, 196, 381, 1453, 1690, 169, 1454,
	1689, 278, 285, 277, 1693, 359, 1671, 1580, 1565, 1563,
	1446, 1669, 1578, 1564, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 1567, 0, 164, 0, 338,
	1680, 1705, 342, 180, 1472, 1637, 354, 1888, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 1613,
	1702, 289, 314, 185, 369, 335, 208, 1468, 1471, 1466,
	1469, 1467, 1571, 1572, 1685, 1686, 1687, 1625, 1461, 0,
	1663, 1664, 0, 1558, 1673, 1447, 0, 1641, 0, 0,
	1605, 1700, 1518, 192, 0, 1443, 1444, 1445, 0, 1548,
	1549, 0, 0, 1659, 1658, 1657, 1660, 0, 1694, 1692,
	1695, 1462, 1483, 1504, 1554, 1555, 1557, 1589, 1590, 1635,
	1608, 1617, 1550, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 1576, 159, 170, 248, 1701, 308, 218, 1430, 1438,
	1465, 1473, 1474, 1475, 1476, 1481, 1488, 0, 1495, 1503,
	1506, 1507, 1515, 1521, 1522, 1523, 1524, 1533, 1535, 1536,
	1537, 1538, 1539, 1543, 1544, 1546, 1559, 1560, 1566, 1574,
	1575, 1582, 1583, 0, 1612, 1615, 1624, 1629, 1632, 1638,
	1640, 1647, 1652, 1654, 1691, 1699, 1704, 370, 201, 1556,
	1581, 1619, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 1665, 1529, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 1514, 161,
	1661, 1696, 1593, 1607, 1677, 1639, 349, 1532, 1681, 1482,
	1511, 1698, 1517, 1520, 1601, 1448, 1570, 286, 1508, 1449,
	1432, 1487, 1436, 1499, 1437, 1484, 206, 1480, 1642, 1573,
	1679, 1552, 1594, 1604, 205, 194, 1562, 1561, 1667, 1497,
	1496, 1599, 1656, 1678, 1551, 0, 1688, 250, 1653, 0,
	373, 337, 270, 0, 0, 1547, 1662, 1568, 1631, 1530,
	1603, 1464, 1586, 1683, 1509, 1595, 1684, 0, 0, 0,
	0, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1591, 1675, 1502, 0, 1542, 1600, 1703, 1435,
	1587, 0, 1440, 1451, 1697, 1668, 1493, 1494, 209, 0,
	0, 0, 0, 0, 0, 0, 1545, 1569, 1621, 1527,
	368, 1606, 1616, 1634, 1519, 303, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 1489, 0, 1584, 0, 0,
	0, 1456, 1442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1541, 0, 0, 0, 1463,
	1433, 1491, 1623, 1434, 1431, 271, 1452, 1636, 1666, 1528,
	239, 0, 1672, 1526, 1525, 1610, 1457, 1646, 1512, 247,
	1455, 155, 1450, 1458, 1510, 282, 1620, 1628, 0, 158,
	249, 1643, 1485, 1501, 195, 0, 313, 1596, 367, 0,
	1577, 312, 251, 360, 1611, 1674, 366, 1513, 344, 374,
	378, 216, 1553, 186, 334, 207, 203, 1492, 1633, 1439,
	224, 302, 198, 243, 1531, 1602, 1486, 191, 1614, 1585,
	1648, 333, 357, 160, 267, 358, 377, 177, 350, 268,
	275, 188, 190, 189, 172, 327, 356, 182, 193, 1644,
	1627, 1650, 1479, 1459, 1470, 1460, 1500, 1676, 233, 225,
	1651, 1649, 371, 0, 322, 321, 1516, 232, 1630, 0,
	0, 309, 0, 240, 163, 1655, 380, 176, 245, 351,
	0, 219, 281, 197, 1598, 290, 1498, 157, 305, 263,
	265, 262, 266, 222, 0, 0, 1626, 307, 324, 355,
	178, 340, 0, 0, 0, 0, 315, 0, 0, 1682,
	257, 211, 215, 226, 237, 1597, 311, 341, 372, 1588,
	173, 166, 343, 365, 183, 323, 326, 379, 1622, 168,
	1670, 1645, 1579, 1534, 1540, 1441, 0, 167, 1618, 1490,
	1505, 1478, 1592, 1477, 221, 1609, 363, 364, 196, 381,
	1453, 1690, 169, 1454, 1689, 278, 285, 277, 1693, 359,
	1671, 1580, 1565, 1563, 1446, 1669, 1578, 1564, 246, 214,
	228, 300, 253, 301, 229, 273, 272, 274, 255, 1567,
	0, 164, 0, 338, 1680, 1705, 342, 180, 1472, 1637,
	354, 0, 306, 181, 220, 212, 299, 276, 174, 231,
	336, 244, 252, 1613, 1702, 289, 314, 185, 369, 335,
	208, 1468, 1471, 1466, 1469, 1467, 1571, 1572, 1685, 1686,
	1687, 1625, 1461, 0, 1663, 1664, 0, 1558, 1673, 1447,
	0, 1641, 0, 0, 1605, 1700, 1518, 192, 0, 1443,
	1444, 1445, 0, 1548, 1549, 0, 0, 1659, 1658, 1657,
	1660, 0, 1694, 1692, 1695, 1462, 1483, 1504, 1554, 1555,
	1557, 1589, 1590, 1635, 1608, 1617, 1550, 296, 165, 175,
	184, 202, 200, 213, 241, 264, 269, 294, 325, 330,
	345, 346, 347, 348, 204, 0, 0, 0, 0, 0,
	254, 234, 295, 352, 353, 1576, 159, 170, 248, 1701,
	308, 218, 1430, 1438, 1465, 1473, 1474, 1475, 1476, 1481,
	1488, 0, 1495, 1503, 1506, 1507, 1515, 1521, 1522, 1523,
	1524, 1533, 1535, 1536, 1537, 1538, 1539, 1543, 1544, 1546,
	1559, 1560, 1566, 1574, 1575, 1582, 1583, 0, 1612, 1615,
	1624, 1629, 1632, 1638, 1640, 1647, 1652, 1654, 1691, 1699,
	1704, 370, 201, 1556, 1581, 1619, 171, 179, 187, 199,
	210, 217, 227, 230, 235, 236, 238, 242, 256, 258,
	259, 260, 261, 279, 280, 283, 284, 287, 288, 291,
	292, 293, 297, 298, 304, 0, 310, 316, 317, 318,
	319, 320, 328, 329, 331, 332, 339, 361, 362, 375,
	376, 1665, 1529, 156, 0, 0, 162, 0, 0, 0,
	0, 0, 1514, 161, 1661, 1696, 1593, 1607, 1677, 1639,
	349, 1532, 1681, 1482, 1511, 1698, 1517, 1520, 1601, 1448,
	1570, 286, 1508, 1449, 1432, 1487, 1436, 1499, 1437, 1484,
	206, 1480, 1642, 1573, 1679, 1552, 1594, 1604, 205, 194,
	1562, 1561, 1667, 1497, 1496, 1599, 1656, 1678, 1551, 0,
	1688, 250, 1653, 0, 373, 337, 270, 0, 0, 1547,
	1662, 1568, 1631, 1530, 1603, 1464, 1586, 1683, 1509, 1595,
	1684, 0, 0, 0, 0, 3406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1591, 1675, 1502, 0,
	1542, 1600, 1703, 1435, 1587, 0, 1440, 1451, 1697, 1668,
	1493, 1494, 209, 0, 0, 0, 0, 0, 0, 0,
	1545, 1569, 1621, 1527, 368, 1606, 1616, 1634, 1519, 303,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 1489,
	0, 1584, 0, 0, 0, 1456, 1442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 1463, 1433, 1491, 1623, 1434, 1431, 271,
	1452, 1636, 1666, 1528, 239, 0, 1672, 1526, 1525, 1610,
	1457, 1646, 1512, 247, 1455, 155, 1450, 1458, 1510, 282,
	1620, 1628, 0, 158, 249, 1643, 1485, 1501, 195, 0,
	313, 1596, 367, 0, 1577, 312, 251, 360, 1611, 1674,
	366, 1513, 344, 374, 378, 216, 1553, 186, 334, 207,
	203, 1492, 1633, 1439, 224, 302, 198, 243, 1531, 1602,
	1486, 191, 1614, 1585, 1648, 333, 357, 160, 267, 358,
	377, 177, 350, 268, 275, 188, 190, 189, 172, 327,
	356, 182, 193, 1644, 1627, 1650, 1479, 1459, 1470, 3409,
	3410, 3411, 233, 225, 1651, 1649, 371, 0, 322, 321,
	1516, 232, 1630, 0, 0, 309, 0, 240, 163, 1655,
	380, 176, 245, 351, 0, 219, 281, 197, 1598, 290,
	1498, 157, 305, 263, 265, 262, 266, 222, 0, 0,
	1626, 307, 324, 355, 178, 340, 0, 0, 0, 0,
	315, 0, 0, 1682, 257, 211, 215, 226, 237, 1597,
	311, 341, 372, 1588, 173, 166, 343, 365, 183, 323,
	326, 379, 1622, 168, 1670, 1645, 1579, 1534, 1540, 1441,
	0, 167, 1618, 1490, 1505, 1478, 1592, 1477, 221, 1609,
	363, 364, 196, 381, 1453, 1690, 169, 1454, 1689, 278,
	285, 277, 1693, 359, 1671, 1580, 1565, 1563, 1446, 1669,
	1578, 1564, 246, 214, 228, 300, 253, 301, 229, 273,
	272, 274, 255, 1567, 0, 164, 0, 338, 1680, 1705,
	342, 180, 1472, 1637, 354, 0, 306, 181, 220, 212,
	299, 276, 174, 231, 336, 244, 252, 1613, 1702, 289,
	314, 185, 369, 335, 208, 1468, 1471, 1466, 1469, 1467,
	1571, 1572, 1685, 1686, 1687, 1625, 1461, 0, 1663, 1664,
	0, 1558, 1673, 1447, 0, 1641, 0, 0, 1605, 1700,
	1518, 192, 0, 1443, 1444, 1445, 0, 1548, 1549, 0,
	0, 1659, 1658, 1657, 1660, 0, 1694, 1692, 1695, 1462,
	1483, 1504, 1554, 1555, 1557, 1589, 1590, 1635, 1608, 1617,
	1550, 296, 165, 175, 184, 202, 200, 213, 241, 264,
	269, 294, 325, 330, 345, 346, 347, 348, 204, 0,
	0, 0, 0, 0, 254, 234, 295, 352, 353, 1576,
	159, 170, 248, 1701, 308, 218, 1430, 1438, 1465, 1473,
	1474, 1475, 1476, 1481, 1488, 0, 1495, 1503, 1506, 1507,
	1515, 1521, 1522, 1523, 1524, 1533, 1535, 1536, 1537, 1538,
	1539, 1543, 1544, 1546, 1559, 1560, 1566, 1574, 1575, 1582,
	1583, 0, 1612, 1615, 1624, 1629, 1632, 1638, 1640, 1647,
	1652, 1654, 1691, 1699, 1704, 370, 201, 1556, 1581, 1619,
	171, 179, 187, 199, 210, 217, 227, 230, 235, 236,
	238, 242, 256, 258, 259, 260, 261, 279, 280, 283,
	284, 287, 288, 291, 292, 293, 297, 298, 304, 0,
	310, 316, 317, 318, 319, 320, 328, 329, 331, 332,
	339, 361, 362, 375, 376, 1665, 1529, 156, 0, 0,
	162, 0, 0, 0, 0, 0, 1514, 161, 1661, 1696,
	1593, 1607, 1677, 1639, 349, 1532, 1681, 1482, 1511, 1698,
	1517, 1520, 1601, 1448, 1570, 286, 1508, 1449, 1432, 1487,
	1436, 1499, 1437, 1484, 206, 1480, 1642, 1573, 1679, 1552,
	1594, 1604, 205, 194, 1562, 1561, 1667, 1497, 1496, 1599,
	1656, 1678, 1551, 0, 1688, 250, 1653, 0, 373, 337,
	270, 0, 0, 1547, 1662, 1568, 1631, 1530, 1603, 1464,
	1586, 1683, 1509, 1595, 1684, 0, 0, 0, 0, 2669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1591, 1675, 1502, 0, 1542, 1600, 1703, 1435, 1587, 0,
	1440, 1451, 1697, 1668, 1493, 1494, 209, 0, 0, 0,
	0, 0, 0, 0, 1545, 1569, 1621, 1527, 368, 1606,
	1616, 1634, 1519, 303, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 1489, 0, 1584, 0, 0, 0, 1456,
	1442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1541, 0, 0, 0, 1463, 1433, 1491,
	1623, 1434, 1431, 271, 1452, 1636, 1666, 1528, 239, 0,
	1672, 1526, 1525, 1610, 1457, 1646, 1512, 247, 1455, 155,
	1450, 1458, 1510, 282, 1620, 1628, 0, 158, 249, 1643,
	1485, 1501, 195, 0, 313, 1596, 367, 0, 1577, 312,
	251, 360, 1611, 1674, 366, 1513, 344, 374, 378, 216,
	1553, 186, 334, 207, 203, 1492, 1633, 1439, 224, 302,
	198, 243, 1531, 1602, 1486, 191, 1614, 1585, 1648, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 1644, 1627, 1650,
	1479, 1459, 1470, 1460, 1500, 1676, 233, 225, 1651, 1649,
	371, 0, 322, 321, 1516, 232, 1630, 0, 0, 309,
	0, 240, 163, 1655, 380, 176, 245, 351, 0, 219,
	281, 197, 1598, 290, 1498, 157, 305, 263, 265, 262,
	266, 222, 0, 0, 1626, 307, 324, 355, 178, 340,
	0, 0, 0, 0, 315, 0, 0, 1682, 257, 211,
	215, 226, 237, 1597, 311, 341, 372, 1588, 173, 166,
	343, 365, 183, 323, 326, 379, 1622, 168, 1670, 1645,
	1579, 1534, 1540, 1441, 0, 167, 1618, 1490, 1505, 1478,
	1592, 1477, 221, 1609, 363, 364, 196, 381, 1453, 1690,
	169, 1454, 1689, 278, 285, 277, 1693, 359, 1671, 1580,
	1565, 1563, 1446, 1669, 1578, 1564, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 255, 1567, 0, 164,
	0, 338, 1680, 1705, 342, 180, 1472, 1637, 354, 0,
	306, 181, 220, 212, 299, 276, 174, 231, 336, 244,
	252, 1613, 1702, 289, 314, 185, 369, 335, 208, 1468,
	1471, 1466, 1469, 1467, 1571, 1572, 1685, 1686, 1687, 1625,
	1461, 0, 1663, 1664, 0, 1558, 1673, 1447, 0, 1641,
	0, 0, 1605, 1700, 1518, 192, 0, 1443, 1444, 1445,
	0, 1548, 1549, 0, 0, 1659, 1658, 1657, 1660, 0,
	1694, 1692, 1695, 1462, 1483, 1504, 1554, 1555, 1557, 1589,
	1590, 1635, 1608, 1617, 1550, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 1576, 159, 170, 248, 1701, 308, 218,
	1430, 1438, 1465, 1473, 1474, 1475, 1476, 1481, 1488, 0,
	1495, 1503, 1506, 1507, 1515, 1521, 1522, 1523, 1524, 1533,
	1535, 1536, 1537, 1538, 1539, 1543, 1544, 1546, 1559, 1560,
	1566, 1574, 1575, 1582, 1583, 0, 1612, 1615, 1624, 1629,
	1632, 1638, 1640, 1647, 1652, 1654, 1691, 1699, 1704, 370,
	201, 1556, 1581, 1619, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	297, 298, 304, 0, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 1665,
	1529, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	1514, 161, 1661, 1696, 1593, 1607, 1677, 1639, 349, 1532,
	1681, 1482, 1511, 1698, 1517, 1520, 1601, 1448, 1570, 286,
	1508, 1449, 1432, 1487, 1436, 1499, 1437, 1484, 206, 1480,
	1642, 1573, 1679, 1552, 1594, 1604, 205, 194, 1562, 1561,
	1667, 1497, 1496, 1599, 1656, 1678, 1551, 0, 1688, 250,
	1653, 0, 373, 337, 270, 0, 0, 1547, 1662, 1568,
	1631, 1530, 1603, 1464, 1586, 1683, 1509, 1595, 1684, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1591, 1675, 1502, 0, 1542, 1600,
	1703, 1435, 1587, 0, 1440, 1451, 1697, 1668, 1493, 1494,
	209, 0, 0, 0, 0, 0, 0, 0, 1545, 1569,
	1621, 1527, 368, 1606, 1616, 1634, 1519, 303, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 1584,
	0, 0, 0, 1456, 1442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1541, 0, 0,
	0, 1463, 1433, 1491, 1623, 1434, 1431, 271, 1452, 1636,
	1666, 1528, 239, 0, 1672, 1526, 1525, 1610, 1457, 1646,
	1512, 247, 1455, 155, 1450, 1458, 1510, 282, 1620, 1628,
	0, 158, 249, 1643, 1485, 1501, 195, 0, 313, 1596,
	367, 0, 1577, 312, 251, 360, 1611, 1674, 366, 1513,
	344, 374, 378, 216, 1553, 186, 334, 207, 203, 1492,
	1633, 1439, 224, 302, 198, 243, 1531, 1602, 1486, 191,
	1614, 1585, 1648, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 1644, 1627, 1650, 1479, 1459, 1470, 1460, 1500, 1676,
	233, 225, 1651, 1649, 371, 0, 322, 321, 1516, 232,
	1630, 0, 0, 309, 0, 240, 163, 1655, 380, 176,
	245, 351, 0, 219, 281, 197, 1598, 290, 1498, 157,
	305, 263, 265, 262, 266, 222, 0, 0, 1626, 307,
	324, 355, 178, 340, 0, 0, 0, 0, 315, 0,
	0, 1682, 257, 211, 215, 226, 237, 1597, 311, 341,
	372, 1588, 173, 166, 343, 365, 183, 323, 326, 379,
	1622, 168, 1670, 1645, 1579, 1534, 1540, 1441, 0, 167,
	1618, 1490, 1505, 1478, 1592, 1477, 221, 1609, 363, 364,
	196, 381, 1453, 1690, 169, 1454, 1689, 278, 285, 277,
	1693, 359, 1671, 1580, 1565, 1563, 1446, 1669, 1578, 1564,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 1567, 0, 164, 0, 338, 1680, 1705, 342, 180,
	1472, 1637, 354, 0, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 1613, 1702, 289, 314, 185,
	369, 335, 208, 1468, 1471, 1466, 1469, 1467, 1571, 1572,
	1685, 1686, 1687, 1625, 1461, 0, 1663, 1664, 0, 1558,
	1673, 1447, 0, 1641, 0, 0, 1605, 1700, 1518, 192,
	0, 1443, 1444, 1445, 0, 1548, 1549, 0, 0, 1659,
	1658, 1657, 1660, 0, 1694, 1692, 1695, 1462, 1483, 1504,
	1554, 1555, 1557, 1589, 1590, 1635, 1608, 1617, 1550, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 1576, 159, 170,
	248, 1701, 308, 218, 1430, 1438, 1465, 1473, 1474, 1475,
	1476, 1481, 1488, 0, 1495, 1503, 1506, 1507, 1515, 1521,
	1522, 1523, 1524, 1533, 1535, 1536, 1537, 1538, 1539, 1543,
	1544, 1546, 1559, 1560, 1566, 1574, 1575, 1582, 1583, 0,
	1612, 1615, 1624, 1629, 1632, 1638, 1640, 1647, 1652, 1654,
	1691, 1699, 1704, 370, 201, 1556, 1581, 1619, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 0, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 1665, 1529, 156, 0, 0, 162, 349,
	0, 0, 0, 0, 1514, 161, 1661, 1696, 1593, 1607,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 205, 194, 0,
	0, 0, 0, 0, 0, 0, 2008, 2012, 0, 0,
	250, 0, 952, 373, 337, 270, 955, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 948, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 303, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 2011, 239, 154, 0, 0, 0, 2005, 0,
	2006, 2007, 247, 956, 155, 0, 2003, 2010, 282, 0,
	0, 142, 158, 249, 0, 0, 0, 195, 945, 313,
	0, 367, 951, 0, 312, 251, 360, 0, 0, 366,
	0, 344, 374, 378, 216, 0, 186, 334, 207, 203,
	0, 0, 0, 224, 302, 198, 243, 0, 0, 0,
	191, 0, 0, 0, 333, 357, 160, 267, 358, 377,
	177, 350, 268, 275, 188, 190, 189, 172, 327, 356,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 225, 0, 0, 371, 144, 322, 321, 0,
	232, 0, 145, 136, 309, 146, 240, 163, 0, 380,
	176, 245, 351, 950, 219, 281, 197, 0, 290, 0,
	157, 305, 263, 265, 262, 266, 222, 140, 147, 0,
	307, 324, 355, 178, 340, 138, 139, 141, 149, 315,
	150, 151, 0, 257, 211, 215, 226, 237, 0, 311,
	341, 372, 0, 173, 166, 343, 365, 183, 323, 326,
	379, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 221, 0, 363,
	364, 196, 381, 0, 0, 169, 0, 0, 278, 285,
	277, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 214, 228, 300, 253, 301, 229, 273, 272,
	274, 255, 0, 0, 164, 0, 338, 0, 0, 342,
	180, 0, 0, 354, 143, 306, 181, 220, 212, 299,
	276, 174, 231, 336, 244, 252, 0, 0, 289, 314,
	185, 369, 335, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 0, 0, 0,
	192, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 165, 175, 184, 202, 200, 213, 241, 264, 269,
	294, 325, 330, 345, 346, 347, 348, 204, 0, 0,
	0, 0, 0, 254, 234, 295, 352, 353, 0, 159,
	170, 248, 0, 308, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 235, 236, 238,
	242, 256, 258, 259, 260, 261, 279, 280, 283, 284,
	287, 288, 291, 292, 293, 297, 298, 304, 148, 310,
	316, 317, 318, 319, 320, 328, 329, 331, 332, 339,
	361, 362, 375, 376, 349, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 286, 161, 0, 0, 0,
	1164, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 952, 373, 337,
	270, 955, 954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1165,
	0, 1168, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 953, 0, 1160, 1161, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 0, 0, 368, 0,
	0, 0, 0, 303, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 239, 154,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 155,
	0, 0, 0, 282, 0, 0, 142, 158, 249, 0,
	0, 0, 195, 0, 313, 0, 367, 951, 0, 312,
	251, 360, 0, 0, 366, 0, 344, 374, 378, 216,
	0, 186, 334, 207, 203, 0, 0, 0, 224, 302,
	198, 243, 0, 0, 0, 191, 0, 0, 0, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	371, 144, 322, 321, 0, 232, 0, 145, 136, 309,
	146, 240, 163, 0, 380, 176, 245, 351, 950, 219,
	281, 197, 0, 290, 0, 157, 305, 263, 265, 262,
	266, 222, 140, 147, 0, 307, 324, 355, 178, 340,
	138, 139, 141, 149, 315, 150, 151, 0, 257, 211,
	215, 226, 237, 0, 311, 341, 372, 0, 173, 166,
	343, 365, 183, 323, 326, 379, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 363, 364, 196, 381, 0, 0,
	169, 0, 0, 278, 285, 277, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 255, 0, 0, 164,
	0, 338, 0, 0, 342, 180, 0, 0, 354, 143,
	306, 181, 220, 212, 299, 276, 174, 231, 336, 244,
	252, 0, 0, 289, 314, 185, 369, 335, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 192, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 0, 159, 170, 248, 0, 308, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	201, 0, 0, 0, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	297, 298, 304, 148, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 349,
	0, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	286, 161, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 205, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 952, 373, 337, 270, 955, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 948, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 303, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 239, 154, 0, 0, 0, 0, 0,
	0, 0, 247, 956, 155, 0, 946, 0, 282, 0,
	0, 142, 158, 249, 0, 0, 0, 195, 945, 313,
	0, 367, 951, 0, 312, 251, 360, 0, 0, 366,
	0, 344, 374, 378, 216, 0, 186, 334, 207, 203,
	0, 0, 0, 224, 302, 198, 243, 0, 0, 0,
	191, 0, 0, 0, 333, 357, 160, 267, 358, 377,
	177, 350, 268, 275, 188, 190, 189, 172, 327, 356,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 225, 0, 0, 371, 144, 322, 321, 0,
	232, 0, 145, 136, 309, 146, 240, 163, 0, 380,
	176, 245, 351, 950, 219, 281, 197, 0, 290, 0,
	157, 305, 263, 265, 262, 266, 222, 140, 147, 0,
	307, 324, 355, 178, 340, 138, 139, 141, 149, 315,
	150, 151, 0, 257, 211, 215, 226, 237, 0, 311,
	341, 372, 0, 173, 166, 343, 365, 183, 323, 326,
	379, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 221, 0, 363,
	364, 196, 381, 0, 0, 169, 0, 0, 278, 285,
	277, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 214, 228, 300, 253, 301, 229, 273, 272,
	274, 255, 0, 0, 164, 0, 338, 0, 0, 342,
	180, 0, 0, 354, 143, 306, 181, 220, 212, 299,
	276, 174, 231, 336, 244, 252, 0, 0, 289, 314,
	185, 369, 335, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 0, 0, 0,
	192, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 165, 175, 184, 202, 200, 213, 241, 264, 269,
	294, 325, 330, 345, 346, 347, 348, 204, 0, 0,
	0, 0, 0, 254, 234, 295, 352, 353, 0, 159,
	170, 248, 0, 308, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 235, 236, 238,
	242, 256, 258, 259, 260, 261, 279, 280, 283, 284,
	287, 288, 291, 292, 293, 297, 298, 304, 148, 310,
	316, 317, 318, 319, 320, 328, 329, 331, 332, 339,
	361, 362, 375, 376, 349, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 286, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 952, 373, 337,
	270, 955, 954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1165,
	0, 1168, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 303, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 239, 154,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 155,
	0, 0, 0, 282, 0, 0, 142, 158, 249, 0,
	0, 0, 195, 1837, 313, 0, 367, 951, 0, 312,
	251, 360, 0, 0, 366, 0, 344, 374, 378, 216,
	0, 186, 334, 207, 203, 0, 0, 0, 224, 302,
	198, 243, 0, 0, 0, 191, 0, 0, 0, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	371, 144, 322, 321, 0, 232, 0, 145, 136, 309,
	146, 240, 163, 0, 380, 176, 245, 351, 950, 219,
	281, 197, 0, 290, 0, 157, 305, 263, 265, 262,
	266, 222, 140, 147, 0, 307, 324, 355, 178, 340,
	138, 139, 141, 149, 315, 150, 151, 0, 257, 211,
	215, 226, 237, 0, 311, 341, 372, 0, 173, 166,
	343, 365, 183, 323, 326, 379, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 363, 364, 196, 381, 0, 0,
	169, 0, 0, 278, 285, 277, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 255, 0, 0, 164,
	0, 338, 0, 0, 342, 180, 0, 0, 354, 143,
	306, 181, 220, 212, 299, 276, 174, 231, 336, 244,
	252, 0, 0, 289, 314, 185, 369, 335, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 192, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 0, 159, 170, 248, 0, 308, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	201, 0, 0, 0, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	297, 298, 304, 148, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 349,
	0, 156, 0, 0, 162, 0, 0, 0, 0, 0,
	286, 161, 0, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 205, 194, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 0, 952, 373, 337, 270, 955, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2785, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 0, 0, 0, 0, 953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 0, 0, 303, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 239, 154, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 155, 0, 0, 0, 282, 0,
	0, 142, 158, 249, 0, 0, 0, 195, 0, 313,
	0, 367, 951, 0, 312, 251, 360, 0, 0, 366,
	0, 344, 374, 378, 216, 0, 186, 334, 207, 203,
	0, 0, 0, 224, 302, 198, 243, 0, 0, 0,
	191, 0, 0, 0, 333, 357, 160, 267, 358, 377,
	177, 350, 268, 275, 188, 190, 189, 172, 327, 356,
	182, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 225, 0, 0, 371, 144, 322, 321, 0,
	232, 0, 145, 136, 309, 146, 240, 163, 0, 380,
	176, 245, 351, 950, 219, 281, 197, 0, 290, 0,
	157, 305, 263, 265, 262, 266, 222, 140, 147, 0,
	307, 324, 355, 178, 340, 138, 139, 141, 149, 315,
	150, 151, 0, 257, 211, 215, 226, 237, 0, 311,
	341, 372, 0, 173, 166, 343, 365, 183, 323, 326,
	379, 0, 168, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 221, 0, 363,
	364, 196, 381, 0, 0, 169, 0, 0, 278, 285,
	277, 0, 359, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 214, 228, 300, 253, 301, 229, 273, 272,
	274, 255, 0, 0, 164, 0, 338, 0, 0, 342,
	180, 0, 0, 354, 143, 306, 181, 220, 212, 299,
	276, 174, 231, 336, 244, 252, 0, 0, 289, 314,
	185, 369, 335, 208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 153, 0, 0, 0,
	192, 131, 0, 0, 0, 132, 0, 0, 133, 134,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 165, 175, 184, 202, 200, 213, 241, 264, 269,
	294, 325, 330, 345, 346, 347, 348, 204, 0, 0,
	0, 0, 0, 254, 234, 295, 352, 353, 0, 159,
	170, 248, 0, 308, 218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 201, 0, 0, 0, 171,
	179, 187, 199, 210, 217, 227, 230, 235, 236, 238,
	242, 256, 258, 259, 260, 261, 279, 280, 283, 284,
	287, 288, 291, 292, 293, 297, 298, 304, 148, 310,
	316, 317, 318, 319, 320, 328, 329, 331, 332, 339,
	361, 362, 375, 376, 349, 0, 156, 0, 0, 162,
	0, 0, 0, 0, 0, 286, 161, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 205, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 0, 952, 373, 337,
	270, 955, 954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2780,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 0, 0, 953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 0,
	0, 0, 0, 303, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 239, 154,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 155,
	0, 0, 0, 282, 0, 0, 142, 158, 249, 0,
	0, 0, 195, 0, 313, 0, 367, 951, 0, 312,
	251, 360, 0, 0, 366, 0, 344, 374, 378, 216,
	0, 186, 334, 207, 203, 0, 0, 0, 224, 302,
	198, 243, 0, 0, 0, 191, 0, 0, 0, 333,
	357, 160, 267, 358, 377, 177, 350, 268, 275, 188,
	190, 189, 172, 327, 356, 182, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 225, 0, 0,
	371, 144, 322, 321, 0, 232, 0, 145, 136, 309,
	146, 240, 163, 0, 380, 176, 245, 351, 950, 219,
	281, 197, 0, 290, 0, 157, 305, 263, 265, 262,
	266, 222, 140, 147, 0, 307, 324, 355, 178, 340,
	138, 139, 141, 149, 315, 150, 151, 0, 257, 211,
	215, 226, 237, 0, 311, 341, 372, 0, 173, 166,
	343, 365, 183, 323, 326, 379, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 221, 0, 363, 364, 196, 381, 0, 0,
	169, 0, 0, 278, 285, 277, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 214, 228, 300,
	253, 301, 229, 273, 272, 274, 255, 0, 0, 164,
	0, 338, 0, 0, 342, 180, 0, 0, 354, 143,
	306, 181, 220, 212, 299, 276, 174, 231, 336, 244,
	252, 0, 0, 289, 314, 185, 369, 335, 208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 0, 0, 0, 192, 131, 0, 0, 0,
	132, 0, 0, 133, 134, 0, 0, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 165, 175, 184, 202,
	200, 213, 241, 264, 269, 294, 325, 330, 345, 346,
	347, 348, 204, 0, 0, 0, 0, 0, 254, 234,
	295, 352, 353, 0, 159, 170, 248, 0, 308, 218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	201, 0, 0, 0, 171, 179, 187, 199, 210, 217,
	227, 230, 235, 236, 238, 242, 256, 258, 259, 260,
	261, 279, 280, 283, 284, 287, 288, 291, 292, 293,
	297, 298, 304, 148, 310, 316, 317, 318, 319, 320,
	328, 329, 331, 332, 339, 361, 362, 375, 376, 0,
	0, 156, 36, 349, 162, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 205, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2286, 250, 0, 0, 373, 337, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 1971, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 303, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 239, 154, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 155, 0,
	0, 0, 282, 0, 0, 142, 158, 249, 0, 0,
	0, 195, 0, 313, 0, 367, 0, 0, 312, 251,
	360, 0, 0, 366, 0, 344, 374, 378, 216, 0,
	186, 334, 207, 203, 0, 0, 0, 224, 302, 198,
	243, 0, 0, 0, 191, 0, 0, 0, 333, 357,
	160, 267, 358, 377, 177, 350, 268, 275, 188, 190,
	189, 172, 327, 356, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 225, 0, 0, 371,
	144, 322, 321, 0, 232, 0, 145, 136, 309, 146,
	240, 163, 0, 380, 176, 245, 351, 128, 219, 281,
	197, 0, 290, 0, 157, 305, 263, 265, 262, 266,
	222, 140, 147, 0, 307, 324, 355, 178, 340, 138,
	139, 141, 149, 315, 150, 151, 0, 257, 211, 215,
	226, 237, 0, 311, 341, 372, 0, 173, 166, 343,
	365, 183, 323, 326, 379, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 221, 0, 363, 364, 196, 381, 0, 0, 169,
	0, 0, 278, 285, 277, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 214, 228, 300, 253,
	301, 229, 273, 272, 274, 255, 0, 0, 164, 0,
	338, 0, 0, 342, 180, 0, 0, 354, 143, 306,
	181, 220, 212, 299, 276, 174, 231, 336, 244, 252,
	0, 0, 289, 314, 185, 369, 335, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 192, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 296, 165, 175, 184, 202, 200,
	213, 241, 264, 269, 294, 325, 330, 345, 346, 347,
	348, 204, 0, 0, 0, 0, 0, 254, 234, 295,
	352, 353, 0, 159, 170, 248, 485, 308, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 235, 236, 238, 242, 256, 258, 259, 260, 261,
	279, 280, 283, 284, 287, 288, 291, 292, 293, 297,
	298, 304, 148, 310, 316, 317, 318, 319, 320, 328,
	329, 331, 332, 339, 361, 362, 375, 376, 349, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 286,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 373, 337, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 303, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 239, 154, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 155, 0, 0, 0, 282, 0, 0,
	142, 158, 249, 0, 0, 0, 195, 0, 313, 0,
	367, 0, 0, 312, 251, 360, 0, 0, 366, 0,
	344, 374, 378, 216, 0, 186, 334, 207, 203, 0,
	0, 0, 224, 302, 198, 243, 0, 0, 0, 191,
	0, 0, 0, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 371, 144, 322, 321, 0, 232,
	0, 145, 136, 309, 146, 240, 163, 0, 380, 176,
	245, 351, 128, 219, 281, 197, 0, 290, 0, 157,
	305, 263, 265, 262, 266, 222, 140, 147, 0, 307,
	324, 355, 178, 340, 138, 139, 141, 149, 315, 150,
	151, 0, 257, 211, 215, 226, 237, 0, 311, 341,
	372, 0, 173, 166, 343, 365, 183, 323, 326, 379,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 363, 364,
	196, 381, 0, 0, 169, 0, 0, 278, 285, 277,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 0, 0, 164, 0, 338, 0, 0, 342, 180,
	0, 0, 354, 143, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 0, 0, 289, 314, 185,
	369, 335, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 0, 159, 170,
	248, 0, 308, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 201, 0, 0, 0, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 148, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 349, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 286, 161, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 205, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 373, 337, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 303, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 239, 154, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 155, 0,
	0, 0, 282, 0, 0, 142, 158, 249, 0, 0,
	0, 195, 0, 313, 0, 367, 2088, 0, 312, 251,
	360, 0, 0, 366, 0, 344, 374, 378, 216, 0,
	186, 334, 207, 203, 0, 0, 0, 224, 302, 198,
	243, 0, 0, 0, 191, 0, 0, 0, 333, 357,
	160, 267, 358, 377, 177, 350, 268, 275, 188, 190,
	189, 172, 327, 356, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 225, 0, 0, 371,
	144, 322, 321, 0, 232, 0, 145, 136, 309, 146,
	240, 163, 0, 380, 176, 245, 351, 128, 219, 281,
	197, 0, 290, 0, 157, 305, 263, 265, 262, 266,
	222, 140, 147, 0, 307, 324, 355, 178, 340, 138,
	139, 141, 149, 315, 150, 151, 0, 257, 211, 215,
	226, 237, 0, 311, 341, 372, 0, 173, 166, 343,
	365, 183, 323, 326, 379, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 221, 0, 363, 364, 196, 381, 0, 0, 169,
	0, 0, 278, 285, 277, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 214, 228, 300, 253,
	301, 229, 273, 272, 274, 255, 0, 0, 164, 0,
	338, 0, 0, 342, 180, 0, 0, 354, 143, 306,
	181, 220, 212, 299, 276, 174, 231, 336, 244, 252,
	0, 0, 289, 314, 185, 369, 335, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 192, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 165, 175, 184, 202, 200,
	213, 241, 264, 269, 294, 325, 330, 345, 346, 347,
	348, 204, 0, 0, 0, 0, 0, 254, 234, 295,
	352, 353, 0, 159, 170, 248, 0, 308, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 235, 236, 238, 242, 256, 258, 259, 260, 261,
	279, 280, 283, 284, 287, 288, 291, 292, 293, 297,
	298, 304, 148, 310, 316, 317, 318, 319, 320, 328,
	329, 331, 332, 339, 361, 362, 375, 376, 349, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 286,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 373, 337, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 303, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 239, 154, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 155, 0, 0, 0, 282, 0, 0,
	142, 158, 249, 0, 0, 0, 195, 0, 313, 0,
	367, 0, 0, 312, 251, 360, 0, 0, 366, 0,
	344, 374, 378, 216, 0, 186, 334, 207, 203, 0,
	0, 0, 224, 302, 198, 243, 0, 0, 0, 191,
	0, 0, 0, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 371, 144, 322, 321, 0, 232,
	0, 145, 136, 309, 146, 240, 163, 0, 380, 176,
	245, 351, 128, 219, 281, 197, 0, 290, 0, 157,
	305, 263, 265, 262, 266, 222, 140, 147, 0, 307,
	324, 355, 178, 340, 138, 139, 141, 149, 315, 150,
	151, 0, 257, 211, 215, 226, 237, 0, 311, 341,
	372, 0, 173, 166, 343, 365, 183, 323, 326, 379,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 363, 364,
	196, 381, 0, 0, 169, 0, 0, 278, 285, 277,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 0, 0, 164, 0, 338, 0, 0, 342, 180,
	0, 0, 354, 143, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 0, 0, 289, 314, 185,
	369, 335, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 0, 159, 170,
	248, 0, 308, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 201, 0, 0, 0, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 148, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 349, 0, 156, 0, 1295, 162, 0,
	0, 0, 0, 0, 286, 161, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 205, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 373, 337, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 303, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 239, 154, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 155, 0,
	0, 0, 282, 0, 0, 142, 158, 249, 0, 0,
	0, 195, 0, 313, 0, 367, 0, 0, 312, 251,
	360, 0, 0, 366, 0, 344, 374, 378, 216, 0,
	186, 334, 207, 203, 0, 0, 0, 224, 302, 198,
	243, 0, 0, 0, 191, 0, 0, 0, 333, 357,
	160, 267, 358, 377, 177, 350, 268, 275, 188, 190,
	189, 172, 327, 356, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 225, 0, 0, 371,
	144, 322, 321, 0, 232, 0, 145, 136, 309, 146,
	240, 163, 0, 380, 176, 245, 351, 128, 219, 281,
	197, 0, 290, 0, 157, 305, 263, 265, 262, 266,
	222, 140, 147, 0, 307, 324, 355, 178, 340, 138,
	139, 141, 149, 315, 150, 151, 0, 257, 211, 215,
	226, 237, 0, 311, 341, 372, 0, 173, 166, 343,
	365, 183, 323, 326, 379, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 221, 0, 363, 364, 196, 381, 0, 0, 169,
	0, 0, 278, 285, 277, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 214, 228, 300, 253,
	301, 229, 273, 272, 274, 255, 0, 0, 164, 0,
	338, 0, 0, 342, 180, 0, 0, 354, 143, 306,
	181, 220, 212, 299, 276, 174, 231, 336, 244, 252,
	0, 0, 289, 314, 185, 369, 335, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 192, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 165, 175, 184, 202, 200,
	213, 241, 264, 269, 294, 325, 330, 345, 346, 347,
	348, 204, 0, 0, 0, 0, 0, 254, 234, 295,
	352, 353, 0, 159, 170, 248, 0, 308, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 235, 236, 238, 242, 256, 258, 259, 260, 261,
	279, 280, 283, 284, 287, 288, 291, 292, 293, 297,
	298, 304, 148, 310, 316, 317, 318, 319, 320, 328,
	329, 331, 332, 339, 361, 362, 375, 376, 349, 0,
	156, 0, 0, 162, 0, 0, 0, 0, 0, 286,
	161, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 205, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 373, 337, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 0, 0, 0, 0, 303, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	123, 0, 239, 154, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 155, 0, 0, 0, 282, 0, 0,
	142, 158, 249, 0, 0, 0, 195, 0, 313, 0,
	367, 0, 0, 312, 251, 360, 0, 0, 366, 0,
	344, 374, 378, 216, 0, 186, 334, 207, 203, 0,
	0, 0, 224, 302, 198, 243, 0, 0, 0, 191,
	0, 0, 0, 333, 357, 160, 267, 358, 377, 177,
	350, 268, 275, 188, 190, 189, 172, 327, 356, 182,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 225, 0, 0, 371, 144, 322, 321, 0, 232,
	0, 145, 136, 309, 146, 240, 163, 0, 380, 176,
	245, 351, 128, 219, 281, 197, 0, 290, 0, 157,
	305, 263, 265, 262, 266, 222, 140, 147, 0, 307,
	324, 355, 178, 340, 138, 139, 141, 149, 315, 150,
	151, 0, 257, 211, 215, 226, 237, 0, 311, 341,
	372, 0, 173, 166, 343, 365, 183, 323, 326, 379,
	0, 168, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 221, 0, 363, 364,
	196, 381, 0, 0, 169, 0, 0, 278, 285, 277,
	0, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 214, 228, 300, 253, 301, 229, 273, 272, 274,
	255, 0, 0, 164, 0, 338, 0, 0, 342, 180,
	0, 0, 354, 143, 306, 181, 220, 212, 299, 276,
	174, 231, 336, 244, 252, 0, 0, 289, 314, 185,
	369, 335, 208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 0, 0, 0, 192,
	131, 0, 0, 0, 132, 0, 0, 133, 134, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	165, 175, 184, 202, 200, 213, 241, 264, 269, 294,
	325, 330, 345, 346, 347, 348, 204, 0, 0, 0,
	0, 0, 254, 234, 295, 352, 353, 0, 159, 170,
	248, 0, 308, 218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 201, 0, 0, 0, 171, 179,
	187, 199, 210, 217, 227, 230, 235, 236, 238, 242,
	256, 258, 259, 260, 261, 279, 280, 283, 284, 287,
	288, 291, 292, 293, 297, 298, 304, 148, 310, 316,
	317, 318, 319, 320, 328, 329, 331, 332, 339, 361,
	362, 375, 376, 349, 0, 156, 0, 0, 162, 0,
	0, 0, 0, 0, 286, 161, 0, 0, 0, 0,
	0, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 205, 194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 373, 337, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 0,
	0, 0, 303, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 239, 154, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 155, 0,
	0, 0, 282, 0, 0, 142, 158, 249, 0, 0,
	0, 195, 0, 313, 0, 367, 0, 0, 312, 251,
	360, 0, 0, 366, 0, 344, 374, 378, 216, 0,
	186, 334, 207, 203, 0, 0, 0, 224, 302, 198,
	243, 0, 0, 0, 191, 0, 0, 0, 333, 357,
	160, 267, 358, 377, 177, 350, 268, 275, 188, 190,
	189, 172, 327, 356, 182, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 225, 0, 0, 371,
	144, 322, 321, 0, 232, 0, 145, 136, 309, 146,
	240, 163, 0, 380, 176, 245, 351, 128, 219, 281,
	197, 0, 290, 0, 157, 305, 263, 265, 262, 266,
	222, 140, 147, 0, 307, 324, 355, 178, 340, 138,
	139, 141, 149, 315, 150, 151, 0, 257, 211, 215,
	226, 237, 0, 311, 341, 372, 0, 173, 166, 343,
	365, 183, 323, 326, 379, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 221, 0, 363, 364, 196, 381, 0, 0, 169,
	0, 0, 278, 285, 277, 0, 359, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 214, 228, 300, 253,
	301, 229, 273, 272, 274, 255, 0, 0, 164, 0,
	338, 0, 0, 342, 180, 0, 0, 354, 143, 306,
	181, 220, 212, 299, 276, 174, 231, 336, 244, 252,
	0, 0, 289, 314, 185, 369, 335, 208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	153, 0, 0, 0, 192, 131, 0, 0, 0, 132,
	0, 0, 133, 134, 0, 0, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 165, 175, 184, 202, 200,
	213, 241, 264, 269, 294, 325, 330, 345, 346, 347,
	348, 204, 0, 0, 0, 0, 0, 254, 234, 295,
	352, 353, 0, 159, 170, 248, 0, 308, 218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 201,
	0, 0, 0, 171, 179, 187, 199, 210, 217, 227,
	230, 235, 236, 238, 242, 256, 258, 259, 260, 261,
	279, 280, 283, 284, 287, 288, 291, 292, 293, 297,
	298, 304, 148, 310, 316, 317, 318, 319, 320, 328,
	329, 331, 332, 339, 361, 362, 375, 376, 0, 0,
	156, 0, 0, 162, 451, 349, 445, 456, 439, 0,
	161, 0, 0, 0, 0, 0, 286, 0, 0, 462,
	0, 0, 0, 0, 0, 206, 0, 0, 446, 0,
	0, 0, 0, 205, 194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 0, 0, 373,
	337, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 0, 0, 303, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 437,
	440, 0, 0, 0, 271, 0, 0, 0, 444, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	155, 0, 0, 0, 282, 448, 0, 0, 158, 249,
	452, 0, 0, 195, 0, 313, 0, 367, 0, 0,
	312, 251, 360, 0, 455, 366, 0, 344, 374, 378,
	216, 0, 186, 334, 207, 203, 0, 0, 0, 224,
	302, 198, 243, 0, 0, 0, 191, 0, 0, 0,
	333, 357, 160, 267, 358, 377, 177, 350, 268, 275,
	188, 190, 189, 172, 327, 356, 182, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 225, 0,
	0, 371, 0, 322, 321, 0, 232, 0, 0, 0,
	309, 0, 240, 163, 0, 380, 176, 245, 351, 0,
	219, 281, 197, 0, 290, 0, 157, 305, 263, 265,
	262, 266, 222, 0, 0, 0, 465, 324, 355, 178,
	340, 441, 442, 443, 449, 450, 453, 454, 457, 257,
	211, 215, 226, 237, 0, 311, 341, 372, 0, 173,
	166, 343, 365, 183, 323, 326, 379, 0, 168, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 221, 0, 363, 364, 196, 381, 0,
	0, 169, 0, 0, 278, 285, 277, 0, 359, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 214, 228,
	300, 253, 301, 229, 273, 272, 274, 255, 0, 0,
	164, 0, 338, 0, 0, 342, 180, 0, 0, 354,
	0, 306, 181, 220, 212, 299, 276, 174, 231, 336,
	244, 252, 0, 0, 289, 314, 185, 369, 335, 208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 165, 175, 184,
	202, 200, 213, 241, 264, 269, 294, 325, 330, 345,
	346, 347, 348, 204, 0, 0, 0, 0, 0, 254,
	234, 295, 352, 353, 0, 159, 170, 248, 0, 308,
	218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 201, 0, 0, 0, 171, 179, 187, 199, 210,
	217, 227, 230, 235, 236, 238, 242, 256, 258, 259,
	260, 261, 279, 280, 283, 284, 287, 288, 291, 292,
	293, 297, 298, 304, 447, 310, 316, 317, 318, 319,
	320, 328, 329, 331, 332, 339, 361, 362, 375, 376,
	0, 0, 156, 0, 0, 162, 451, 349, 445, 456,
	439, 0, 161, 0, 0, 0, 0, 0, 286, 0,
	0, 431, 0, 0, 0, 0, 0, 206, 0, 0,
	446, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 437, 440, 0, 0, 0, 271, 0, 0, 0,
	444, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 448, 0, 0,
	158, 249, 452, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 455, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 434, 324,
	355, 178, 340, 441, 442, 443, 449, 450, 453, 454,
	457, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 447, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 1180, 1179, 1189, 1190, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1181, 0, 0, 1191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 2291, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2293, 2295, 0, 0, 0, 0,
	0, 0, 129, 0, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 2289, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 2294, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 2291, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2293,
	2295, 0, 0, 0, 0, 0, 0, 129, 0, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 2294,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 471, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 3510, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 2613, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 131, 0, 0, 0, 132, 0,
	0, 133, 134, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 131,
	0, 0, 0, 132, 0, 0, 133, 134, 0, 0,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 3469, 0, 0, 0,
	0, 0, 206, 3467, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 3468, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2433, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 2434, 2435, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 1311, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 948, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2771, 0,
	0, 0, 2773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 2758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 2132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 2169, 2170, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 948, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 349, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 286, 161, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	205, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 373, 337, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 303, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 155, 0, 0,
	0, 282, 0, 0, 0, 158, 249, 0, 0, 0,
	195, 0, 313, 0, 367, 0, 0, 312, 251, 360,
	0, 0, 366, 0, 344, 374, 378, 216, 0, 186,
	334, 207, 203, 0, 0, 0, 224, 302, 198, 243,
	0, 0, 0, 191, 0, 0, 0, 333, 357, 160,
	267, 358, 377, 177, 350, 268, 275, 188, 190, 189,
	172, 327, 356, 182, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 225, 0, 0, 371, 0,
	322, 321, 0, 232, 0, 0, 0, 309, 0, 240,
	163, 0, 380, 176, 245, 351, 0, 219, 281, 197,
	0, 290, 0, 157, 305, 263, 265, 262, 266, 222,
	0, 0, 0, 307, 324, 355, 178, 340, 0, 0,
	0, 0, 315, 0, 0, 0, 257, 211, 215, 226,
	237, 0, 311, 341, 372, 0, 173, 166, 343, 365,
	183, 323, 326, 379, 0, 168, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	221, 0, 363, 364, 196, 381, 0, 0, 169, 0,
	0, 278, 285, 277, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 214, 228, 300, 253, 301,
	229, 273, 272, 274, 255, 0, 0, 164, 0, 338,
	0, 0, 342, 180, 0, 0, 354, 0, 306, 181,
	220, 212, 299, 276, 174, 231, 336, 244, 252, 0,
	0, 289, 314, 185, 369, 335, 208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 165, 175, 184, 202, 200, 213,
	241, 264, 269, 294, 325, 330, 345, 346, 347, 348,
	204, 0, 0, 0, 0, 0, 254, 234, 295, 352,
	353, 0, 159, 170, 248, 0, 308, 218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 201, 0,
	0, 0, 171, 179, 187, 199, 210, 217, 227, 230,
	235, 236, 238, 242, 256, 258, 259, 260, 261, 279,
	280, 283, 284, 287, 288, 291, 292, 293, 297, 298,
	304, 0, 310, 316, 317, 318, 319, 320, 328, 329,
	331, 332, 339, 361, 362, 375, 376, 349, 0, 156,
	0, 0, 162, 0, 0, 0, 0, 0, 286, 161,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 0,
	0, 0, 0, 0, 0, 205, 194, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 373, 337, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 0, 0, 303, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 155, 0, 0, 0, 282, 0, 0, 0,
	158, 249, 0, 0, 0, 195, 0, 313, 0, 367,
	0, 0, 312, 251, 360, 0, 0, 366, 0, 344,
	374, 378, 216, 0, 186, 334, 207, 203, 0, 0,
	0, 224, 302, 198, 243, 0, 0, 0, 191, 0,
	0, 0, 333, 357, 160, 267, 358, 377, 177, 350,
	268, 275, 188, 190, 189, 172, 327, 356, 182, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	225, 0, 0, 371, 0, 322, 321, 0, 232, 0,
	0, 0, 309, 0, 240, 163, 0, 380, 176, 245,
	351, 0, 219, 281, 197, 0, 290, 0, 157, 305,
	263, 265, 262, 266, 222, 0, 0, 0, 307, 324,
	355, 178, 340, 0, 0, 0, 0, 315, 0, 0,
	0, 257, 211, 215, 226, 237, 0, 311, 341, 372,
	0, 173, 166, 343, 365, 183, 323, 326, 379, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 221, 0, 363, 364, 196,
	381, 0, 0, 169, 0, 0, 278, 285, 277, 0,
	359, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	214, 228, 300, 253, 301, 229, 273, 272, 274, 255,
	0, 0, 164, 0, 338, 0, 0, 342, 180, 0,
	0, 354, 0, 306, 181, 220, 212, 299, 276, 174,
	231, 336, 244, 252, 0, 0, 289, 314, 185, 369,
	335, 208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 165,
	175, 184, 202, 200, 213, 241, 264, 269, 294, 325,
	330, 345, 346, 347, 348, 204, 0, 0, 0, 0,
	0, 254, 234, 295, 352, 353, 0, 159, 170, 248,
	0, 308, 218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 201, 0, 0, 0, 171, 179, 187,
	199, 210, 217, 227, 230, 235, 236, 238, 242, 256,
	258, 259, 260, 261, 279, 280, 283, 284, 287, 288,
	291, 292, 293, 297, 298, 304, 0, 310, 316, 317,
	318, 319, 320, 328, 329, 331, 332, 339, 361, 362,
	375, 376, 0, 0, 156, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 161,
}

var yyPact = [...]int{
	1532, -1000, -432, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2324, -1000, -1000, 317, -1000,
	1208, 635, -1000, 384, 141, 33951, 719, 529, 48725, -1000,
	-1000, -1000, 227, 628, 34566, 495, 698, 1659, 2162, 1646,
	70, -40, -42, 150, 35810, 35188, 49, -1000, 38270, 672,
	83, -1000, -1000, -1000, -1000, 2369, 242, -1000, -1000, 2293,
	2322, 2098, -1000, 6907, -1000, -1000, -1000, -1000, -1000, 20855,
	-1000, 2367, 34566, 28412, -1000, 711, 702, -126, 668, 668,
	351, 668, 668, 715, -1000, 437, 1133, -1000, -1000, -1000,
	-1000, 1130, 34566, 43805, 669, 47495, 669, 669, 669, 669,
	669, 669, 669, 34566, -1000, 832, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34566, 1645, 2210, 1154, 153, -1000, -1000, -1000,
	1172, -1000, 566, 514, 568, 511, 155, 1169, 2290, -1000,
	1936, 2293, 2293, -1000, -1000, -1000, -1000, -1000, -1000, 916,
	349, 699, 244, 242, 1128, 2239, 2209, 2208, 1434, 2207,
	663, 2199, 2000, -11, -1000, 1639, 34566, -1000, -1000, 1377,
	1373, 432, 1917, 810, 2043, -1000, -1000, 405, 657, 1978,
	489, 1978, 1978, 1978, 1978, 1978, -46, 1978, 1978, 1978,
	146, 1978, 247, 1978, 1978, 1978, 1978, 1978, 1679, -1000,
	-1000, -1000, 449, 1912, 1926, 2042, 536, -1000, -1000, -1000,
	1949, 40115, 1931, -1000, 1936, -1000, -1000, -1000, 713, -1000,
	-80, 1949, 2262, 1699, -1000, 38270, 2183, 1251, 13247, 2136,
	-1000, -1000, 1206, 2353, -1000, 27797, 831, -1000, 13247, 1799,
	1936, -1000, -1000, 1936, -1000, 757, 843, -1000, 736, 812,
	-1000, -1000, 12613, 12613, 12613, 12613, 12613, 12613, 12613, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1936, 828, 820, 1936, 1936,
	1936, 1936, 1936, -1000, 11345, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1936, 1936, 1936,
	1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
	1936, 13247, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
	1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
	1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
	1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936, 1936,
	1936, 1936, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 672, 672, 33336, 1944, -65, 20221, -1000,
	-1000, -1000, -1000, 18953, 43190, 1106, -1000, -1000, -1000, -1000,
	2198, -1000, -1000, 819, 812, 757, 742, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2324, -1000, -1000, 1813, 650,
	-1000, 1292, 1292, 1292, 1292, 1292, 241, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1983, 47495, 34566, 537,
	1638, 1164, 1637, 49340, 49340, -1000, 330, 43805, 43805, 668,
	403, 43805, 324, 1942, 694, 1941, 693, 1663, 34566, 2226,
	2038, 34566, 1635, 1634, 49340, 49340, 43805, 43805, -1000, 26561,
	1939, -1000, -1000, 1154, -1000, 6228, 13247, 668, 668, 34566,
	34566, 34566, 34566, 34566, -1000, -1000, 1154, 1154, 1154, 1154,
	1114, 2352, 1114, -1000, 1114, -1000, -1000, 13247, -1000, 12613,
	42575, 948, -1000, -1000, 48725, -1000, 1620, 347, -1000, -1000,
	-1000, -1000, -1000, -1000, 1619, -1000, 2166, 663, 663, -1000,
	1521, 663, 1928, -1000, 1105, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 663, -1000, 11979,
	-412, -1000, -1000, 1937, -1000, 331, -1000, -1000, 622, 2036,
	622, 225, 43805, 43805, 43805, -1000, 1978, 47495, -1000, 1978,
	1978, 1978, -47, 1978, 1978, -1000, -1000, 1978, -1000, -1000,
	-1000, -1000, -1000, 1978, -1000, -1000, -1000, 1978, 1978, -1000,
	1978, 1978, -1000, -1000, -1000, -1000, -1000, 43805, 622, 246,
	1933, 622, 43805, 43805, -1000, 134, 132, 129, 127, -1000,
	-1000, -1000, -1000, 124, 100, -1000, -1000, -1000, 1931, 40115,
	2258, 15783, 34566, -70, -1000, -1000, 242, -1000, -1000, -1000,
	-1000, 1949, 1213, 2363, 988, 1911, -1000, -1000, 1930, -1000,
	1433, 807, 1387, 2111, -1000, -1000, -1000, 34566, -1000, 13247,
	13247, 13247, 1280, -1000, 29027, -1000, -1000, -1000, -1000, -1000,
	-1000, 17051, 1046, 12613, 1238, 1111, 12613, 12613, 12613, 12613,
	12613, 12613, 12613, 12613, 12613, 12613, 12613, 12613, 12613, 12613,
	12613, 1300, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1586, -1000, 242, 24659, 8175, 24659, 1320, 1320, 47495, 887,
	887, 887, 887, 887, 887, 36425, 2255, 24025, 24659, 2255,
	2255, 2255, 2255, 2255, 1699, 1803, 1430, 38270, 11345, 8175,
	8175, 8175, 1699, 13247, 13247, 8175, 8175, 10711, 10077, 14515,
	8175, 8175, 2255, 1141, 1430, 18953, 8175, -1000, -1000, 9443,
	-1000, -1000, -1000, -1000, -1000, 1699, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 47495, 47495, 8175, 8175, 8175, 8175,
	1699, 1699, 8175, 8175, 8175, 8175, 8175, 1699, 1699, 1699,
	1699, 8175, 8175, 8175, 8175, 8175, 8175, 8175, 8175, 8175,
	8175, 8175, 8175, 32721, 31491, 34566, 1829, 1817, -1000, 806,
	19587, 1916, -1000, -63, -78, -65, -1000, -1000, 895, -1000,
	-1000, -1000, 8809, -1000, 17685, 2293, 2098, -1000, 27182, -1000,
	-1000, -19, -1000, -1000, -1000, 1960, -1000, 1965, 335, 26,
	1965, 1965, 1965, 1965, 1965, 25, 25, 25, 25, 37,
	-1000, -1000, -1000, -1000, -1000, 1982, 1981, -1000, 1960, 1960,
	1960, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1972, 350, 1964, 1964, 1964, 1964, 1964, -1000, -1000, -1000,
	-1000, 629, 629, 629, -1000, 13247, 2002, 2246, 701, 403,
	2215, 2225, 2215, 584, -1000, 803, 1980, -1000, 802, 539,
	1869, -1000, 253, 1535, 32106, -1000, -1000, -1000, -1000, -1000,
	34566, 34566, 43805, 43805, 43805, 760, -1000, 34566, 1929, -1000,
	-1000, -1000, -1000, -1000, 1863, -1000, 1535, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 34566, -1000, -1000, 1520,
	1430, 1577, 1567, 2239, -1000, -1000, -1000, 1143, -1000, -1000,
	-1000, -1000, 1154, 48725, 48725, 34566, 2239, 1154, 1430, 833,
	2009, 1936, 1699, -1000, -1000, -1000, 1564, -1000, 12613, 1928,
	1928, -1000, 1928, 663, 1320, 1928, -1000, 1801, 1202, 1519,
	34566, -1000, 40115, -12, -1000, -67, 46265, -1000, -1000, -1000,
	622, 46265, -1000, 146, 183, -1000, 692, -1000, 1798, -1000,
	-1000, -1000, -1000, 1978, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 46265, 200, 232, 46265, 1863, 2351, -1000,
	-1000, -1000, -1000, 2287, -1000, -1000, 1936, 1764, -1000, 798,
	-1000, -1000, -1000, -1000, -1000, -1000, 310, -1000, -1000, 1699,
	-1000, 46880, -1000, 2104, 1251, 1251, 13247, -1000, -1000, -1000,
	17685, 2283, -1000, 2117, 2116, 1974, -1000, -1000, 1046, 1150,
	1061, -1000, -1000, 1347, -1000, -1000, -1000, -1000, -1000, 797,
	1936, -1000, -1000, -1000, -1000, -1000, 1655, -1000, -1000, -1000,
	-1000, 1238, 12613, 12613, 12613, 833, 1655, 3872, 1632, 3325,
	887, 1140, 1140, 930, 930, 930, 930, 930, 1006, 1006,
	-1000, -1000, -1000, 1699, -1000, 1782, -1000, -1000, 1430, 792,
	-1000, -1000, -1000, -1000, -1000, -1000, 8175, -1000, -1000, -1000,
	8175, 8175, 8175, 8175, 8175, -1000, 13247, -1000, 1699, 1782,
	1782, 1782, -1000, 1234, 1125, 1568, 1782, 933, 2350, 1782,
	906, 2348, 1782, 1260, 12613, 12613, 12613, 1782, 1782, 8175,
	1146, -1000, 13247, 1699, 1782, -1000, 1601, 1924, 1923, 1782,
	1699, 1918, 1782, 1782, -161, -161, 1699, 1782, 1699, 1782,
	1782, -161, -161, -161, -161, 1782, 1782, 1782, 1782, 1782,
	1782, 1782, 1782, 1782, 1782, 1782, 1782, 1011, 34566, -1000,
	1866, 427, -1000, -1000, -1000, 2243, 30876, -1000, -1000, 37040,
	-1000, 1936, 1936, 1011, 1820, 31491, -1000, -1000, 31491, 48725,
	23391, -1000, 18953, -65, -81, -1000, -1000, 1916, -1000, 1404,
	-1000, -1000, 1430, -1000, 790, 2183, 2255, 4274, 650, -1000,
	-1000, -1000, 1977, 211, -1000, 2134, 846, 846, 861, 1531,
	2130, -1000, -1000, 176, -33, -1000, -1000, -1000, 1371, 25,
	239, 25, 1965, 1965, 322, 1965, -1000, 25, -1000, -1000,
	-1000, 989, 2197, 986, 972, 968, 964, 25, 1518, 1518,
	-1000, -1000, -1000, -1000, 1366, -1000, 1972, -1000, 1364, -1000,
	-1000, -1000, -1000, 176, 176, 176, 176, -1000, -1000, -1000,
	1391, 2035, 47495, -1000, 34566, -1000, 2215, -1000, -1000, -1000,
	291, -1000, -1000, -1000, 2336, -1000, -1000, 47495, 41960, 47495,
	-1000, -1000, 135, 43805, 250, 441, 233, -1000, -1000, 691,
	-1000, 690, -1000, -1000, -1000, -1000, -1000, -1000, 34566, 43805,
	-1000, -1000, -1000, -1000, -1000, 2331, 1562, 1549, -1000, -1000,
	-1000, 1114, 1154, -1000, -1000, 12613, 43805, -1000, 561, -1000,
	1655, -1000, -1000, -1000, 1011, 710, -1000, -1000, -72, -1000,
	-1000, 689, 789, 787, 46265, 688, -1000, 156, 43805, -1000,
	47495, -1000, 2347, 2346, 194, 2345, 43805, -1000, 89, -1000,
	218, -1000, 15783, 24659, 1915, -1000, 781, 898, 867, 638,
	638, -1000, 1065, 638, 2175, 2173, 1002, -1000, 1908, 1514,
	1512, -1000, 2102, -1000, -1000, -1000, 34566, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 22757, 8175, -1000, 833,
	1655, 3714, -1000, 12613, -1000, 8175, -1000, 16417, 1699, 1782,
	1782, 1782, 1782, 1782, 1430, -1000, -1000, -1000, -1000, 451,
	1300, 451, -1000, 1300, -1000, 12613, 12613, -1000, 12613, 12613,
	-1000, -1000, 12613, 3739, 3592, 3575, -259, -1000, 1865, 1112,
	-1000, 13247, 1501, -1000, -1000, -1000, 12613, 12613, -1000, -1000,
	-1000, -1000, -1000, 45650, -1000, -161, -161, -161, -161, -161,
	-1000, -1000, -1000, -1000, -161, -161, -161, -161, -161, -161,
	-161, -161, -161, -161, -161, -161, 216, 1936, -1000, 18319,
	31491, 31491, 31491, 31491, 31491, -1000, 2083, 2082, -1000, 2073,
	2056, 2055, 318, 40115, 1778, 1699, 460, 30876, -1000, 1936,
	-1000, 39500, 779, 707, 706, 705, 8175, 12613, 2331, 31491,
	1784, 1784, -1000, 770, -1000, -1000, -1000, -89, -90, -1000,
	-1000, -1000, 24659, -1000, -1000, -1000, 4231, 2321, 1065, 1065,
	1065, 1065, 276, 2195, 1065, 1065, 1065, 1065, 1065, -219,
	-220, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
	1065, 1065, 78, 1065, 1065, 1065, 1065, 21489, 1065, -1000,
	40730, 636, 2140, 641, 1531, 1531, 1531, -1000, 1531, -1000,
	-1000, -1000, 1969, -1000, 1176, -1000, -1000, -1000, -1000, -1000,
	1936, -424, 1361, 12613, 2361, -1000, 2129, -1000, 2128, 2127,
	1510, -1000, -1000, 1750, 957, 1741, 1739, 944, 25, -1000,
	-1000, 1965, -1000, 937, -1000, -1000, 980, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 907, 1775, -1000, 1773, 1897,
	-1000, 1769, 121, 34566, -1000, -1000, 2242, -1000, -1000, -1000,
	2189, 1065, 1065, 1065, 2022, -1000, -1000, -1000, -1000, 1728,
	1896, -1000, 1292, 47495, 47495, 47495, -1000, -267, 361, -1000,
	43805, 186, 253, 485, 1547, 34566, 43805, -1000, -1000, -1000,
	13247, -1000, -1000, 2239, -1000, 1655, 1535, -1000, -1000, 25,
	34566, -1000, 43805, 941, 45035, 687, 43805, 169, 178, -1000,
	43805, 43805, 2343, 43805, 1863, 1509, -1000, -1000, 310, 44420,
	1531, 817, -1000, -1000, 640, -1000, 209, 1543, 30257, 29642,
	47495, 2126, 2125, 1541, 34566, 47495, -1000, -1000, 48110, 1540,
	13247, -1000, 47495, -1000, -1000, 47495, 47495, -1000, -1000, -1000,
	-1000, 1224, 6907, -1000, -1000, 1699, -1000, 12613, 1655, -1000,
	-1000, 759, -1000, -161, -161, -161, -161, -161, 1699, 1960,
	1960, -1000, 1960, 1964, -1000, 1960, 61, 1960, 47, 1699,
	1699, 1699, 3240, 2666, 1971, 1935, 1601, 12613, 12613, 12613,
	1936, -141, -1000, 1430, 13247, 1824, 1737, -1000, -1000, 1539,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2018, 18319,
	1936, 15149, -1000, 47495, 1864, -1000, 1101, 816, 1084, 1080,
	757, 742, 427, 1963, 2017, 387, -1000, -1000, -1000, -1000,
	2067, -1000, 2058, 2057, -1000, -1000, -1000, 1948, -1000, -1000,
	1870, 1936, 47495, 12613, 779, -1000, 1936, 1936, 1936, 1699,
	1225, 2324, 1784, -1000, -1000, 926, -1000, -1000, -1000, -1000,
	133, 446, 446, 446, 1300, 1065, 2185, 1065, 1065, 1333,
	25927, 1506, 1499, 1490, 1065, 1065, 1330, 1486, 25927, 1485,
	610, 446, 446, 446, 1329, 1482, 280, -1000, 1481, 1362,
	1291, 446, -1000, -233, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 446, 1766, -1000, 1960, 1960, 2124, -1000, 846,
	-1000, -1000, -1000, -1000, -1000, 47495, -1000, 12613, 2234, -1000,
	1655, -117, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 902, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 25, 1479, 25, 1325, -1000, 1316, -1000, -1000, -367,
	1959, 242, -1000, 1065, 945, 940, 1477, 34566, 145, 41960,
	-1000, 1292, 1292, 1292, 187, 166, -1000, 1185, -1000, -1000,
	-1000, 1476, 1475, 1470, 1535, 260, 1183, 237, -1000, 2231,
	-1000, -1000, 1430, 1154, -53, -1000, 178, -1000, -1000, -1000,
	43805, 178, -1000, -1000, 230, 1863, 1863, 43805, 1863, -1000,
	-1000, 48110, 605, 1292, 1292, 2002, 846, 2123, 641, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1534, -1000, 835, -1000, 684, 605, 48110, 1430, 884,
	1191, -1000, 2342, -1000, -1000, -1000, 1655, 22123, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 332, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12613, 12613, 12613, 12613, -1000,
	1601, 1601, 1601, 12613, 1699, 1469, 1430, 12613, 12613, 974,
	-1000, -1000, 2221, 1819, 1841, -1000, -1000, 7541, 1699, 2115,
	1764, -1000, 38270, 1762, -1000, 2324, 18319, 13247, 13247, 13247,
	13247, -1000, -1000, 13247, 1958, -1000, 13247, -1000, -1000, -1000,
	-1000, -1000, 47495, 445, -1000, 13247, 1762, 1576, -1000, 47495,
	47495, 47495, -1000, 1461, 2293, -1000, -245, -1000, 315, 312,
	221, -1000, -1000, -1000, -1000, -1000, 1300, 1065, 25927, 1300,
	-1000, -1000, -1000, -1000, -1000, 1460, 1459, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -236, -1000, 795, 40730, 2220, 2220, 1531, 1531,
	1754, -1000, 1601, 1936, -1000, 1936, 1936, 1936, 1936, 1936,
	1936, 1936, 1936, 1936, 1936, 1936, -1000, -1000, 893, -1000,
	890, 1724, 1715, -1000, 40730, -1000, -1000, 900, -1000, -1000,
	-1000, -1000, -1000, 2280, -1000, 145, -1000, 1453, 402, 408,
	-1000, 401, 398, 395, 334, 320, -1000, -1000, -1000, -1000,
	430, 187, -1000, -73, 1302, 1066, 2170, 166, -1000, 1301,
	1294, 1293, 1287, 226, -1000, -1000, -1000, -1000, 224, 253,
	-1000, 484, 1450, -1000, 2155, 2153, 2232, 178, 2232, 167,
	1863, 1701, -1000, -1000, 1533, -1000, -1000, 1957, 1531, 1531,
	-1000, 1530, -1000, -1000, 47495, -1000, 605, 2214, 2213, 1936,
	2331, 31491, 6907, -1000, -1000, -1000, -1000, 1601, 1601, 1601,
	1601, -1000, -1000, -1000, 177, -1000, -1000, 1601, 1601, 2324,
	2320, 2120, -1000, 1936, -1000, -1000, 1936, 217, -1000, 47495,
	2293, -1000, 1430, 1430, 1430, 1430, 1430, 47495, 1430, 1748,
	1936, 37655, -1000, 40115, 1673, 1673, 1673, -51, -1000, -252,
	1265, 25927, 1936, 25927, 1936, 1936, 519, -1000, 1300, -1000,
	-1000, -1000, -1000, -1000, -1000, 795, -1000, 25927, 1065, 1440,
	-1000, -1000, -1000, -1000, -1000, 596, 47495, -427, 12613, -1000,
	-1000, -1000, -1000, -1000, -1000, 1746, -1000, 242, -1000, -1000,
	494, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2161, 2158,
	535, -1000, 1439, 1438, -1000, 472, 1284, 818, -179, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	436, 1529, -1000, 236, -1000, -1000, 671, 2137, 2143, 2319,
	-1000, 43805, 2232, -1000, -1000, -1000, -1000, 176, 176, 40730,
	2002, 1951, -1000, -1000, -1000, 12613, -1000, 919, 2328, 1843,
	-1000, -1000, -1000, -1000, -1000, 1699, 193, -282, -1000, -1000,
	1032, 13247, 2360, -1000, 1841, 1936, -1000, 242, -1000, -1000,
	1744, -1000, -1000, -1000, 779, -1000, -1000, -1000, 1936, 1936,
	2316, -1000, 1699, 47495, 1699, 47495, 1886, 47495, 1057, -1000,
	-1000, -1000, 1264, -1000, 34566, -1000, -1000, -1000, -1000, 1601,
	795, -1000, 443, 6012, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1259, -1000, -1000, 1281, 466, 219, -1000, 2230,
	-1000, 1948, 1258, 2153, 2315, 2151, 2147, -1000, 1426, -269,
	-1000, 1738, 1947, 40730, 1655, 1720, -1000, 47495, 2326, 2309,
	-1000, -1000, 2101, -265, -285, 1699, 257, 257, 1842, 18319,
	1841, 1699, -1000, -1000, 24659, 919, -337, -1000, 1673, -1000,
	1673, 1699, 1699, 1673, 1256, -1000, 1946, -427, -1000, 795,
	-1000, 544, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13247, 13247, 25293, 6012, 205, -1000, 204,
	-1000, -1000, -1000, 1422, -1000, 1053, -1000, 1415, -1000, 2308,
	2307, -1000, 249, 795, 40730, 1731, -1000, 919, 2114, -164,
	13247, 13247, -1000, 2097, -1000, -1000, -1000, 259, -1000, 1027,
	434, 1023, -1000, 1320, -1000, 1825, -1000, 1722, -1000, 1292,
	1720, -255, -1000, -1000, -1000, -1000, -1000, 1936, 47495, -1000,
	-1000, 1526, 1503, -1000, 1195, 1478, 290, 284, 4924, -1000,
	-1000, -1000, -1000, -433, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1409, 1401, 41345, -1000, 1693, 795, -1000, 579, -1000,
	47495, -1000, 1430, 1780, -1000, 1430, -279, 1173, -1000, -1000,
	-1000, -1000, -1000, 47495, 1699, 24659, 254, -1000, -1000, 1245,
	47495, 1678, -1000, -1000, -1000, 1074, -1000, 13247, 6012, 2273,
	2270, 2268, 2212, 24659, 5972, -1000, -1000, -1000, -1000, 159,
	1535, 795, -1000, 577, 1756, -1000, 2229, 13247, -283, 259,
	-1000, 38885, -1000, -1000, 1390, -214, -1000, 1673, 2016, 214,
	1160, 6012, -1000, 1458, -434, 496, 242, 709, 12613, -1000,
	-1000, -1000, 43805, -1000, 1936, 47495, 1936, -1000, -295, -1000,
	40115, -1000, -1000, 1389, -1000, 2015, 2014, 2341, -1000, -1000,
	-1000, -1000, -1000, -1000, 6012, 38270, -1000, -437, 6012, 4298,
	-1000, -1000, -1000, 5621, -1000, -1000, -1000, -1000, 282, -1000,
	-1000, 1655, 1535, 13881, -1000, -1000, -1000, -1000, 433, -1000,
	-1000, 2357, -1000, 2337, 796, 796, -1000, -438, -1000, 5572,
	-439, 665, 6012, 1199, -1000, 13247, -1000, 709, -1000, 1601,
	1699, -1000, 2013, 12613, 2011, -1000, -1000, -1000, 626, 1277,
	-1000, 5525, 1151, 6012, -1000, -443, 664, 6012, -1000, 1120,
	-1000, -1000, -1000, -314, 1070, -315, -1000, -1000, -1000, -1000,
	-1000, 5355, -1000, -444, 6012, -1000, -317, -1000, 662, 5158,
	-445, -1000, -1000, 658, 6012, -1000,
}

var yyPgo = [...]int{
	0, 2809, 2806, 15, 176, 2805, 289, 2804, 2802, 45,
	2801, 28, 23, 21, 30, 2800, 2465, 2463, 2461, 2457,
	2453, 2799, 17, 2797, 2796, 2445, 2783, 2775, 2443, 2441,
	2435, 2433, 2771, 2769, 2768, 2428, 2423, 2408, 2, 2766,
	25, 2765, 5, 162, 184, 2764, 3, 2762, 2761, 14,
	2760, 2759, 2406, 2757, 2756, 2752, 106, 2751, 2404, 2402,
	2748, 2400, 2396, 2747, 2746, 2387, 2385, 2381, 2745, 190,
	2744, 2743, 2742, 282, 2741, 171, 2740, 2738, 2736, 138,
	2732, 340, 133, 58, 126, 307, 2730, 20, 60, 280,
	2725, 7, 2724, 124, 2723, 119, 2721, 2708, 180, 2707,
	160, 139, 102, 2706, 2705, 181, 2699, 2695, 2692, 116,
	2686, 2679, 185, 79, 2678, 2674, 152, 2672, 55, 178,
	56, 66, 2668, 2667, 2666, 2661, 2660, 27, 232, 2659,
	123, 159, 2658, 2654, 87, 2653, 2650, 198, 2649, 2648,
	2647, 151, 50, 2646, 2645, 49, 2643, 63, 57, 2642,
	41, 2641, 157, 2640, 2635, 2634, 2632, 2629, 62, 2628,
	67, 2625, 153, 130, 1163, 2622, 2620, 10, 8, 2615,
	44, 11, 4, 51, 26, 72, 54, 144, 140, 98,
	2613, 32, 46, 145, 113, 2611, 104, 82, 43, 2610,
	165, 2609, 74, 173, 154, 161, 169, 2608, 2607, 2605,
	193, 2604, 146, 96, 2603, 99, 1618, 188, 2602, 2601,
	114, 2600, 2599, 2598, 2595, 2594, 81, 137, 2593, 2592,
	187, 191, 189, 186, 2591, 42, 2778, 3851, 167, 3373,
	109, 170, 2590, 52, 2587, 2578, 2576, 2930, 120, 35,
	94, 183, 2572, 117, 110, 48, 2570, 2569, 2567, 2566,
	2564, 2563, 2560, 2558, 197, 100, 2557, 2556, 2555, 2554,
	105, 174, 2553, 150, 149, 148, 2552, 164, 40, 2547,
	2546, 143, 118, 2544, 2536, 2535, 2529, 142, 89, 168,
	34, 2528, 128, 147, 121, 2527, 93, 2526, 2524, 61,
	1407, 2523, 2521, 2520, 2519, 115, 101, 2518, 2517, 2515,
	37, 2512, 2511, 2510, 2508, 2506, 75, 38, 36, 78,
	13, 2504, 2501, 86, 127, 39, 33, 2500, 6, 9,
	12, 2499, 2498, 2497, 2495, 2492, 2491, 2490, 95, 2487,
	2486, 68, 2485, 2484, 2482, 47, 2480, 2475, 2474, 163,
	132, 103, 182, 112, 19, 2473, 2472, 18, 2471, 141,
	2468, 59, 2467, 69, 2450, 2447, 65, 2437, 2431, 73,
	2425, 2421, 177, 2110, 3215, 2419, 179, 129, 53, 64,
	2415, 90, 2389, 0, 763, 175, 80, 2383, 2375, 2352,
}

var yyR1 = [...]int{
	0, 372, 372, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 9,
	10, 4, 4, 5, 5, 91, 91, 6, 90, 90,
	186, 186, 186, 186, 185, 185, 92, 92, 89, 89,
	98, 7, 7, 8, 8, 11, 11, 72, 72, 12,
	13, 13, 13, 13, 375, 375, 107, 107, 105, 105,
	106, 106, 183, 183, 14, 14, 14, 190, 190, 195,
	195, 195, 198, 198, 198, 198, 172, 173, 174, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 345, 345, 354, 354, 354, 355, 355, 353, 353,
	353, 353, 353, 357, 357, 358, 358, 356, 356, 356,
	356, 360, 360, 361, 361, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 348,
	348, 348, 35, 35, 35, 35, 35, 36, 36, 36,
	36, 36, 36, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 363, 363, 364, 364, 365, 365,
	366, 366, 366, 366, 367, 367, 367, 367, 367, 368,
	368, 368, 368, 368, 368, 368, 369, 369, 370, 370,
	2, 326, 326, 327, 327, 328, 328, 328, 328, 329,
	329, 330, 330, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 26, 222, 222, 219, 219, 219, 220,
	220, 221, 221, 221, 347, 347, 347, 341, 341, 341,
	343, 343, 342, 342, 342, 344, 344, 349, 349, 349,
	349, 349, 351, 351, 351, 351, 351, 351, 352, 352,
	352, 350, 350, 50, 50, 51, 51, 51, 161, 161,
	161, 15, 15, 15, 15, 15, 21, 23, 23, 39,
	39, 40, 24, 24, 24, 24, 41, 41, 42, 27,
	27, 27, 27, 27, 27, 48, 48, 48, 47, 47,
	46, 46, 46, 46, 46, 46, 25, 25, 25, 25,
	49, 49, 44, 44, 43, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 28, 28, 28,
	28, 28, 28, 20, 325, 325, 325, 38, 38, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 54,
	54, 291, 292, 292, 292, 292, 292, 292, 292, 292,
	278, 278, 279, 279, 279, 279, 279, 268, 268, 268,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 244, 244, 244, 244, 250, 250, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 249, 249, 249,
	249, 249, 249, 249, 249, 251, 251, 251, 251, 251,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 253, 253, 253,
	253, 253, 253, 253, 253, 277, 277, 255, 255, 254,
	254, 254, 271, 271, 272, 272, 272, 269, 269, 269,
	270, 270, 258, 259, 273, 260, 260, 260, 261, 261,
	261, 262, 262, 267, 267, 266, 266, 266, 266, 266,
	266, 263, 263, 263, 263, 264, 264, 265, 276, 276,
	276, 276, 276, 256, 37, 311, 311, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 312, 312, 212,
	212, 213, 213, 281, 281, 310, 310, 309, 309, 308,
	308, 308, 290, 290, 305, 305, 305, 305, 305, 305,
	305, 305, 285, 285, 285, 284, 284, 286, 286, 289,
	289, 307, 307, 306, 306, 282, 282, 282, 313, 313,
	313, 313, 313, 283, 283, 283, 283, 283, 314, 287,
	287, 288, 288, 288, 319, 320, 318, 318, 318, 318,
	318, 124, 124, 124, 294, 294, 294, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 296, 296, 296,
	296, 296, 297, 297, 297, 297, 297, 297, 371, 371,
	371, 298, 298, 298, 299, 299, 299, 299, 299, 300,
	300, 300, 300, 301, 301, 302, 302, 303, 303, 304,
	304, 323, 323, 322, 322, 52, 53, 57, 57, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 160, 160, 160, 217, 217, 317, 315, 315, 316,
	316, 17, 17, 55, 55, 346, 346, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 321, 321, 321, 19,
	19, 58, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 86, 204, 204,
	203, 203, 202, 202, 202, 205, 205, 205, 205, 242,
	242, 242, 60, 60, 60, 64, 64, 67, 67, 67,
	65, 66, 29, 30, 30, 30, 30, 31, 218, 218,
	62, 62, 63, 63, 63, 63, 78, 78, 377, 377,
	61, 378, 69, 70, 70, 71, 71, 71, 208, 208,
	75, 75, 75, 73, 73, 73, 74, 74, 80, 80,
	84, 84, 84, 84, 83, 83, 83, 83, 163, 163,
	168, 234, 234, 144, 144, 164, 164, 169, 169, 169,
	170, 170, 171, 171, 171, 171, 171, 166, 166, 165,
	165, 167, 132, 132, 232, 232, 232, 232, 231, 231,
	231, 231, 231, 231, 88, 88, 93, 93, 95, 95,
	95, 95, 95, 95, 99, 146, 146, 117, 117, 118,
	118, 118, 118, 118, 130, 130, 182, 182, 181, 181,
	184, 184, 94, 96, 96, 96, 96, 102, 102, 103,
	103, 104, 104, 216, 216, 239, 239, 239, 108, 108,
	108, 110, 109, 109, 109, 109, 109, 109, 111, 111,
	97, 97, 293, 293, 280, 246, 246, 247, 379, 379,
	379, 379, 112, 112, 114, 115, 115, 113, 113, 113,
	113, 113, 119, 119, 116, 120, 120, 120, 120, 121,
	121, 85, 85, 85, 85, 85, 85, 85, 85, 201,
	201, 123, 123, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 140, 140, 140, 140, 140, 140, 125,
	125, 125, 125, 125, 125, 125, 79, 79, 141, 141,
	141, 101, 100, 100, 82, 82, 81, 81, 142, 142,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 135, 135, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 376,
	376, 137, 136, 136, 136, 136, 136, 136, 76, 76,
	76, 76, 76, 240, 240, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	153, 153, 77, 77, 151, 151, 152, 154, 154, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 127, 127, 127, 127, 127, 127, 127,
	127, 129, 129, 129, 155, 155, 143, 143, 87, 156,
	156, 157, 158, 158, 159, 159, 162, 175, 175, 175,
	176, 176, 176, 176, 131, 131, 177, 177, 177, 126,
	126, 126, 126, 126, 126, 126, 180, 180, 179, 179,
	178, 178, 178, 178, 178, 178, 187, 187, 145, 145,
	148, 148, 147, 149, 188, 188, 192, 192, 192, 192,
	189, 189, 193, 193, 193, 193, 196, 196, 197, 197,
	197, 194, 194, 194, 191, 191, 191, 236, 236, 236,
	199, 199, 209, 209, 206, 206, 207, 207, 200, 200,
	257, 257, 257, 215, 215, 214, 214, 214, 210, 210,
	210, 211, 211, 233, 233, 229, 229, 235, 235, 230,
	230, 237, 237, 238, 238, 324, 324, 274, 274, 334,
	334, 275, 275, 335, 335, 337, 337, 332, 332, 333,
	333, 336, 336, 32, 338, 338, 339, 339, 340, 340,
	340, 340, 33, 34, 34, 34, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 228, 228, 228, 228,
	228, 228, 226, 226, 226, 226, 226, 373, 374,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	0, 2, 3, 3, 1, 3, 0, 2, 1, 3,
	4, 1, 3, 1, 3, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 3, 11, 9, 11, 5, 5, 16, 12, 9,
	4, 0, 3, 0, 2, 2, 1, 3, 1, 1,
	2, 2, 2, 0, 2, 1, 2, 2, 2, 2,
	2, 0, 1, 1, 2, 3, 3, 5, 3, 3,
	4, 5, 4, 4, 2, 2, 2, 2, 2, 0,
	2, 2, 9, 10, 9, 5, 7, 7, 7, 7,
	8, 4, 6, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 2, 2, 2, 3, 3, 2, 3, 3, 2,
	2, 2, 2, 2, 1, 3, 0, 3, 1, 3,
	0, 1, 1, 1, 1, 3, 1, 3, 3, 0,
	2, 5, 5, 5, 7, 5, 0, 3, 0, 3,
	4, 0, 1, 1, 3, 2, 3, 3, 3, 0,
	1, 1, 2, 2, 2, 2, 1, 2, 2, 3,
	3, 3, 3, 4, 2, 3, 3, 3, 3, 0,
	3, 0, 3, 3, 1, 1, 1, 3, 2, 1,
	1, 3, 3, 2, 1, 1, 3, 1, 2, 5,
	4, 6, 4, 3, 3, 6, 5, 5, 4, 3,
	5, 1, 3, 1, 1, 1, 1, 1, 0, 2,
	2, 1, 1, 1, 1, 1, 4, 5, 8, 1,
	2, 5, 7, 10, 8, 11, 1, 2, 5, 5,
	5, 5, 6, 3, 5, 1, 1, 1, 1, 3,
	1, 1, 1, 2, 1, 1, 2, 4, 2, 4,
	2, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 4,
	3, 2, 4, 3, 0, 2, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 5,
	5, 5, 1, 1, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 6, 8,
	3, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 3,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 1,
	4, 4, 3, 3, 2, 4, 5, 2, 3, 4,
	2, 2, 3, 3, 3, 3, 3, 4, 1, 1,
	1, 1, 1, 6, 6, 4, 4, 4, 5, 3,
	3, 3, 3, 3, 4, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	3, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 2, 3, 1, 0, 3, 3, 0, 2,
	2, 0, 1, 0, 1, 1, 1, 1, 2, 2,
	2, 5, 5, 4, 4, 4, 4, 4, 2, 1,
	2, 1, 2, 2, 3, 2, 2, 2, 2, 1,
	1, 1, 1, 3, 2, 1, 1, 0, 3, 1,
	1, 0, 1, 5, 4, 0, 1, 1, 2, 2,
	3, 2, 0, 1, 3, 5, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 3, 3, 3, 3, 3, 1, 10, 11,
	11, 12, 12, 3, 3, 3, 2, 1, 5, 1,
	1, 0, 2, 2, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 2, 3, 3, 3, 3,
	3, 4, 4, 5, 3, 3, 4, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 3,
	3, 3, 2, 2, 4, 4, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 5, 8, 1, 4, 5, 4, 5, 5,
	5, 5, 8, 0, 1, 0, 2, 0, 4, 0,
	2, 0, 2, 0, 2, 1, 5, 1, 3, 5,
	4, 3, 5, 3, 8, 10, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 4, 5,
	1, 2, 2, 4, 3, 6, 5, 3, 9, 2,
	2, 0, 1, 2, 0, 1, 7, 1, 3, 8,
	8, 3, 3, 3, 5, 3, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 0, 1, 1, 3,
	2, 3, 3, 4, 3, 5, 5, 5, 4, 4,
	4, 2, 2, 2, 6, 2, 4, 4, 4, 5,
	8, 6, 3, 5, 4, 2, 4, 3, 2, 4,
	5, 6, 2, 6, 6, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 3, 2, 0,
	1, 1, 2, 4, 1, 1, 1, 2, 4, 4,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 3, 0, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	1, 3, 1, 1, 2, 2, 4, 2, 6, 1,
	4, 6, 3, 2, 0, 3, 0, 3, 1, 3,
	1, 3, 4, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 2, 2,
	12, 11, 1, 3, 3, 4, 3, 0, 0, 3,
	4, 3, 1, 3, 3, 2, 1, 1, 3, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 4, 8, 8, 8,
	8, 4, 6, 7, 7, 7, 9, 4, 7, 5,
	4, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 3, 3, 3,
	1, 3, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -372, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -92, 29,
	-54, 180, -53, 183, 182, 219, 184, 212, 64, 342,
	-67, 345, 346, -377, -218, 270, 271, 20, 37, 347,
	349, 30, 31, 233, 287, 289, 314, -4, 520, 181,
	343, 214, 213, 26, -6, -7, -373, 68, 639, -158,
	15, -69, -378, -69, -72, 9, 10, 8, 442, -69,
	-291, -216, 108, 68, 23, -211, -222, 88, 433, 188,
	-220, 283, 285, -209, -210, -219, 243, 253, 44, 199,
	198, 254, 189, 283, 189, 190, 192, 433, 188, 226,
	225, 283, 285, 189, -113, -237, -226, -227, 301, 72,
	-225, 459, 463, 466, 467, 472, 291, 81, 323, 324,
	315, 325, 209, 412, 284, 290, 293, 316, 606, 326,
	328, 329, 453, 454, 192, 202, 624, 308, 210, 517,
	254, 634, 627, 295, 402, 489, 342, 358, 350, 373,
	518, 577, 265, 341, 419, 490, 298, 258, 321, 578,
	408, 414, 268, 345, 491, 428, 234, 579, 262, 264,
	263, 248, 458, 269, 36, 215, 369, 304, 243, 580,
	493, 573, 492, 237, 505, 35, 27, 236, 431, 99,
	581, 332, 416, 494, 390, 333, 232, 582, 522, 302,
	415, 365, 314, 117, 241, 280, 334, 583, 391, 395,
	584, 420, 288, 279, 512, 585, 586, 335, 587, 191,
	294, 495, 588, 244, 422, 299, 389, 200, 519, 211,
	48, 223, 423, 393, 511, 399, 589, 331, 590, 591,
	592, 593, 312, 310, 496, 311, 313, 255, 260, 497,
	53, 186, 397, 396, 398, 261, 418, 378, 376, 594,
	595, 303, 206, 596, 597, 377, 18, 598, 599, 426,
	306, 600, 601, 602, 498, 513, 488, 603, 604, 417,
	392, 394, 242, 116, 605, 309, 413, 318, 521, 292,
	607, 337, 222, 217, 427, 327, 608, 609, 610, 611,
	612, 286, 285, 346, 319, 499, 347, 266, 613, 614,
	500, 615, 616, 252, 235, 430, 421, 52, 404, 617,
	322, 338, 407, 343, 229, 501, 502, 503, 504, 7,
	259, 300, 514, 515, 411, 320, 267, 253, 256, 380,
	224, 618, 619, 367, 368, 344, 227, 219, 111, 429,
	572, 283, 339, 51, 230, 620, 621, 257, 231, 348,
	297, 370, 189, 133, 374, 419, 180, 409, 410, 416,
	-285, 417, 225, 228, -242, 189, -204, 408, 288, 309,
	463, 231, 232, 190, 191, 32, 421, 420, 412, -237,
	193, 348, -78, 184, 220, -113, -49, 72, 272, -49,
	29, 72, 72, 36, 72, 347, 411, 411, 75, 521,
	234, 21, -363, -344, 318, -362, -342, 181, 180, 10,
	182, 323, 324, 325, 190, 8, 30, 606, 207, 326,
	327, 6, 212, 328, 329, 226, 9, 330, -347, 74,
	72, -225, 21, -363, -344, 318, -213, -212, 340, 399,
	-91, 576, -89, -98, -239, -237, -226, 74, -200, 194,
	344, -71, 5, -9, -3, 520, -176, 17, 16, -75,
	54, 55, -70, -83, 124, -85, -237, -122, 91, -128,
	28, 72, -225, 24, -127, 301, 220, -123, -150, -226,
	-149, -101, 133, -241, 122, 123, 130, 92, 176, -135,
	-133, -134, -136, -138, -139, 74, 73, 82, 75, 76,
	77, 78, 83, 84, 85, -229, -227, -224, 459, 463,
	466, 467, 472, -147, -373, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 58, 59, 457,
	188, 443, 444, 371, 8, 445, 446, 447, 516, 209,
	451, 94, 47, 561, 432, 441, 440, 439, 437, 438,
	434, 436, 435, 453, 454, 195, 433, 128, 442, 476,
	477, 478, 479, 480, 481, 482, 483, 485, 486, 484,
	460, 461, 462, 464, 465, 468, 469, 470, 471, 473,
	474, 475, 523, 185, 181, 184, 90, 23, 25, 524,
	240, 93, 356, 385, 450, 16, 20, 203, 187, 374,
	201, 132, 197, 204, 274, 276, 180, 62, 525, 275,
	409, 526, 527, 528, 529, 364, 362, 273, 530, 10,
	26, 213, 247, 531, 360, 182, 238, 97, 98, 533,
	41, 40, 307, 277, 214, 534, 361, 535, 536, 19,
	65, 205, 11, 199, 228, 633, 537, 287, 13, 115,
	14, 538, 539, 540, 541, 194, 110, 190, 623, 60,
	245, 542, 354, 543, 544, 545, 546, 547, 355, 87,
	548, 549, 107, 550, 56, 487, 32, 233, 574, 448,
	551, 552, 38, 37, 384, 388, 383, 553, 400, 108,
	17, 30, 554, 555, 221, 387, 353, 382, 575, 556,
	557, 250, 63, 340, 363, 637, 33, 66, 218, 336,
	305, 42, 88, 15, 246, 61, 34, 455, 112, 638,
	366, 196, 225, 559, 424, 249, 560, 113, 359, 576,
	207, 109, 349, 183, 317, 271, 208, 562, 289, 563,
	239, 114, 410, 564, 565, 452, 29, 212, 270, 352,
	198, 566, 251, 282, 272, 281, 567, 568, 296, 43,
	635, 622, 189, 39, 96, 386, 351, 381, 193, 449,
	226, 278, 5, 44, 31, 405, 9, 330, 64, 67,
	375, 372, 569, 379, 636, 12, 570, 456, 520, 425,
	89, 571, 406, -69, -69, -69, -189, 344, -196, -193,
	420, 421, -194, -197, -191, -150, 399, 603, 604, 419,
	374, 418, -229, -237, -226, 301, 220, 133, 460, 461,
	462, 94, 371, 443, 476, 434, 436, 432, 435, 433,
	28, 477, 24, 85, 478, 457, 195, 8, 176, 464,
	465, 479, 480, 481, 58, 437, 438, 516, 128, 91,
	482, 483, 83, 485, 486, 561, 442, 59, 484, 188,
	470, 469, 468, 471, 445, 446, 84, 439, 440, 441,
	47, 474, 473, 475, -2, -6, 6, -113, -292, -279,
	-283, -229, -226, -227, -228, 216, 204, -314, 72, -225,
	301, 220, 50, 86, 55, 54, 201, 190, 192, 442,
	-207, 195, -207, 226, 225, -221, 251, -207, -207, 189,
	-220, 100, 100, -55, -113, -346, -341, -347, -206, 195,
	-229, -206, -206, -206, -206, -206, -206, -206, -113, 177,
	-105, -113, 72, 29, -205, 108, 12, 433, 188, 189,
	225, 226, 192, -287, 11, 110, 229, 229, 229, 230,
	229, -203, 411, 413, 227, 414, 415, 12, -86, 108,
	19, -373, -176, -176, 125, 72, 347, 193, -63, -3,
	-13, -11, -12, -9, 100, -130, 23, 29, 29, 74,
	51, 29, -44, -43, -45, 258, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 269, 29, -325, 68,
	-274, 399, 72, -338, -339, -113, 75, 75, 66, 309,
	66, 69, 193, 69, 66, -364, 319, 68, -364, 285,
	319, 320, 253, 283, 192, -364, -364, 285, -364, -364,
	-364, -364, -364, 411, -364, -364, -364, 321, 322, -364,
	409, 192, -364, -364, -364, -364, -364, 71, 66, 69,
	309, 66, 11, 66, -311, 133, 332, 333, 334, 335,
	331, 309, 336, 337, 338, 229, 339, -4, -89, 69,
	-180, -373, 189, 424, -8, -6, -373, 21, 22, -374,
	70, -91, -177, 19, 30, -131, 75, 78, -159, -162,
	-85, -237, 50, -73, 21, 22, 80, 11, -232, 90,
	88, 89, 107, -231, 23, 72, -225, -226, 74, -227,
	-228, 177, -85, -125, 110, 91, 108, 109, 93, 119,
	118, 129, 122, 123, 124, 125, 126, 127, 128, 120,
	121, 132, 100, 101, 102, 103, 104, 105, 106, -201,
	-373, -101, -373, 177, -373, 177, 178, 179, 177, -128,
	-128, -128, -128, -128, -128, -128, -373, 177, 177, -373,
	-373, -373, -373, -373, -9, -142, -85, 520, -373, -373,
	-373, -373, -373, -373, -373, -373, -373, -373, -373, -373,
	-373, -373, -373, -153, -85, -373, -373, -376, -137, -373,
	-376, -137, -376, -137, -376, -373, -376, -137, -376, -137,
	-376, -376, -137, -376, -373, -373, -373, -373, -373, -373,
	-373, -373, -373, -373, -373, -373, -373, -373, -373, -373,
	-373, -373, -373, -373, -373, -373, -373, -373, -373, -373,
	-373, -373, -373, -200, -200, 11, -105, -106, -116, -237,
	69, -190, -195, 422, 424, 344, -194, -194, -236, -229,
	74, 28, 100, 29, 177, -158, -69, 70, 69, -283,
	-244, -250, -252, -251, -253, -248, -249, 371, 374, 378,
	376, 372, 377, 133, 375, 380, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 390, 29, 215, 367, 368,
	369, 370, 391, 392, 393, 394, 395, 396, 397, 398,
	350, 373, 518, 351, 352, 353, 354, 355, 356, 358,
	359, 360, 361, 362, 363, 364, 365, -244, -244, -244,
	-244, 72, 229, -226, -314, 68, -229, -113, -222, -220,
	72, 91, 72, -112, -229, -237, -119, -229, -237, 252,
	-350, -349, -341, -344, -207, -221, -341, 257, 255, 256,
	69, 193, 69, 193, 71, -105, 24, 66, -107, -113,
	72, 72, -112, -119, -343, -341, -344, -238, -237, -223,
	523, 185, 21, 181, 184, 90, 23, 25, 524, 240,
	93, 356, 133, 460, 461, 462, 385, 450, 16, 20,
	203, 94, 187, 371, 374, 201, 132, 197, 204, 274,
	276, 443, 476, 180, 62, 525, 434, 436, 432, 435,
	275, 433, 409, 526, 527, 528, 529, 364, 362, 273,
	28, 530, 10, 477, 26, 213, 247, 22, 531, 126,
	360, 182, 238, 97, 98, 533, 41, 40, 307, 24,
	277, 214, 85, 534, 478, 361, 535, 536, 19, 65,
	205, 11, 199, 228, 633, 537, 287, 13, 457, 115,
	14, 538, 539, 540, 541, 195, 194, 110, 190, 623,
	60, 245, 8, 542, 354, 543, 544, 545, 546, 547,
	355, 176, 87, 548, 549, 107, 550, 56, 464, 465,
	487, 45, 32, 233, 479, 480, 574, 481, 448, 551,
	552, 38, 37, 384, 388, 383, 553, 400, 58, 108,
	17, 437, 438, 30, 554, 555, 516, 221, 387, 353,
	382, 575, 556, 557, 128, 250, 63, 91, 340, 482,
	483, 83, 363, 637, 33, 66, 218, 336, 305, 42,
	88, 15, 246, 61, 34, 455, 112, 638, 485, 366,
	196, 225, 559, 424, 249, 560, 113, 486, 359, 576,
	207, 109, 349, 183, 561, 442, 317, 271, 208, 562,
	289, 59, 563, 239, 114, 484, 188, 410, 564, 6,
	565, 452, 29, 212, 270, 352, 198, 566, 251, 282,
	272, 281, 567, 49, 568, 296, 43, 470, 469, 468,
	471, 635, 57, 445, 446, 622, 189, 39, 96, 386,
	351, 381, 193, 449, 226, 84, 278, 5, 44, 31,
	405, 9, 330, 64, 67, 439, 440, 441, 47, 375,
	372, 569, 474, 379, 473, 475, 636, 95, 12, 570,
	456, 520, 425, 89, 571, 406, 69, -205, 74, -241,
	-85, -207, -207, -113, -113, -113, -113, -113, -205, -205,
	-205, -205, -202, 11, 110, 11, -202, -202, -85, -128,
	-341, 435, 124, -237, 72, 72, 347, 72, 33, -44,
	-44, 74, -44, 69, 100, -44, 70, -142, -324, 623,
	69, -340, 23, 424, 425, 400, -366, 189, 228, 225,
	66, -366, -362, 327, -343, -342, -341, -364, -365, -229,
	-364, -364, -364, 411, -364, -364, -364, -364, -364, -364,
	-364, -364, -347, -366, 287, 69, -366, -343, -341, 331,
	331, 331, 331, 331, 331, -98, 23, -179, -178, -230,
	-226, -227, -228, 216, -229, -223, -113, 425, 426, -9,
	-186, 87, 9, 110, 69, 18, 69, -175, 25, 26,
	177, -129, 51, 75, 78, -208, 49, -113, -85, -85,
	-85, -140, 83, 91, 84, 85, -231, 216, 124, -238,
	-230, -227, -226, 301, 220, -223, -128, -141, -147, -101,
	79, 110, 108, 109, 93, -128, -128, -128, -128, -128,
	-128, -128, -128, -128, -128, -128, -128, -128, -128, -128,
	-240, 72, 74, 72, -230, -81, -84, 124, -85, -237,
	-230, -127, 83, -127, -229, -229, -73, -230, 412, -230,
	-73, -73, -73, -73, -73, -374, 69, -374, -9, -81,
	-81, -81, -374, -85, -85, -81, -81, -150, 74, -81,
	-150, 74, -81, -128, 448, 449, 450, -81, -81, -73,
	-151, -152, 95, -150, -81, -374, -128, -229, -229, -81,
	-82, -81, -81, -81, -374, -374, -84, -81, -84, -81,
	-81, -374, -374, -374, -374, -81, -81, -81, -81, -81,
	-81, -81, -81, -81, -81, -81, -81, -115, 87, -113,
	-88, -93, -95, -96, -117, -100, -373, -94, -97, -113,
	-101, 72, 487, -113, -105, -375, 11, 67, -375, 69,
	177, -193, -196, 69, 423, 425, 426, -190, -261, 132,
	66, 86, -85, -230, -238, -176, -75, -294, -279, -281,
	-282, -283, -305, 204, -313, 196, 198, 199, 44, -284,
	205, 190, 45, -245, -269, 404, 405, -255, 68, -254,
	68, -254, 379, 371, 374, 372, -254, -254, -254, -254,
	-254, -260, 374, -260, -260, -260, -260, 372, 68, 68,
	-255, -255, -255, -271, 68, -271, 366, -272, 68, -272,
	-272, -272, -272, -245, -245, -245, -245, -314, -314, -314,
	-85, -233, 67, 23, 192, -267, -266, -263, -264, -265,
	-262, 28, 24, -267, -50, 240, 210, 177, 68, 177,
	243, 244, -345, 69, 28, -351, 284, -113, 220, -113,
	-113, -341, -341, -347, -321, 208, 203, -113, 69, 69,
	-113, 74, 72, 72, -130, -288, 11, 110, -205, -237,
	-237, -113, -130, -205, -79, 216, 67, -376, -374, 72,
	-128, -43, -127, 70, -114, 87, 74, -339, -239, 399,
	425, -367, 124, -229, -366, -367, -370, 520, 193, 70,
	69, -364, -367, 305, 287, -367, 11, -312, 19, -100,
	-373, -374, 69, 177, -57, -56, 185, 182, 183, 186,
	187, -317, 402, 181, 237, 236, 222, -374, -185, 34,
	35, -229, 52, -131, -131, -162, -199, 19, 11, 47,
	47, -74, 57, 83, 84, 85, 177, -373, -141, -128,
	-128, -128, -79, 90, -374, 69, -374, 177, -82, -81,
	-81, -81, -81, -81, -85, -374, -374, -374, -374, 69,
	67, 23, -374, 67, -374, 11, 11, -374, 11, 11,
	-374, -374, 11, -128, -128, -128, -374, -374, -81, -154,
	-152, 97, -85, -374, -374, -374, 69, 69, -374, -374,
	-374, -374, -163, 455, -163, -374, -374, -374, -374, -374,
	-163, -163, -163, -163, -374, -374, -374, -374, -374, -374,
	-374, -374, -374, -374, -374, -374, -183, 112, -113, 29,
	69, -108, -110, -109, -111, 56, 60, 62, 57, 58,
	59, 412, 63, -216, -88, -99, 47, -373, -118, 112,
	-120, 23, -239, 64, 194, 65, -373, -373, -183, 67,
	-88, -88, -116, -237, 124, -195, -198, 427, 424, 430,
	72, 74, 177, -177, -298, -295, 69, 112, 630, 402,
	489, 419, 28, 374, 490, 132, 81, 491, 234, 36,
	190, 493, 431, 332, 494, 495, 200, 496, 497, 498,
	293, 499, 343, 500, 501, 502, 503, 320, 5, -283,
	68, 72, -289, -226, 45, -284, -286, -284, -284, -289,
	72, -289, 45, 83, 91, -258, -259, -273, -276, -256,
	23, 633, 407, 28, 66, 402, 196, 45, 44, 199,
	81, -270, 406, 75, -260, 75, 466, -260, -254, -254,
	-254, 379, -254, -260, -261, 133, 29, -261, 133, -261,
	133, -261, 133, -261, 133, -260, -277, 74, -277, 75,
	-271, 75, 70, 66, -229, -172, -113, -264, -263, -265,
	374, 419, 132, 431, -51, 8, 9, 10, -229, -326,
	-327, -328, -229, 110, 245, 246, -229, -354, 317, -349,
	285, 294, 90, 16, 520, 193, 193, -113, -341, -121,
	12, 72, 72, -202, -205, -128, -344, 231, 232, -183,
	189, -340, 193, 177, 177, -367, 193, 308, -343, -229,
	11, 11, 305, 11, -343, 341, -178, -230, 69, -217,
	-284, -323, -282, -283, -322, 197, 204, -217, 204, 201,
	-284, 205, 196, 197, -214, -284, 193, 23, -217, -217,
	-290, 100, -217, 32, 32, 112, 69, 74, 74, 53,
	-113, -80, -173, 124, -230, -82, -79, 90, -128, -84,
	124, -238, -374, -374, -374, -374, -374, -374, -243, 133,
	371, 215, 369, 362, 389, 376, 404, 367, 405, -240,
	-243, -240, -128, -128, -128, -128, -128, 11, 11, 11,
	517, -158, 99, -85, 96, -128, -128, -229, -168, -373,
	-163, -163, -163, -163, -163, -164, -163, -164, -164, -164,
	-164, -164, -164, -164, -164, -164, -164, -164, -126, 29,
	47, -373, -9, -373, -188, -192, -150, -226, -228, 216,
	301, 220, -93, -95, -95, -93, -95, 56, 56, 56,
	61, 56, 61, 61, 56, 56, -109, -239, -374, -374,
	-146, 239, -373, 33, -239, -120, 190, 190, 190, -82,
	-128, -121, -88, -121, -121, 177, 424, 428, 429, -295,
	16, -290, -290, -290, -290, 419, 374, 132, 29, -290,
	-290, -290, -290, -290, 492, 492, -290, -290, -290, -290,
	-290, -290, -290, -290, -290, -290, -290, 344, -290, -290,
	-290, -290, -296, -371, 74, 75, 81, 323, 293, 72,
	-225, -223, -290, -307, -306, -229, -226, 196, -313, 44,
	-313, -289, -289, -289, -289, 68, 83, -373, 634, 75,
	-128, 9, 45, 45, 45, 74, 70, -261, 133, 70,
	70, -261, 133, -260, -254, -261, 133, 72, 133, -261,
	133, 70, 69, 70, 69, 70, 69, -124, 581, 91,
	-113, -174, 23, 29, -290, -290, -290, 66, 70, 69,
	-244, -229, -229, -229, -357, 520, 290, -355, -353, 296,
	297, 298, 299, 300, -344, 295, -351, 292, 74, 72,
	-113, -341, -85, -130, -260, -113, -343, 124, 124, -229,
	193, -343, 305, -369, 520, -343, -343, 11, -343, 74,
	-56, 68, -278, 72, -225, -289, -210, 196, 72, 72,
	72, -226, -225, -227, -228, 72, -226, -225, -227, -228,
	-229, 45, 45, 72, -113, -229, -278, 72, -85, -229,
	-229, -229, -186, 69, -83, -374, -128, 177, -164, -164,
	-164, -164, -164, -374, -255, -255, -255, -272, -255, 355,
	-255, 355, -374, -374, -374, 19, 19, 19, 19, -374,
	-128, -128, -128, -373, -77, 452, -85, 69, 69, -234,
	72, -187, 66, -188, -145, -148, -147, -373, -9, -374,
	-179, 6, 520, -184, -229, -121, 69, 100, 100, 100,
	100, -103, -102, 66, 67, -104, 66, -102, 56, 56,
	56, -182, 68, 69, -147, -373, -184, -128, -120, -373,
	-373, -373, -374, 69, -158, -121, -299, -300, 113, 511,
	-301, 552, -296, -296, -296, -240, -290, 29, -290, -290,
	75, -371, 74, 74, 74, -290, -290, 75, 74, -371,
	74, 206, 209, 211, -296, -296, -296, 75, 74, -297,
	28, 507, 365, 508, 509, 510, 74, 28, 75, 28,
	75, -296, 504, -296, 70, 69, -255, -255, 45, -286,
	-181, -229, -128, 23, -134, 432, 441, 440, 439, 437,
	438, 434, 436, 435, 453, 454, -261, 133, -260, 74,
	-260, 75, 75, 581, 68, -9, -172, -290, 72, 133,
	72, 133, 74, -113, -329, -330, -331, 81, 519, 91,
	247, 248, 206, 249, 250, 251, -328, -244, -244, -244,
	-360, -361, -359, 293, 315, 316, 301, -358, -356, 310,
	311, 312, 313, 90, 74, 74, 74, -352, 284, 90,
	293, 16, 23, -205, -332, -203, -369, -343, -369, 287,
	-343, -278, -160, 209, 210, -244, -244, -233, -286, 45,
	72, -215, 193, 23, 193, -160, -278, 29, 182, 87,
	-90, 11, -173, -173, 124, -260, 72, -128, -128, -128,
	-128, -374, -374, -374, -128, -374, 74, -128, -128, -144,
	112, 27, -187, 69, -374, -374, 47, -374, -374, 69,
	-158, -192, -85, -85, -85, -85, -85, 68, -85, -181,
	239, -374, -120, -216, -181, -181, -181, 74, -176, -302,
	513, -373, 414, -373, 414, 512, 45, -240, -290, -371,
	-240, 74, 74, 505, 506, -309, -308, 67, 200, 81,
	-306, -175, -175, -289, -289, 70, 69, -374, -373, -261,
	133, -261, 133, 70, 70, -307, -172, -174, 72, 133,
	19, -173, -331, 74, 251, 247, 251, 251, 251, 251,
	252, -348, 81, 291, -359, 302, 586, 286, 317, 75,
	75, 111, 30, 31, -356, 75, 75, 75, 75, -353,
	16, 520, -351, 292, 74, 74, -333, 38, -335, 39,
	-368, 23, -369, -368, 305, 70, 72, -245, -245, 68,
	-289, -289, 72, -229, -160, 28, 28, -373, -121, -88,
	-83, -374, -374, -374, -374, -76, 110, 520, -374, -374,
	-158, 16, 45, -148, -145, 47, -9, -373, -229, -176,
	-181, 70, -147, -118, -239, -374, -374, -374, 414, -303,
	514, 75, -371, -373, -371, -373, -373, -373, 254, -240,
	-308, -371, -290, 74, 207, -229, -268, 636, 635, -128,
	70, -9, 238, -174, 36, 36, 243, 244, 74, 74,
	28, 303, 176, 28, 75, 176, 458, 292, 74, 72,
	293, -257, 194, -336, 43, -334, -275, 42, 16, -341,
	-368, -307, -233, 68, -128, -315, -316, 112, -155, 13,
	-173, -374, 518, 63, 521, -169, 114, 113, -142, 9,
	-145, -9, 70, -120, -373, -373, 16, -374, -181, -374,
	-181, -127, 72, -181, 100, 75, -113, -374, -310, -309,
	-172, 239, -22, -3, -11, -12, -13, -14, -16, -52,
	-17, -18, -23, -24, -19, -58, -59, -67, -65, -66,
	-62, -61, -27, -25, -28, -20, -29, -30, -31, -35,
	-36, -26, -37, 94, 195, 273, 342, 75, 28, 75,
	28, 306, 293, 23, -182, 75, -335, 16, -337, 40,
	41, 74, 520, 70, 68, -307, -374, 69, -229, -156,
	14, 16, 53, 519, 522, -374, -170, 93, -171, 111,
	458, -132, 75, 176, -170, -188, -374, -293, -280, -230,
	-315, -300, -374, -374, -374, -374, -374, 75, 68, -268,
	-161, 241, 242, -172, -85, -85, 72, -48, -235, 276,
	277, 278, -230, -38, -22, 304, 304, 74, 38, 114,
	74, 16, 16, 285, -310, -307, 70, -316, 47, -166,
	456, -157, -85, -143, -87, -85, 53, -171, 116, 117,
	239, 116, 117, -127, -374, 69, -244, -374, -304, 515,
	-373, -181, -172, 72, 72, -39, -40, 95, 96, 274,
	275, 279, -244, 69, 639, 74, 74, 28, 290, 21,
	-344, 70, -310, 223, -165, -167, -229, 69, 520, 90,
	-229, -374, -280, -246, 488, 24, 75, -181, 70, -174,
	99, 97, -40, -85, -38, 19, 19, 19, 28, -230,
	99, -22, 307, -310, 224, 69, 23, -87, 521, -171,
	23, -239, 74, 488, -374, -319, -320, 66, -15, -21,
	-14, -11, -12, -13, 342, 520, 94, -38, 96, 639,
	-49, 75, -9, -47, -46, 75, -49, 281, 91, 282,
	72, -128, -344, -373, -167, -168, 522, -239, -247, 74,
	-320, 66, -319, 66, 10, 9, -172, -38, -91, 639,
	-38, 99, 97, -41, -42, 98, -22, 69, 280, -128,
	221, -379, 83, 28, 333, -318, 208, 203, 206, 29,
	-318, 639, 99, 639, 195, -38, 99, 97, -42, -85,
	-46, -374, -374, 66, -128, 66, 202, 28, 83, 99,
	94, 639, 195, -38, 96, 533, 66, 533, 99, 639,
	-38, 533, 195, 99, 639, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1272, 851, 851, 0, 851,
	953, -2, 705, 0, 0, 0, 0, -2, 824, 825,
	826, 830, 831, 846, 848, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, -2, 0, 1348,
	0, 849, 838, 839, 41, 0, 0, 2207, 2, 1280,
	0, 860, 853, 0, 851, 851, 851, 67, 68, 0,
	99, 0, 0, 0, 954, 0, 0, 0, 1346, 1346,
	251, 1346, 1346, 0, 1362, 249, 0, 1343, 1358, 1359,
	1360, 0, 0, 0, 1344, 0, 1344, 1344, 1344, 1344,
	1344, 1344, 1344, 0, 770, 987, 989, 990, 991, 1371,
	1372, 2202, 2203, 2204, 2205, 2206, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124,
	2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134,
	2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 0, 0, 0, 815, 0, 781, 782, 783,
	0, 785, 0, 0, 0, 0, 0, 795, 798, 802,
	0, 1280, 1280, 582, 583, 584, 820, 821, 809, 822,
	0, 0, 56, 0, 0, 934, 326, 328, 0, 348,
	0, 351, 354, 1377, 832, 0, 0, 1402, 1403, 0,
	0, 0, 0, 0, 2102, 194, 265, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 0, 196, 196, 196,
	2110, 196, 0, 196, 196, 196, 196, 196, 264, 254,
	255, 256, 0, 0, 0, 2102, 0, 562, 559, 560,
	57, 0, 46, 58, 1296, 955, 956, 957, 0, 1349,
	827, 0, 855, 0, 39, 0, 1286, 0, 0, 863,
	861, 862, 852, 0, 874, 904, 0, 1001, 1835, 1007,
	-2, -2, -2, 1748, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1693, 0, 0, 0, 0, 0, 1790, 1080,
	1081, 1082, 1083, 1084, 1085, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, -2, -2, -2, 1239, 1240, 0, 2202, 2203,
	2204, 2205, 2206, 1313, 0, 1175, 1176, 1177, 1178, 1179,
	1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1212, 1213, 1214, 1215, 1216, 1816, 1879, 1767,
	1884, 1712, 0, 1704, 1781, 1908, 1909, 0, 1824, 2183,
	0, -2, 1933, 1872, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 2193, 2194, 1774, 1722, 1832, 1873, 1713,
	1734, 1753, 1802, 1803, 1805, 1837, 1838, 1856, 1865, 1883,
	1694, 1695, 1696, 1797, 1798, 1905, 1904, 1903, 1906, 1939,
	1937, 1940, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689,
	1690, 1691, 1692, 1697, 1698, 1699, 1700, 1701, 1703, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1714, 1715, 1716, 1721,
	1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1749, 1750, 1752, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768,
	1769, 1770, 1771, 1772, 1773, 1775, 1776, 1777, 1778, 1779,
	1780, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1791,
	1792, 1793, 1794, 1795, 1796, 1799, 1800, 1801, 1804, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1817,
	1818, 1821, 1822, 1823, 1825, 1826, 1827, 1828, 1829, 1830,
	1831, 1833, 1834, 1836, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867,
	1868, 1869, 1870, 1871, 1874, 1875, 1876, 1877, 1878, 1880,
	1881, 1882, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1907, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1934, 1935, 1936, 1938, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1348, 1348, 0, 84, 2160, 0, 1320,
	-2, -2, 1322, 0, 0, 0, -2, -2, -2, -2,
	1705, -2, 1239, 0, 0, 0, 0, 1693, 1694, 1695,
	1696, 1702, 1704, 1712, 1713, 1717, 1718, 1719, 1720, 1722,
	1731, 1734, 1748, 1751, 1753, 1767, 1774, 1781, 1790, 1797,
	1798, 1802, 1803, 1805, 1816, 1819, 1820, 1824, 1832, 1835,
	1837, 1838, 1839, 1856, 1865, 1872, 1873, 1879, 1883, 1884,
	1903, 1904, 1905, 1906, 1908, 1909, 1920, 1930, 1931, 1932,
	1933, 1937, 1939, 1940, 100, 1272, 851, 101, 0, 392,
	393, 0, 0, 0, 0, 0, 0, 607, 1365, 1366,
	2196, 2197, 2198, 2199, 2200, 2201, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 1346,
	251, 0, 0, 751, 0, 752, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	771, 78, 772, 815, 774, 0, 0, 1346, 1346, 0,
	0, 0, 0, 0, 609, 610, 815, 815, 815, 815,
	812, 0, 812, 792, 812, 810, 811, 0, 797, 0,
	0, 0, 805, 806, 0, 833, 0, 0, 840, 842,
	843, 844, 845, 841, 0, 850, 0, 0, 0, 330,
	0, 0, 350, 332, 0, 335, 336, 337, 338, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 353, 0,
	1375, 1378, 837, 1393, 1394, 0, 1404, 1405, 200, 0,
	200, 0, 0, 0, 0, 163, 196, 0, 165, 196,
	196, 196, 0, 196, 196, 172, 173, 196, 175, 176,
	177, 178, 179, 196, 181, 182, 183, 196, 196, 186,
	196, 196, 189, 190, 191, 192, 193, 263, 200, 0,
	0, 200, 0, 0, 544, 0, 0, 0, 0, 549,
	550, 551, 552, 0, 0, 555, 556, -2, 45, 0,
	0, 0, 0, 0, 42, 63, 0, 856, 857, 62,
	2208, 0, 50, 0, 0, 1281, 1284, 1285, 1273, 1274,
	1277, 0, 0, 858, 864, 865, 854, 0, 875, 0,
	0, 0, 0, 905, 0, 908, 909, 910, 911, 912,
	913, 0, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1008,
	0, 1022, 0, 0, 0, 0, 0, 0, 0, 1073,
	1074, 1075, 1076, 1077, 1078, 0, 863, 0, 0, 863,
	863, 863, 863, 863, 0, 0, 1048, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 863, 0, 1231, 0, 0, 1142, 1151, 0,
	1143, 1152, 1144, 1153, 1145, 0, 1146, 1154, 1147, 1155,
	1148, 1149, 1156, 1150, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 987,
	0, 85, 87, 0, 0, 2160, 1323, 1324, 518, 1337,
	1338, 1339, 0, 1335, 0, 1280, 860, 624, 0, 394,
	410, 507, 422, 423, 424, 497, 426, 499, 499, 0,
	499, 499, 499, 499, 499, 515, 515, 515, 515, 515,
	468, 469, 470, 471, 472, 0, 0, 445, 497, 497,
	497, 449, 487, 488, 489, 490, 491, 492, 493, 494,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	502, 502, 504, 504, 504, 504, 504, 410, 410, 410,
	410, 0, 0, 0, 606, 0, 1363, 0, 0, 251,
	-2, 0, -2, 0, 982, 0, 0, 992, 0, 0,
	111, 281, 267, 110, 0, 245, 250, 246, 247, 248,
	0, 0, 0, 0, 258, 766, 1345, 0, 759, 76,
	760, 761, 762, 763, 764, 260, 765, 988, 1373, 1374,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 0, 773, 816, 0,
	818, 0, 0, 934, 778, 779, 780, 611, 786, 787,
	788, 794, 815, 0, 0, 0, 934, 815, 796, 1036,
	799, 1159, 0, 823, 835, 834, 0, 847, 0, 327,
	329, 331, 349, 0, 0, 352, 355, 0, 0, 0,
	0, 1396, 0, 1398, 1400, 0, 0, 201, 202, 203,
	200, 0, 195, 0, 218, 266, 0, 164, 0, 198,
	166, 167, 168, 196, 170, 171, 174, 180, 184, 185,
	187, 188, 262, 0, 0, 0, 0, 161, 0, 545,
	546, 547, 548, 557, 554, 59, 0, 0, 1298, 1301,
	1302, 1303, 1304, 1305, 1369, 1370, 0, 828, 829, 0,
	37, 0, 1287, 0, 0, 0, 0, 1276, 1278, 1279,
	0, 0, 1261, 0, 0, 866, 859, 40, 1002, 1003,
	1004, 1006, 1023, 0, 1025, 1027, 906, 907, 876, 0,
	1241, 1242, 1243, 1244, 1245, -2, 1013, 1014, 1038, 1039,
	1040, 0, 0, 0, 0, 1036, 1018, 0, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1072, 1173, 1174, 0, 1250, 0, 1046, 870, 871, 0,
	1251, 1070, 1260, 1071, 1246, 1079, 1044, 1248, 1249, 1247,
	0, 0, 0, 0, 0, 1041, 0, 1312, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 1054, 1253, 0,
	1054, 1253, 0, 0, 1806, 1918, 1698, 0, 0, 0,
	1237, 1234, 0, 0, 0, 1160, 0, 0, 0, 0,
	0, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 0, 986,
	0, 914, 916, 917, 918, -2, 0, 922, 923, 995,
	1042, 1371, 0, -2, 0, 0, 74, 75, 0, 0,
	0, 1321, 0, 0, 0, 90, 91, 86, 1325, 0,
	-2, 1332, 1333, 1241, 0, 1286, 863, 681, 395, 397,
	398, 399, 0, 589, 597, 0, 0, 587, 589, 589,
	0, 585, 586, 402, 510, 508, 509, 425, 0, 515,
	0, 515, 499, 499, 499, 499, 454, 515, 457, 460,
	461, 518, 0, 518, 518, 518, 518, 515, 0, 0,
	446, 447, 448, 437, 0, 438, 502, 440, 0, 441,
	442, 443, 444, 403, 404, 405, 406, 603, 604, 605,
	0, 0, 0, 96, 0, 105, -2, 525, 526, 527,
	0, 522, 1347, 106, 0, 283, 284, 0, 221, 0,
	252, 253, 113, 0, 0, 268, 0, 389, 390, 0,
	753, 0, 755, 257, 757, 767, 768, 758, 0, 0,
	79, 817, 775, 776, 777, 999, 0, 0, 789, 813,
	814, 812, 815, 793, 807, 0, 0, 800, 0, 836,
	935, 333, 334, 356, 82, 0, 1376, 1395, 0, 1399,
	1401, 0, 204, 206, 0, 0, 155, 0, 0, 197,
	0, 169, 0, 0, 0, 0, 0, 553, 0, 60,
	0, 1297, 0, 0, 706, 707, -2, 744, 1355, 744,
	744, 730, 572, 744, 0, 0, 0, 64, 51, 0,
	2000, 54, 0, 1282, 1283, 1275, 0, 1340, 1341, 1262,
	1263, 97, 867, 1024, 1026, 1028, 0, 1044, 1015, 1036,
	1019, 0, 1016, 0, 1010, 0, 1118, 0, 0, 0,
	0, 0, 0, 0, 1049, -2, 1116, 1117, 1119, 0,
	0, 0, 1123, 0, 1126, 0, 0, 1166, 0, 0,
	1167, 1131, 0, 0, 0, 0, 0, 1137, 1272, 0,
	1235, 0, 0, 1140, 1141, 1161, 0, 0, 1162, 1163,
	1164, 1165, 1105, 0, 1106, 0, 0, 0, 0, 0,
	1112, 1113, 1114, 1115, 885, 885, 885, 885, 885, 885,
	885, 885, 885, 885, 885, 885, 0, 0, 985, 0,
	0, 0, 0, 0, 0, 958, 0, 0, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 927, 0,
	929, 0, 995, 0, 0, 0, 1044, 0, 999, 0,
	999, 999, 81, 0, 994, 88, 89, 0, 0, 95,
	519, 520, 0, 220, 391, 625, 0, 0, 572, 572,
	572, 572, 0, 0, 572, 572, 572, 572, 572, 0,
	0, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 0, 572, 572, 572, 572, 0, 572, 396,
	0, 590, 0, 0, 589, 589, 589, 588, 589, 580,
	590, 581, 0, 411, 0, 413, 414, 415, 416, 417,
	0, 0, 0, 0, 0, 514, 0, 539, 541, 0,
	0, 421, 511, 0, 518, 0, 0, 518, 515, 452,
	453, 499, 458, 518, 462, 479, 0, 463, 480, 464,
	481, 465, 482, 466, 483, 518, 0, 495, 0, 0,
	439, 0, 621, 0, 1364, 98, 0, 528, 529, 530,
	0, 572, 572, 572, 0, 285, 286, 287, 983, 0,
	222, 223, 0, 0, 0, 0, 993, 123, 0, 282,
	0, 0, 0, 0, 0, 0, 0, 77, 261, 784,
	0, 612, 613, 934, 791, 1037, 801, 803, 804, 515,
	0, 1397, 0, 0, 0, 0, 0, 0, 216, 199,
	0, 0, 0, 0, 162, 0, 1299, 1300, 0, 0,
	589, 0, 731, 732, 0, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1356, 1357, 0, 0,
	0, 573, 0, 739, 740, 0, 0, 52, 53, 1288,
	38, 50, 0, 877, 1252, 0, 1017, 0, 1020, 1047,
	872, 0, 1086, 885, 885, 885, 885, 885, 0, 497,
	497, 1220, 497, 504, 1223, 497, 1225, 497, 1228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1232, 1139, 1238, 0, 0, 0, 878, 879, 881,
	1107, 1108, 1109, 1110, 1111, 1090, 886, 1091, 1092, 1094,
	1095, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1306, 0,
	0, 0, 1291, 0, 999, 1314, 0, 0, 0, 0,
	2196, 2197, 915, 949, 951, 0, 946, 959, 960, 962,
	0, 964, 0, 0, 967, 968, 969, 936, 921, 1043,
	924, 0, 0, 0, 995, 933, 0, 0, 0, 0,
	0, 1272, 999, 72, 73, 0, 92, 93, 94, 626,
	693, 0, 0, 0, 0, 572, 0, 572, 572, 0,
	0, 0, 0, 0, 572, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 662, 663, 667, 668, 669, 670, 671, 678,
	679, 680, 0, 0, 591, 497, 497, 0, 595, 587,
	596, 574, 576, 577, 579, 0, 412, 0, 0, 420,
	512, 0, 538, 540, 542, 543, 498, 450, 475, 500,
	501, 451, 476, 518, 459, 455, 477, 516, 517, 467,
	484, 515, 0, 515, 0, 505, 0, 608, 622, 0,
	0, 0, 96, 572, 0, 0, 0, 0, 229, 0,
	225, 0, 0, 0, 131, 0, 114, 115, 116, 118,
	119, 0, 0, 0, 112, 0, 270, 0, 273, 274,
	754, 756, 1000, 815, 1387, 984, 216, 205, 207, 208,
	0, 216, 219, 156, 0, 157, 159, 0, 158, 558,
	708, 0, 741, 0, 0, 1363, 587, 0, -2, 711,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 0, 737, 0, 713, 0, 741, 0, 734, 0,
	0, 55, 48, 97, 97, 1087, 1021, 0, 1089, 1093,
	1088, 1096, 1101, 1121, 1217, 515, 1221, 1222, 1224, 1226,
	1227, 1229, 1125, 1122, 1124, 0, 0, 0, 0, 1132,
	0, 0, 0, 0, 0, 0, 1236, 0, 0, 883,
	882, 65, 0, 1306, 1289, 1308, 1310, 0, 0, 0,
	0, -2, 1677, 0, 940, 1272, 0, 0, 0, 0,
	0, 943, 950, 0, 0, 944, 0, 945, 963, 965,
	966, 919, 0, 0, 925, 0, 0, -2, 932, 0,
	0, 0, 942, 0, 1280, 71, 695, 684, 0, 0,
	0, 694, 627, 628, 629, 630, 0, 572, 0, 0,
	634, 635, 637, 638, 639, 0, 0, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	672, 673, 674, 675, 676, 677, 656, 657, 658, 659,
	660, 661, 0, 666, 564, 0, 1277, 1277, 589, 589,
	0, 938, 0, 0, 513, 1159, 1159, 1159, 1159, 1159,
	1159, 1159, 1159, 1159, 0, 0, 456, 478, 518, 496,
	518, 0, 0, 623, 0, 96, 98, 0, 533, 534,
	535, 536, 537, 0, 97, 230, 231, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 224, 226, 227, 228,
	149, 132, 133, 0, 0, 0, 0, 124, 125, 0,
	0, 0, 0, 0, 120, 121, 122, 269, 0, 0,
	272, 0, 0, 790, 1389, 1383, 209, 216, 209, 0,
	160, 0, 710, 742, 0, 410, 410, 0, 589, 589,
	733, 0, 1353, 1354, 0, 728, 741, 0, 0, 0,
	999, 0, 0, 868, 873, 1218, 1219, 0, 0, 0,
	0, 1133, 1134, 1135, 1168, 1138, 1233, 0, 0, 1272,
	0, 0, 66, 0, 1311, -2, 0, 0, 83, 0,
	1280, 1315, 1316, 1317, 1318, 1319, 947, 0, 952, 0,
	0, 995, 930, 0, 0, 0, 0, 0, 70, 697,
	0, 0, 0, 0, 0, 0, 0, 631, 0, 636,
	632, 640, 641, 664, 665, 563, 567, 0, 572, 0,
	592, 593, 594, 575, 578, 0, 0, 407, 0, 473,
	485, 474, 486, 503, 506, 0, 103, 0, 531, 532,
	0, 98, 232, 233, 234, 235, 237, 238, 0, 0,
	0, 109, 0, 0, 134, 0, 0, 0, 0, 144,
	145, 146, 147, 148, 126, 127, 128, 129, 130, 117,
	0, 0, 271, 0, 276, 277, 1350, 1391, -2, 0,
	152, 0, 209, 154, 217, 709, 743, 400, 401, 0,
	1363, 0, 712, 727, 729, 0, 736, 0, 1264, 49,
	97, 1127, 1129, 1128, 1130, 0, 0, 0, 1157, 1158,
	887, 0, 0, 1309, 1290, 0, 1294, 0, 941, 69,
	0, 937, 926, 928, 995, 996, 997, 998, 0, 682,
	0, 696, 0, 0, 0, 0, 0, 0, 0, 633,
	568, 569, 0, 571, 0, 939, 418, 408, 409, 0,
	565, 96, 0, 56, 239, 240, 241, 242, 150, 151,
	135, 136, 0, 138, 139, 0, 0, 0, 279, 0,
	275, 936, 0, 1383, 0, 1385, 0, 1382, 0, 210,
	153, 0, 0, 0, 735, 0, 747, 0, 1269, 0,
	869, 1136, 0, 0, 0, 0, 0, 0, 884, 0,
	1293, 0, 948, 931, 0, 0, 693, 685, 0, 687,
	0, 0, 0, 0, 0, 570, 0, 407, 102, 566,
	104, 288, 96, 359, 360, 361, 362, 363, 364, 365,
	366, 367, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 384, 385,
	386, 387, 388, 0, 0, 0, 56, 0, 140, 0,
	142, 143, 278, 0, 36, 0, 1390, 0, 1388, 0,
	0, 1384, 0, 565, 0, 0, 746, 0, 0, 897,
	0, 0, 1169, 0, 1172, 880, 888, 0, 891, 0,
	0, 0, 902, 0, 889, 1307, -2, 0, 972, 0,
	0, 699, 686, 688, 689, 690, 691, 0, 0, 419,
	96, 0, 0, 108, 0, 0, 1365, 0, 0, -2,
	-2, -2, 1367, 0, 357, 137, 141, 280, 1351, 1352,
	1392, 0, 0, 0, 714, 0, 565, 748, 0, 47,
	0, 1270, 1271, 1265, 1266, 1268, 1170, 0, 892, 893,
	894, 895, 896, 0, 0, 0, 0, 683, 698, 0,
	0, 0, 98, 289, 290, 0, 299, 0, 56, 0,
	0, 0, 313, 0, 56, 1386, 1380, 211, 212, 213,
	215, 565, 738, 0, 898, 899, 0, 0, 0, 0,
	903, 0, 973, 974, 0, 0, 700, 0, 598, 56,
	0, 56, 300, 0, 0, 0, 0, 0, 0, 1368,
	243, 358, 0, 715, 0, 0, 0, 1267, 0, 890,
	0, 971, 977, 0, 692, 599, 600, 0, 96, 291,
	292, 293, 294, 295, 56, 0, 297, 0, 56, 56,
	309, 310, 311, 56, 318, 320, 321, 322, 0, 324,
	325, 314, 214, 0, 900, 901, 1171, 970, 978, 976,
	601, 0, 602, 0, 0, 0, 107, 0, 57, 56,
	0, 0, 56, 0, 306, 0, 312, 0, 323, 0,
	1825, 975, 0, 0, 0, 614, 616, 617, 0, 0,
	615, 56, 0, -2, 302, 0, 0, 56, 307, 0,
	319, 749, 750, 0, 0, 0, 618, 619, 620, 296,
	298, 56, 304, 0, 56, 979, 0, 981, 0, 56,
	0, 980, 303, 0, -2, 305,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 639,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	57935, 611, 57936, 612, 57937, 613, 57938, 614, 57939, 615,
	57940, 616, 57941, 617, 57942, 618, 57943, 619, 57944, 620,
	57945, 621, 57946, 622, 57947, 623, 57948, 624, 57949, 625,
	57950, 626, 57951, 627, 57952, 628, 57953, 629, 57954, 630,
	57955, 631, 57956, 632, 57957, 633, 57958, 634, 57959, 635,
	57960, 636, 57961, 637, 57962, 638, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:550
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:554
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:561
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:596
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:602
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:608
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:619
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:635
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:642
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:663
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:672
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:680
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:684
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:693
		{
			yyVAL.into = nil
		}
	case 51:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:697
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:701
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:705
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:720
		{
			yyVAL.with = nil
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyVAL.with = yyDollar[2].with
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:734
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:740
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:746
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:754
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:774
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 66:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:787
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
			yyVAL.str = InsertStr
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:803
		{
			yyVAL.str = ReplaceStr
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:809
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 70:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:815
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:819
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:823
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:827
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:832
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:833
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:837
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:847
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:851
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:866
		{
			yyVAL.partitions = nil
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:870
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:876
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:880
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:887
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:896
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:900
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:906
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:910
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:914
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:924
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:928
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:932
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:937
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:942
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:947
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:962
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:967
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:972
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 103:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:976
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:982
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:988
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:996
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1004
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1008
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1012
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1031
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1040
		{
			yyVAL.accountNames = nil
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1049
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1057
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1067
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1073
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1077
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1094
		{
			yyVAL.accountLimitItems = nil
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1104
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1108
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1122
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1126
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1131
		{
			yyVAL.passLockItems = nil
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1159
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1175
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1179
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1183
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1191
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1203
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1208
		{
			yyVAL.str = ""
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1223
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1228
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1233
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1237
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1241
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1247
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1252
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1256
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1260
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1264
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1268
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1298
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1338
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1346
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1370
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1374
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1378
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1382
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1390
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1400
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1409
		{
			yyVAL.strs = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1428
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1450
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1462
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1467
		{
			yyVAL.grantAssumption = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1471
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1475
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1479
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1483
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1487
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1491
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1496
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1500
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1505
		{
			yyVAL.boolean = false
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.boolean = true
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1516
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1528
		{
			yyVAL.procedureParams = nil
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1542
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1548
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1552
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1560
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1565
		{
			yyVAL.characteristics = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1579
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1597
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1613
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1621
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1627
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1633
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1637
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1669
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1673
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1701
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1751
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1769
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1773
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1779
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1783
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1787
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1791
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1795
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1799
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1805
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1809
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1813
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1819
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1823
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = BeforeStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = AfterStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = InsertStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.str = UpdateStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.str = DeleteStr
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1852
		{
			yyVAL.triggerOrder = nil
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1876
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1882
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1886
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1908
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1913
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1918
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 305:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1924
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1936
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1942
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1956
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1960
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1968
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1993
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2029
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2037
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2047
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2057
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2105
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2109
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.statement = &Resignal{}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2123
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2127
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2139
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2145
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2150
		{
			yyVAL.exprs = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2154
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2158
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2168
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2209
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2223
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2239
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2256
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2266
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2271
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2275
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2279
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2285
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2344
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2357
		{
			yyVAL.columnType = ColumnType{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2370
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2388
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2424
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2433
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2529
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2553
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2686
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, BinaryCollate: true}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2710
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2718
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, BinaryCollate: true}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2726
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, BinaryCollate: true}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2734
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, BinaryCollate: true}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2779
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2784
		{
			yyVAL.sqlVal = nil
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2788
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2793
		{
			yyVAL.sqlVal = nil
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2797
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2801
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2807
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2811
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2819
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2829
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2837
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2850
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2854
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2860
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2903
		{
			yyVAL.boolean = false
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.boolean = true
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2912
		{
			yyVAL.charsetCollates = nil
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2930
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2942
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2948
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2952
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2956
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2960
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2966
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2970
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2976
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.colKeyOpt = colKey
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2990
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2994
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2998
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3010
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3020
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3032
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3052
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3060
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = ""
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3067
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3076
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.str = yyDollar[1].str
		}
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3082
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3086
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3091
		{
			yyVAL.indexOptions = nil
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3095
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3111
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3120
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3126
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3142
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3146
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3150
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3154
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3163
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3185
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3195
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3200
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3204
		{
			yyVAL.str = yyDollar[1].str
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3209
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3219
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3223
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3229
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3233
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3239
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3247
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 598:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3253
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 599:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3257
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 600:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3261
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 601:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3265
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 602:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3269
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3275
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3280
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3288
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3292
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3298
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = ""
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3321
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3327
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3339
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3343
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3347
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3351
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3355
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3360
		{
			yyVAL.boolean = true
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.boolean = true
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3368
		{
			yyVAL.boolean = false
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3373
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3377
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3391
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3403
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3407
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3411
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3423
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3431
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3439
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3443
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3495
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3531
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3553
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3558
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3562
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3566
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3576
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = ""
		}
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 683:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3617
		{
			yyVAL.str = yyDollar[1].str
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3621
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3625
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3629
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3633
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3643
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 692:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = ""
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = string("")
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3714
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3727
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3731
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 709:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3737
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3744
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3751
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3755
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 714:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3764
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 715:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3768
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3782
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3792
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3797
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3802
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3807
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3817
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3822
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3826
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3830
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3837
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3859
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3864
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3868
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3872
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3876
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 738:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3882
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3888
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3892
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3897
		{
			yyVAL.columnOrder = nil
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3905
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
		}
	case 746:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3916
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3926
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 749:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3932
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 750:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3936
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3952
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3956
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3964
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3968
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3974
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3982
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3986
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3994
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4002
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4010
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4018
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4026
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4034
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4043
		{

		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4057
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4061
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4067
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4073
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4078
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4082
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 775:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4086
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4090
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4094
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4099
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4103
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4107
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4111
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4115
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 784:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4123
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4127
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4131
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4135
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4139
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4143
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 790:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4147
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 791:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4152
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4157
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4161
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4165
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4169
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4173
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4179
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4187
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4191
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4196
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 801:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4200
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4205
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 803:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4209
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 804:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4213
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4217
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4221
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4227
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4233
		{
			yyVAL.boolean = false
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.boolean = true
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4253
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4257
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4261
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4267
		{
			yyVAL.showFilter = nil
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4271
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4275
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4285
		{
			yyVAL.str = ""
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.str = SessionStr
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.str = GlobalStr
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4299
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4303
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.statement = &Begin{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4323
		{
			yyVAL.statement = &Begin{}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4327
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4331
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4337
		{
			yyVAL.statement = &Commit{}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4343
		{
			yyVAL.statement = &Rollback{}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4349
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4359
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4363
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4367
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4378
		{
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4387
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4416
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			setAllowComments(yylex, true)
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4426
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4432
		{
			yyVAL.bytes2 = nil
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4436
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4442
		{
			yyVAL.str = UnionStr
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4446
		{
			yyVAL.str = UnionAllStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4450
		{
			yyVAL.str = UnionDistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4455
		{
			yyVAL.byt = 0
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4459
		{
			yyVAL.byt = 1
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = SQLCacheStr
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = ""
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = ""
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4485
		{
			yyVAL.str = DistinctStr
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = ""
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = StraightJoinHint
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4500
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4508
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4527
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4531
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4537
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4541
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4549
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4555
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4559
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 880:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4565
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4570
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4578
		{
			yyVAL.exprs = nil
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4582
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4587
		{
			yyVAL.over = nil
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.over = yyDollar[1].over
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4596
		{
			yyVAL.frame = nil
		}
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4600
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4604
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4611
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4649
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4653
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4657
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4661
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4668
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4676
		{
			yyVAL.window = nil
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4679
		{
			yyVAL.window = yyDollar[2].window
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4685
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4688
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4694
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4707
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4712
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4720
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4724
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4756
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4760
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4774
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4784
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4790
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4798
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4808
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4814
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 928:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4819
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4834
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 931:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4838
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4846
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4857
		{
			yyVAL.expr = nil
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4866
		{
			yyVAL.columns = nil
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4876
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4880
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4886
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4896
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4910
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4914
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4918
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4928
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4930
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 949:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4934
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4936
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4940
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4942
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4945
		{
			yyVAL.empty = struct{}{}
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4947
		{
			yyVAL.empty = struct{}{}
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4952
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4956
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4962
		{
			yyVAL.str = JoinStr
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4966
		{
			yyVAL.str = JoinStr
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4970
		{
			yyVAL.str = JoinStr
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4976
		{
			yyVAL.str = StraightJoinStr
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4982
		{
			yyVAL.str = LeftJoinStr
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4986
		{
			yyVAL.str = LeftJoinStr
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4990
		{
			yyVAL.str = RightJoinStr
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4994
		{
			yyVAL.str = RightJoinStr
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4998
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5002
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5008
		{
			yyVAL.str = NaturalJoinStr
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5012
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 970:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5022
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 971:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5026
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5032
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5037
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5045
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5057
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5061
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5067
		{

		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5085
		{

		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5089
		{

		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5093
		{

		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5097
		{

		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5103
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5107
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5113
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5119
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5123
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5129
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5133
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5137
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5141
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5145
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5151
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5155
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5161
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5166
		{
			yyVAL.indexHints = nil
		}
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5170
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 997:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5174
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 998:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5178
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5183
		{
			yyVAL.expr = nil
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5187
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5193
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5197
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5201
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5205
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5209
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5213
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5217
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5221
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5227
		{
			yyVAL.str = ""
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5231
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5237
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5241
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5247
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5251
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5255
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5259
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5263
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5267
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5271
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5275
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5279
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5283
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5289
		{
			yyVAL.str = IsNullStr
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5293
		{
			yyVAL.str = IsNotNullStr
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5297
		{
			yyVAL.str = IsTrueStr
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5301
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.str = IsFalseStr
		}
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5315
		{
			yyVAL.str = EqualStr
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.str = LessThanStr
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5323
		{
			yyVAL.str = GreaterThanStr
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = LessEqualStr
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5335
		{
			yyVAL.str = NotEqualStr
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5344
		{
			yyVAL.expr = nil
		}
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5348
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5354
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5362
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5368
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5374
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5378
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5384
		{
			yyVAL.selectExprs = nil
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5395
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5401
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5405
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5411
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5431
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5435
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5443
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5447
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5451
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5455
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5459
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5463
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5467
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5471
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5475
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5479
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5483
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5487
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5491
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5495
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5499
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5503
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1074:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5507
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5511
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5519
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5533
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5537
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5541
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5561
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1087:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5565
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5575
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1089:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5579
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5583
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5587
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5591
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5595
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5599
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5603
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5607
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5611
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5615
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5619
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1100:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5623
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5627
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5631
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1103:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5635
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5648
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5652
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5656
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5660
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5664
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5668
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5672
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5676
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5680
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5684
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5688
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5699
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5703
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5707
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5711
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5715
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5719
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5723
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5727
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5731
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5735
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1127:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5743
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5747
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1129:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5751
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1130:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5755
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5759
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5763
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1133:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5767
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1134:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5771
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1135:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5775
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1136:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5779
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5783
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1138:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5787
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5791
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5795
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5799
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5809
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5813
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5817
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5822
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5827
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5832
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5838
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5843
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5847
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5852
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5856
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5860
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5865
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5870
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5875
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1157:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5879
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1158:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5883
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5894
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5904
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5908
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5912
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5916
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5920
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5924
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5930
		{
			yyVAL.str = ""
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5934
		{
			yyVAL.str = BooleanModeStr
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5938
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1171:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5942
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5946
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5952
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5956
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5962
		{
			yyVAL.str = Armscii8Str
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5966
		{
			yyVAL.str = AsciiStr
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5970
		{
			yyVAL.str = Big5Str
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5974
		{
			yyVAL.str = UBinaryStr
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5978
		{
			yyVAL.str = Cp1250Str
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5982
		{
			yyVAL.str = Cp1251Str
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5986
		{
			yyVAL.str = Cp1256Str
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5990
		{
			yyVAL.str = Cp1257Str
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5994
		{
			yyVAL.str = Cp850Str
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5998
		{
			yyVAL.str = Cp852Str
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6002
		{
			yyVAL.str = Cp866Str
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = Cp932Str
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6010
		{
			yyVAL.str = Dec8Str
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6014
		{
			yyVAL.str = EucjpmsStr
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6018
		{
			yyVAL.str = EuckrStr
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6022
		{
			yyVAL.str = Gb18030Str
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6026
		{
			yyVAL.str = Gb2312Str
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6030
		{
			yyVAL.str = GbkStr
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6034
		{
			yyVAL.str = Geostd8Str
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6038
		{
			yyVAL.str = GreekStr
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			yyVAL.str = HebrewStr
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6046
		{
			yyVAL.str = Hp8Str
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6050
		{
			yyVAL.str = Keybcs2Str
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6054
		{
			yyVAL.str = Koi8rStr
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6058
		{
			yyVAL.str = Koi8uStr
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6062
		{
			yyVAL.str = Latin1Str
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6066
		{
			yyVAL.str = Latin2Str
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6070
		{
			yyVAL.str = Latin5Str
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6074
		{
			yyVAL.str = Latin7Str
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6078
		{
			yyVAL.str = MacceStr
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6082
		{
			yyVAL.str = MacromanStr
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6086
		{
			yyVAL.str = SjisStr
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6090
		{
			yyVAL.str = Swe7Str
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6094
		{
			yyVAL.str = Tis620Str
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6098
		{
			yyVAL.str = Ucs2Str
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6102
		{
			yyVAL.str = UjisStr
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6106
		{
			yyVAL.str = Utf16Str
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			yyVAL.str = Utf16leStr
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6114
		{
			yyVAL.str = Utf32Str
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6118
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6122
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6126
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6132
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6136
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6140
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6144
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6148
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6152
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6158
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6162
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6166
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6170
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6174
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6178
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6182
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6187
		{
			yyVAL.expr = nil
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6191
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6196
		{
			yyVAL.str = string("")
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6200
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6206
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6210
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6216
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6221
		{
			yyVAL.expr = nil
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6225
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6231
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6235
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6239
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6243
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6247
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6251
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6255
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6259
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6263
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6267
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6271
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6275
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6279
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6283
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6293
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6297
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6301
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6305
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6309
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6313
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6317
		{
			yyVAL.expr = &NullVal{}
		}
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6323
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6327
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6331
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6336
		{
			yyVAL.exprs = nil
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6340
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6346
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6350
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6356
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6361
		{
			yyVAL.expr = nil
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6365
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6371
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6376
		{
			yyVAL.orderBy = nil
		}
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6380
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6386
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6390
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6396
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6401
		{
			yyVAL.str = AscScr
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6405
		{
			yyVAL.str = AscScr
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6409
		{
			yyVAL.str = DescScr
		}
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6414
		{
			yyVAL.limit = nil
		}
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6418
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6422
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6426
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6432
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6436
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6441
		{
			yyVAL.str = ""
		}
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6445
		{
			yyVAL.str = ForUpdateStr
		}
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6449
		{
			yyVAL.str = ShareModeStr
		}
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6462
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6466
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6470
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6474
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6479
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6483
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1295:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6487
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6493
		{
			yyVAL.columns = nil
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6497
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6503
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6507
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6513
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6517
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6521
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6525
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6529
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6533
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6538
		{
			yyVAL.assignExprs = nil
		}
	case 1307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6542
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6548
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6552
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6558
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6562
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6568
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6574
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6584
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6588
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6594
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6597
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6601
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6605
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6611
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6615
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6621
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6632
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6645
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6658
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6664
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6668
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6674
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6678
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6682
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6688
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6692
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6696
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6703
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6710
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6714
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6718
		{
			yyVAL.expr = &Default{}
		}
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6727
		{
			yyVAL.byt = 0
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6729
		{
			yyVAL.byt = 1
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6732
		{
			yyVAL.byt = 0
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6734
		{
			yyVAL.byt = 1
		}
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6737
		{
			yyVAL.byt = 0
		}
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6739
		{
			yyVAL.byt = 1
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6742
		{
			yyVAL.str = ""
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6744
		{
			yyVAL.str = IgnoreStr
		}
	case 1350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6747
		{
			yyVAL.sqlVal = nil
		}
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6749
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6751
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6755
		{
			yyVAL.empty = struct{}{}
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6757
		{
			yyVAL.empty = struct{}{}
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6760
		{
			yyVAL.empty = struct{}{}
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6762
		{
			yyVAL.empty = struct{}{}
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6764
		{
			yyVAL.empty = struct{}{}
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6768
		{
			yyVAL.str = UniqueStr
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6770
		{
			yyVAL.str = FulltextStr
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6772
		{
			yyVAL.str = SpatialStr
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6775
		{
			yyVAL.str = ""
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6777
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6780
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6782
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6786
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6790
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6796
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6800
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6807
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6813
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6817
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6824
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6829
		{
			yyVAL.str = string("")
		}
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6831
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6834
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6836
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6839
		{
			yyVAL.EnclosedBy = nil
		}
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6843
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6848
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6852
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6857
		{
			yyVAL.sqlVal = nil
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6861
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6866
		{
			yyVAL.sqlVal = nil
		}
	case 1386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6870
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6875
		{
			yyVAL.Fields = nil
		}
	case 1388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6879
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6884
		{
			yyVAL.Lines = nil
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6888
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6893
		{
			yyVAL.sqlVal = nil
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6897
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6903
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6909
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6913
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6919
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6923
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6929
		{
			yyVAL.lockType = LockRead
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6933
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6937
		{
			yyVAL.lockType = LockWrite
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6941
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6947
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6953
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6957
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6961
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7804
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7813
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
